{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "428589f5-9c54-4160-8d9d-1ab6690fddcb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "464afdd6-373f-4244-96b5-004dd1161753",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57f08a94-43ee-43ca-8aa4-77cb019f8c50",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d102a8e-99c0-4e07-b7cd-b3f85f442cbb"
                }
              }
            ]
          },
          {
            "id": "11ffd5d9-9d26-41f1-b3de-4affb2fd2825",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3142dbc0-c788-4002-bb77-0dce7cd96713",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f409dcb6-3990-4954-9d42-7c875fa92d53"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "87ec2e55-512a-4d00-a49f-4094fd909831",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e2962773-f08d-44d4-94e2-95f400ec4ebc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e45ebcd9-e3b7-41b5-8ae6-e7a4c807953a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f463792a-1855-4895-a5f5-58ece14f6b83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96a73a78-fc14-4aec-9e3a-d44a4cbe1f44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b451b61c-b1eb-47e9-a7de-8956def8c077",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebd84718-78f8-4ff0-86b0-47a7acf007bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60a60d77-6301-429f-8adc-6f7e16b83e7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "013f8af7-d25a-4848-b44f-15df9caef1b8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9570634-31aa-43e8-8776-679c64cb3c5c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f2030d84-fd88-46ee-89b3-b4b4cf522304"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0349b98a-306d-4e4d-a351-3055f660d798",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f301b72c-64fb-40b9-b3cf-abdd87e77f27"
            }
          }
        ]
      },
      {
        "id": "42ad4be7-0504-405f-b43c-b2b2efd00dab",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8f3bc499-3075-42a6-97f0-0106a3106dcb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f36b18e-50d6-4871-99ac-6643c819ad11",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "149935b5-b8e9-4c08-8b0d-d9c03480df73",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed581766-c9f6-4a65-8539-aefee00f6ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea5a87be-45e7-4b1b-adae-8f8bc0fa7aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af6a3df-5587-434d-800e-03da280d3ed1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b527b7-3ff1-4c00-bbb4-b2f96f769ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99a17c7a-0954-42ff-99b7-18ef5b8bd321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b65a6f-8320-4539-b36c-ecbc69c9a5af",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805d6af7-e0dc-4d83-90b5-31ff42737f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6f7ea87-c137-41e7-9e5c-15e726c8ab03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "491a8705-ad3a-4c2d-b194-96b0e7577a74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31d688a2-c107-4518-a5d7-fd9149545f9e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c116bb9-fea2-40d3-a0d5-86ff1203b13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49f04b6b-82de-4c96-91f6-2cdc5f150245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b0b092-4a40-4086-b62d-925eefefc17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498f2c71-69b2-4f9a-b4b0-c7fef7b0db68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8fd65573-d7d4-4223-ab06-71029be34184",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31577746-f340-472f-8c08-9ca7900015b7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c3c06c7-2a3a-428c-9f1d-de8bc62bc8cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "119a007c-d649-4206-847a-776c87fa11bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05445afe-9f78-434d-8d18-5d80b818d2cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6c78905a-f0b3-444f-b612-35dff7e34453"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a89ed7c-f6a6-471c-8602-94af64d1f004",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2dbf92b-e2e1-4b76-b7ca-3bcd7ec603aa"
            }
          }
        ]
      },
      {
        "id": "e14e6e09-6d97-4c05-b559-fc59944b041f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "71daa7ab-7b39-49c9-b96c-ba6b6971bcf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79bd6e54-03df-4a7d-bb0c-4c6fb6584610",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "71b28ca6-e84b-456d-a677-42d2d672a098",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8e35c-c33e-4d4b-a25b-69cc63a3cdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd93077-5753-47e1-90c9-038038339f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa88bd1-604c-4a27-a425-e8127eae9b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aef5ac35-53d5-4b4d-8c87-0e5599230939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7932dc-f984-4431-a802-7591bbe8864e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfd6211-a924-408e-94af-66c943ba49e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16819e05-f83e-4a5d-8288-c28ea22e7b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67634f99-8eea-4bea-a6c2-e563c76134e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b37d1fa1-c58b-4e2e-89c2-ce261c530782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3902321-097a-483f-b822-0f8cb940d859",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89306fee-bcdf-4701-817f-26872d1ebef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f655c0c7-861b-457d-afd9-c7b82a75e6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7ef1cf-d5ce-4c16-a228-3909c922ffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f41234fe-fb4b-42dc-a902-89882c5a0d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1078def-513f-40e4-9ae5-05955e6e23be",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106d7148-dcc1-4043-9229-5dbbb1e5bcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237406e7-4e1b-42a9-8869-c8fb0af9c8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5c0fcf-dbcc-4aad-aa15-17528a6c32e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d4739a-bfa3-40cb-8038-6ac92a554cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd372d0-2991-4e9a-96f0-6c8332132b6d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e79288-d179-4c57-9df5-77df9c4dbf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901e254d-481b-47b3-b477-08ee5762f9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df20cd81-bcc0-4311-9e6b-2804c2bdce27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c693e04-110c-41f5-8858-35562e2fbf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb834ad-4c3b-4569-8abe-cfa5234f158b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0cb275-91ea-4942-8dcd-d6a16598022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd011de-f96c-4586-ac67-0e55e5c91904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f85445-523f-4f00-9e0a-1751a8c8e761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e932c87-78ba-4841-be0f-1527f94d843d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e4a169-fa46-49cd-b58f-2b52d18aef9e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd484410-352e-4c08-9420-c42e4434ee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3e5d24-63a5-4784-91c2-0f1c149cbab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64cbe17-7225-40bb-a0e1-6d6b5c9558ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2578fb2-1d64-4d5c-88b7-37a771ffd489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89b0d3a-a26d-45d7-bdb0-4876effe06c6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af91209b-2742-47bd-88b9-f574950bce3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c860b149-a924-471e-8f48-77a7fdbe8b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d62bc7-d618-4d47-95c9-16649f941b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6a706ae-1c7a-4ec0-9f0c-20f65e22a3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d596079-9581-48ca-9bb6-5280eadb6852",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccf310b-d117-40a7-bd1b-fabdd6baa779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcb35f9-504f-45c6-b168-6f98d131cae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0bb48d-96a6-41c1-b448-cfadebffc068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26d97e21-7644-474d-98f4-a75a02309e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b93c0bd-ba9d-454b-9e26-00bf95d2ce69",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e1178d-c3a0-4309-9744-c8b5b0af26cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f115258-4d01-4030-a67a-4ca11662b112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1b90b8-9a68-474f-8303-1d5a626b0f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb2cda1b-fcf5-4f02-954a-f27e82d03b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec72003-27b1-4de8-99e6-c152a5663cfe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec0bb27-1798-4827-a99f-8a18289dd30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104eaea6-217d-4046-8fe1-3986c7524ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43324c23-6aae-4550-b82d-389d006b54f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a62202a-6001-4e5a-9d8f-473fa4e3d1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b50abf3-4db5-426d-8869-f73abcf502fd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e68ac6-bd04-4fb4-b813-4fdef52a3dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef6991f-2a4c-4808-a764-7d0f866ff2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acbceea-8cc9-49ff-8846-cf53cd21a7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f09b54f-25a6-4782-b116-e6fe981ec6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bec9eac-c3fb-4e9e-a38d-2ee60cfed225",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c1b774-519a-44ea-a4fd-69545d3ee3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce402f2c-19f4-4c55-8518-4e101651142e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959044cb-45ae-4338-a8c4-8136aaa8c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a164dab-2922-41a5-adc1-948ac305354f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de83bbe-2ee9-4e75-9855-dee8ee76e920",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e51ca05-adc6-42ae-bf87-505cdf496953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62034538-5408-46a6-9047-961603eaa69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2382315-3d76-462e-a0a1-47ab39b266ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48e09a4e-a918-4663-b217-586f8e9f7fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9829c4df-f264-41fe-8816-2cc2dc9917bd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e07e57-3b43-42a4-9309-1fea98f6a8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3946085a-e3df-4fbf-a1eb-8f5bca8bafc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567a037b-a259-415e-9c21-a9efca8ee5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f805f0-fe78-448b-81f2-27deec540793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1446df3-6439-4a1d-9e7b-251476baf062",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e40d728-2c67-4adc-a15d-76d1ee0f6ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b962ee-08ec-48fa-b0fc-35760f63377e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b531d4-bd9c-49c6-acdd-8710fe184354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc9e248f-1bcc-4787-914b-ad1b76756bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0111d6-e9e5-4cce-88a4-0c9c3ebc19f7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4885d-bfaf-41e3-a65b-57c1707783c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c00624-de01-4b34-a131-700abe967c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2359fb-9f9f-49c6-8ef1-aea00902248d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe2e469a-747a-40f2-b010-a7cb46ac9b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c8d22a-75d8-4d93-8021-c45e1e464624",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8122379a-8f6c-4b86-9f43-fa0b3587f48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376f0792-b5c7-4e31-82a4-347e448630d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0c03f3-66a3-441d-98e4-6e60239f2809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12723f6-50e8-493a-84d2-f3a6ad66ddc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a6ccd5-d6d1-4a93-bbf3-3172e6a83ae4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a4875c-3447-4fb7-af91-4edf697e71bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd3743a-20d0-40be-af07-1845011316b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ebd07d-8c1a-43f1-bc40-cc93a40c2cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "274c90b9-01a2-4ee2-a785-595540a7a0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26b369d-d649-4912-973c-a8d923f93da6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac667d0-64a5-417e-a92a-1c64ac3b7fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a730f8a3-21dd-4278-893e-b8f98c759b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db6b4e8-61d0-400e-8529-f18584dc4785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a769ed-48bf-4757-8c21-7b2b66de098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10f27f9-83b2-44d0-b102-66f90307a312",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9587e3e-747a-46a5-b8be-f07d67c11406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362a4eef-abb6-4abe-ad34-3606747bab08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3107360-9085-4152-942c-c3143a6fe8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87b42925-e5d9-4683-8878-81f42a5cf17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4184aa0a-5dbd-4613-8370-54aed21399be",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f5cfc4-5eb9-461d-ad94-323226e823bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4d5a7b-0333-483d-aa43-ce36396bf00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a342c054-fc08-4b33-b69f-4147a8592de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96d24b65-d49b-435a-b999-b0ae9d045424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f593939-4e0c-476c-8ee2-463465649c56",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a726f270-d473-45f9-b1cf-c6f7ffd9271d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf5147c-bbc7-4353-87bb-b0da80cf1e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd01114-70bc-436b-aa82-3cf8459565ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38dcc550-0be1-43c3-8012-667277fc6235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ead3826-ab37-4db7-848d-5a9c8a36b7a6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfced8e-c22c-48e5-b89e-d6cacf2b0f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f32b52-b7e5-492a-ae38-042365b5b00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b12846-7a1b-4ac1-a0f0-007c56ff6d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2adb71a2-b1a5-4e8c-a3b2-2b5d0e11a17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4bf3f6-7cc4-4bc7-b93c-01e062b4dc97",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fd95bc-2df9-42cb-bc2d-5a837bb42450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800e0daa-310d-45e3-a427-05a91deb8332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cddffe0-4478-43a4-9a66-3a8e806a0a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f733ccc0-1557-4256-a9e6-d9f0be541016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5002cab5-4715-444e-9ce7-15698983d71e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc33b499-d0c3-4af4-9278-881293a59d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd08c82-5eda-4786-93c6-f5dadb624577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e09ec24-e88d-4967-a5c6-cc65724a13cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c527a2f-bbe0-4ea7-aff9-3c97b531f4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef8ec31-c4bc-4d56-9d17-950c0cde6001",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8154511-2079-458c-850a-e7600a15c9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2e1285-f15a-4376-b3d9-a8f013a2bf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0caf127-de63-4e7f-a545-8ee9f69f4222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b65607d4-af77-4863-abd0-ae1232745347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2322bf67-e5d4-40aa-9bc8-29329ab43bc9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79769499-ffac-4ae0-bb44-13783cabb250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bbc907-3f99-4bf6-ae47-bdec38d489f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23d79f3-3450-484f-8f3f-6e364461dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6550b281-7319-4263-ba81-8b7ec77b1d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13892b1-3827-4d9e-b5d4-8e7695bb04ed",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bda18a1-39b7-4646-96ca-87affcdef7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e460e98d-c769-455e-8b11-0d1460f4d4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8b3beb-8352-4a45-92b0-51cd688bc371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "328796d1-dd61-4895-9bfc-39bd5cb2cd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadfc0ad-ed2a-4177-b83e-729f4d20dab7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6dc84f-3cbb-4f2a-965a-b7ef2544f623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eb258a-85a4-40bf-b9e1-6e7e4f6f9a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1755e18-2313-4e37-9c92-9c0a71b38c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b90f9d3-4ab8-43a5-bb02-dca17746da80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d651305-4a16-4c23-8a4b-fdc910d36dd1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6acb76b-fca7-46e1-8dd1-caea2e358bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec14f26-542d-47dc-959f-8d7c895495a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da02686-42f4-4570-954b-f1959ea7d0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24fd3b57-3cd5-4b9d-b613-6a57bfb5565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b018137d-d781-45ee-a48b-a24fce51e7d2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fb1242-2be8-4341-89f4-70185fe251b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5e4c7a-60e1-4bae-b95a-4944b566e44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0284ac85-452a-436e-af56-bbda22c5bf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d403cde5-d18e-4147-9b97-0b5962973909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e735adf-d367-409f-b96f-efe752bf8a0f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b6c3c5-8f35-43f7-b5f7-13ccf106fe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8659a87a-2a60-436b-97ae-6ad91bc6152d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4797cd-6e34-48d9-8367-3f38ec288afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1001ced3-1a5a-4538-8a10-b977de1bd344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7af134-b01f-4518-ae8c-c17732e6d75f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e8eff6-3cba-49fb-8ece-03ef5ba7fd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22105ca2-3cd5-4531-9de4-6601363baa43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cfb24e-d922-4627-8672-4824a44449d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5fea79-c589-402a-b9bb-4e5aed13e2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b72b16-0d9b-45b0-8b8d-7a4a9f8bd907",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f5f78b-8237-4514-948c-d02a8ba45e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffcbbc8-8043-4877-835d-ab61c0fc65da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab558a62-9235-4290-af14-07e2d17c1e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cfa5a5-e7c3-4728-bcd6-b3183cf8895b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31523bf-7dff-4360-abca-2813a1ebf67e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ae7c25-b7fa-4c2a-a739-0d8b5fd8bc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9593c25e-d366-4030-91cb-7d3cd1e91b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad9557b-454e-449d-b874-59bd4a20457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0729a9f1-0c7b-426c-be08-a1f5330f1162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9201bd7-eed4-405c-aa27-77111ef26fcd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2088973d-5775-4514-b777-b21a950a79ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776506ee-50d5-4e53-8291-d8d530a123fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf77e84-127c-4031-84fd-2c999f87e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2945f70-d736-490e-809c-e856b2236389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322e3ed5-69cf-4fa2-a5b1-dab76a94bdf0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b814d86f-6390-46b2-ba31-f2469da202dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef59eef-d37f-4502-9a91-d7184906db86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903d3df8-6b73-4211-9720-1fcd832c0bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6eb8e49-bf6c-4b60-addc-daa6a96717f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a256f0ce-6108-473b-b556-62cca731b982",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e47f2c-a16c-4a11-81cb-3e89618b24b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115a476a-317f-46b5-aa8a-e459aec63867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bbd8cb-a687-4fce-8955-ac33df48de22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e97878df-45a9-4e12-8e93-6c78e10ba2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df697e4-deba-4cd0-b491-7524e5f04d5f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4216743-a9b4-48cf-89d9-610deaf86a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1239fe3-a369-4cf0-9280-6865eac35aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423afb28-ed2f-4c02-bed6-c680b9d783e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c265d73c-4888-4f35-994e-b0babed3f9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dbdc96-db9e-4c12-bcb1-9738a7a6b6e2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4df8109-e5a3-4c8a-ad4c-a5012bff5fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7de1e96-b42e-4f8e-8273-5ccdf57f20d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dd08a8-d561-4c71-8a2d-689a7630fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8adee6f-171b-41f7-a4af-0d0da2f076f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95633ad1-2149-4321-9f47-08ec5a6451e3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d8167-6dac-45ec-a633-c86ae823bd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20591142-b73b-4d84-a73b-9f7cf990b63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54341b5e-b91e-4fab-a988-869e7c3e0392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4ca34b-4179-4728-b2fc-eaa2dc05d0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31992e59-e7e2-4b48-b558-6bda82211141",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ca9b05-7e68-4de9-ba41-a6b6a9c660ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f7ba72-ce15-4bd0-adfa-6aefa103186c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3b06b2-ce6d-4736-8e17-62a07e2812b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaedbd90-3886-44e1-ba7c-cdfbdda530e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20522978-2626-4e3d-bcc8-1d018bd8d6e4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5aeb34a-a99a-43a2-bfcc-0696589e1c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea6e4a9-f158-4ac2-90e6-01322388acd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e51d431-f125-49b8-bdad-d6c1d027ba6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5c4b2a-c24f-49e4-98af-161c14566804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae629637-be12-4d7d-b4ae-cbc790174c74",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea58528-d1b5-4f87-82bf-38bf6b75714c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c9f11b-f495-4a2f-abe3-ae6b7e39b898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d191cd2-7f98-46fa-9e39-3b8ce94555c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e574eeae-511c-4e77-b34c-27a189a15b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a166b71-617f-400d-abdd-48998a8155d5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecbf2fc-5d97-44ac-b9db-6be9131c45d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5501edad-bbf6-4c8c-b3e8-8d3915710068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb3d05f-d9e6-474b-a85f-27187031878e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c8ed76-704a-4aec-a6a6-30a36eb9088a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a7ba6e-22a6-4984-84dd-239ec9a8a5b6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a2f5ec-3f82-46c0-97bd-ea95b241a4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd435a2-80ee-4d4b-9c37-6cffc2e67130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab9fd64-a228-4929-afbe-efa3154d64d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99252d0e-df9d-4f09-965a-426bfa01bdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a81402-3384-4144-9a38-38e95e6d594a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eecd3c-3026-4905-8ea4-9ec2f060eb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efece914-950a-43d0-afb2-12fcaf01a320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a62a68b-cc33-47db-8d7c-a008fac08e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc802d7e-5f5f-4bc7-b0f8-79d6e930a14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7755c65a-9b3d-49af-8732-b07a126dd15f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b3cb13-ead6-48f6-9eef-56e842a5c765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e554fd-49d7-4967-b70e-e27f43740d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5033b77-79db-48f9-93dc-b8afc127cd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5540c43-7fc8-4288-b24c-446bd607aeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1258691a-85bf-4eca-b16d-22171beeaada",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab8f3db-170b-4123-ada1-2e9770166808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e3b75f-8cbf-49b5-a3a2-865bf3d72117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15efd9f3-a9be-4c47-8223-fafbcc5e1a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17852bd1-b934-40b0-abd9-f12efcb08430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704a5e47-b32f-4a7a-900b-48b72119aeaa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99b450b-c88d-4ba8-a833-f7812d3c0f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbeee18-1880-4ecb-91c8-cdff4dc880ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d11f6a3-e873-4d5b-8307-37ee98bbe2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa97553-5a50-47ee-81c1-b4e1bfadbfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b911224-b0ae-4f2a-abf8-10ce629391ac",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b680337d-31b9-464a-a205-92824d48efd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae93c82-af5d-4513-9727-43b770defbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3fa09d-4295-4b6c-a141-9c8a0eb33d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb4a9e8-d3df-4b1b-b3c4-75fddca05a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222c334b-25a8-4382-b04b-2b92ef0264db",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464b2768-1450-4602-a60b-58cce4a290f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b232307-d0ce-42e2-b5ff-350aa17cfcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08951e9a-38b7-443d-8712-fafacf071bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d399dbe-a8c0-4a91-9092-1021b1b536b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f354fba3-e001-4b1d-9875-4827679b75d7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f90c855-0d4c-417b-b3b7-d4b75cfc0a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f931ea9-008e-4a21-ae7a-c3db746a160a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de51e8e-14c2-4caa-af75-dd3dd8b1547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b783bf21-0e45-430e-a946-27ed030bb6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938d013e-29f1-452f-993c-67ef9223ddc4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9a4fbe-b781-48c2-bd43-8cf68b0a1bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d111e2a-1136-45af-8332-14f942667ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06c97d7-570f-48e2-a39b-f403d5b43967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fef9103-a615-4d2d-8eec-84da9c2e73ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049213b1-b593-482d-8b2f-3135c3b97c39",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f6788f-1fbe-44a3-b717-6153c9123863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c79d5da-5150-4af0-a5a9-6d21b0621794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e80113a-a31f-4e07-96f1-44e8c80ed880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "802a150c-dd09-4257-950f-259b35b58b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e7b5c7-0503-43b1-8183-3dfbf78a99ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2348f5-0bc1-4da6-9349-82376f3ce6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0380ba9-7ebd-45f8-b70d-38a6e40954d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aa8a3e-2ffb-408e-b16e-287efa08af3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08be22fd-71f7-4b43-9e87-4056583d199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6b78c0-a2b7-47d2-908d-2026091431cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870c747f-5fe5-4bd8-91dc-581d944568eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b9a29c-74a4-42ed-9518-56c20bfeb3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92d8c45-b582-4bde-ac0b-8b620eea1ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b417ccc-c529-42e8-ad15-2b65040ba5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa6304b-4431-4784-bc98-5aca2dffc2db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01754292-6678-4f68-87bd-9192dd9603d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e7f160-98bf-40ba-960d-8d4d5adfcbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d250e757-aa59-4e06-9987-ab5893b0f3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e287d24a-f8c9-486d-a2b0-67c3529e70da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da38cb27-9b35-4b3e-a05e-6ac32c9eb9d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4669c1-6c07-463b-9276-3306f79d54c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c579f6c9-5325-4f1c-bf6f-8ff446df0a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ad01be-b78b-4943-b7f6-53994e91ac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35695e8a-a8d6-41ea-b6c0-fe701816458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c29ab8-dac1-435c-80d2-dd85e5295e48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70bf48e-b825-4eba-a7cc-85f5cb7cab29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d684596f-5178-447b-99d8-b1a6cb68ee53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f397742-cc24-496e-90f6-2cab0fffaaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6cbf73-44cb-4869-afea-255500dddbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6363577b-f464-4239-828c-55f18c6981a7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4980119-5df5-4fb7-bb17-144587f2c822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b604a3d-fc58-4afb-9fb8-3f20f027ccc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00daeee-b81b-4b3e-a883-ba0f9ff58ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba299025-b150-45d7-847f-bf86ebd37c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3229db8-25e7-46b3-9467-2da234e4eac2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bea0c6e-e54f-4a81-b932-b942d4b4b329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb85690-5b3b-4648-a08e-3d94e55a5182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1ed078-164b-4261-a475-34709d703055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd61992a-0384-43fa-b7ee-a5f4a1137508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b9edc0-d42f-4021-b8d7-4c149d27c584",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d304f84b-0957-4180-a0f3-ad1c592d6231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29366db-3a0b-4342-aedd-f33667be653d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d638b741-488c-4d10-8736-2558f79d835e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7277b771-da1b-4cf0-8159-cbc3797d10a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66299345-6ee3-4e9b-85c3-35055579d810",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c478679f-6ac5-48e4-8030-ef5d19315d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362f2bd0-fe7b-4162-baca-9b7940ea1159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53ab455-2941-40a3-a3a1-641277565313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3a73c9-821b-4a84-9c5e-b91705f4a694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b823c6ce-c971-4fc3-8a90-9faef96c1dff",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31946e97-c5fd-4139-9955-ebada2bcee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc8a6be-b504-4e4f-b40f-d47cf23a5700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafc0eaa-4e18-438a-934e-c266c952d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f333e1f0-0fea-49f9-a3f7-0a1a79371a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f5cdba-dc71-45eb-9eb1-c18f99b05941",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104f64e7-709c-41af-a6ec-922832763536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5436ad1e-3c69-4b84-b35a-89e2d3b20b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40501a2c-5bbf-4419-bb90-081c8da504e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "992a80bb-2420-4176-9195-dff66dae2aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e78ed0-4bba-4053-a5f9-e8824b222524",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28971e4-10b4-4abf-9b19-f6ac8d1b032a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a8790e-1e81-45f4-9ebd-3f543f60e7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3a045b-7c14-4c7a-bb89-ddd72f2a0d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "15912110-7ef0-43d3-860d-ee7d72071d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba74c3c-5d86-4bfb-9163-db8bc0acd1de",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab476a7b-5306-4cc2-89ba-78a31bde91a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6635d6f-1434-4eeb-9abc-657357feab0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae84aa4-ae65-4cd1-8cca-06949a91f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0a58f3-e57f-422d-8cb0-1d6d2fd95802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee672974-6959-4533-8a49-f0879a69d5ba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8496496-7088-4e55-b284-fcdd7ebad0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bbee78-35d5-4029-b70e-ee86ddae39c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672af6b6-d186-4bd2-b064-8d2bdbb2babf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f72818bc-6d2d-48db-9fef-dc80b3b8f8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f934b5e-9d9e-44bd-8cb4-c9c8540493db",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1ed25d-ee53-4606-80f5-20286950c44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8984746b-9c31-4b76-8d15-3614f6e945a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedaca32-e08b-4b70-aa7e-5de95b80a352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdb4936-3cb3-4e9c-b38f-77143be73042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a838749e-8a82-4b5f-bf7d-c72a33beca0d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bddcbf-f004-4cfa-9b25-e51eb3d8fa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b293d4b5-8af8-4464-804c-3f55f8be68bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d127bf-1c4a-4318-99d1-c6a34e648050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f73922d-0185-45a0-b2dc-a82329c9ed37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17fceb6-9873-4794-aaca-3e155e783dfa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798363b3-ab26-40b4-a264-4a516f4f75c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea609397-6f2c-4d75-8e70-cbd003ce1146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44a65b4-03a0-4d61-b4d4-d3ca43684839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08efe61f-4fbc-4519-82fb-21ddc7ad8567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027b559e-5829-4d8c-bdc0-bc14bd491326",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a769718a-4884-453a-98a4-c14efe89d5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be73a9ba-e0a9-4d50-8403-4724c5cc7ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5941a4ac-ff55-437f-a2ec-91ddba9d7556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1807ae89-2c9d-42e8-93ac-6e4277698a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268c4763-34bb-4d55-bf79-b7d5fad86db6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73332ef7-e321-468a-a34c-002960cd7fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de5d918-2861-4f06-a09b-e61639011b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2903408-8d77-48f9-b96a-b58bd5a9a0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff78e44-4aaa-47ff-8f13-ff62c114e6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10233a02-2364-4b13-b335-879efeb478a3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bda2009-f211-4cbe-9cbe-ff32c73576b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0194e1-be8e-48ae-8106-d8feeb0334f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c932fa-bba6-4d55-8b34-4dad2bcd8ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "552e30c5-c500-4c88-a176-ee953eae1a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31628806-2692-47f0-ab4b-e9f7b0f7f001",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a189511-20d5-4d0b-a6b3-8cd53cb240c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e3c14e-20f8-4c42-b174-38d3452840b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2ba5fd-2826-4725-a613-b70dcc515e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a483258e-8603-43ad-82e7-a3da9f48334d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fe836c-50a2-402d-9961-0d48358c2cbf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94a2c11-1277-49cc-a11a-1d37be1b7bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b1897f-5b55-4f4d-a076-28a475b7cff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31bfd63-8d28-430d-b6ff-65be9c8fae9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c32b25a5-d690-47b3-b754-babea95c40f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7565a3-ec3b-42b4-93a5-a0a877d87cda",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc476b9-b928-4ee2-9657-6376db755ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d891b3-23af-4f3e-995c-46e9c4ccb3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd231e84-1b2c-4997-8cb5-968745405f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4a53c4-6790-4754-84c6-0ca1fb7cbb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20994065-8406-45d6-aa07-718edb7bc911",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8160dc2f-d549-4226-acce-6fda96c7a832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a18770-ab44-4210-af89-42f886c548b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c02a92-9ab4-4672-9179-bebf63fd1bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eeae79f9-337c-4d96-b180-bc40be4bac3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34a9418-239e-4a9a-a9c8-2fb4ce3c2098",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198cf2d3-d406-49e8-823a-1d44f54531bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddca381f-38cf-407c-a9df-f2eef91696be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d2a45f-fba4-4bef-93dd-f4ea2e10dfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2257f667-c8fa-4ef7-a324-42d2205fba7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e3a0a8-0055-43c0-8bb0-db0df42752b3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2e4cf6-47c6-414c-8163-a1be859ab4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cbd3d9-d503-4b59-a289-d21e72f33dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d635d15d-dfe2-46a8-9d5c-7f10f5fe8abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cfa15a-0f99-44f0-8632-e5cedf9d4b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a900f0d4-8b8d-431e-b44d-189549a0e140",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ce8b67-f839-4429-823b-e3580c80715d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002eac0a-8907-447b-a310-94ca35988029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdfdebb-06ba-4c3c-b1e7-4290bdfac6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cafd30-2ae6-4429-9d5e-6bfd53b7e449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bc5646-fba1-46ec-a332-32b8e8d69bd5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc6c697-1baa-44b7-826a-5dc396f597cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb55d23-33bc-4b19-ac40-d2d888ec34f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3ea948-d2d6-4911-b91c-b7620f80cff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f061957-f259-47de-8eed-b4c4ae3a9513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d343fc-2473-4152-86b0-47343ae9a9dc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4aa5d4-d945-47f2-91c8-bbd785a32109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204ea4f1-6850-4207-b52a-9ac4d881e790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e52ee6-b404-4ef3-8a74-02d752910a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9501c60-306c-4518-bff4-8c748b836bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f96a21e-9ef2-4947-9af3-15ce08c31383",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa125e-8ac7-4431-8576-0b612de2461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677013b8-1807-4ef1-b0e3-bbb7d3fc763f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e24cec-550f-4fae-9f23-8a45b9f14a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "945ef996-c4f5-4059-a763-3e1c718fb6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e87ec86-e263-45a7-8e7d-a5219d5fa4a8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea456b4-1c36-4f07-a252-d6b6f68f2dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c5b652-044a-47cd-850f-77b383838bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aacbf54-0b0b-4d78-b311-a361f8ec8013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f70ba5-2e2e-4283-b122-ce808d6fcf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf0555a-541d-4c41-95ab-c70408199d31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2dd1b4-515d-401f-9dec-88c33142d80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c4d872-a72a-4de9-8ae8-4aee56678596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d23d968-53ed-4ceb-91c2-dfc542654d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fefa3e2b-2a5d-46f8-99b5-d5e5af8f709e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa6842b-84b9-4025-81f0-a2451327cfbd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833f2cbc-a9c9-4c0f-84fe-480343f6eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0fafb8-855f-470b-a075-6170d84a75ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a8a33f-eb3a-4806-b9a9-dc8a27475e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48ca73b9-e050-45c9-bdc2-c20ccf0c804d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b07bd23-1f03-49a5-90e7-41e9a18cf8b4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90634c2-c424-4771-8700-51b990f7db9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec15c26-d0f0-49a1-9857-35d0bdbdade6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3536a282-5605-4563-b3b2-c6b8bebeee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55e749c-04b5-4219-b3ad-3700cfb01bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cabc9d0-7434-4214-935c-21497da83fc4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08481b9f-b43c-4f2e-9ba8-684258d0b6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d37254-1f34-450e-958a-99d98c1225b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bee026-60a1-4634-938d-033468133f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "38deea84-a120-4b88-a4b2-01e51d809c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce1399b-9815-49ac-8d45-1951ab8484c1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb15e9c-1188-41b1-b556-948dfee824df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e300a980-a9f0-4370-a481-79126db7e876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730e2004-6c2c-4c45-ab29-b011d8da6e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdbde10-de06-4c00-8196-34410255ef3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "916f87ef-5304-4bf5-92a7-b00a8fc6533d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee8686a4-7784-45b9-94b8-3280d5bc4124",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d55eb7-4ace-46bf-8c03-d4fee0ff3069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28a851b8-7274-4375-b95e-35d3160412f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5798aa-3d27-4c2a-a8dd-8913fec656c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6c09ec8-6281-4856-8920-49ef025291d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d337c62-4197-4bd1-b140-c0bcae74ac55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe03f72f-9380-4714-9b41-f9189f821bb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d3112f3-90a5-495b-972d-4112f8e119a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "482c2f79-ef78-49be-a215-9cbb5b29b67c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cb3e41d-80f4-4bf9-a432-089e0659f360",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "517dfbaa-442c-4520-98c6-6fe03f642c34"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0fe603f2-0c14-4031-af7b-aba044db04ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "924f8bab-2dcf-4b93-9f05-e92d6873fe3c"
                }
              }
            ]
          },
          {
            "id": "407e8a53-906d-4f07-bec8-d22731a51581",
            "name": "Positive Testing",
            "item": [
              {
                "id": "13fc96ef-bf15-4eb0-91d2-b3fdb5d12bca",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0ef14b2-ce4e-4366-9c18-26b0c6e93fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afda3197-a957-45a4-a0cf-0adc76dae4b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd5a3844-0d0f-4a81-a9d9-4620a15de27f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c981c03-0326-487f-ae80-8d81a1d21e17"
                    }
                  }
                ]
              },
              {
                "id": "138b5b16-f1fb-480f-a766-1cb8ec7e42f9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60f8848d-8618-4beb-baea-33ca15100ee8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d33c3082-8f5b-4cd2-9287-8865578032ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8f76dee-3648-400f-b3e6-cda3f5cbc3b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33de3b29-d27a-4470-a7c5-6a8027df06e4"
                    }
                  }
                ]
              },
              {
                "id": "94b55aa9-a9d0-4d22-a299-175f80e964ab",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "544478e6-72e2-4534-aeb4-99ac5432780e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09052493-fd2e-4ccb-bc7f-cb31a7c0aeda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9742868-a09d-406b-8113-bd87e0f40496",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4173c9e-c4a0-40cd-8a79-f295862a143e"
                    }
                  }
                ]
              },
              {
                "id": "e2605663-21a5-41bc-be0f-23cea43fb2d2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f68ef0b-ee00-41ab-b339-abb34af76ba8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa8303c8-fa48-47f3-b5d9-b3e5a7825854"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b598647-74b0-4f5e-b146-461607f4e9b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bd9790b5-b896-4294-89a7-58266045e70c"
                    }
                  }
                ]
              },
              {
                "id": "297707ab-6945-4341-a9b0-a428441af8f5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31394f04-be30-4c1b-91cf-2d4bf15a391b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "820298be-fd60-4494-b59a-3985440669ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2ceafe9-0bcf-40bb-bb6f-20f16193d613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8e3a8461-ac7c-44dd-91cf-8c815b9acaec"
                    }
                  }
                ]
              },
              {
                "id": "c518cc55-a440-4553-893d-f9f6a23c05a1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8592138b-468d-4ea3-a3b6-49620bc9fd54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d150097-9aa8-4c43-b6fb-3090d407f6fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "928306b9-4a51-4e3a-9fc8-8bdefa48be14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "168edaeb-4b9e-4cf5-95b6-9a2284985326"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38cd1e71-2c1c-4542-89ef-2bebd0166fab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf3db73f-4a9d-44e3-b0ec-5825803bc61d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53357f83-5d2a-4f82-b03c-6bdd02b42504",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1b971fc-657f-469a-af88-32fc50d1f26f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f703aaae-1f2e-4b58-9d6f-f0f84cd18be4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4e96630f-27c6-4ccf-98ca-43918400fab3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "557a08fe-a700-41a3-b917-5ed4a2478e50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e72cf824-2ca9-4747-b40e-7a700bb24327"
            }
          }
        ]
      },
      {
        "id": "1374c3df-f7f2-403b-bc29-0009fcd1d7d5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e21f0703-ad09-4722-9467-9dfec5e7f10f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a88b79e-b9c2-445f-9dbf-b81706c7a9d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2600afaa-2c16-4968-b0fe-0e8b92424f3b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ef7e2d-0c57-43a6-81c8-84a1e87ea30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec29ae8d-d686-41e8-9da3-4baf4b23b5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45ff6aa-e88f-4058-a02e-e9cc3d19fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5859484-013b-48a3-822c-306b3ff2ccbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8e611b-5afa-4c2a-916b-b3513c00f2ee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b814cd-0aa3-4b0b-a468-aa6f9d74564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844ebaef-db7c-4f9b-b4c7-79f2d8e4e508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77502e5-734e-4205-a504-5dfe9653c404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d5719e-a37f-4f7f-8ac3-d518db977794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a7f5b4-a7e3-4af1-9af2-560d66a19abf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ca8876-4b4e-4f17-8c66-2a048dc65906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed375ad-2452-4ef4-a421-c477dac1cfee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dca46c-0f67-4513-89b8-fdb3f7fec78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0097cc3d-8ce7-46c2-8ada-01bdd57bf7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9836d8-bcb2-45b1-9331-a845c7dcce88",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1fc71e-0d11-431c-bfca-100136458f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c3c433-e972-4ee8-aa00-6ec61d7dfe42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c52314e-1589-44f5-82c1-8f0681da15dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c29511-d0b8-4e10-b207-b76a9b71ef7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3892a124-a583-4fbf-87b1-7bea504de015",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8465187d-947f-4747-afa9-887568a9bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf752bd-ec8f-40f3-8479-28fed5ba4543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d835ff3-fcc8-4943-b43f-cf0604a5ef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c837184a-8a4d-4bb6-81dc-dca6a96c8a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771c58f2-a494-4ea3-8521-ca2fbc50b394",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a7563e-21b3-4078-8018-5ffc5199cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09196d80-45ae-495e-b0e2-8a8802722b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9ccf3d-f766-4610-80ac-0265ba1b85ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0083780-b8c3-46d6-9dae-aa8425401e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92aa19a-e289-437a-98ef-faa3609375ce",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833f15de-c98f-463b-884c-fd0ece84d9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64aa4733-d889-4ddf-a14a-e42e69f66999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1042947f-2daa-47f7-8b1b-4b278f4a02de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "31806919-69f4-4523-91e2-b74c65d122f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a31248-b35d-4935-bcb7-e2e3b29c8a16",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7105ea26-3b06-4136-90e3-7daa42a28981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e1ac2e-a41b-411d-892f-e409f5982d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e533cff-bb79-444d-bff0-36d635c71db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7baffe25-9584-4d44-8f6a-efbbe179b468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa6cae1-159c-4634-b3dd-bd1d15912a23",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cc0e97-957b-4646-8aa8-55672be808a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b947dc1b-d4cd-4f6c-9022-de7d6b0246c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1600df-c3cc-42b0-9bf9-c4a7477d4b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7947fb82-48d1-4574-bb05-ee3b6aa031d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5c9f5b-91ad-4891-8e7f-f812413b8037",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c596ea2f-65e3-48ab-9bb4-8e343de8750d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b19045-bd24-45bc-bf2f-c27bd9182760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540148cc-3a9d-4c1c-82da-66c48d385e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "559259a3-80b4-4589-bb67-d62c2158e179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85442a2b-16b9-4531-b287-f37dd9d8c2a9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a252c8d-62e9-4642-a2ec-59dbca571a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb3ce05-b904-48c9-a334-eb7466618dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfff1d38-2197-4462-8ef3-2265f0af9950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e161a314-970a-4f64-a597-95e362e171e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67abdaac-a366-4a33-9745-d76737201f23",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f3659b-b941-4be0-9f9f-7cce7750cd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45a4706-f3a9-4f1f-a3a3-31da52bedbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbdbce9-f188-480c-991e-bebb71cc672d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "015352ff-3508-4720-92f5-05598a2c7213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f759680-a7b0-495b-a815-0dafc0b1f603",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec003251-f306-48bb-b3b6-91b2b38cf21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722d46e7-f80c-48aa-9825-ff62a169c527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad5d4e7-dc17-4276-a5ca-93f270b5321a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a1f9be-6a21-4bd9-a090-d94cb70e39c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad9f50b-21bd-4c11-882f-e0372919618c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80787dba-b6ee-4327-93ec-2239e1ac296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac9b758-550f-4edf-af47-8ebc9612ed33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d0999b-9162-44b2-ae51-0602387a92fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b189af79-c481-4c43-962a-98d200bcd77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8adb9c4-73de-45c3-afaf-869ce214c23a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df6abe8-71cf-4a53-a5ca-7e78808d57b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30dbd64c-fd48-4281-a0a9-861d0e8e2e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d31274b-3387-4aa1-af98-bafc91c80848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b340dc0-dcc6-40f4-8fad-915ed34811e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229106ed-dedd-49b7-bc1a-d8f3c72496cc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230081b9-51d3-46a3-884d-0142888a54e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c784e3d-4556-4c96-a942-0f2d67b3fe86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d9046c-cc0f-41d8-b02b-ffda06606afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaee00c7-a510-4e15-930e-779068b96f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f59508-3818-4808-8e84-c26ce65e2b45",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96199580-d771-44b8-9638-516c1c4e2a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19d07b0-8efd-4839-b8f1-0aa44c105972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eee4cbc-a337-4e34-a960-906d34b78e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2554d5-39c5-494d-b425-2291ff0cfab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602ad40b-a5ef-4563-b025-e043fbfcd50a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8ea912-9a6e-4488-907a-c7dc3e47073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2407d849-ddb2-4301-8aef-56d0318c4b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89355896-56c5-4689-8729-f95ba2c04656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e926158d-bccd-45fb-8f22-894d36d40f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd93e4c-6632-4be6-bc00-1120a1622e7b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ab98eb-23c9-4e02-9245-2d394e25bf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f02589-ce6b-4bd1-a439-3d103ef1c455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6725a34-d850-4ec0-972a-dae6b1ec0332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9f4de3-23f9-4393-a70a-d2aca9c40a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e114ae0e-317d-46b6-82d6-b9617e2c4604",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb251b9c-20df-4dec-b84e-aa781e356cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5811d4-a6bd-4786-931f-5eabbdd0e937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e800ac96-4fbd-4cdd-b5cb-167e55149bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8b8c78-6357-4c83-9862-333cea93b9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd96fd14-91b8-454b-a0af-d5ff45e386ff",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd35b36-ea37-43a3-975d-8bb62f16a23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a42d1a-5791-4554-842c-ed1c15ddd7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea269e9d-e82b-4ad8-9af1-96108aafcab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a29374-6765-44b9-adb5-f2a33bcad705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521efc51-290d-4dc8-aacc-4235f5b58c41",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98817c4f-45fd-4632-be62-3aa1cf2c0f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c1057e-ab74-4210-ae79-0f5d9aaab9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09bf70a-013d-48df-b6ea-9cfa593d27be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2add4f98-ccc1-48c0-a6e7-4bc1d1060f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a408840-b63d-475c-ab82-561eb51660fc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d15ee40-a17e-4506-909a-1541974f8196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be69ee43-b50b-450c-8332-65b7805bdbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ada6d2c-a61c-4c11-9e6d-efe9f184e78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9765010c-8d63-4188-9137-da5267a2618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f369c2de-9153-4d51-a3b5-92bbac353345",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a11901-9d8e-4c41-965e-a56f6ced69a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0896147e-9f97-4dd7-9f96-7d5ec8505df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23342629-907d-48b3-8676-ad4886ee8c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5123c4-a318-4dd1-8818-c06ee150068f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cecb3b6-ecc9-49b7-a5e1-b5329904ce19",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde0718d-0491-4fa8-a3ab-a5c2db728c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d400f2-076c-449f-85a0-9509404b9ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354391b7-890d-4433-9fe2-51ca8d74d9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0f710a-40a1-429b-a3f1-3a5eea496499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f094d148-4ec3-439b-9264-cc730076b4d7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dedb51c-d14f-40d2-8372-fd6c01ff8026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2c1df4-fb6e-42c9-a29d-0ca81e2b8bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc43498b-ab1c-4b15-af57-fd8702e478e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c41ca9d8-6324-4b87-b17d-a636f4e84bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61c528f-99c0-4df9-949e-074c5f6902d5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a385c7b-6c36-4f0f-8c71-08b288a6235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240d1048-b43d-4d71-8086-377a31354cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21969647-5c40-4ae8-a83d-6b1f9fe4deb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67b663e0-d694-425d-96e2-42fcf480aa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fc2df0-8916-43bb-8c41-ea5ba95ef38b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5940f00-5e9d-49e5-add9-523a39ba140f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca086037-9827-4399-aca8-bd9813d8bb6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36d7d0e-e6bd-4917-a1c0-fab13d53adef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f79399-4f20-4458-bc75-941630938650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88581e61-3a73-4466-959a-7da7312e1ac1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17f21a6-33eb-4ddb-b173-9303e61a8634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a914b563-b898-408b-8f62-8baac1b63a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b565e150-bcef-4eaf-b8ae-26e1ca9101b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1016d5df-280e-4783-9f8c-461efa02ebd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1188672e-050a-49f5-9e6f-37dea318c318",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6fa2b1-cb30-49ec-be6e-c5dd4d8054ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01de5a3f-33df-4053-8469-8e962cebf078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461b9be0-0f48-450a-92e4-fb4cdca02357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6753834-0279-48ee-b7f2-08fd202ca148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc70fccc-731c-4212-8225-e812c60081e5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3749ce34-07f2-4798-b318-54c60887a65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0031b8-4e99-4cd6-829f-881e773fe2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf99f90-a40d-41e5-af17-b9171ec49bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132d3dab-f764-439e-b7ac-565ca1c0c5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13c673a-cf9a-4dbb-88f0-5695bcfdedc4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f90f3f-e93d-4abb-a1d1-955615616976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e48d91-dbe3-484d-9b44-b0c15c00e42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea13e43-5654-4edc-b303-492904f43521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a35409b-76da-4859-837a-16b6c1a8e483"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d38e8904-a4af-4f34-8d2e-cf4ebce5376c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75115d65-6a5f-429d-9242-e48864b81f76",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8098f64b-0404-487e-bad9-de21a3b4baea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d73fbe0f-189e-487b-8c87-ef19b7098096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50a8c93-0ce9-4338-9e33-2823b4970ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b369acb-bad9-45e9-8a43-3ca35e5dd096"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4261671-9c1f-4345-b625-56cd0f4c0fb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a76cc2a7-3741-4e6c-9330-a91428f1336b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ebddb5a-5473-48c4-ad08-55798d3a5a80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93026e24-350a-4852-bbbc-4a9e08af9590"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce9ad61b-29da-424d-8008-101587d6351d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ceed6ef4-b900-428a-aa97-14d2528a6a66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64ea3888-07c0-4a97-a93c-6d9795337942",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de73354d-80ae-4fc8-8738-cc02ad92a795"
            }
          }
        ]
      },
      {
        "id": "29ef0cc3-3a9f-438d-b91b-667c87d45ad6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4be96a3a-0c3c-41c0-967c-2638571a8c70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86c765ec-c60e-4e4b-9369-f31cc629ee2e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d7d1e188-6cfd-41ae-86bc-d135fcc23754",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42acf337-d5bf-4431-bbe0-caccaf195086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f05016-c58b-405c-85b6-869560f38247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4be8c4-4b73-498e-a63c-87589a7c23ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "da3aea1e-49d0-4ef0-a225-e3078813f22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d45a9e7-7e5d-44bc-ae9c-13b9871069ce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef42bb6-f3c7-4270-a4e5-faa68cdf8822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a3f107-3c5c-44b0-a284-9c8dcc60f9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c1b217-aa74-45c5-bbfc-a304bc1c4ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de38b4d-58e3-4492-bda6-45937156e46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b666756-4bf9-4c15-860a-ccb792363bec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a350d8-86aa-409e-87fc-93da9ee28db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96284e1f-598a-4e12-bbc2-4b2a5c9ad835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a38d421-7cf9-4f13-b9cf-b10d1fa1ab6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8bc9e1-096a-47e1-81fb-2c4b5828f10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1495276-4316-4f16-84c5-ec2c865b5cd9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459a1adc-6aae-4607-b386-2ce3bb0ce271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8266bd85-2a31-4e97-8019-dd9d6db3b5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53dff9d-fcbf-48fd-92b6-630b52e2eff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac059b56-e25b-4905-b4c7-e6703a80713d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf8a296-e4d1-46d9-bbc7-25b8ca3fcd86",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c467e48f-c97e-4a2b-8323-077162398895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a101adfd-e336-4039-a4e9-2bcc71d1dc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e586c1-2bed-4d5b-bd23-c1ea513a7dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79923a9c-9dfb-4a42-a841-3896cf720746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e294bca0-b885-4857-b224-b173fd08e868",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add362a4-a65d-4748-9c45-9b8b19ab959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d5ab99-8312-454a-92b2-68d16fc0719c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587bd624-2fb5-4cad-bbb5-ca07c06cc527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81c43f20-107a-413e-9acd-090333ae96c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b39d2b-7b4c-40ef-907b-0bbbb8bb296c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17df291c-d790-40fb-baa1-5bcd404fdfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13f7d2f-3868-4df4-8b48-a0a94fb8c595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae28dd7-be7f-4f1e-9f87-089137a2a8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3ca825-5fd4-4ff1-9b19-07f2c0edd651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f82f76-1a0c-4e2b-8c19-4dd84475afa8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556931f7-2318-432b-8a1b-f684770ad47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e74f583-543a-4bda-b247-29429c8ae7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece16a93-d3c8-4b89-9d3d-bd3b8e4a9059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10925d79-0fe7-4f70-9f1d-42dfdb7ef63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02eb3d9-5309-47ef-bdad-dc65d336acc6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21512400-2f23-4dc9-9822-930f289c289e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9100f5-bf6a-4273-9147-9442537dc60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8801f57-3a57-438c-945b-ec328355a3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b370e309-16d8-4267-b5e8-d1ae85767627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e65e27-7d88-4d2e-b7f2-242fcb17bc81",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546a738c-7896-4cc3-a54f-a193ae9b45bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8585b93-a7d3-4425-81fd-1eb66eedad72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1735d18-faf7-405c-85cd-7d6ce4c693cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a167d3c5-0fcd-4da5-b21d-82c9ad5528d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f553370d-e7b6-4dee-92b2-a8e70ed14c98",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723817e9-6ed2-420d-a8b4-967249ac03cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fde759-9a1a-427d-8340-b3140b617c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af58c1e-9797-4d4d-9659-fe61057cc913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "234e1441-6348-4a15-a095-c9dd3167711d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bed49c-4bd6-4dbb-8b22-3bd342cd13ea",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde4a2de-9c21-4391-817c-eda6132fe6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba01f332-a288-4893-86e1-bf2364acb45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd347480-76ba-467b-8434-c3415457ce54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec35cf0-68b8-45b4-b3f8-afc8977b9ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746cc76b-f332-49ac-b4a8-4d1c060d3177",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4f179c-cafe-4692-ab58-1980691ab17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69e81ac-bed7-45fe-814e-2d99ed0583c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec16277-e28a-415d-9793-00245970d4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc6b798-fa73-44d3-9cee-fa8d36b75b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c57966-1713-4c1b-9bb0-ad76555ff7d7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab4705d-c81a-4ac6-9022-12c3da8442cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff989ac3-7ed4-4056-a81d-ec4f19107adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206306ab-aab3-4146-a76d-e99b0734f702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "181f0a09-6c51-44d5-b206-1bef563fe4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3043e449-e1fd-4f54-a516-4d6b54f2e575",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e130ff-6524-40d9-9374-668c291e9462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7259ab-7bc3-46ec-9404-cbfe28872198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2729293a-e3cd-4fa5-afe6-1af2fab2ef78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b885f1d3-40a7-49fb-80db-f6b768d6436a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2753492-4355-4b5e-9c47-c5065a5618c2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df30a22d-47e0-473b-bdf6-c3c9914a55f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fc7f00-edfe-4c30-b3f3-f76aa1e951b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a393e5-df90-4fa4-aca9-cf8d23915639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9007301b-b583-4c3b-90f5-a8cdaeb06b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b63c204-740e-441f-bf01-b720bfbe1d76",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a8daa2-65b3-450c-bf2c-f6ebd8ffa748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48dcf50-9401-4d5b-9a3a-f584012f807b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3678501f-3c0c-4cb5-b3fd-8d0b53bdc241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3417d3a4-c60c-4819-aa84-c33bd49906eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c4fc05-ccb0-41c9-ba71-3cc4172a135d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2c6fa0-aaf0-4940-84d5-b46728ed85de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7709aae-fe7a-4c22-b66a-72e62a3d1bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33a3c17-bee4-4cf6-a2bd-bbda4d456fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cb9ff3-a930-4562-bd92-f04063fa167c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f69da0-10b1-41dd-92d6-269e068d501f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cffd30-8e89-4ecb-a9c6-2e4a51fbc217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26ea0ff-815f-452d-9151-27eb345cf545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7969e51-fbef-4eb6-bdfa-c32cdda08fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1cb7b9-83e9-40f7-94f1-6856e4b27be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db80cb07-56de-4a7b-bb7a-cd410ee9f460",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085b3de4-a377-4fe1-ba97-40b30122ccaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3143ac9e-2f79-40bc-ac70-e0becdc088b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8997229b-0e13-45e4-89e5-386f401f17f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b25ff9-cfe7-4d40-b9ab-0dba7d733565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7897f29a-9053-473e-b275-b484c23c096a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d260200-8264-43e6-a38d-a13b1530e714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32b6ba6-9de5-41a3-8e24-07e1106ae8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c10b49-45f6-43ac-bed0-a09c1dead099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d09e902-b54f-4738-95f4-ce71b9b29a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84da851a-2286-4c32-894e-73a976e6dffb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e71e91-252c-42da-989a-bd52afc748be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cb0655-775e-4cdd-9420-a976f1d1730b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ef6f01-b7dc-4042-a2be-a8b042dff1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "922330e8-cd4d-432f-b6cb-afc80cb1091d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4467e0-b315-482f-a6b5-de5438aec8c7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087d95cd-1b18-4fa6-9c9b-5c4e213d8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705e7db7-e1da-499e-b8b0-953d03da325a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f26ab43-4cf8-46be-b037-e7e2d167e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e244d889-60bd-4e9d-86d2-2a28a7e3db00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb8abae-1528-4df9-ba4f-85ce2960474d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30817cc6-5122-451c-a798-11a8c48f80a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d87107-f0e6-4a8a-a63f-ae4f491b04d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb0360b-77aa-4b5e-8514-ded21bea77b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9813956d-ab37-4759-8481-3c76ca34d39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5c6e68-48bd-4ba7-b88a-3d4b8262b1f6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0c5a49-ec45-492f-b644-cc12dbdaeee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f35266-e9f1-447a-8d4e-73382d4cd775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dbe4d5-0c2e-45b7-b3d9-054d072a6c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ef3803-3436-4dfe-b530-38c71f67ae68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eeed5f-8e29-4e2c-9f2e-f9d615295513",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6804ea9b-cfb4-4c5e-976c-6a46c70a0bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8eeb7e2-13cd-411b-ab95-b3a4eecb2b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aac63c9-955f-4d13-a8af-58763b4b9066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "464140d6-c5e6-49df-8ad9-7beff5dbb566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20efaed7-7306-47a7-8dde-b554cdbf53b7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f639c6c1-cb62-45d6-9ea0-fa4814f3b143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9e9126-12e8-4cc9-9617-65a69b024560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28fbc22-ac23-43b5-b608-bb7d746a5ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef2f5a9-030e-43b0-bb99-affbef45c07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ccd43c-cf48-4d54-9854-fcec9da7c0ca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6b4350-bacc-4818-afa5-a00054761793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c943262-1db0-45e1-ad73-1485c297bd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5737bb37-e49c-4627-b5fa-97d13d5d6699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6823de7-31cf-4466-91b6-931778239480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dda478d-88d1-45f9-a7e9-f90eecc9f5d1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4499de-85c9-4af8-9621-02894a29bd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520c5aa7-d4f3-4794-b343-f8fdd6fd3dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae37e44b-4d82-410c-9e16-e86e489237d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2d5943-b6f5-4240-8c32-57f423fa98c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4ad85e-da81-45fd-8821-c8eef864e5cb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c54e36-1f4c-42d8-a5cf-95b6599ddf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3bbd1d-9919-4ca4-9eca-f1a417ef358d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095be353-d5d7-4094-ac89-d7c517cfd61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a296aa72-2eb9-4cf4-aa95-6c3a99f00ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d693eb-0b4e-4b84-99c5-1222ed1f369f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8b68a4-8a3b-47c8-b46b-148b168015e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a1de39-218c-40c5-aefb-ce7f85953aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9884f397-e552-4a12-a68d-ddf2e7a1a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3834577-073f-4424-b5cb-ed2959c0a87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd4ab6c-4f09-4a47-91c0-0698dc9cbc84",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fd7906-639d-4a85-a383-9e4a71ffeb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094e30f7-e352-49dc-9b3e-79fc30e51fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d49752-09ee-4448-a083-c43512d58415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3488ecc4-7138-4137-af8d-093cb3472f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73f3bd7-bb92-4570-b11e-8de4a2b80929",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d4581a-b032-4440-a2d4-f85599028bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6d0370-def2-4440-b27a-f377eeb1a48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ee904e-a118-47cc-93cd-cdb675e26c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7009e4f-d9e9-461c-a7b4-bc724753a316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6994d822-3bc6-490b-9cbe-ea35265585e6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4446242-4a14-4917-9011-e975df5f84f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5cf25d-aa11-4a48-ba30-4f589fd2736c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50cfb70-f0c3-4568-a684-1ff5606ec2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a203c13c-3699-46f7-a43e-d7230173e413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5023f234-dbf8-4223-81ab-6ee32fc3e928",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9508d74f-a87a-4a4b-8077-aaad4d1d924e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c02c1a-a06b-4a79-b53b-f78ddb992f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eecb9e4-8a33-43f0-943a-2269a83dc5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24905e4-06aa-4ffd-a98e-59af5575461e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867906fc-e880-4d02-9877-81d04c651d69",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4291c2bd-be5d-4e3c-9a60-edc36f8e7bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541fb3f3-7720-4365-bfca-3fc72f7f4c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abab9194-b1da-4be1-b288-ab401370122c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb58031c-b2e9-4685-8fe5-2df065d6a3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559b91d7-8750-4b51-8cdc-601b9a89d84c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef10cc43-394b-4762-87eb-1c723c9f218a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcb1877-ad4f-4d72-8e81-226506ce24e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fab1b0-4607-4f86-a4ad-249219150ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eea66a1-7c28-4200-8790-8d316ed4215f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0275bc4d-5369-4646-b07d-ee9258ea5b7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea949113-af79-4f79-9854-a562d0adc1c7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794a3db3-b596-4e41-b982-5761428d5633",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1eea454e-e96c-4fcf-9b01-98c25f4cf13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7168a2a9-3f4e-47b4-b1b0-d011ecd4c6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3c797de-b39c-4cb8-806c-ff81769c647e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22c84321-85ed-42f2-9395-6e038cb960bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3172d378-7af1-434c-9647-b2c55d85b9cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "288d6619-4529-4d7a-85b0-d0b255a27915",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34a94dfe-4b9e-4747-99e9-593d2ed43336"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "999c3917-ca7c-416c-b33d-da6d72068f1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e05f93b7-6934-4c6c-ae50-8af5e6be1116"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82f98b14-5f29-4ad4-9dd9-1298de7e5b69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22d49d8e-d605-4de5-8aba-48a1e3da8eac"
            }
          }
        ]
      },
      {
        "id": "55d6e527-68c2-44cb-acff-27bea695fb83",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4f0bfc9a-984d-473f-9c55-75fb06509003",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d251268-1250-4c64-a099-307e75756626",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d05a744d-71a1-4b32-b4e4-da0cf56ec753",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ac13a7-3d1b-440f-80bf-e73eecff8bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ee60c3-6d39-498e-8dee-62bb42e8871d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e756e54-b5ac-4578-9a4b-4bdc4eb8680e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eede60c-08b7-4b43-85d4-4fb66bd87e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0943c322-933a-4097-bb10-15c70c8afb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60b3d07-596f-4e2c-89bd-68b76e779692",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96763afb-17e4-457e-83e1-a3093f7960f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eba37b9-7cab-486c-8be8-46a8fa3be429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef6b807-b43a-4c32-bff5-8086e202290e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178b1d5f-7d3c-47b7-afdd-586cb39df631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0395beaa-591f-4392-b314-d579ce8bedf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22ac4a7-09b5-4e9e-b200-451f54433df8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58845113-c516-4f59-9c54-ee1bcc08d400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80efdc6-490f-4bfa-a5f1-74394e435e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8628859-1e46-4716-be1e-f4cc058b1bff",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae88211-76a0-4836-9b04-ce64ed40a013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca76652-80ca-46a8-a227-995efbe41b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13181ebb-f2a2-49c3-8469-85e6c409ecbf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa84ba9-d516-41b8-b7e4-78aeaa983c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dbb873-33cc-4eb6-89d6-5f5ffa4b4418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac900bc5-e5ed-4d46-8ce2-0557276d26d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63921330-8eae-448a-beb4-89f30b62afcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766008e3-a204-40c3-ad22-5de131af9208",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fce34a-9bdb-4af7-8787-00b70f90aa20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a53339-bdd6-474e-914c-a59c7f03e8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff08dad-dda0-477c-9764-3b8555799760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd815bb-5276-40ed-a3bb-68f04144b284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1b9f86-1c6b-498e-a35f-1d6239e0a413",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb5004e-fec6-4e69-943b-5259511eb04d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45a699b7-7ee7-4815-ab15-a0b5001ebcd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bd6a44-5b6d-4793-9ad1-d8db2e8ee3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31aa81b5-7299-4fc4-a4f8-da5613e03b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6834dfad-811c-4f17-b3f3-ffa1ef0cd71b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca386037-2bcc-4041-8d33-906b2310de4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb451b50-06f5-4e45-937f-180bdec4d05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23a7162-2dd0-474d-937b-4bcd97889620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0530057a-4f05-40bc-98c8-f782a60aec90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a148d2-911c-478b-9221-9333a8aeb85c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70c0890-e6ae-4dcf-a228-c1febbf7dd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb727a86-2e2c-401d-98da-c0f94d086821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f46750-349c-4d6b-8076-a43838915e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26b002e-2928-4fc5-9b42-00f023893888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ed3b5f-f95d-4d5b-812f-ede5d29feded",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401a21a1-26ef-47ae-84b9-18294498991e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60811192-221e-4699-8620-dc18668c4569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9e1418-7300-46fe-bb7b-cac120cfe49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72bf4c2-a075-4060-b251-d94a6cb0b337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cce8d00-4645-4279-8957-f8ba4fed1788",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f7935b-c0be-4e8f-9af9-c548960e936f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f906dab5-6f41-4d7a-929f-2c8b36fb3417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30647f0-1fef-44b3-a0a9-f6f5cbde4ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d5dca8-d4fe-4bf3-9393-6296657d06eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19c96a8-f856-4bed-a963-a78f4be7f82f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6fead7-b1bc-4672-80ba-b46ba4031d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23c0509-1b09-44e2-8df2-83d3ecabfea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa74d63c-c903-4b04-bbbf-158afdef6124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46eee7a3-72c5-4e58-a89d-cbe9d1829f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0721b53b-e0d7-4041-a0ed-82d9e1894676",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3fe867-a64d-410d-841c-595010066d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4406b3a4-11b1-4c28-a612-a752cd2a09b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8c8ea7-130d-47dd-b631-e17401f31c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0c81bf-73ee-468f-822c-2b3e9e824cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12817875-7e9b-4f75-a54e-bffb0a663320",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8363e700-a516-4055-98f9-cef5ec87efcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "621f3d9c-702d-4dc6-909b-c64b02167a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdec1c9-7325-4ee5-bd07-2237990bb502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0660f5a4-6196-4998-b57b-1ea376701245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec03c24f-b2ab-4489-92b3-0f19670da4bc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f77403-5338-4e37-ac74-f92fb9b1d87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0a6935-0d1b-47e0-bad7-3cd5ea40072b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc9a4dd-d4c5-4a99-a956-dde809b5c659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617a669f-5f8a-422c-ba06-b61035a23501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83af3f2f-7f6c-4996-b1f5-4d9535b7ff23",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53283c19-2f12-4779-9c0f-274ea430770a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e43d9b0-6ac5-4d45-a2f4-3e85b732c672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a30848-53f8-4ba1-9ee0-914833b5e3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e76a2e-39ba-44ff-b16e-65cb9adb6dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e443c8ea-4ceb-449d-bf2a-cdf885777bea",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f87a4f1-3e58-4b28-a775-d76d9b287d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34c2cfe-50d5-427e-bc8a-23b79df7f061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0acfa19-3c43-4aa0-931f-20bc522dd17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bb806d-cab2-42ba-86e6-9a78bf2a0260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09707d1-584c-4eae-b05e-77fec8c0c99d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288558eb-5cf7-4e60-9bfb-6884fe2c29c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cdc4e0-579f-4160-a851-e48ccdece4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f932f6c1-c789-4e9e-aec8-137f92760f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985f770d-5a66-4c1c-843a-e730ebf798b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d659436f-4105-4816-b056-93150c805e28",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e31697f-057b-42c8-8c1c-598e9f3e0979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6149b7db-d7a4-45ff-a337-69dbd2b3b677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21491b4e-dcc0-4588-9ef6-401cf2dfb230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163bb432-f7ee-4801-90a5-8498f592e8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0277e9-3600-47ad-91a9-81656969cb1b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cdcb1e-3607-4ade-9768-3fcc8c6c8fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdcabf1-d7bf-45ef-a27f-c2534c1c6463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f369da50-1d87-4e2c-8316-9d6fe97b5491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a94883-8c12-4525-9341-5839ab8d6337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e300f5-8e86-4903-885e-25dc088ca3cc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0127c3-db07-4e83-a782-60a296087e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7233a41-591d-467b-92b8-899e4ec1bd7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c374b8-3b0d-4146-9775-7cdabcf29efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefa006c-e73c-404a-a2e7-b46a44e28337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822ea2fa-2243-436c-ac7b-8d82d372ddcc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bd54a3-1628-4690-b709-71613c9850b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67c12ea-f236-4ca6-bc13-a513683d88d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c8e93a-9074-428e-b3ab-d49e4d94b2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b2b65d-31d1-400f-83b4-acf7e6da9621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156262c7-048a-40c4-b67d-3b76814dc25e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0154b363-ca03-416d-9a75-6b2e8f42c76c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99e64a8-c14c-4270-8085-4fa7a65471a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a9c265-b7e0-440d-913e-3a6b4dc7ef67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9040e5-8381-4be6-8b82-8ff77760e38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015537b7-46e8-4920-a7dd-dd6b51699b32",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa71c410-36e9-42a4-b0a0-92ae8fe761d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1854d3-94b5-42a4-95ad-16ec0fa948e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6067320-7071-4a9f-b2d6-00242eea79fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fed5e96-5601-4c36-9bd7-13e27f5b93d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1580e5ae-851f-4489-a012-440ce2b5ab59",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe4dd1a-d389-4819-a9cb-10d2f0f76d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8477f3-d16a-4057-9eb9-3dddc05576ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138eacb1-3ea1-4933-8c7d-a0f25a84e64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21252120-b0e0-46fc-9136-bfdd02d9e770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932c3fc3-6505-44c5-abb0-0b144f83d46a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfc5fa0-8785-4d05-ab1f-17b175d97dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce92a8a8-073f-4730-aaf2-3da26dc4b142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2325336e-61d1-4b91-b083-3cbc0c536a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ead4d1-ee7e-4c44-8ece-7472f13a55a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb55bd9-3bb9-4de5-985a-6eb6df85d3d9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c6d65e-3197-4cf6-9b88-8f1e5588092d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d653f761-53e5-4aea-baa6-24f2291b4a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22acac48-595d-4acd-a2ec-95aaa562c9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2850e4a7-3966-49d5-af00-0e62d54e4544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539b3505-eeec-461d-902a-3906173b8b23",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b488e7-809b-4a38-8887-504006a8a60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c9f201-9697-43ad-9352-6c45c830643a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0058d691-7164-41e9-a915-9ed473fe6865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726f7247-0053-4583-a933-9ad455d33e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688cce4a-1d9e-4fb5-85ed-d9ea1d475400",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf7117e-4bfb-47fc-9604-c9e4c0f74bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d83976-a1da-4648-b200-b0c3e7e309e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783695b8-bf8f-47aa-9000-a2d5228e83e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd846d34-d715-46ec-9cff-92d7c92e5af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a46948-b225-4a2c-8956-6fec091e7a00",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421b5bff-c380-41d5-bd8e-4a3e02c52478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73ae69e-761f-4668-990e-28492372db4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2b8814-d080-408b-80da-d8959807a095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30581923-a8bb-4692-b7a7-adcd040f61a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49031355-b8eb-4865-aac2-e31d27dab5fa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4a339e-fcdb-4a30-a886-a1c6bddbc88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d067809-127a-45da-8e69-9d68ade8c1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8049b9d8-b89e-4dab-8eb9-8430dedc8197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f267e4d0-6347-4bb5-abbf-40b24528e8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84e6f60-6fce-4c69-88d3-f6f14650a95a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f09cbd5-eecc-4bb2-a104-23eb4592a435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11fa3667-4c94-41c5-a9d3-7677113ab274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19da33c6-150c-4061-8925-74f31d2d0fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7750fbc-1258-495f-bbaa-41bf46b08226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf1efbb-afc5-45df-b752-bbfab25f6d31",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b1d4ac-4566-4a2e-a8e8-fad64e5efe30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6046c5d5-136f-4d16-b810-7fcb5d41ded8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dd5834-e3b7-4e89-8ca5-b6574de2aaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fa81b4-1fc1-4d0c-945d-1c5b928f5874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d14525-9b16-4af4-add9-9cd4a5858df2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34c7725-19bf-4bf6-89ca-5832133f0514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7e9509-9482-4a93-8e69-7ec40abbe692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bb394c-d252-4ba9-a113-2cc1762b35d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8502b18-1ccd-4231-97fd-4b74192a56e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e372118d-dad5-46e2-8394-902f32ed3d9c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdd553f-ade4-4f95-89df-a60269b4ea0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a758a4-3cbe-4026-8f69-2a75ddc81a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc1e31f-5e02-4497-b474-19431444e528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fc8bbb-4f52-4ecd-ab0b-715be8aaf5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb2cb61-b4b3-4a89-a653-94ba704d7488",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845d26b2-d5f2-440b-af4a-02c7c52d15ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba48a1d-3921-43cd-892f-319850d9d9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7abb83f-bd69-44e4-9caf-858faa1c7b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bde87f-cc61-4cd8-925c-707fc0f199d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df866f24-773f-469e-b47a-53185777d6d3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7a8889-135a-47c4-9425-a6d3067e8d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d3fef7-7fe8-4340-8487-bba4bedf3192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f0b894-64be-4b6e-aa76-68e786426bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569432f3-9404-4603-97ee-55f40ac83a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d751707c-2f1a-4141-8da9-1ecaa0ccc306",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4dfa46-b468-4c64-9ac1-359aec6bf010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c242a2-c41f-4c8a-8384-3013e85e4537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fda1948-0e8d-4fed-9d45-e91a0d1e39f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19453e3a-e20f-4096-979b-ab05eadbd7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97a93b0-8c80-4ced-996e-9165732d4c8d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb106cbe-2a00-4114-996d-5a3c96b015fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69a601f-9886-4dbd-9293-63d9e2c5596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3992de8a-f358-42a2-a240-3444b099fe4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5f3bba-c6cd-47ae-b88d-1bb486083aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cf25e5-83dd-4197-87d2-4f48238ea21f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a90da2a-6bf8-417e-ac08-2049f2f0088e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6d72cc-1531-4c0e-afc2-456907fbfdae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31acd79b-88c8-40db-ae9b-2a1887fa3cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0baee99-19b4-4887-9b61-fdce67e6f35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36d3bc3-590e-4610-9109-09259ef5e4d7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4960dbce-690e-4f6f-97b9-eeb8eecb2ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cd656a-f3f2-44bb-9d66-3d58e8df70a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8fe9d6-f41c-4961-9ec8-b45e5286c430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dda1c9-fd4a-4f00-bbc6-a1c0879fa368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5280dc73-f1fe-473e-9988-ff46d822505c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e68e2a-4266-4f13-bc11-cb4263bb7649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6bae77-d39f-4fa1-9c76-36c3572b1890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8689fa87-1477-4112-af4a-7edff236d11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f796755-9fab-47ec-96ff-a2131f75f4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2e4fb9-7ec1-4bcb-9a4e-385e0b80b730",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ad971d-e039-42cf-ade9-cdfdb2c428a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556fac72-057a-4956-94b9-b23fbfb54bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f9beda-beea-4816-ac14-05240b4a3fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183986f3-2224-411a-bf0e-ad9f5c1c8d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f269d3ad-a31c-4c23-b091-ff15c34eae12",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3f573f-aba1-4d32-b7b8-8b422b940137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7209f3e9-c1e8-45e5-9a1c-39247b0eae16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa4a85b-1895-4a2d-a90b-ed81dc4e9a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cf6cf9-17a5-48cf-b18c-070e5a25d002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9a98ff-7407-493b-9bce-fe26b659103f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228decce-6b36-4d9c-a915-f4617ce30cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a05468-0ee6-4357-ae98-13722352cf79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9952b4-5081-437a-83b6-d4239fa2a3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac56aa42-2ef0-46c8-ac38-f2945a7a3081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b81e8b-090b-48df-bb82-21657133c2f0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee666039-0a7f-4e94-b2cd-b32d844df915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1567a244-e476-456a-a4f6-7a7caaffa3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1feeeab-f7fc-454b-bd39-0c2c38dfe4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bce34f2-6b5a-451b-9201-8e32a6d94149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7146d4bb-cc67-4f54-97c4-7a93cad12775",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42a44c5-a7cc-41a1-9dd2-6d67209d1386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82b834e-0871-4d2c-ad5c-8bf434a1dd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19eb7e1-d1dc-444f-90f3-ace286d75a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c18b96-b420-445b-a44d-e94e05ae47d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71abca63-9d1b-4e00-aa31-cac224c9faf3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bcbc89-fa7f-4605-992f-1386317bcfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abcdc1e-d190-4ca9-9210-e4e2df87b8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4304448-db34-4fdc-b0f8-91dccd1a28d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416b1a7c-e7f0-48f5-9759-dd9ed4702b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a71b93-5f12-49da-8ddd-0703796c5274",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a62f4f-bd54-41ee-929c-8f79850f9f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae09a316-20f0-42da-9697-f9c2e4a410e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861e51ee-4348-4261-b110-f06ce5b72b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2ce3f2-01c6-4ab5-968e-b78a7676b37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c91f0d-2abb-45c0-a179-f1f98e1c3702",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5c0400-c654-43a1-9d38-320da81b05a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029ec820-64d4-4171-b1f5-00fd4ed7a559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3e605d-0fa1-44f6-a9da-973e5b548b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a45402a-abde-4010-b785-9a989e8c036c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a569039d-99a7-457f-8cf1-1398283ae514",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6f1eef-e87c-4db5-b8f3-6cc383fdb73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6405de1f-5189-4d62-b0e2-4a49a154e292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6407c9-81c5-43b4-b596-26a2bd9f424b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda0122f-659e-4454-bb23-262df79a41dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1673c14-93f1-4b44-87ec-6def4ee0257a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd6555e-4a64-474e-a560-b0126f453842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0800f26-912c-4da3-a48c-b0c001cb4ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06d21c8-1d17-401b-a403-26a44aa8f8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbab27e-39cb-42fa-a986-60deb86501b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e259f4b3-99c5-4a3a-97ec-95c2cbdc4bed",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957f175d-049a-4adb-bc4f-fcd8a99253dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e89591-fb12-4dd1-b5af-2b241e4307c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b551fc7-517a-4ed9-afa9-32234d2251f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de91d24e-074c-412c-99e3-053eb8c2cc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d02dc7c-6882-4057-ad47-8651cd4c3f21",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ac0f89-68d6-4c05-913c-f260571764fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a219b1-313c-4a73-96df-a640fe824093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32203850-ff32-47f9-ae95-f6de5b8524a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38aaf160-2519-405f-86b0-ced2b4982de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c136e1-a464-49da-868f-5f801bcf80e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337dfb04-5dd5-42df-9b70-6529ca431b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f258f70-bf2a-4af9-a889-e9ddd8ccec0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f18310-6821-4afa-9006-3bce0d80c40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de53e09-10c9-462c-a779-d857f7eee166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8837a6-f6af-4211-a9d3-e9674a39e07e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b26c4aa-a254-4b4b-92ce-11a5d2d2efbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb86cc2-8550-4e42-8e2a-b85fd62939f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec17f98a-1777-42be-8158-4ffb9ba5a35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75067b1e-01c2-48cf-b3ca-37f4d9659c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f6396d-447b-44ac-817b-3de02ac5c70b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc06e3f-0a36-47b3-a7d4-3fae74c6428e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbb8a0b-dac1-44ff-892f-cc1e8e9360ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10c42dc-43dc-48d5-9fdf-23135c5330a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a672b2-d4e5-4085-b3d7-025b4f996b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c55725e-b1cb-4b8c-8e92-0f6c12b774e7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53e74c0-f060-44b7-a242-6e8ae8e68ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37897aaf-0d45-465a-ae17-f5dc9442f440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885d7a4c-ca01-422e-9cd6-0ef64ddf6f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b18d73-cc17-4ba0-be80-3211d6d83f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97827cb7-5589-43c4-b7c5-64104142f860",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd01a56-50ec-49aa-ae2b-632ecac70aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987c2433-9053-45ec-9272-1b2b6e0bf2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd150639-ca82-4ac2-b144-5233516faacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8df9adb-7614-4256-91a8-f7c482670481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e9e37-ab72-4262-8d06-66983fa40641",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be32b317-68f3-4469-be86-d14d3d156965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f5e459-2722-4aa2-be13-5961c8dfac40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d4ae5e-1c7a-4ea0-8f79-11ce4a89bc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80471b30-5eb2-4818-863c-d75d600c57c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc018e9a-bbea-4d09-866e-ae64dd792502",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48847c23-3749-4c03-9ccc-0bce307c527c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf9eb50-12c9-4297-935f-0c44aaaf7e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78689a0f-e12a-4001-b77e-03192d1ea4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125c789b-e3fe-4f77-992f-d57b101b4e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b19be30-2b67-4d64-af71-e450bc3ad5ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c95c85f-4a2d-4499-8a48-a3ef0ab78275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bfc60de-30e6-42d6-81d2-8618ad3b5c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4926a94-13c9-402c-9d0a-dbdfc1620281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a3b8f0-5ffd-411e-8276-c357f7c8c6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ad2ef1-e620-4201-9753-8e99ae255883",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6af7298-60f8-428d-8629-0d1aa494fdb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ce58cc-cf21-43ed-9fe9-4ae9d731020c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f18ae-7bde-47d6-b267-46674847dce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85240f49-7ea8-4154-b38d-a23815d2277c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d34150-5eb7-494b-92f5-90c0781d5023",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7413de1-62fd-44b6-aee9-690beea7bbdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b288b001-c4d0-4e04-8dcf-2fd900270ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9782551-401e-46f7-bd0c-02771f0deeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0155a55a-c5d2-4592-8695-95bd4b25b447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d13146c-f5e6-4a61-a9b9-b62a1e26becc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0fd827-7a9a-4ebe-9e76-2a8f12d5b1c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59ef716-eafd-40e6-83b3-cd4ccd914911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4868c1a6-fc67-4019-a612-11d77a317cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcfcf13-4229-4905-b085-dc88bb35592e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca5758c-9f49-4bed-8e69-df3434fd0464",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba2047b-ffa9-4af8-853c-9988e8aaf04b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39891bd0-f2d8-4e9d-ae3d-a645f312cd4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246d9902-e533-44cc-8c55-7b0d0e5afa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd80583-a437-4ad0-babf-64bf4825b6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50ca171-46a1-4028-8547-7719e70e8522",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401183a5-2070-426a-b470-e1f6d93dbb93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fffc092-48d0-487e-9dbf-a9cefa6c444d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bb3b0f-74db-4f48-a2b0-3112a6335c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad71bd6a-16cd-4037-b2b1-fbe9f6a53c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912f5cda-62ac-430c-8ba8-542fc02736df",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303b50e2-6e49-433a-9567-d6eb5c96e41e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed133691-f5a0-4380-9b69-5cff3d61a53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d972f54-3483-41f9-a7bb-2a4b1c6d4bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c267d0-1593-4a14-9595-f7e531e5d33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fd8f14-2a17-4c2e-9a6b-7848a914fcf2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4849a3-406f-451f-8d5f-d5ac5bf69c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecc16b5-4eb1-4aed-856d-4535d3d9130d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771b17e5-9ec6-4624-a4c1-32784afbba31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d42ddda-aec3-4e27-b6ff-7739ef199904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5918b5-5c80-4822-8638-c878c947bcd4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7e69bd-8f7b-4ae2-b6e6-9020521064bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52057d4-3a68-4923-bb9a-6a1c2bdf3f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81b9fca-5a6d-48d0-998f-c84c3237e28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3349a619-ad91-46a7-be44-e9c614518295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8932fd-f55f-448f-8646-c55b11956871",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f472a3-0a56-413b-b13b-d7d73a390a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71b5758-a8c4-4581-bda9-c2715d5b7b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c492dd99-5563-44a0-9029-08aa3b19d3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0d0b71-59af-4ec5-a2f5-3d099de8ca5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf20bf05-356d-4b63-914b-3366980cb316",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dfb5a1-9bb2-4ac6-88ab-c46520cbe4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d47e934d-ca5b-45fb-91ee-66e77893df98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206fee63-5dd1-4e12-89f1-4c0b2800e31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffe4938-391e-49c0-abed-c302b6366cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae9686e-2d71-4e11-8287-44ebe850f553",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c654129-29ae-483b-b4ce-23a90c86dd6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5380f5d6-c036-407e-8bf6-b2340052404e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ea0f28-4e6d-43e5-a655-7caa5004acec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3087c576-00aa-4b2e-86ef-71c7c7308bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4681c31-0434-493c-bba4-d91ebe45bdf9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f10890-c898-4457-9b12-265d4fa1bfe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a56748e-264e-4eb0-ba6d-124108023e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8d842a-be2f-4652-91e1-50edc5e26a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188b6638-1719-45fc-9174-1e0addef01b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a417ef-94d9-4a99-93b2-81e38a598349",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad351762-8969-4972-afbb-ab77dc9a7e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5541f6df-c5b5-4f35-b18e-308805e7a5e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71483879-30df-4662-bac9-d36628ef7024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c741156b-e18f-459d-be2d-978246ed9eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6847c224-611a-4864-a357-81eaf825b105",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ede6990-28c1-4903-b2d6-c6751c466dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84dfe420-1021-437c-90fb-b0a3d3d51084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f126e459-04cc-4c98-a6d6-8d7bd7071459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47526dbe-5e48-4810-ab85-5463cffcb844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38186d3f-07e1-487b-aa0d-cad1f99af12e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa9cccc-7b38-4da9-89ca-fa3936ddb01c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2a0695-6862-4953-a10e-daebcbe2d118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e8512d-3e4c-4c6f-a9b3-2b1b69a926d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c1fb64-55c7-4835-ae8c-6d5a42968c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d6a669-ca99-4b8c-a3a2-d4b8e2cc9a17",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48898a93-93e2-4f08-a41c-f77f68bad6dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7454c5-1380-4bcd-baa9-a0ed86f4ae05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5403af83-5bb5-40cf-81c2-6b2a8d1fbb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39330ec1-c5df-48ad-b1f1-42c6870f3927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a18470-0b95-4b36-8414-04473424f587",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ef926d-5aa5-4eb0-a90e-ff5b065a0c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207cc019-7bf3-4daf-96e0-e0e4a2fd897f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7be0ffe-a03f-4b51-8f19-40ae38831e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ec1b99-d7d5-4ef0-8b7d-d8ae5e6e3742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96a3c85-58e6-448b-97b6-1eebc9860ed0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a084d60e-b7df-47fa-b6c0-fa08e1099996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e448d3d-4dd9-4f97-9c05-7f18c4b09782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010c139f-a519-402b-ad36-51670f57bc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fa8ef3-e9e7-4929-be42-6055249314d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adc2cff-d530-4272-b56c-e03b41bebb04",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3979fb3f-b6bc-49b2-894f-712e9ee7393a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c86b2a-f393-4a59-bebf-fa9d2d1fc6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f467b4bc-193d-4928-b77b-93ec849c2f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1070b0e-def2-4399-9413-cb40b068be6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1270c24e-09f2-469c-a28a-a39132c3b56d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b72254-0fcf-495a-b0f6-db04ba0d7186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d88ae1-386f-4352-a81b-5a374a7180fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8d7f0d-3717-4727-b25d-20a29d7220b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b187ac-2f30-4d31-b73c-2a35b13d5606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833da057-5fa8-495b-9e79-3211268c1e7a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f72c80-dbf2-4b16-88ea-9894aa1efda0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d85ec8fa-8d29-4db9-9473-1bd199d3b400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e3b6d9-b4a9-46b5-b841-710303c6ac60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cf13b8-e7ff-4313-ac27-c9e49e8fd0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3e0644-9566-48ba-abc3-24cfc70bdd60",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1ad318-634a-4954-8d55-f3757b484e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f5398d-c6c8-456b-804a-354c659b7583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad9f197-6af1-4acd-8d48-550160e4f94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb76016-a9cd-44e0-a8fa-91db90367fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b75777-4ba3-41b2-b6d1-a060f8ba9863",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2360a2ed-ca3a-4e56-a32e-42295601a37a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5bf1fed-1ab3-4b87-8fc5-64060023bc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28025c77-c513-448a-8dec-908f18a9979e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd0082f-4b0f-4347-b968-c038e5cc5bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e85fc2-daed-4b14-a451-3de22591defc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5ba999-3485-4018-bb20-bd7615589d40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705ba6cb-3466-4f74-833e-ffc0cce0f7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470b87d6-f87c-4b70-9bca-42fa403579c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f74b5f1-6d92-4acc-bb06-67ee7e13c619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a85b13a-98e2-4d3c-a022-e910266b6395",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ed40e6-29a5-4d97-bba5-2a28c0ff61ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5de055c6-0d85-4d6e-b59a-1b13d8c16b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2251850d-b30a-41a3-8ba0-d0a86d4489f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e5a8e8-3a5d-4115-9656-41006b0774dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58281fe5-7e8a-4d06-a0fc-9e80b0a60a4b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a74804-8177-413f-82cd-84621a6ee7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd466ebb-5487-4efd-987a-a316a8fde87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839b187e-fc85-4ee2-8cf7-b10d4da46a7c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c225d2a-5e50-4494-9fea-aec4fe7c668f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d38645d-a397-46e3-b82f-9abd7cf20c9f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcffc306-5f2e-4332-a051-89b34288bed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cff942cf-3132-4516-846f-aa79f0ba2d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592cc92e-ddea-4cb0-bbcd-9d69ac928d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899de8f0-79d9-4613-9f7d-b0e0a731c2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a27197d-6043-46f5-95e8-6843e7918b7d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a7b7cd-b9d0-4e77-84e2-07d0fb669268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520daf0c-7406-4d0e-912f-11e07d7252ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cceefe-9e2f-4e6e-9b41-0c7fbfa71e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081fc730-30e8-4cc9-b867-8968d71d62fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad72c528-7eed-4404-be0f-2556fd3e55fb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31ac234-3dda-41f6-9159-f4d739de8711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa7921fb-1869-4843-8348-9cef886c6024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c725ca35-0a87-4e72-88f9-016f79f510e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044f355e-c95f-4f59-8eb8-4fb22f27095c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e25b513-d0c3-49c6-a23b-fd0e97dcae32",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2697c4e7-a9ea-49b0-b68a-51fc407de4a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad8b490-081c-4740-a77a-af78fffd6324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7864ab-1896-4835-9862-70161be0649c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85e1ce0-f470-4c58-a0b1-11cb90b326c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ccfc7f-e599-43be-ad44-1c2eed9a10b1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f4f00d-5f95-4920-a892-57bf087a7aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4cb3336-bd6f-43c7-8c0a-62e6e4846e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1f7ed6-2b6f-4315-bb16-c20fa766e526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed72fe51-d637-41d9-99ff-ccbc5738e072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca66eca8-8cc8-4c35-9fc4-e2fd54e65ca2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3defe457-e46f-46e6-b301-7107125532a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507d5dee-387c-438c-bbb5-646b4c1d6621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f947e96-6b20-420e-9d79-d4a9fca10ca2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc43bbf-9f9f-4f4b-96df-bee251aabe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67608801-f08c-43a7-adcf-18bddbb46f7b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce35ce21-397d-46c4-a4c7-1e2016177b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137cff64-ce68-434e-9a1b-9e0fbe3741cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4650b06-185d-4e73-ba9a-1774e476f4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb02721-b596-46cf-9f9e-4e716e8af8a1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8945c9e2-d918-48ab-86c6-c8ed4fe43f11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf734efb-0f6a-4525-b33c-5bcd48542719"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4f87dd0-3d80-4c25-95b6-5cc00d841d91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd4be302-119c-4719-8d3c-356bb3c9f802"
                    }
                  }
                ]
              },
              {
                "id": "45cfc352-5d72-4873-ba69-0cf5c5e508eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f0e1fd8-40c6-42fe-ace1-d393545a44aa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5d055f-7a2e-4386-9772-9d9e877003c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b51fe0a1-7d94-42da-b901-5e36b9075256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513215b0-9d03-4ad3-a397-cf15c3e3b1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b36221d4-74f2-4493-8cc7-f300e86086ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bedc4bb4-2476-42a5-9f4a-cba41fd63d7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cb35d91-e78f-4e4a-a9de-b472ff4dfeb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37a474f0-8f1c-462e-a6e2-dfdb643789a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8960da57-0692-4823-b15a-8430bd12777f"
                    }
                  }
                ]
              },
              {
                "id": "79fadf17-f35b-4e39-a21f-9e9a9105ac80",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "933aebdd-a782-4f46-a61f-d69d6da995e0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5132a898-9114-4dd4-b95a-d1de99d328da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d060df18-e18d-4e91-84fb-fa910cd1ce85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3a536c-11df-41f5-bc8c-fb7a9c925927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68051983-d804-4b97-bfbb-a198c792f4ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5167d13a-1637-4f6e-9194-c02c2c582d8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5bfd73b2-d9de-4124-82fd-2239f631eddb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da45d1bb-b9e6-486a-a14d-0d22844469c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c4e03780-16e3-47c2-957d-92127dac8904"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b62b7ad8-b4e0-473b-bccc-0f4697cb1a17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97aa4411-d73c-45be-9089-ea178a25ce9d"
                    }
                  }
                ]
              },
              {
                "id": "1a4936f7-df94-4eeb-8bca-91e197d7132e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ad3e5da-0be0-43a9-bf6b-bc9b5a294e8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "937a45a1-a30e-4006-b0e1-d9d80bb20554"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b331d3d6-9346-4213-988f-0b866996799c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75fc6617-744c-4dc3-a9ab-559e8c3ca88e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1bdbb2f-b73f-4509-9188-937e43c6e830",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1ef8a6d3-d431-4379-9d5c-69d4bec90265"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5b9cc91-3eb1-4648-bd5e-c06e8347e535",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b094a79-6c81-40bd-bb44-13624335b124"
            }
          }
        ]
      },
      {
        "id": "c2c4691f-9a2b-4741-a51e-28a3b784605b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ab7da8e4-6849-4779-ab88-a50bd1ebf276",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b11bd85-60a1-49a6-bca9-48ec1a56a3ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "099a202b-8113-4ae7-81c7-5174b29cd3ab",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740a95e6-5958-4e21-99cf-991a30f4fc69",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "11a57810-b2bb-4894-9187-6ccdb49cd561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92ca977-6eda-4b6b-9096-ac20b0804c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5a84040-bf70-460f-bf42-d3d73d6dc987"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f6aea36-49fe-4e83-9303-56a52fb54489",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84530b06-81f3-4385-bcc6-1b92f72c4ba4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62991dba-a435-4068-a17b-328759bd6196",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30d40117-b8ca-43b1-a731-8c41f8067b0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "936bd88d-906e-4b76-962f-bbc3d4405df8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "75b287ad-9195-418c-b680-60c0d5d79e3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4154d27-7491-4f95-8a45-cd1021e5742c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03c9efc2-d4c7-48bd-bf83-e09f29bf4b5a"
            }
          }
        ]
      },
      {
        "id": "621c56e9-b329-4b3a-9e8d-44328a08b891",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "175439ff-6370-4da9-b154-c0ab54181de0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e33363e5-b8a4-4499-9e33-e65a79940318",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdf79d5c-c978-42de-8394-357491e8ed48",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc96355a-a4dd-46cc-96f9-df226a6f1f27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50feb29a-56b2-45e8-b35b-2cede5aeff86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee15a2c-7e4a-412d-95c5-e86628920c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74c035f5-e70e-47d7-af54-090af9e927a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "453501d4-6d7a-48a1-9edd-4006a3b6ad43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcb8b88a-c701-4f92-98ef-14764e1e0e23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1817ee6c-829c-4e3a-9914-3dd92dc8fd54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09c04ce0-6211-410e-957c-973bb0f1ed50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "015ea452-9b33-410c-a184-18c7dbb1affc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd611060-20db-4301-9d15-26492f7e014e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc555aa0-0bdf-4d00-8b03-ec31699370ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77527eb5-14c2-492c-b950-f7f979420b5c"
            }
          }
        ]
      },
      {
        "id": "88567761-ac2a-4a81-bf7f-1fa945dd4a7d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "031733a8-f27d-480f-9684-93c23940e466",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f0fd24d-caa3-422b-92c6-26aa175bf42e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f70705f-d3ec-477b-a2cc-5645952cafc3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ed2706-0f28-41b0-b993-8e67a8780255",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48367ad7-549a-4eb3-b897-92a37011d369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53b6369-57dc-4c8b-aafc-c0ef71451b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaa42257-fd22-4130-8e2a-b87bb7113c0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb6ce55e-7857-4809-9321-12743bab56e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dc3b0b9-fb82-4b12-980a-14664ba290ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be807c06-02dd-4320-9612-6d9c9272e156",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01139fcd-9c52-4298-b6fc-b25a7726df7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a5885aa-b9ef-4b57-b4a3-f57c4660ef85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "813897f6-0252-4481-b2f3-7fd6e3b6ba5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38a11654-8bd8-424e-9c25-f7a9ae6789d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "230599e9-bcee-47b0-8da1-c89f28a03626"
            }
          }
        ]
      },
      {
        "id": "7b6f7418-af01-4a12-abe4-dc3afacb08d1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01f48584-7b92-455f-8fdc-8fea590eb9fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf4f6092-b41c-4031-9ea6-7c5b5b984e4d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "17b11fcf-4c99-4d49-93a3-c3e8bc6f4ad0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7941e11-6123-4dcc-8bcd-cb6d634d8317",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04bcdda5-da34-4039-b8d6-832271e1f4b9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 133.0739436619718,
      "responseMin": 10,
      "responseMax": 4660,
      "responseSd": 505.74376774888873,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696466000170,
      "completed": 1696466049697
    },
    "executions": [
      {
        "id": "464afdd6-373f-4244-96b5-004dd1161753",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e0a3bc8d-c053-4172-9a37-4764688fc53f",
          "httpRequestId": "a2582af3-c0c6-48eb-988d-a786db1466c1"
        },
        "item": {
          "id": "464afdd6-373f-4244-96b5-004dd1161753",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "94eec686-e1c4-4a1c-b8a3-f1c737e49610",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "11ffd5d9-9d26-41f1-b3de-4affb2fd2825",
        "cursor": {
          "ref": "a8844288-56b8-4d8d-bf3c-28f52723d257",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "689c71ec-6b83-46b4-b061-44044ebf321b"
        },
        "item": {
          "id": "11ffd5d9-9d26-41f1-b3de-4affb2fd2825",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0ed0f158-11c8-474a-9947-7ee8b2ae363b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "e45ebcd9-e3b7-41b5-8ae6-e7a4c807953a",
        "cursor": {
          "ref": "0a45b9ef-b91a-4556-8dcf-10beca2eeee6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cac036e0-b247-4262-a101-e839f6abf0da"
        },
        "item": {
          "id": "e45ebcd9-e3b7-41b5-8ae6-e7a4c807953a",
          "name": "did_json"
        },
        "response": {
          "id": "afeb005f-ccab-485c-9f33-74ac0090d274",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149935b5-b8e9-4c08-8b0d-d9c03480df73",
        "cursor": {
          "ref": "5c495ea7-6d22-43ab-bff8-88f9d500d9f3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "649b906a-0f63-47c1-bbe4-c03b9b7be350"
        },
        "item": {
          "id": "149935b5-b8e9-4c08-8b0d-d9c03480df73",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a754c64-00c6-4e47-934e-8f8dce574a78",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2772,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149935b5-b8e9-4c08-8b0d-d9c03480df73",
        "cursor": {
          "ref": "5c495ea7-6d22-43ab-bff8-88f9d500d9f3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "649b906a-0f63-47c1-bbe4-c03b9b7be350"
        },
        "item": {
          "id": "149935b5-b8e9-4c08-8b0d-d9c03480df73",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a754c64-00c6-4e47-934e-8f8dce574a78",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2772,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af6a3df-5587-434d-800e-03da280d3ed1",
        "cursor": {
          "ref": "ffd1ea8b-6f49-4db5-870d-d96975b0d51b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0b023916-7cc0-44c1-b142-4c904c8db34a"
        },
        "item": {
          "id": "3af6a3df-5587-434d-800e-03da280d3ed1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f6b43f6a-bbab-4291-960a-1c2d0916056b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 849,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b65a6f-8320-4539-b36c-ecbc69c9a5af",
        "cursor": {
          "ref": "7a1ce552-6632-4231-8bd1-b9452678c0cc",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "898ccee5-4c4b-4b67-add6-1c8a08c76f63"
        },
        "item": {
          "id": "a6b65a6f-8320-4539-b36c-ecbc69c9a5af",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2ac4a52f-cef1-458b-b626-e5ca1f72c043",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d688a2-c107-4518-a5d7-fd9149545f9e",
        "cursor": {
          "ref": "29031179-b28c-4480-a837-8185efc8fe09",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "088b7980-b221-4b8e-a928-302344c03de8"
        },
        "item": {
          "id": "31d688a2-c107-4518-a5d7-fd9149545f9e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "10774e17-88c7-46c7-918a-f18b46d8685d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31577746-f340-472f-8c08-9ca7900015b7",
        "cursor": {
          "ref": "0dc3e273-0be1-450b-a779-eab6df1d5a9b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e253883-b318-497f-9054-8130781acf2b"
        },
        "item": {
          "id": "31577746-f340-472f-8c08-9ca7900015b7",
          "name": "identifiers"
        },
        "response": {
          "id": "7898c581-37f7-49a7-8ad5-c832de54f394",
          "status": "OK",
          "code": 200,
          "responseTime": 574,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b28ca6-e84b-456d-a677-42d2d672a098",
        "cursor": {
          "ref": "ced299ab-2eba-424e-bce5-79b9ca1b9a2f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5a051258-6a4c-44a7-b168-ce509a5418c9"
        },
        "item": {
          "id": "71b28ca6-e84b-456d-a677-42d2d672a098",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bf23176a-d887-4d08-aca6-da8462f4ebb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7932dc-f984-4431-a802-7591bbe8864e",
        "cursor": {
          "ref": "7ae9a03d-42e5-416b-a996-4d895dbd1d63",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d9f55603-fcac-447a-b084-941a00473e2a"
        },
        "item": {
          "id": "dd7932dc-f984-4431-a802-7591bbe8864e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "153fe1bc-e5ae-4c70-b071-6f9798b4a7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3902321-097a-483f-b822-0f8cb940d859",
        "cursor": {
          "ref": "890c2818-182a-4a87-85d0-2d6776ba6ac8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "330f86fd-1abc-4fc5-bf64-4de2b2f95469"
        },
        "item": {
          "id": "f3902321-097a-483f-b822-0f8cb940d859",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "51e83f4e-7513-4e49-802a-bca11c83d8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1078def-513f-40e4-9ae5-05955e6e23be",
        "cursor": {
          "ref": "1cd61a76-751f-484e-91b4-5d3df778e758",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d0ae2a9c-852d-4a7a-8eae-b98b08ad9cdd"
        },
        "item": {
          "id": "d1078def-513f-40e4-9ae5-05955e6e23be",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8754098a-77b9-4db4-921f-20b08d6df3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd372d0-2991-4e9a-96f0-6c8332132b6d",
        "cursor": {
          "ref": "03008115-98af-4aec-ad63-c0b300237136",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "38c26cfa-54fd-494d-8cee-7c81c7ed5dde"
        },
        "item": {
          "id": "1fd372d0-2991-4e9a-96f0-6c8332132b6d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "698f5f80-a3b5-43cc-bba5-20e008a7eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb834ad-4c3b-4569-8abe-cfa5234f158b",
        "cursor": {
          "ref": "f4087c51-9bc7-4dbc-83f7-2894c3cb3631",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2cdeb5cb-0944-44cb-9234-875ee62f1caf"
        },
        "item": {
          "id": "4cb834ad-4c3b-4569-8abe-cfa5234f158b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f56ab61c-669f-43e4-bf8e-878a9c2ead79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e4a169-fa46-49cd-b58f-2b52d18aef9e",
        "cursor": {
          "ref": "530b0933-08a7-426b-88d7-00a7b9c04f9b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "202784c9-5c86-4631-b57f-d0b301ddbe43"
        },
        "item": {
          "id": "45e4a169-fa46-49cd-b58f-2b52d18aef9e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d79d1f10-6541-47bd-bc69-4cf0365a1b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89b0d3a-a26d-45d7-bdb0-4876effe06c6",
        "cursor": {
          "ref": "8727eded-8fc2-4f9d-9e72-abd3d697f460",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "130dcdb0-9b81-4042-bf38-5d1696d0b1b4"
        },
        "item": {
          "id": "f89b0d3a-a26d-45d7-bdb0-4876effe06c6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1c7c4ac6-6467-4d1a-a6bd-7bb3100966ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d596079-9581-48ca-9bb6-5280eadb6852",
        "cursor": {
          "ref": "49d0f930-a405-4ed7-9a19-5c40ab41f85d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "21d4826e-db48-45d3-a175-8482ede0794e"
        },
        "item": {
          "id": "8d596079-9581-48ca-9bb6-5280eadb6852",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "79686dfb-c2ed-4469-a890-0c3d02c8f793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b93c0bd-ba9d-454b-9e26-00bf95d2ce69",
        "cursor": {
          "ref": "13f30100-5b9c-49a2-a9d4-e6ba8d96ee11",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4a9936af-7e05-4b93-82ea-f3b0c7b6c962"
        },
        "item": {
          "id": "5b93c0bd-ba9d-454b-9e26-00bf95d2ce69",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "52d0a0be-14cc-4b02-91d6-80d5e8dc5e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec72003-27b1-4de8-99e6-c152a5663cfe",
        "cursor": {
          "ref": "25d6d3e3-a95a-4edd-81b9-d1f68a8be589",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "40d763e4-f996-45b5-b20d-8b9e682cbe08"
        },
        "item": {
          "id": "aec72003-27b1-4de8-99e6-c152a5663cfe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "17602bbc-3c57-48b4-93e8-85e89c07e00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b50abf3-4db5-426d-8869-f73abcf502fd",
        "cursor": {
          "ref": "86b040d9-8bd4-4c60-a9f3-3f841dce0131",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d1e4673b-97f4-4c60-98ae-947d397e0fca"
        },
        "item": {
          "id": "0b50abf3-4db5-426d-8869-f73abcf502fd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "99b29af0-b72a-437a-9e8c-f20204d04036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bec9eac-c3fb-4e9e-a38d-2ee60cfed225",
        "cursor": {
          "ref": "2722aec9-d60d-46a3-884f-39c536c7c899",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c0eb47e4-c384-40e0-8aaf-6fff7cbe8757"
        },
        "item": {
          "id": "2bec9eac-c3fb-4e9e-a38d-2ee60cfed225",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7d60d333-45ed-4032-b82c-962477c5aa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de83bbe-2ee9-4e75-9855-dee8ee76e920",
        "cursor": {
          "ref": "7740d651-1966-4221-a0b4-f644ee5b488a",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "942f2e73-6267-47d6-a123-237d191a57c4"
        },
        "item": {
          "id": "0de83bbe-2ee9-4e75-9855-dee8ee76e920",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0dcb2a24-682b-446b-bc8f-7eb87d7d400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9829c4df-f264-41fe-8816-2cc2dc9917bd",
        "cursor": {
          "ref": "fec3c48b-c99a-456b-9f4a-9c5a32052361",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8d7e9f18-ac03-4133-bdf4-af076962d7b6"
        },
        "item": {
          "id": "9829c4df-f264-41fe-8816-2cc2dc9917bd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4dbacd1e-a5a5-4b20-9a04-6f7aaa624020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1446df3-6439-4a1d-9e7b-251476baf062",
        "cursor": {
          "ref": "42220475-6709-481e-b74e-5deff458e239",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3f2bfc28-699e-4585-8252-0596471f6bc4"
        },
        "item": {
          "id": "f1446df3-6439-4a1d-9e7b-251476baf062",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bc884a53-c946-4140-abd8-1e0fa3b39e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0111d6-e9e5-4cce-88a4-0c9c3ebc19f7",
        "cursor": {
          "ref": "b2409438-feb7-4bee-a7e6-6fefc467571b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a25a9f93-7122-42a3-8725-08432249c6c4"
        },
        "item": {
          "id": "8d0111d6-e9e5-4cce-88a4-0c9c3ebc19f7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8d048529-dde0-417b-b535-2e4d2497363d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c8d22a-75d8-4d93-8021-c45e1e464624",
        "cursor": {
          "ref": "34b6e131-f2f7-4e5b-906e-f72c09f39f80",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "268368a4-41fc-48b2-b39d-9b4eaef996c8"
        },
        "item": {
          "id": "82c8d22a-75d8-4d93-8021-c45e1e464624",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "98b7b3ec-aa6f-4f38-8dc9-e1bbfa12d65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a6ccd5-d6d1-4a93-bbf3-3172e6a83ae4",
        "cursor": {
          "ref": "8f2dccfb-969e-41f8-a51d-eea6b6550b58",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "33794552-de67-4d5e-8703-00437f60fd88"
        },
        "item": {
          "id": "b8a6ccd5-d6d1-4a93-bbf3-3172e6a83ae4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b77aa4c8-dc0e-44be-b903-fbe3bd548475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26b369d-d649-4912-973c-a8d923f93da6",
        "cursor": {
          "ref": "e23871c1-9963-4159-bc7d-2041454d89ee",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "08718791-4b7d-4a14-aa68-61f977d27e5f"
        },
        "item": {
          "id": "a26b369d-d649-4912-973c-a8d923f93da6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1ece4209-f6e4-42af-ae28-044e8e6fb693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10f27f9-83b2-44d0-b102-66f90307a312",
        "cursor": {
          "ref": "46f58dd1-2986-42d1-9cc3-7fa37a0495e6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7cf09ece-82ec-4166-a800-0f41e63512d3"
        },
        "item": {
          "id": "b10f27f9-83b2-44d0-b102-66f90307a312",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4a40be3c-ef42-4fd4-88e3-b79ba0a036a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4184aa0a-5dbd-4613-8370-54aed21399be",
        "cursor": {
          "ref": "adfb9b44-0d36-4df7-95df-2d9d2bfddb64",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8577e5b2-46e1-4556-857b-dc1cd592e2d3"
        },
        "item": {
          "id": "4184aa0a-5dbd-4613-8370-54aed21399be",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "448ed3d1-0fcf-4b47-a87d-eda5c0d0691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f593939-4e0c-476c-8ee2-463465649c56",
        "cursor": {
          "ref": "b10ea9fd-046e-4672-970c-11147e511243",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5943c49d-f617-4463-a59b-48159c987c00"
        },
        "item": {
          "id": "7f593939-4e0c-476c-8ee2-463465649c56",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "28707b25-7c8e-4740-9d04-2201c2b0968b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ead3826-ab37-4db7-848d-5a9c8a36b7a6",
        "cursor": {
          "ref": "cdb6f68c-886d-44e1-b254-a65077a58f1a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3aec6595-478a-4c66-93b6-f516dc3d6a4f"
        },
        "item": {
          "id": "2ead3826-ab37-4db7-848d-5a9c8a36b7a6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4c49d2da-5e8e-4ae6-9a9c-bb2244414532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4bf3f6-7cc4-4bc7-b93c-01e062b4dc97",
        "cursor": {
          "ref": "ea380442-e337-4a8d-9fff-de86244ef7af",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "72ae1cbf-f49d-443c-98f4-bbf4b4df6121"
        },
        "item": {
          "id": "da4bf3f6-7cc4-4bc7-b93c-01e062b4dc97",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "83b2d566-3e75-4725-b62e-c9875e0eb35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5002cab5-4715-444e-9ce7-15698983d71e",
        "cursor": {
          "ref": "1f5945d3-cf46-4e5f-bfe4-add2090bd5e7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "efc9bdc7-ca71-488d-b1e7-8cb255eff53a"
        },
        "item": {
          "id": "5002cab5-4715-444e-9ce7-15698983d71e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c71f6b92-99c4-4e34-9243-029936ec7b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef8ec31-c4bc-4d56-9d17-950c0cde6001",
        "cursor": {
          "ref": "9551fa5b-d6e7-45e1-8109-50a64c6a1bd3",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8bcab082-77c8-420b-a301-809f7f494021"
        },
        "item": {
          "id": "2ef8ec31-c4bc-4d56-9d17-950c0cde6001",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7e6f3d86-378b-49c5-b823-d16fff455e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2322bf67-e5d4-40aa-9bc8-29329ab43bc9",
        "cursor": {
          "ref": "00c93d2f-4372-4a70-90d7-7dc71f312693",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1819abc6-1218-49c2-9913-1d1282cb6640"
        },
        "item": {
          "id": "2322bf67-e5d4-40aa-9bc8-29329ab43bc9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d6091872-01b8-4df3-93ee-9034bbd6d2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13892b1-3827-4d9e-b5d4-8e7695bb04ed",
        "cursor": {
          "ref": "a5e73b29-4cef-4bf3-b0e4-cf187bd883c7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7416ec4b-88f6-4eeb-a68a-b3946cae881d"
        },
        "item": {
          "id": "b13892b1-3827-4d9e-b5d4-8e7695bb04ed",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fc0c0930-7c8f-4afb-a94f-5f653b75bbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadfc0ad-ed2a-4177-b83e-729f4d20dab7",
        "cursor": {
          "ref": "f42cb083-dc9b-4ba0-b23d-c4660252559c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ffa6542e-961b-42ca-8725-aa68a49cfe47"
        },
        "item": {
          "id": "cadfc0ad-ed2a-4177-b83e-729f4d20dab7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ccb7ebc4-40f3-4f88-a3ed-9844436af0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d651305-4a16-4c23-8a4b-fdc910d36dd1",
        "cursor": {
          "ref": "13d03022-21d1-4aef-9684-8e78253a38b0",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a8f590b2-7dec-44e7-bf73-816f387cb95e"
        },
        "item": {
          "id": "7d651305-4a16-4c23-8a4b-fdc910d36dd1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "506c8ef3-d2e0-4ddd-8012-e1ebb703255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b018137d-d781-45ee-a48b-a24fce51e7d2",
        "cursor": {
          "ref": "fc2106df-d80d-43c7-a8a6-0124c6ad5c1d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0f1bbe73-4754-4e7c-9c2f-5695c5a87a1e"
        },
        "item": {
          "id": "b018137d-d781-45ee-a48b-a24fce51e7d2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f1e7ba26-5d21-418c-a213-374d95d6389b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e735adf-d367-409f-b96f-efe752bf8a0f",
        "cursor": {
          "ref": "6e2d89d6-5581-4a29-98bf-bfa7755493c4",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d3e257d1-fb3d-4002-b0cd-4d869441a175"
        },
        "item": {
          "id": "1e735adf-d367-409f-b96f-efe752bf8a0f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "efcb196d-b59f-4c82-b1d3-91b95d501156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7af134-b01f-4518-ae8c-c17732e6d75f",
        "cursor": {
          "ref": "64e1602a-0998-4abd-b6c7-b91e33cc2d42",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5dc4d7d6-cb7b-4951-93e7-fbb4337d986f"
        },
        "item": {
          "id": "bc7af134-b01f-4518-ae8c-c17732e6d75f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a2925339-1b3c-4244-b948-81d03231a688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b72b16-0d9b-45b0-8b8d-7a4a9f8bd907",
        "cursor": {
          "ref": "36523d5c-cdd6-48de-aaa5-9c8e8b271907",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a64a1939-23f8-4bf6-a00d-14a40b6fc4a6"
        },
        "item": {
          "id": "89b72b16-0d9b-45b0-8b8d-7a4a9f8bd907",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2971e735-84b0-48ef-8f62-cede4b51eabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31523bf-7dff-4360-abca-2813a1ebf67e",
        "cursor": {
          "ref": "8a272483-a5ce-4df7-9531-ba76ba3daa5e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "64b8ac24-d783-4c4a-a47f-9cb6daea932f"
        },
        "item": {
          "id": "c31523bf-7dff-4360-abca-2813a1ebf67e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e085ac08-f33b-4b4d-bde9-54283817c602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9201bd7-eed4-405c-aa27-77111ef26fcd",
        "cursor": {
          "ref": "80778af3-a398-4c04-9c47-5f56ef5e2c78",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "adc71e71-58be-4e78-9ee9-5d6791b67953"
        },
        "item": {
          "id": "f9201bd7-eed4-405c-aa27-77111ef26fcd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a7cfba8e-5127-4679-9768-39a6183ec09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322e3ed5-69cf-4fa2-a5b1-dab76a94bdf0",
        "cursor": {
          "ref": "613743e4-b778-493a-b663-52eeebaa11e2",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a2a57d58-c3a9-470f-8ab0-196df0a6e522"
        },
        "item": {
          "id": "322e3ed5-69cf-4fa2-a5b1-dab76a94bdf0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f3bb0336-5d81-4769-939e-d566f584a987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a256f0ce-6108-473b-b556-62cca731b982",
        "cursor": {
          "ref": "c5de28a9-9cf1-4bd8-aa92-905268423fda",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "24204ce7-53fb-4c96-81bc-da21845e8bf7"
        },
        "item": {
          "id": "a256f0ce-6108-473b-b556-62cca731b982",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f7acd8bf-c73e-43c4-8f31-ed33f72b4c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df697e4-deba-4cd0-b491-7524e5f04d5f",
        "cursor": {
          "ref": "efcf6bb6-d537-4930-9bbc-920014517a09",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "304e4d1e-1782-49d8-9df6-792365efaab6"
        },
        "item": {
          "id": "8df697e4-deba-4cd0-b491-7524e5f04d5f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a527f67a-5865-42d8-98a9-53d928f233bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dbdc96-db9e-4c12-bcb1-9738a7a6b6e2",
        "cursor": {
          "ref": "5178b215-0214-47d9-9c5f-d705ffe51695",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c2343eeb-0b57-45c9-9c98-6923800e73d0"
        },
        "item": {
          "id": "08dbdc96-db9e-4c12-bcb1-9738a7a6b6e2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9be4ce74-747d-4bbc-8e29-d4fa897d8153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95633ad1-2149-4321-9f47-08ec5a6451e3",
        "cursor": {
          "ref": "1b7e5827-36c3-4cb3-976f-fb49abb443c3",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dbd22172-c757-4a6b-9d4d-3869de2a8488"
        },
        "item": {
          "id": "95633ad1-2149-4321-9f47-08ec5a6451e3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "09eb372d-113c-40dc-aa86-4b1ad6a5777f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31992e59-e7e2-4b48-b558-6bda82211141",
        "cursor": {
          "ref": "d93f6310-17e8-4436-87b2-d6aa516511ea",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98e2ee57-4ce3-403c-b32e-03d4faa997a4"
        },
        "item": {
          "id": "31992e59-e7e2-4b48-b558-6bda82211141",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a05367ca-ffa5-4164-a090-38a7d4a06bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20522978-2626-4e3d-bcc8-1d018bd8d6e4",
        "cursor": {
          "ref": "cf29aba6-ca9d-43c3-b2e1-08e1718362c6",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "484df676-e5ce-4c0e-bbbf-c2a4b50b3bb3"
        },
        "item": {
          "id": "20522978-2626-4e3d-bcc8-1d018bd8d6e4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2b5714f6-8701-4af5-b29e-13d6682f2495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae629637-be12-4d7d-b4ae-cbc790174c74",
        "cursor": {
          "ref": "70be20c0-d157-4268-8e5d-224b24869770",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2bdfbfc0-08f6-47b7-8010-ddb33193c08a"
        },
        "item": {
          "id": "ae629637-be12-4d7d-b4ae-cbc790174c74",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fce3f3e0-d276-49bf-b415-89143e95d950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a166b71-617f-400d-abdd-48998a8155d5",
        "cursor": {
          "ref": "d32ee9c7-b022-43e6-8431-61dc5218d5f6",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5e4116f3-1ddb-4092-828f-f331b92c47ff"
        },
        "item": {
          "id": "2a166b71-617f-400d-abdd-48998a8155d5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f8194274-4d5a-46be-8ebd-ef8bc75cef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a7ba6e-22a6-4984-84dd-239ec9a8a5b6",
        "cursor": {
          "ref": "68a4521e-a419-4bb3-8d15-0cd0f49b69eb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cd40a263-ea94-4484-8582-87c056b37c93"
        },
        "item": {
          "id": "e2a7ba6e-22a6-4984-84dd-239ec9a8a5b6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e211ce84-72dd-4d0c-82d8-2de70b0419bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a81402-3384-4144-9a38-38e95e6d594a",
        "cursor": {
          "ref": "95a71ab0-aafb-49e2-809a-b8db04f30eb2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "11359fd0-ed5f-4435-ae01-35f943537572"
        },
        "item": {
          "id": "a9a81402-3384-4144-9a38-38e95e6d594a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d638130e-1c9e-4599-8a6e-b3f75b084925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755c65a-9b3d-49af-8732-b07a126dd15f",
        "cursor": {
          "ref": "ab28a826-6479-4a41-9500-d0dd8450ea92",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0a3d5259-5b65-4fe9-a5ee-a65d420a3e06"
        },
        "item": {
          "id": "7755c65a-9b3d-49af-8732-b07a126dd15f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "73e37e24-2c71-4dd6-9ce1-d5c624ccdd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1258691a-85bf-4eca-b16d-22171beeaada",
        "cursor": {
          "ref": "ea925068-e556-4a0f-8e8e-1fc9a51cd717",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d64202e2-1e43-4c1c-b565-86040cd031ac"
        },
        "item": {
          "id": "1258691a-85bf-4eca-b16d-22171beeaada",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6bfc48f7-81f3-41ef-8d70-af4dbc2f9345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704a5e47-b32f-4a7a-900b-48b72119aeaa",
        "cursor": {
          "ref": "3fec40b3-c93e-4596-a88c-1be95598b851",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "04b0e202-40dc-4983-bb11-05c5436bfd23"
        },
        "item": {
          "id": "704a5e47-b32f-4a7a-900b-48b72119aeaa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e5cd29d7-d799-45ca-a338-e8dba7744748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b911224-b0ae-4f2a-abf8-10ce629391ac",
        "cursor": {
          "ref": "17b729bf-a119-443b-9823-77fb4f7e3da2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2dc355b2-1c28-4b2d-a6d2-7a1df4a28d34"
        },
        "item": {
          "id": "2b911224-b0ae-4f2a-abf8-10ce629391ac",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ef619648-96c5-418b-b2e7-dfee0ee4aec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222c334b-25a8-4382-b04b-2b92ef0264db",
        "cursor": {
          "ref": "eaa54f7c-a552-4a40-8b75-0303ffb3f06e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "64ccfbcd-4c5a-46b9-ba19-bfdf86006a64"
        },
        "item": {
          "id": "222c334b-25a8-4382-b04b-2b92ef0264db",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c94d4b59-dd73-430c-8b24-04c6defc38f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f354fba3-e001-4b1d-9875-4827679b75d7",
        "cursor": {
          "ref": "6ba0989c-7dba-4807-9a75-2834be70571e",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "209ab8d4-be73-4f38-9978-9e2f21cadc9c"
        },
        "item": {
          "id": "f354fba3-e001-4b1d-9875-4827679b75d7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fcebdf23-8702-4d72-aba8-02bb02c649c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938d013e-29f1-452f-993c-67ef9223ddc4",
        "cursor": {
          "ref": "41d2c94f-a2af-4aa3-be3d-e8db5eac45e5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9ecf55dc-4c6f-45fa-9ff8-9ffe859c7512"
        },
        "item": {
          "id": "938d013e-29f1-452f-993c-67ef9223ddc4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d4de069-3b27-4968-a702-f251289921f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049213b1-b593-482d-8b2f-3135c3b97c39",
        "cursor": {
          "ref": "baf23843-7765-4d3a-914a-8083b9714bb0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a2d9a20b-6ebd-4665-966b-49d46707fa5b"
        },
        "item": {
          "id": "049213b1-b593-482d-8b2f-3135c3b97c39",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "264f6fc9-1a7e-42b7-ae51-6f7fb840c6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e7b5c7-0503-43b1-8183-3dfbf78a99ef",
        "cursor": {
          "ref": "96aced03-6de2-49a0-9430-78a385d06c5e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a9c7d5f4-e9bf-4552-a5ba-8d4be55c4dd9"
        },
        "item": {
          "id": "73e7b5c7-0503-43b1-8183-3dfbf78a99ef",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "91001126-b18e-4784-beee-4df342394109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6b78c0-a2b7-47d2-908d-2026091431cb",
        "cursor": {
          "ref": "52e4a7ff-4b74-4f0c-b94e-30b4040b8203",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "23786ad1-9bab-47c7-9202-76ceadc19aaa"
        },
        "item": {
          "id": "2b6b78c0-a2b7-47d2-908d-2026091431cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4e56cfe9-50db-45ab-9017-e3fa2c883874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa6304b-4431-4784-bc98-5aca2dffc2db",
        "cursor": {
          "ref": "d2008274-c7e2-48c0-9258-6d208c42fee1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "85c1ab93-afd9-46ae-8c9b-de35e77f9b62"
        },
        "item": {
          "id": "cfa6304b-4431-4784-bc98-5aca2dffc2db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "34a98eb7-3a33-42d6-98f3-81c8a6820d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da38cb27-9b35-4b3e-a05e-6ac32c9eb9d3",
        "cursor": {
          "ref": "7a1f0256-f6fb-47e9-894a-3d62237fee0f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "84f14327-6836-42c8-a11a-5bb4b4aafea6"
        },
        "item": {
          "id": "da38cb27-9b35-4b3e-a05e-6ac32c9eb9d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1bbe2a24-f914-4815-9b02-207c3c652b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c29ab8-dac1-435c-80d2-dd85e5295e48",
        "cursor": {
          "ref": "ec9f88d7-d373-4179-bc6c-934bc25ab748",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "27959f77-4ac0-4428-99c6-14e0442066c2"
        },
        "item": {
          "id": "c5c29ab8-dac1-435c-80d2-dd85e5295e48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "296de704-03b3-4906-9116-afe862e06ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6363577b-f464-4239-828c-55f18c6981a7",
        "cursor": {
          "ref": "222feefc-ea5e-42ae-87e3-ddaeef04007f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "98ef9962-42ba-4e6c-9a7c-7ca3757290a1"
        },
        "item": {
          "id": "6363577b-f464-4239-828c-55f18c6981a7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e4d61a3b-48bc-4039-bb05-5a154775864e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3229db8-25e7-46b3-9467-2da234e4eac2",
        "cursor": {
          "ref": "39dcd44e-99d3-4a48-891a-d69b156096ad",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f880f97e-9cae-4e55-824c-e1bf1351a586"
        },
        "item": {
          "id": "a3229db8-25e7-46b3-9467-2da234e4eac2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ca5683ae-7cf7-4537-a6e2-c4d22aab80e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b9edc0-d42f-4021-b8d7-4c149d27c584",
        "cursor": {
          "ref": "82248667-4121-4b38-ae34-f06d9e71759c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fe093f95-d394-437d-8d8a-47bb0056cb88"
        },
        "item": {
          "id": "02b9edc0-d42f-4021-b8d7-4c149d27c584",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9770fc6d-1b1b-4bed-8034-1ccbb00f0f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66299345-6ee3-4e9b-85c3-35055579d810",
        "cursor": {
          "ref": "97863e9a-a02b-41b4-bdcb-6e79685493fd",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f0efdef7-9a3c-4182-a0f3-4bf6349adf6f"
        },
        "item": {
          "id": "66299345-6ee3-4e9b-85c3-35055579d810",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ae222b6c-7328-4127-aaa4-4f4d170bcd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b823c6ce-c971-4fc3-8a90-9faef96c1dff",
        "cursor": {
          "ref": "d36357c3-32e0-4d01-a117-a17080e59d74",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e6f9366b-28f6-4db6-9391-b9008d246f79"
        },
        "item": {
          "id": "b823c6ce-c971-4fc3-8a90-9faef96c1dff",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dd9f9719-8dd9-4dc6-bb97-3149059809b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f5cdba-dc71-45eb-9eb1-c18f99b05941",
        "cursor": {
          "ref": "84f1b748-2b1e-4b9e-8ef1-3e5ba5059c41",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3ba3dd1e-6b6d-473a-8d1f-50e7b25a9661"
        },
        "item": {
          "id": "c2f5cdba-dc71-45eb-9eb1-c18f99b05941",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c69898f8-2ad7-4074-bc7d-ef559f71c387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e78ed0-4bba-4053-a5f9-e8824b222524",
        "cursor": {
          "ref": "0e109de7-c24a-41cf-98da-eee185fffa8f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "09e7a61f-cd6c-4b9a-b828-8a40a9f16867"
        },
        "item": {
          "id": "33e78ed0-4bba-4053-a5f9-e8824b222524",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "22746cc9-44b7-4ec4-a549-b430270d7cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba74c3c-5d86-4bfb-9163-db8bc0acd1de",
        "cursor": {
          "ref": "2e76ee9c-1fe9-4873-a219-9f8ad38bac9b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b9fe0c86-2189-4f97-87e4-85c0cf9503a1"
        },
        "item": {
          "id": "2ba74c3c-5d86-4bfb-9163-db8bc0acd1de",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c7e0f074-3687-4731-bfec-e7cac3372bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee672974-6959-4533-8a49-f0879a69d5ba",
        "cursor": {
          "ref": "441d20c6-bb4c-43b3-b18c-872145df17ba",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8e704cf3-d794-459f-abf4-a37b1e551bfd"
        },
        "item": {
          "id": "ee672974-6959-4533-8a49-f0879a69d5ba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "82b10c22-d117-45ca-8ea6-b9cfa1d417a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f934b5e-9d9e-44bd-8cb4-c9c8540493db",
        "cursor": {
          "ref": "abd45db3-ff4f-4497-beb7-e2b8f5fe1c02",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "45b19da9-f31d-4536-9138-b740be56badb"
        },
        "item": {
          "id": "7f934b5e-9d9e-44bd-8cb4-c9c8540493db",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "acaf7577-1df9-4398-b1a0-47a65aa8a98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a838749e-8a82-4b5f-bf7d-c72a33beca0d",
        "cursor": {
          "ref": "c5d77c0d-f462-400c-80c3-950d6c6f8bad",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3121970c-88f2-4619-a0ff-d0be6e92e7e7"
        },
        "item": {
          "id": "a838749e-8a82-4b5f-bf7d-c72a33beca0d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0b39450d-24f1-4272-9dc0-bff698681d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17fceb6-9873-4794-aaca-3e155e783dfa",
        "cursor": {
          "ref": "6aa5b81d-1507-4386-9d6b-8f76447be83e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6a051710-fe30-47ec-96e4-08b0b0b8f16c"
        },
        "item": {
          "id": "c17fceb6-9873-4794-aaca-3e155e783dfa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "80cfce58-6905-4cab-9968-8eda26756185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027b559e-5829-4d8c-bdc0-bc14bd491326",
        "cursor": {
          "ref": "be8fa154-199d-448b-9792-95096af01eda",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a94bacd3-8e77-475e-a8ff-0d98780ded96"
        },
        "item": {
          "id": "027b559e-5829-4d8c-bdc0-bc14bd491326",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4a8822cc-6ec2-4b69-b8f8-d5b50ab847e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268c4763-34bb-4d55-bf79-b7d5fad86db6",
        "cursor": {
          "ref": "9e7c7235-d4d0-4747-a5b0-ac04aa3f4124",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7033d0a9-d5dd-42ea-b0c1-6f04876f9f3f"
        },
        "item": {
          "id": "268c4763-34bb-4d55-bf79-b7d5fad86db6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2708423f-0252-4a04-bfc0-9c88615488b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10233a02-2364-4b13-b335-879efeb478a3",
        "cursor": {
          "ref": "56dd9e42-0c22-4df1-9392-0971ac79c72a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ae8d45f3-7b87-44fb-8683-779a5bbc267b"
        },
        "item": {
          "id": "10233a02-2364-4b13-b335-879efeb478a3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a7f2e325-823d-4362-9d0f-3adfb1b006d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31628806-2692-47f0-ab4b-e9f7b0f7f001",
        "cursor": {
          "ref": "dbb7d6b5-d251-4d62-a1ac-804238d08da1",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c08ab22d-83f0-4efb-9a2a-beb66960870c"
        },
        "item": {
          "id": "31628806-2692-47f0-ab4b-e9f7b0f7f001",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e506431e-72f6-4564-b358-053200017608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fe836c-50a2-402d-9961-0d48358c2cbf",
        "cursor": {
          "ref": "2feb438a-fbb5-4f01-8956-909aef767745",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f8c31d95-0b97-4fd6-b816-e034695d7223"
        },
        "item": {
          "id": "c1fe836c-50a2-402d-9961-0d48358c2cbf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2371e389-463a-428d-949f-8da85ecd1dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7565a3-ec3b-42b4-93a5-a0a877d87cda",
        "cursor": {
          "ref": "e9ea1585-658c-41d7-8535-db837c565ad3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f2ce26b4-bcf7-46ec-9a61-cdfa9b50ba67"
        },
        "item": {
          "id": "9b7565a3-ec3b-42b4-93a5-a0a877d87cda",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9e64a07c-1ff9-450c-bc9c-9c94375628a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20994065-8406-45d6-aa07-718edb7bc911",
        "cursor": {
          "ref": "bb2789af-0bd7-42dd-aad5-373477c35722",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "af1b56cb-03ac-4467-90ab-86bd46190b03"
        },
        "item": {
          "id": "20994065-8406-45d6-aa07-718edb7bc911",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a41fc2ff-587b-4dad-a96b-a2d8b84e27c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34a9418-239e-4a9a-a9c8-2fb4ce3c2098",
        "cursor": {
          "ref": "4e72303f-6f36-4fcd-9bf5-0b54989d7517",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3f995c60-5229-4cb9-94fe-10f39ecf8b44"
        },
        "item": {
          "id": "c34a9418-239e-4a9a-a9c8-2fb4ce3c2098",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "523213b2-cb78-43ab-9d2a-317ece1f8675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e3a0a8-0055-43c0-8bb0-db0df42752b3",
        "cursor": {
          "ref": "b69085af-e044-49f8-a585-8cea6bbb47b8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "177a2d8a-662f-4c83-957e-12b12f16d82c"
        },
        "item": {
          "id": "a1e3a0a8-0055-43c0-8bb0-db0df42752b3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2e08f25b-24ca-44a4-ab04-8f8823f8fd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a900f0d4-8b8d-431e-b44d-189549a0e140",
        "cursor": {
          "ref": "dcd552c1-8225-4160-950f-836267807eac",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "49d2f06a-9505-4c08-a886-dbc4d9b7e79c"
        },
        "item": {
          "id": "a900f0d4-8b8d-431e-b44d-189549a0e140",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3463acb5-94c0-418c-8f47-985424b3ba26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bc5646-fba1-46ec-a332-32b8e8d69bd5",
        "cursor": {
          "ref": "60a8d589-5792-41cb-8f42-ba307b86577e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9a353651-7b5d-4630-82fd-e96ee232b660"
        },
        "item": {
          "id": "b2bc5646-fba1-46ec-a332-32b8e8d69bd5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0d27d9d0-ff0d-4707-ad90-ffd0881c35b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d343fc-2473-4152-86b0-47343ae9a9dc",
        "cursor": {
          "ref": "e8055a8d-b34a-4ff7-9de6-36267b5fe363",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a223fe1f-33ca-4c27-beb4-d5d15555d033"
        },
        "item": {
          "id": "25d343fc-2473-4152-86b0-47343ae9a9dc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a66a99cf-0d86-42eb-87e4-2b90faa53bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f96a21e-9ef2-4947-9af3-15ce08c31383",
        "cursor": {
          "ref": "5ef371c1-cab6-4d63-ab52-98bfa776b290",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ff7ef98a-54da-442a-a0be-afcb8382d4bd"
        },
        "item": {
          "id": "2f96a21e-9ef2-4947-9af3-15ce08c31383",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a5b6bea8-2f91-449e-a47d-4293a92cc32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e87ec86-e263-45a7-8e7d-a5219d5fa4a8",
        "cursor": {
          "ref": "bdeb26b9-5305-4413-82b2-b10c7eeed1a1",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "782c62d2-9d92-4e89-bac0-82da7990e91d"
        },
        "item": {
          "id": "3e87ec86-e263-45a7-8e7d-a5219d5fa4a8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "11ed881e-185a-4137-bbed-368b92e43fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf0555a-541d-4c41-95ab-c70408199d31",
        "cursor": {
          "ref": "e5117705-850a-4596-86cd-5a69b2802fbe",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d4218195-af39-4389-a853-47a646a8e361"
        },
        "item": {
          "id": "2bf0555a-541d-4c41-95ab-c70408199d31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "98aa459b-fd2c-450a-a967-9bcce6ea6d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa6842b-84b9-4025-81f0-a2451327cfbd",
        "cursor": {
          "ref": "cc8c6380-e68f-472c-8f43-b0683341dd8a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d2c5c977-04c7-4326-980e-cf87c2a04885"
        },
        "item": {
          "id": "8aa6842b-84b9-4025-81f0-a2451327cfbd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7f2214ab-ac1b-4ef2-84b2-56128400a439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b07bd23-1f03-49a5-90e7-41e9a18cf8b4",
        "cursor": {
          "ref": "74702494-96d2-48d1-90d0-df888065c60f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dca80049-b866-478e-b768-199e15d4f575"
        },
        "item": {
          "id": "0b07bd23-1f03-49a5-90e7-41e9a18cf8b4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e9263bb6-7bf9-4950-84a8-359769713299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cabc9d0-7434-4214-935c-21497da83fc4",
        "cursor": {
          "ref": "7890e961-4e79-41b2-bc8c-ebcc7b2e2872",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e1da9588-d676-4c53-9dde-e26ee6a3d44e"
        },
        "item": {
          "id": "0cabc9d0-7434-4214-935c-21497da83fc4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "06672b07-c03c-4b13-8738-370207fd9ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce1399b-9815-49ac-8d45-1951ab8484c1",
        "cursor": {
          "ref": "65f57f8f-7e55-4483-b726-2808b9d68402",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "370c12a8-c202-4d70-ae51-bcf72012f8a6"
        },
        "item": {
          "id": "7ce1399b-9815-49ac-8d45-1951ab8484c1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "80892368-f3ad-4b1f-9994-8bcd4fa4d8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8686a4-7784-45b9-94b8-3280d5bc4124",
        "cursor": {
          "ref": "1f4ece95-6e01-4539-abab-96009a1a663a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d9adad52-58be-423d-aad5-13acc4b8c1f6"
        },
        "item": {
          "id": "ee8686a4-7784-45b9-94b8-3280d5bc4124",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "960b1f62-80bf-468e-8702-8e11968b6d2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fc96ef-bf15-4eb0-91d2-b3fdb5d12bca",
        "cursor": {
          "ref": "62f54a97-cef4-441e-8ed5-099529d44e36",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "836242a0-2584-4b68-95cf-c7686fc3d959"
        },
        "item": {
          "id": "13fc96ef-bf15-4eb0-91d2-b3fdb5d12bca",
          "name": "credentials_issue"
        },
        "response": {
          "id": "02a22365-2c71-4db9-9f78-15cc26e60aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "138b5b16-f1fb-480f-a766-1cb8ec7e42f9",
        "cursor": {
          "ref": "10570574-0ec1-4a30-bb1b-2999fe4f2e77",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "de394859-3b44-495b-8988-7d239a5645f1"
        },
        "item": {
          "id": "138b5b16-f1fb-480f-a766-1cb8ec7e42f9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9abcd2eb-083b-45b2-b99e-e3c373e8ce91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "94b55aa9-a9d0-4d22-a299-175f80e964ab",
        "cursor": {
          "ref": "2d490697-b837-43db-a27f-a24aa189ad29",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1a7c2530-ba9e-4c27-a48e-536e12f51e99"
        },
        "item": {
          "id": "94b55aa9-a9d0-4d22-a299-175f80e964ab",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c4a5741e-5c20-48e2-a4f9-f672ede8c72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e2605663-21a5-41bc-be0f-23cea43fb2d2",
        "cursor": {
          "ref": "5fcd7a93-b567-42c0-ab0f-a4a3738239b7",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3857e988-8521-4866-965f-330d3bf001bc"
        },
        "item": {
          "id": "e2605663-21a5-41bc-be0f-23cea43fb2d2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5ddfc046-6d6b-44f3-8235-a0dd3a590bf9",
          "status": "Created",
          "code": 201,
          "responseTime": 4660,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "297707ab-6945-4341-a9b0-a428441af8f5",
        "cursor": {
          "ref": "d5547e53-22db-4d55-b47e-cdb1624cf419",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9f1c71e1-0b21-449d-8dad-ed67f90d2d81"
        },
        "item": {
          "id": "297707ab-6945-4341-a9b0-a428441af8f5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "71b62014-d40e-438b-bee7-e004ba3b8153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1051,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c518cc55-a440-4553-893d-f9f6a23c05a1",
        "cursor": {
          "ref": "73f915b7-9ae4-4415-b253-1f7aa0e759d5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "30b98879-c84d-4970-b3f4-9235165c48e4"
        },
        "item": {
          "id": "c518cc55-a440-4553-893d-f9f6a23c05a1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9d85883a-bfca-40c4-b12c-5baf8a32d7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "2600afaa-2c16-4968-b0fe-0e8b92424f3b",
        "cursor": {
          "ref": "4e5350f8-fee1-40dc-9005-689a998df9db",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c6558802-ab13-4b4b-a583-04ee861e62c4"
        },
        "item": {
          "id": "2600afaa-2c16-4968-b0fe-0e8b92424f3b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f24744fc-aad5-4ad1-b19c-614d1ef65301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8e611b-5afa-4c2a-916b-b3513c00f2ee",
        "cursor": {
          "ref": "3144cc4c-cea3-4337-86f4-5e3bd421ab77",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "abad7cb6-3258-4de2-a21e-83886a34cc46"
        },
        "item": {
          "id": "aa8e611b-5afa-4c2a-916b-b3513c00f2ee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ee523df6-9597-4fcc-92c9-c14b3e9d35b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a7f5b4-a7e3-4af1-9af2-560d66a19abf",
        "cursor": {
          "ref": "281f1134-4358-4abb-9cea-dd27d9bcfc79",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f6e94015-c43e-474b-8cfe-7eade5a8f5fb"
        },
        "item": {
          "id": "82a7f5b4-a7e3-4af1-9af2-560d66a19abf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "72791cf8-7d52-4d71-a385-d418fa0f0b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9836d8-bcb2-45b1-9331-a845c7dcce88",
        "cursor": {
          "ref": "4469aa5d-54ed-4399-8cd4-93b73a592149",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f445045-45e6-4847-9ff7-46b0a4d112cd"
        },
        "item": {
          "id": "0c9836d8-bcb2-45b1-9331-a845c7dcce88",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3079a8b7-5cbc-4f5f-b94e-e83a9758ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3892a124-a583-4fbf-87b1-7bea504de015",
        "cursor": {
          "ref": "32c4e249-2583-468e-ad05-0c4aebac121a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4eff499d-91ba-4c7c-8bdd-c97dfe896e28"
        },
        "item": {
          "id": "3892a124-a583-4fbf-87b1-7bea504de015",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "93907e52-b3e4-46c0-a44a-528e58acaa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771c58f2-a494-4ea3-8521-ca2fbc50b394",
        "cursor": {
          "ref": "6e4b0bb3-2703-41b7-8d0f-4153986b8238",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "df79607c-059d-4ad1-b07b-4ea7d7e78466"
        },
        "item": {
          "id": "771c58f2-a494-4ea3-8521-ca2fbc50b394",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3df720a2-f9a3-491a-ae4c-8d713129820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92aa19a-e289-437a-98ef-faa3609375ce",
        "cursor": {
          "ref": "bcc11149-8979-49f2-91bb-69c7c7644e21",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5c3c34d3-a364-40c9-86b0-04b4c260e1a3"
        },
        "item": {
          "id": "e92aa19a-e289-437a-98ef-faa3609375ce",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "35ef73ca-cdf6-4cda-9cf4-76a1e004fcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a31248-b35d-4935-bcb7-e2e3b29c8a16",
        "cursor": {
          "ref": "94a75cb5-7d6d-40ac-bd83-e3db64033e6c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "744f39cf-5326-438e-b335-fef1b159a026"
        },
        "item": {
          "id": "88a31248-b35d-4935-bcb7-e2e3b29c8a16",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c1dfb0ca-1382-4416-bbd7-8ada06ac1c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa6cae1-159c-4634-b3dd-bd1d15912a23",
        "cursor": {
          "ref": "da8c2245-fd7b-45ea-9df0-b147ae689f46",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cfe2d550-1d1b-437d-aee0-2c1411fda105"
        },
        "item": {
          "id": "3fa6cae1-159c-4634-b3dd-bd1d15912a23",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ed0e603-c572-4ce8-8a9c-ca013ce515ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5c9f5b-91ad-4891-8e7f-f812413b8037",
        "cursor": {
          "ref": "e339dbee-2db0-4136-81ea-5d6b57dd17b8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2c76e90b-adaa-4b00-8870-d65bedd63670"
        },
        "item": {
          "id": "4b5c9f5b-91ad-4891-8e7f-f812413b8037",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3d87e7ab-91c4-4d01-ac9c-de4cf1075d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85442a2b-16b9-4531-b287-f37dd9d8c2a9",
        "cursor": {
          "ref": "c6803fc7-82ab-4af3-9e78-3458019e8a35",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f0fa8770-2474-4e66-a6dd-f2d695abf68a"
        },
        "item": {
          "id": "85442a2b-16b9-4531-b287-f37dd9d8c2a9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cee73586-c367-4cf8-8aab-b6a412004c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67abdaac-a366-4a33-9745-d76737201f23",
        "cursor": {
          "ref": "26024136-fa0e-4dbf-9dd2-0ca1c27fe0b5",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f81bc386-867e-4f42-a352-73b1abcc2523"
        },
        "item": {
          "id": "67abdaac-a366-4a33-9745-d76737201f23",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a7e1fc8b-4e60-45e2-baa1-d403515c5ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f759680-a7b0-495b-a815-0dafc0b1f603",
        "cursor": {
          "ref": "79c6e91c-a010-4a4c-9f82-8c38b7655b5f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "453a0302-83bd-45f6-ae74-312ed9263e89"
        },
        "item": {
          "id": "8f759680-a7b0-495b-a815-0dafc0b1f603",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0a9f6fe5-4c02-4399-ba07-3e4031995f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad9f50b-21bd-4c11-882f-e0372919618c",
        "cursor": {
          "ref": "c18a0ed1-4359-4273-969f-da39b1bbb846",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fbf1a702-9456-4e7e-8dc1-d1281b000539"
        },
        "item": {
          "id": "1ad9f50b-21bd-4c11-882f-e0372919618c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "70596b5a-e080-4597-b718-028f5519e149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8adb9c4-73de-45c3-afaf-869ce214c23a",
        "cursor": {
          "ref": "dad8bba9-7d8f-43fd-83f8-32d80e9e8257",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1ec51c69-a882-419c-9c21-ebbf8142bbbd"
        },
        "item": {
          "id": "b8adb9c4-73de-45c3-afaf-869ce214c23a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "62e7bda1-5c5a-4b1b-a3f1-f64b9a6abaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229106ed-dedd-49b7-bc1a-d8f3c72496cc",
        "cursor": {
          "ref": "fffe2f97-1fad-4fb6-b1f2-16791912c18d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b4b6e39b-2f2e-4e74-b599-cb55e1f7cda0"
        },
        "item": {
          "id": "229106ed-dedd-49b7-bc1a-d8f3c72496cc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9a974b46-0c19-4256-9b6b-4788b4d117b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f59508-3818-4808-8e84-c26ce65e2b45",
        "cursor": {
          "ref": "c0f32e68-6f16-4c1c-b33f-a618289f8e2c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "15fb0ce6-eb43-4bbe-9acc-62a23d105ab1"
        },
        "item": {
          "id": "40f59508-3818-4808-8e84-c26ce65e2b45",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "80bf5256-8ef8-4445-9b18-f218bb109812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602ad40b-a5ef-4563-b025-e043fbfcd50a",
        "cursor": {
          "ref": "2c723ef2-4f0a-4055-b8eb-87f12a7f3238",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "498a7283-7e36-4b72-9c4b-7525b39759dc"
        },
        "item": {
          "id": "602ad40b-a5ef-4563-b025-e043fbfcd50a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b0df0d90-16c0-4582-b8ea-c03275770c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd93e4c-6632-4be6-bc00-1120a1622e7b",
        "cursor": {
          "ref": "4c8a470c-c1a9-4631-befb-25699343715c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bdd3a28d-814d-49f1-9a1f-08777ccd4b53"
        },
        "item": {
          "id": "4cd93e4c-6632-4be6-bc00-1120a1622e7b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f5e5f6a5-04be-49f0-8d18-e9c22e0f490a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e114ae0e-317d-46b6-82d6-b9617e2c4604",
        "cursor": {
          "ref": "b45b6062-c7c6-49bb-8916-8c51159d1278",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2baffcbb-1a0c-4deb-bb76-91ad7eddfd10"
        },
        "item": {
          "id": "e114ae0e-317d-46b6-82d6-b9617e2c4604",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "430b630e-9168-426b-94c1-988d58bbd5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd96fd14-91b8-454b-a0af-d5ff45e386ff",
        "cursor": {
          "ref": "c4bf3f57-5c27-43a7-9cc8-eee04b92633c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c9a412b3-130e-471f-a71a-f0e85c69cfa0"
        },
        "item": {
          "id": "dd96fd14-91b8-454b-a0af-d5ff45e386ff",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "be9daf7e-3395-4d38-ad01-94654bde4039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521efc51-290d-4dc8-aacc-4235f5b58c41",
        "cursor": {
          "ref": "b04e69b7-726f-47b9-9bb2-5c5c3899f11b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e06dfaa6-852a-457a-aa8a-8102ba2965d9"
        },
        "item": {
          "id": "521efc51-290d-4dc8-aacc-4235f5b58c41",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cb6e2d31-ca2c-4a6d-8af5-721c26764982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a408840-b63d-475c-ab82-561eb51660fc",
        "cursor": {
          "ref": "daa58414-bd1f-45e3-a447-8380c6964e8c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4b90c206-9c44-4395-b188-eaad7abd3054"
        },
        "item": {
          "id": "2a408840-b63d-475c-ab82-561eb51660fc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3774f5c8-04e2-44e1-b775-9f24e38a21a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f369c2de-9153-4d51-a3b5-92bbac353345",
        "cursor": {
          "ref": "9cf718f8-89cf-419d-a008-07dbcbf640aa",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7a22392e-e0d1-433a-b238-80265a1b22c4"
        },
        "item": {
          "id": "f369c2de-9153-4d51-a3b5-92bbac353345",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "df938e7b-eb98-4301-b884-4cb0e3eaec24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cecb3b6-ecc9-49b7-a5e1-b5329904ce19",
        "cursor": {
          "ref": "87346ce5-b0d4-4bf6-9c08-98ab0d9d26dd",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4bcec8c4-6a71-4839-a9c6-e239ceaba518"
        },
        "item": {
          "id": "8cecb3b6-ecc9-49b7-a5e1-b5329904ce19",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5f823237-e60b-464d-8731-f0f9d9d4743b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f094d148-4ec3-439b-9264-cc730076b4d7",
        "cursor": {
          "ref": "1d9cd6a4-dd23-4c77-b144-5a25f7c9c6d2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9eff68fd-1a6b-4662-9941-5893b4e21e68"
        },
        "item": {
          "id": "f094d148-4ec3-439b-9264-cc730076b4d7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "49e52b89-5513-44bf-a71f-53d1d2ca8c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61c528f-99c0-4df9-949e-074c5f6902d5",
        "cursor": {
          "ref": "b6dbbdd0-9536-41d1-ad78-1bb31eca88d4",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e31f4e13-f420-4dbf-96c4-d28060963eb3"
        },
        "item": {
          "id": "a61c528f-99c0-4df9-949e-074c5f6902d5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9d39a13a-7375-430c-8baa-f4f7a9e0e21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fc2df0-8916-43bb-8c41-ea5ba95ef38b",
        "cursor": {
          "ref": "88ccf951-da7f-4060-a878-5c2a4f7b4123",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1865a5f8-960f-41b6-84e7-b49d4a954be4"
        },
        "item": {
          "id": "d4fc2df0-8916-43bb-8c41-ea5ba95ef38b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72dff1ca-6ce5-4de9-9bac-11d2e95ef434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88581e61-3a73-4466-959a-7da7312e1ac1",
        "cursor": {
          "ref": "0ce442c5-34d2-4df5-a415-7eefe709c1c2",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "059e86cb-8927-4e85-9c51-898165aea24f"
        },
        "item": {
          "id": "88581e61-3a73-4466-959a-7da7312e1ac1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "efc16a2b-2698-42e0-8f39-7efbbc8dc449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1188672e-050a-49f5-9e6f-37dea318c318",
        "cursor": {
          "ref": "387a653c-70e4-490d-bf4a-3481aba43f39",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "376f8ff3-bb72-45ad-b03a-61c006308d5e"
        },
        "item": {
          "id": "1188672e-050a-49f5-9e6f-37dea318c318",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b6880655-0804-4465-9e9b-833309eb677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc70fccc-731c-4212-8225-e812c60081e5",
        "cursor": {
          "ref": "876c6964-3538-4396-b8f3-83a0c07c0f72",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0d43ca2a-9dfa-4144-98d6-f1c84acd39e4"
        },
        "item": {
          "id": "fc70fccc-731c-4212-8225-e812c60081e5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b44b1119-4d52-4c18-b139-c3ab91c6253e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13c673a-cf9a-4dbb-88f0-5695bcfdedc4",
        "cursor": {
          "ref": "055c0b62-6c5a-464a-a803-efcfdae76e59",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "08597948-0224-4caf-a62a-f65f0c2b7ed3"
        },
        "item": {
          "id": "e13c673a-cf9a-4dbb-88f0-5695bcfdedc4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2e4cd1dd-b0ce-4c51-9841-f2622158f5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75115d65-6a5f-429d-9242-e48864b81f76",
        "cursor": {
          "ref": "b463d335-47ea-4d6a-97b7-bb1cc314dae8",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6b9d60dc-f781-4d17-a7d6-9fc38869fee5"
        },
        "item": {
          "id": "75115d65-6a5f-429d-9242-e48864b81f76",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "29aeeef2-b289-4878-8f2e-b0caa70dee3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d1e188-6cfd-41ae-86bc-d135fcc23754",
        "cursor": {
          "ref": "6f234cd9-3a7a-4a43-bfc7-51a2127a4026",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8a941f1a-e7b0-4466-a076-870ee26af11b"
        },
        "item": {
          "id": "d7d1e188-6cfd-41ae-86bc-d135fcc23754",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8c681961-fc25-4d8a-a4d1-effa7741fdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d45a9e7-7e5d-44bc-ae9c-13b9871069ce",
        "cursor": {
          "ref": "bc24c3bc-6e62-4332-95c4-5f122fc366e2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7358ed45-7a3e-49a5-94e9-50005ce2c044"
        },
        "item": {
          "id": "5d45a9e7-7e5d-44bc-ae9c-13b9871069ce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4d87aa74-cbc2-445e-8479-f2e176e76144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b666756-4bf9-4c15-860a-ccb792363bec",
        "cursor": {
          "ref": "282365bc-97ba-4ddc-ac6d-c20736cc3b83",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "792c2e27-248d-4b1a-9db2-9b710475aaa9"
        },
        "item": {
          "id": "4b666756-4bf9-4c15-860a-ccb792363bec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c878870-bb87-4219-8e98-ad5a73e4bfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1495276-4316-4f16-84c5-ec2c865b5cd9",
        "cursor": {
          "ref": "5f6921b0-1973-4a5e-b32d-44d59c1918d6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0735daf4-156a-4b72-bfa1-6176a9809ea0"
        },
        "item": {
          "id": "f1495276-4316-4f16-84c5-ec2c865b5cd9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b06e11de-68d3-4f4e-b9d0-512ab9975c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf8a296-e4d1-46d9-bbc7-25b8ca3fcd86",
        "cursor": {
          "ref": "f5451bdb-3dba-4985-81e8-ed5a84573ba5",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3732c449-d141-4b26-8381-047a62a32eaf"
        },
        "item": {
          "id": "daf8a296-e4d1-46d9-bbc7-25b8ca3fcd86",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "461b4194-bc19-46ac-9e72-143f299e1e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e294bca0-b885-4857-b224-b173fd08e868",
        "cursor": {
          "ref": "7a2410ce-d4a2-4dbf-a0fe-1dd602245c0a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "30961be5-b738-46a1-85c9-e2fc0b4b18e6"
        },
        "item": {
          "id": "e294bca0-b885-4857-b224-b173fd08e868",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a1d5bb6b-457e-4b90-878d-b3cfa6c99fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b39d2b-7b4c-40ef-907b-0bbbb8bb296c",
        "cursor": {
          "ref": "5fda6694-3e00-43b7-af4e-95242e5d9922",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e7ad1237-1f24-4b83-868c-13652e6dcb5d"
        },
        "item": {
          "id": "34b39d2b-7b4c-40ef-907b-0bbbb8bb296c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a4db2fd3-cdee-4723-b583-41c61df3bc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f82f76-1a0c-4e2b-8c19-4dd84475afa8",
        "cursor": {
          "ref": "0125ddc6-2c2f-43a2-a85c-f4fb1ab26b33",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "76d06c33-1550-4b51-b62a-4d7ed54b75d2"
        },
        "item": {
          "id": "a9f82f76-1a0c-4e2b-8c19-4dd84475afa8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "178201fe-21a1-4817-8aaa-12861f21791f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02eb3d9-5309-47ef-bdad-dc65d336acc6",
        "cursor": {
          "ref": "156e2bce-e306-4417-b518-f412d7c6f6b0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bb554d25-7ff1-426d-a753-ceab613386b5"
        },
        "item": {
          "id": "e02eb3d9-5309-47ef-bdad-dc65d336acc6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ef3125c-26d5-4a50-8f04-c5950d6d3541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e65e27-7d88-4d2e-b7f2-242fcb17bc81",
        "cursor": {
          "ref": "1846a381-ba31-4b68-9270-333fd5ea1507",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cca4bff1-67d1-4d00-b591-5b2cda51cb58"
        },
        "item": {
          "id": "a0e65e27-7d88-4d2e-b7f2-242fcb17bc81",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "19996e10-be53-4206-9914-ac9b9f17efb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f553370d-e7b6-4dee-92b2-a8e70ed14c98",
        "cursor": {
          "ref": "6a7c0851-cce3-4d43-9518-907264911a9f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fef6635f-526e-4392-9e56-f2287e23f1b1"
        },
        "item": {
          "id": "f553370d-e7b6-4dee-92b2-a8e70ed14c98",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "127976a0-8d93-4d89-9f44-efa2d4598a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bed49c-4bd6-4dbb-8b22-3bd342cd13ea",
        "cursor": {
          "ref": "3fccd4c5-a4f8-4162-adde-3f292ab010c9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "98b1b5ae-66ba-49bd-9e2f-579320d20ec5"
        },
        "item": {
          "id": "16bed49c-4bd6-4dbb-8b22-3bd342cd13ea",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6df4646d-1652-418a-b390-acb8cb8bd69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746cc76b-f332-49ac-b4a8-4d1c060d3177",
        "cursor": {
          "ref": "c9ce8011-5035-4de6-9518-8dfc6a9c5c60",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "26a2ef3b-297b-4a95-8ba0-0abdee6c8d16"
        },
        "item": {
          "id": "746cc76b-f332-49ac-b4a8-4d1c060d3177",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40f2bab2-e7be-48f5-9e80-9f804862f941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c57966-1713-4c1b-9bb0-ad76555ff7d7",
        "cursor": {
          "ref": "11a36123-9826-47f4-b26b-87f26368fe7b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e8b40880-c3c9-4d0f-ae37-81b50382b77d"
        },
        "item": {
          "id": "f4c57966-1713-4c1b-9bb0-ad76555ff7d7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bf519139-7893-4a36-a108-cccb742fc8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3043e449-e1fd-4f54-a516-4d6b54f2e575",
        "cursor": {
          "ref": "c2860047-35c2-499e-baf2-5c18522ace24",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "739c458e-e56e-4fed-9d70-44633d397a7e"
        },
        "item": {
          "id": "3043e449-e1fd-4f54-a516-4d6b54f2e575",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4d53cc4c-d5da-477d-a55a-6afeaecb06fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2753492-4355-4b5e-9c47-c5065a5618c2",
        "cursor": {
          "ref": "882158be-f94f-4e4c-b39f-c91a27ae57db",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "978ee561-c73f-4f28-aea6-cf66ec7f660e"
        },
        "item": {
          "id": "c2753492-4355-4b5e-9c47-c5065a5618c2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "56c5d889-2abe-4b59-8c7e-a72da913350d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b63c204-740e-441f-bf01-b720bfbe1d76",
        "cursor": {
          "ref": "e3ba7854-d63d-4f8c-bb0c-077b0af75d64",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a145b21d-e46f-4274-b4af-9de86bb8bd09"
        },
        "item": {
          "id": "5b63c204-740e-441f-bf01-b720bfbe1d76",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "857b421a-1e34-4b87-83ef-b2167d891657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c4fc05-ccb0-41c9-ba71-3cc4172a135d",
        "cursor": {
          "ref": "694bcddb-f21f-4b75-bc94-a012f4c772e8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d01eb5f0-1f48-4fb1-86ba-4b82d87a6f8f"
        },
        "item": {
          "id": "f8c4fc05-ccb0-41c9-ba71-3cc4172a135d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80a3ddb7-3a77-4e28-b0d4-48ac0e7284a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f69da0-10b1-41dd-92d6-269e068d501f",
        "cursor": {
          "ref": "77c71d2c-f357-4bd2-bace-9a6410e12f20",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "043f3146-8453-44c8-9e53-a8981bea9ca9"
        },
        "item": {
          "id": "c2f69da0-10b1-41dd-92d6-269e068d501f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "999ab3e8-a9bc-4b2f-bdd2-b6bc4810ebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db80cb07-56de-4a7b-bb7a-cd410ee9f460",
        "cursor": {
          "ref": "3ac06371-1440-40ac-a9fd-d0d9fb0489e1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e4058ea1-722e-4f1c-a923-9c5616b5c236"
        },
        "item": {
          "id": "db80cb07-56de-4a7b-bb7a-cd410ee9f460",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b76706cd-57ea-48eb-a193-2e0f751539e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7897f29a-9053-473e-b275-b484c23c096a",
        "cursor": {
          "ref": "df532b17-61c1-47f1-b17c-5f1b431d6091",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eec7c11a-942e-44c2-a8c4-6b2e1c48d043"
        },
        "item": {
          "id": "7897f29a-9053-473e-b275-b484c23c096a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "657acd8a-79ed-4a14-98c0-34ff6c3d9907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84da851a-2286-4c32-894e-73a976e6dffb",
        "cursor": {
          "ref": "13aa2c21-0ccb-4595-9539-ab8bdb843ca8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ffc22143-a8ef-4e23-91d9-fdc662f0c490"
        },
        "item": {
          "id": "84da851a-2286-4c32-894e-73a976e6dffb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6ba2f0da-191f-4532-a21f-9eaac4c5edd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4467e0-b315-482f-a6b5-de5438aec8c7",
        "cursor": {
          "ref": "cbe0828e-4846-4ee4-84d5-cb599e0d65e7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "da38bb75-becd-4486-af3a-05d3491a3a1a"
        },
        "item": {
          "id": "4a4467e0-b315-482f-a6b5-de5438aec8c7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2de6f548-fd39-4747-b224-088fc0d1c38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb8abae-1528-4df9-ba4f-85ce2960474d",
        "cursor": {
          "ref": "bdec8647-b859-4a67-bba8-6495ef107aa0",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e860b87a-0370-407a-8372-f2957c89842e"
        },
        "item": {
          "id": "9fb8abae-1528-4df9-ba4f-85ce2960474d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "59711dbf-fda6-4242-af02-efd19052d43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5c6e68-48bd-4ba7-b88a-3d4b8262b1f6",
        "cursor": {
          "ref": "7d105dbd-b420-481f-9c0e-9ee85b9b4064",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d048e8f1-dcc1-4b5a-8040-12fb38add0cc"
        },
        "item": {
          "id": "db5c6e68-48bd-4ba7-b88a-3d4b8262b1f6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ea119294-0350-4244-a359-51f8ca48c4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eeed5f-8e29-4e2c-9f2e-f9d615295513",
        "cursor": {
          "ref": "a2307600-c73a-470a-9922-3f0cbe91ce54",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "91c51f97-62be-4209-b098-123dc327c66d"
        },
        "item": {
          "id": "59eeed5f-8e29-4e2c-9f2e-f9d615295513",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "92d5a875-b35c-468c-9dbb-71a228b77ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20efaed7-7306-47a7-8dde-b554cdbf53b7",
        "cursor": {
          "ref": "49a4b237-10bb-4087-8ec2-7205952e219b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ef2f538a-ba40-43de-9b35-2ffdc36b7956"
        },
        "item": {
          "id": "20efaed7-7306-47a7-8dde-b554cdbf53b7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c9fc6472-6d17-4902-9da0-a9089d45eda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ccd43c-cf48-4d54-9854-fcec9da7c0ca",
        "cursor": {
          "ref": "56cbdead-8758-45f6-9ea9-1d6e6c275dda",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "01dd9f34-1e4d-442c-8cc1-b68b5ea0a618"
        },
        "item": {
          "id": "81ccd43c-cf48-4d54-9854-fcec9da7c0ca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6b417282-9e62-41e3-8c8b-268a741cd89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dda478d-88d1-45f9-a7e9-f90eecc9f5d1",
        "cursor": {
          "ref": "42e30d5e-fd3a-4436-bf25-f9707e69b418",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "df0366d5-b4f2-4b13-afca-6bf4517bacbf"
        },
        "item": {
          "id": "2dda478d-88d1-45f9-a7e9-f90eecc9f5d1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1d4c23b8-174b-4cb5-899e-cae852317594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4ad85e-da81-45fd-8821-c8eef864e5cb",
        "cursor": {
          "ref": "35f8e5c3-33a4-4caf-9c8e-569a5f3ab66a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "15d42319-159a-4c42-9d3c-fc88a85593c0"
        },
        "item": {
          "id": "6f4ad85e-da81-45fd-8821-c8eef864e5cb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7347714-4a5d-4195-ae57-20264dc124bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d693eb-0b4e-4b84-99c5-1222ed1f369f",
        "cursor": {
          "ref": "7b05fed8-e20f-49f7-87f5-624104d6848a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "999a4d03-7b8a-4bcb-9e74-43a9a9df401c"
        },
        "item": {
          "id": "d7d693eb-0b4e-4b84-99c5-1222ed1f369f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "599ebd5b-b771-448c-bd15-e05491612384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd4ab6c-4f09-4a47-91c0-0698dc9cbc84",
        "cursor": {
          "ref": "f601b7c7-2ea4-459b-81f1-28e1ac084953",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "68698fc6-d13b-4275-9d68-02bd582ab011"
        },
        "item": {
          "id": "4dd4ab6c-4f09-4a47-91c0-0698dc9cbc84",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "be81933a-4511-4f7f-9fa0-4695e93eb3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73f3bd7-bb92-4570-b11e-8de4a2b80929",
        "cursor": {
          "ref": "61955087-fdb9-4a50-90b6-3c4ae06a7c7d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d5248213-09b6-4fff-928c-03e111f5a06c"
        },
        "item": {
          "id": "c73f3bd7-bb92-4570-b11e-8de4a2b80929",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9341bd37-c4c9-42ac-9fbe-dc69e2440e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6994d822-3bc6-490b-9cbe-ea35265585e6",
        "cursor": {
          "ref": "53d40825-35d1-4240-9331-ade9f5f2f9ee",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bcb51455-70f4-471e-ae30-ed5586ef4ffc"
        },
        "item": {
          "id": "6994d822-3bc6-490b-9cbe-ea35265585e6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fa15a341-3e37-430b-bf3a-7048d74e0817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5023f234-dbf8-4223-81ab-6ee32fc3e928",
        "cursor": {
          "ref": "e159a262-3a08-491e-a92a-4ccb9d288df2",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1e0a9000-3820-4e54-b2d8-4c6b98de3500"
        },
        "item": {
          "id": "5023f234-dbf8-4223-81ab-6ee32fc3e928",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9c6eb47d-ebb3-4032-8bd7-cd6096fc992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867906fc-e880-4d02-9877-81d04c651d69",
        "cursor": {
          "ref": "53d9cdab-7f9d-4e0b-9b48-c9153beadd2e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aae5729b-6ca9-47aa-8028-7f3d7830d314"
        },
        "item": {
          "id": "867906fc-e880-4d02-9877-81d04c651d69",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f510da2b-580b-480b-923c-9eba859aae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559b91d7-8750-4b51-8cdc-601b9a89d84c",
        "cursor": {
          "ref": "b93ca243-8851-4f9a-bb25-761d225fd0a9",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b464f672-db65-4be3-88f1-912a6d3cfd6b"
        },
        "item": {
          "id": "559b91d7-8750-4b51-8cdc-601b9a89d84c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "01b0b43a-0f51-4ee5-a6d0-7d1e0522340b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea949113-af79-4f79-9854-a562d0adc1c7",
        "cursor": {
          "ref": "8a76415a-f472-4169-8103-bcef0f308708",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f784e76d-2b44-4654-8ca6-5499995c70ab"
        },
        "item": {
          "id": "ea949113-af79-4f79-9854-a562d0adc1c7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96950a17-11fc-464c-9ad5-980f037e5a13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05a744d-71a1-4b32-b4e4-da0cf56ec753",
        "cursor": {
          "ref": "cc61ff72-0ebf-44e0-8dce-7bf987458493",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "32340e0c-b16c-4589-9bb6-b54b43ef68a6"
        },
        "item": {
          "id": "d05a744d-71a1-4b32-b4e4-da0cf56ec753",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a0519bb5-60b6-4c75-90e1-cd06c244d4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e756e54-b5ac-4578-9a4b-4bdc4eb8680e",
        "cursor": {
          "ref": "d7a9c49f-ab5c-4573-bfac-d30529638946",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1569664e-8f6a-43da-9180-4d937b591169"
        },
        "item": {
          "id": "1e756e54-b5ac-4578-9a4b-4bdc4eb8680e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "419e8831-0768-4644-8009-1f4f6146707a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60b3d07-596f-4e2c-89bd-68b76e779692",
        "cursor": {
          "ref": "1505215a-32f8-4dd0-8061-c220d7db1583",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2ad65e14-7f4e-4fe3-a102-a90c9386a6cd"
        },
        "item": {
          "id": "c60b3d07-596f-4e2c-89bd-68b76e779692",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "99286582-da66-44b6-80a2-1f66a3ce7049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef6b807-b43a-4c32-bff5-8086e202290e",
        "cursor": {
          "ref": "f2d0ba50-7c67-45bc-bac7-cf5ed901d1c4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c728e7e5-d8ed-4813-ac0e-b5dd0a5f53f0"
        },
        "item": {
          "id": "cef6b807-b43a-4c32-bff5-8086e202290e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1e96dc9f-f769-4e69-a97b-002bf42101cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22ac4a7-09b5-4e9e-b200-451f54433df8",
        "cursor": {
          "ref": "1e3b5d99-3fa2-484c-a67e-edb00b48b70e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "af6c4e35-9334-4e80-be3f-0bb897352beb"
        },
        "item": {
          "id": "e22ac4a7-09b5-4e9e-b200-451f54433df8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4608dd3d-854b-4150-8ff8-adc6bbea77f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8628859-1e46-4716-be1e-f4cc058b1bff",
        "cursor": {
          "ref": "07c442b6-bec7-455a-b2f8-ad6ce190ab85",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ba2eb1eb-d9bf-4dbb-8881-1e627be06e59"
        },
        "item": {
          "id": "f8628859-1e46-4716-be1e-f4cc058b1bff",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ead6d1db-a5a5-48c8-8ec9-ebf97e0aad31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13181ebb-f2a2-49c3-8469-85e6c409ecbf",
        "cursor": {
          "ref": "b711eabd-4858-44b2-b0e0-e88a55c9263e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "27714b8e-b25e-47b3-bb4a-bbba20fed32c"
        },
        "item": {
          "id": "13181ebb-f2a2-49c3-8469-85e6c409ecbf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "46b2bba6-3662-4e2a-9f1c-72d093ed61af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766008e3-a204-40c3-ad22-5de131af9208",
        "cursor": {
          "ref": "87138cd8-57df-48f4-9b3b-ce539bfacb06",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "586f078b-f987-4e90-8608-c9219f574e83"
        },
        "item": {
          "id": "766008e3-a204-40c3-ad22-5de131af9208",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8ea4a823-6624-4fae-9455-bf352177c046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1b9f86-1c6b-498e-a35f-1d6239e0a413",
        "cursor": {
          "ref": "100e7ad2-dbef-46f3-8e3f-31b95d5061a5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4b7f08ac-97a6-4591-801f-6d6f21b97be4"
        },
        "item": {
          "id": "2d1b9f86-1c6b-498e-a35f-1d6239e0a413",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8062952a-449b-44ed-b1c0-a73f0181ad27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6834dfad-811c-4f17-b3f3-ffa1ef0cd71b",
        "cursor": {
          "ref": "c3991c13-e953-4ba4-9b4d-0f3adc30ea1d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6c038f53-f9de-485d-8215-65d4007e0050"
        },
        "item": {
          "id": "6834dfad-811c-4f17-b3f3-ffa1ef0cd71b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a2e138e4-2727-474d-b1c4-abb4c13f3cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a148d2-911c-478b-9221-9333a8aeb85c",
        "cursor": {
          "ref": "bbf7c877-762d-411b-aa95-eb4c5d85288c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8549acdd-0071-4450-b1ee-0c028d530841"
        },
        "item": {
          "id": "a1a148d2-911c-478b-9221-9333a8aeb85c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fcb2b47b-ac00-4586-9b43-1a97a1da07d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ed3b5f-f95d-4d5b-812f-ede5d29feded",
        "cursor": {
          "ref": "7950c858-b342-4dff-a3a4-d9fe25753dd1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "058faa0f-642f-4c4e-b07a-5b81417a70af"
        },
        "item": {
          "id": "f2ed3b5f-f95d-4d5b-812f-ede5d29feded",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9167a32d-8e80-4660-a655-e2c3d616f7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cce8d00-4645-4279-8957-f8ba4fed1788",
        "cursor": {
          "ref": "9f9d35aa-4edd-4c94-92aa-8e44bc9e2b38",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7ebf4507-6c0e-42ee-9b4c-7792e03a160c"
        },
        "item": {
          "id": "7cce8d00-4645-4279-8957-f8ba4fed1788",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "514a0684-212f-46da-a097-c10fa9b794bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19c96a8-f856-4bed-a963-a78f4be7f82f",
        "cursor": {
          "ref": "63d6590e-13b9-4f4f-ad4f-39476496d622",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3958634a-0ee7-4a94-8c80-0b84c15f6558"
        },
        "item": {
          "id": "a19c96a8-f856-4bed-a963-a78f4be7f82f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "db22addf-53c2-47a0-8a77-8eaec51ba8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0721b53b-e0d7-4041-a0ed-82d9e1894676",
        "cursor": {
          "ref": "c6929e12-bf07-49a4-a424-7ae35b59c2c2",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "acb04e00-f601-415b-9e18-bc54e8c71e6c"
        },
        "item": {
          "id": "0721b53b-e0d7-4041-a0ed-82d9e1894676",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "da7afaa1-bb06-4977-998a-46bc2d0dbe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12817875-7e9b-4f75-a54e-bffb0a663320",
        "cursor": {
          "ref": "67b695c3-d8f4-4009-ad69-2a28e55d861b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f9c2db7f-15ab-40f8-b80d-3a4bd6b595c0"
        },
        "item": {
          "id": "12817875-7e9b-4f75-a54e-bffb0a663320",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ca2e043f-44c3-4146-93c0-d46dc61afb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec03c24f-b2ab-4489-92b3-0f19670da4bc",
        "cursor": {
          "ref": "c75607d8-11ef-4c95-8003-4a00546204bc",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1231de0e-06ca-41a3-a909-6ac6d0833146"
        },
        "item": {
          "id": "ec03c24f-b2ab-4489-92b3-0f19670da4bc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "24e818d1-159b-4d4e-ae6d-446510aa841d",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "83af3f2f-7f6c-4996-b1f5-4d9535b7ff23",
        "cursor": {
          "ref": "77b8230b-e0c9-4561-86ad-db166ebb43a3",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e6c75fc0-14fb-4e8c-879b-6f906567a8bf"
        },
        "item": {
          "id": "83af3f2f-7f6c-4996-b1f5-4d9535b7ff23",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b575e312-5637-4d52-93ae-1d66dedc92a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e443c8ea-4ceb-449d-bf2a-cdf885777bea",
        "cursor": {
          "ref": "4a74eb0d-9685-443e-bf50-a29737070ffa",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "653a8242-37ab-4ea0-82dc-a091b628665d"
        },
        "item": {
          "id": "e443c8ea-4ceb-449d-bf2a-cdf885777bea",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6963f70b-8561-4e95-9070-fdb9317d1f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09707d1-584c-4eae-b05e-77fec8c0c99d",
        "cursor": {
          "ref": "8faaeb7f-5c36-4098-afa2-cd3f90d5d498",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6cab7cbf-f492-4eb7-9f5a-2e6b22dc2620"
        },
        "item": {
          "id": "d09707d1-584c-4eae-b05e-77fec8c0c99d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9baa7b14-dac0-4515-917c-f620ecd33557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d659436f-4105-4816-b056-93150c805e28",
        "cursor": {
          "ref": "d5c1090b-1dba-454e-b67e-55b4fb6b82b2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6bcd80d8-3642-4035-a3cd-7bf191df88d3"
        },
        "item": {
          "id": "d659436f-4105-4816-b056-93150c805e28",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b4c4cb45-74c1-4f38-90c2-97bd621cce48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0277e9-3600-47ad-91a9-81656969cb1b",
        "cursor": {
          "ref": "7ae2c4ed-50ec-4d19-99d9-7a072d3fbefd",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b6ffa784-63ea-4170-bd36-a47a6e5292cf"
        },
        "item": {
          "id": "ec0277e9-3600-47ad-91a9-81656969cb1b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7f1156e9-7878-4304-8850-d2d631f2f9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e300f5-8e86-4903-885e-25dc088ca3cc",
        "cursor": {
          "ref": "bc582118-1288-4abf-a92b-d919fd3d065c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ca121ad2-1126-4d22-bfc3-12c931808792"
        },
        "item": {
          "id": "d1e300f5-8e86-4903-885e-25dc088ca3cc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bfb2e5dc-c704-4353-814b-3f4dfca31c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822ea2fa-2243-436c-ac7b-8d82d372ddcc",
        "cursor": {
          "ref": "567f1258-8bd0-40b0-a91e-089b5282a861",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "207d3df0-164b-45dc-9990-9f04db7720e6"
        },
        "item": {
          "id": "822ea2fa-2243-436c-ac7b-8d82d372ddcc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a36e2b56-53ab-45a9-9b39-a6bf8f24b495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156262c7-048a-40c4-b67d-3b76814dc25e",
        "cursor": {
          "ref": "71c8caa5-ba6e-4a5d-9c30-e984825ef679",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9172e07f-a5da-40c2-9529-53616ea23b0f"
        },
        "item": {
          "id": "156262c7-048a-40c4-b67d-3b76814dc25e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fc463837-cf75-4857-bc5b-3f9f506d7d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015537b7-46e8-4920-a7dd-dd6b51699b32",
        "cursor": {
          "ref": "34656916-ebd4-4b8a-bfb2-f872982a3fd4",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "859abb61-ce89-49b1-bc8a-44e4985e3f15"
        },
        "item": {
          "id": "015537b7-46e8-4920-a7dd-dd6b51699b32",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b46e5511-e70f-4030-ab16-01a011a66027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1580e5ae-851f-4489-a012-440ce2b5ab59",
        "cursor": {
          "ref": "d4212e31-8182-4ed7-9658-1d3ece0fe14f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f9ce0514-283e-4133-8e55-f8d72af78ea6"
        },
        "item": {
          "id": "1580e5ae-851f-4489-a012-440ce2b5ab59",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "50e0b58e-e752-48b9-9f47-172c4499896d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932c3fc3-6505-44c5-abb0-0b144f83d46a",
        "cursor": {
          "ref": "d02c6309-574a-4ded-84d8-05b236efa667",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4f7d3016-84cc-43b0-a98c-b3a61af67144"
        },
        "item": {
          "id": "932c3fc3-6505-44c5-abb0-0b144f83d46a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f1824d63-7126-4dc9-8413-c293c23911c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb55bd9-3bb9-4de5-985a-6eb6df85d3d9",
        "cursor": {
          "ref": "548cf7d4-9035-4121-b6db-9393a6881bce",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "36f28fb2-c974-42e1-b648-2941ffcb5ef6"
        },
        "item": {
          "id": "0cb55bd9-3bb9-4de5-985a-6eb6df85d3d9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "76834060-662a-48b3-bd75-e5d43e5dfd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539b3505-eeec-461d-902a-3906173b8b23",
        "cursor": {
          "ref": "9500b6fe-e4e0-479f-ad99-a0f4342113fd",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "710892c5-aefc-4b64-92a6-4f7e365d8f47"
        },
        "item": {
          "id": "539b3505-eeec-461d-902a-3906173b8b23",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fb08a184-1679-479e-84bb-0d1c485aca10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688cce4a-1d9e-4fb5-85ed-d9ea1d475400",
        "cursor": {
          "ref": "6daac206-84e7-4e2a-af37-8b97479b2e94",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "168d6d6c-e2f4-47c9-8bab-e4fc6dee0112"
        },
        "item": {
          "id": "688cce4a-1d9e-4fb5-85ed-d9ea1d475400",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d9d81e57-e53d-4db2-b6ec-dee011501415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a46948-b225-4a2c-8956-6fec091e7a00",
        "cursor": {
          "ref": "28bce3a7-2831-40e6-99ca-c0906ef50b6b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7a83b2ce-7ed5-418d-b4ad-d4f76570ed7b"
        },
        "item": {
          "id": "28a46948-b225-4a2c-8956-6fec091e7a00",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b820385e-295e-477b-aa6c-b5849dda142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49031355-b8eb-4865-aac2-e31d27dab5fa",
        "cursor": {
          "ref": "ecf5c5a9-081e-4d62-a28a-6f9ea0839ea4",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8e2bc9b6-00a0-450f-8410-a544d2dbc599"
        },
        "item": {
          "id": "49031355-b8eb-4865-aac2-e31d27dab5fa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ea3932b2-8061-45d8-bea5-ba95c6b14488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84e6f60-6fce-4c69-88d3-f6f14650a95a",
        "cursor": {
          "ref": "573d7bef-51cd-470f-85bd-8d9f3ffbb797",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5cdd5dcf-3f7f-4bc2-87d5-93a63ea832d7"
        },
        "item": {
          "id": "c84e6f60-6fce-4c69-88d3-f6f14650a95a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "72d66c12-9787-40d3-a627-f61c21b52140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf1efbb-afc5-45df-b752-bbfab25f6d31",
        "cursor": {
          "ref": "9f6766dc-c4ba-4ebf-a4ee-5cf0dc92e569",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7eb9ae0c-1b23-4fef-8005-dd82c12ce289"
        },
        "item": {
          "id": "acf1efbb-afc5-45df-b752-bbfab25f6d31",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a4f90b81-d835-47e5-92f8-9a1dbc139062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d14525-9b16-4af4-add9-9cd4a5858df2",
        "cursor": {
          "ref": "6d5737ef-c070-4a67-a7c6-2137ecb6cd75",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "63f3413c-82bb-4d07-9a9c-95ebcd3674e2"
        },
        "item": {
          "id": "c1d14525-9b16-4af4-add9-9cd4a5858df2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c629037e-9d7a-4383-976f-783395ff7f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e372118d-dad5-46e2-8394-902f32ed3d9c",
        "cursor": {
          "ref": "ea3e4464-0a99-4cfa-a67f-3365d64a5a32",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "616009ff-d1c9-496d-8d89-575a33da66d7"
        },
        "item": {
          "id": "e372118d-dad5-46e2-8394-902f32ed3d9c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "649d3533-0459-411c-9635-e9b02a7bcd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb2cb61-b4b3-4a89-a653-94ba704d7488",
        "cursor": {
          "ref": "2c606a25-864f-4f71-8fd2-1cb92d58a31e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "04da125d-fc08-43bc-ae6f-33887ff4028c"
        },
        "item": {
          "id": "ffb2cb61-b4b3-4a89-a653-94ba704d7488",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "214f310f-fbcb-40af-a1cc-6bc1e5334df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df866f24-773f-469e-b47a-53185777d6d3",
        "cursor": {
          "ref": "6607ea71-96e9-4a22-b673-470bbab73395",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3c194b21-7674-4c22-849c-2a12822b78bd"
        },
        "item": {
          "id": "df866f24-773f-469e-b47a-53185777d6d3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0312400a-7708-463a-b73d-4ffcf3c323e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d751707c-2f1a-4141-8da9-1ecaa0ccc306",
        "cursor": {
          "ref": "9e6bea3f-f541-4a78-8ab6-b8406c2bf106",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f9e93fa7-3a48-4aea-a5e5-88304ec9b3eb"
        },
        "item": {
          "id": "d751707c-2f1a-4141-8da9-1ecaa0ccc306",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "600dbaab-bafe-448d-9d68-355f14420f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97a93b0-8c80-4ced-996e-9165732d4c8d",
        "cursor": {
          "ref": "77f053f3-98f2-46dc-a407-6af5449f29a0",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "22c1479a-7ce3-4a3f-aa1f-a7f832e295ce"
        },
        "item": {
          "id": "e97a93b0-8c80-4ced-996e-9165732d4c8d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "148becef-076d-498d-a0cb-a7ab147828d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cf25e5-83dd-4197-87d2-4f48238ea21f",
        "cursor": {
          "ref": "b9c0711c-4f8b-4332-9b4a-a95a771dfa72",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "839be29c-005c-4fc7-a18e-df909361b9a7"
        },
        "item": {
          "id": "46cf25e5-83dd-4197-87d2-4f48238ea21f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "79f920bd-359b-4254-b85c-ee0fea3cf1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36d3bc3-590e-4610-9109-09259ef5e4d7",
        "cursor": {
          "ref": "aafd43fe-bdc2-4979-8b4e-73e1cda3dba5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "07b2599b-4289-4f4c-a126-2fde2da03e9b"
        },
        "item": {
          "id": "e36d3bc3-590e-4610-9109-09259ef5e4d7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "209899bc-fde6-4362-b864-434606051ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5280dc73-f1fe-473e-9988-ff46d822505c",
        "cursor": {
          "ref": "5a74e538-91b9-4bf6-83b4-6e12dcf6457b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2460f1d0-2c2f-407d-8099-87de794e5ebd"
        },
        "item": {
          "id": "5280dc73-f1fe-473e-9988-ff46d822505c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3d1238ae-d031-4c8f-9045-286c15cceda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2e4fb9-7ec1-4bcb-9a4e-385e0b80b730",
        "cursor": {
          "ref": "1bbe0877-16ff-4f85-b2d7-ed74a01477bf",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8817818d-1e5d-4568-98b5-8f35ce18bdf5"
        },
        "item": {
          "id": "7b2e4fb9-7ec1-4bcb-9a4e-385e0b80b730",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9d20b168-0f40-4b51-b181-9443c56084cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f269d3ad-a31c-4c23-b091-ff15c34eae12",
        "cursor": {
          "ref": "dc665a15-a292-4c6b-bdf1-9110ee947eee",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a7a16325-b4ad-42a2-ab45-55f722b282b8"
        },
        "item": {
          "id": "f269d3ad-a31c-4c23-b091-ff15c34eae12",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4244e285-719d-4b85-b9a6-e0229b84062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9a98ff-7407-493b-9bce-fe26b659103f",
        "cursor": {
          "ref": "213847ce-4b07-4982-a96d-95df82ab86ed",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0e142e74-f75e-469b-82c6-4257dd57f001"
        },
        "item": {
          "id": "cd9a98ff-7407-493b-9bce-fe26b659103f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "14342d81-65ea-4fef-ac89-c10195ff10e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b81e8b-090b-48df-bb82-21657133c2f0",
        "cursor": {
          "ref": "e4a89e28-30d2-4514-80e4-bd6d4dba03b3",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "61c471ea-f7a7-4a4e-a367-1079b2f1acac"
        },
        "item": {
          "id": "b7b81e8b-090b-48df-bb82-21657133c2f0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "baa740cf-36df-4e1f-9b7b-bdc0b6d55c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7146d4bb-cc67-4f54-97c4-7a93cad12775",
        "cursor": {
          "ref": "d61b92b7-d049-485c-a647-f18d83914815",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "686cab32-e980-49fd-9c63-2ed239c92e99"
        },
        "item": {
          "id": "7146d4bb-cc67-4f54-97c4-7a93cad12775",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7150f2d1-93d9-46ea-968b-9be762a13436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71abca63-9d1b-4e00-aa31-cac224c9faf3",
        "cursor": {
          "ref": "2f486a85-0a96-45af-8ef2-dc85c06d66d3",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b68dd97b-eceb-4ec3-85bf-dffdb725d17b"
        },
        "item": {
          "id": "71abca63-9d1b-4e00-aa31-cac224c9faf3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9dcf5033-3be4-46ff-a0e3-7ccb9a12a430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a71b93-5f12-49da-8ddd-0703796c5274",
        "cursor": {
          "ref": "44383bd5-141c-40ea-affb-b0c28dae8c79",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "21620836-6def-4383-b583-28ab29e604b3"
        },
        "item": {
          "id": "d2a71b93-5f12-49da-8ddd-0703796c5274",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "be592d13-5d4b-4df5-a4ec-d507d419d573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c91f0d-2abb-45c0-a179-f1f98e1c3702",
        "cursor": {
          "ref": "2e5ef100-28f4-4e03-be2b-443224f5267a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "66086ebc-979d-46b5-b8e3-88a23c714c26"
        },
        "item": {
          "id": "30c91f0d-2abb-45c0-a179-f1f98e1c3702",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "04f6e332-856a-4a9a-9cee-d43b619878bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a569039d-99a7-457f-8cf1-1398283ae514",
        "cursor": {
          "ref": "a1312770-ecf1-423b-97f9-dd1af799c6e6",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bc43468b-3713-489e-9bb2-df1ec2bc2db6"
        },
        "item": {
          "id": "a569039d-99a7-457f-8cf1-1398283ae514",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e956d083-78e8-49ad-9461-843a244fcaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1673c14-93f1-4b44-87ec-6def4ee0257a",
        "cursor": {
          "ref": "e999c9e9-4d8d-48a8-a8ec-3abbe73fc417",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "96bbacbb-b17a-4492-9885-6e83610a2d5d"
        },
        "item": {
          "id": "e1673c14-93f1-4b44-87ec-6def4ee0257a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cdf884f5-a16e-4048-a0d1-c0adf3ac0262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1240,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e259f4b3-99c5-4a3a-97ec-95c2cbdc4bed",
        "cursor": {
          "ref": "5eec3bb2-14f5-4084-a4ce-c2bdd5d39dd3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f3c3c37d-1daf-4c8f-b573-afc7cbaf3302"
        },
        "item": {
          "id": "e259f4b3-99c5-4a3a-97ec-95c2cbdc4bed",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "46a8d98a-b74e-441d-8e71-024d30921f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4010,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d02dc7c-6882-4057-ad47-8651cd4c3f21",
        "cursor": {
          "ref": "61a93d4e-3522-4397-932e-ca2d75ff569c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "810a18fd-9d51-49d8-8070-13b4ce310779"
        },
        "item": {
          "id": "2d02dc7c-6882-4057-ad47-8651cd4c3f21",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d45c3045-d645-46a8-8135-7ddca4b85a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c136e1-a464-49da-868f-5f801bcf80e9",
        "cursor": {
          "ref": "9a64068f-7dae-442c-a0c5-fbd4262e7df9",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "00ba1d09-f3ba-4318-98a3-b97fe7acb9a6"
        },
        "item": {
          "id": "f6c136e1-a464-49da-868f-5f801bcf80e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d020871b-1f52-43d0-b482-fba31dfe2327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8837a6-f6af-4211-a9d3-e9674a39e07e",
        "cursor": {
          "ref": "881a23e3-b0ae-4d24-b785-e938ec267c5b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3af2694c-9745-4e40-bf63-ccff661d1f0b"
        },
        "item": {
          "id": "ba8837a6-f6af-4211-a9d3-e9674a39e07e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4256a040-750b-431c-a842-721eed2981bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f6396d-447b-44ac-817b-3de02ac5c70b",
        "cursor": {
          "ref": "cc52be19-6979-4bff-8e11-4b5ccbc48684",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a2f69120-e127-42cf-b185-2ab4310cdf73"
        },
        "item": {
          "id": "a0f6396d-447b-44ac-817b-3de02ac5c70b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f1fa27b9-8978-479f-95ec-40674bc695d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c55725e-b1cb-4b8c-8e92-0f6c12b774e7",
        "cursor": {
          "ref": "c58b1ce7-0cde-445f-943c-60e042cd0395",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1ab13ded-2277-4f08-a195-a4d67cde4f5b"
        },
        "item": {
          "id": "5c55725e-b1cb-4b8c-8e92-0f6c12b774e7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9cd0ba7e-1f63-4fd8-8d40-b023f6b7b88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97827cb7-5589-43c4-b7c5-64104142f860",
        "cursor": {
          "ref": "f859931d-cf39-4320-8bbf-437e2ade78f6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c19b2b2b-d1d2-405a-a594-28da2f750881"
        },
        "item": {
          "id": "97827cb7-5589-43c4-b7c5-64104142f860",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c0c4e03d-6e92-49eb-8389-06e4eecd0055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e9e37-ab72-4262-8d06-66983fa40641",
        "cursor": {
          "ref": "2ed85ed5-6e9a-4d82-baf7-194dce28a0e6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3e6401a4-6991-4e67-9f1a-588b9ec9c663"
        },
        "item": {
          "id": "2b3e9e37-ab72-4262-8d06-66983fa40641",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "93fb15ca-4ad5-45ff-9b6c-e17963e91e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc018e9a-bbea-4d09-866e-ae64dd792502",
        "cursor": {
          "ref": "55c5cec1-b9da-42a6-ab9d-b0a6e3dec805",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8ce994d0-e370-468a-a776-1e4a25e91ff7"
        },
        "item": {
          "id": "cc018e9a-bbea-4d09-866e-ae64dd792502",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "59961327-282a-4585-9f5c-a7e7d9f9c163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b19be30-2b67-4d64-af71-e450bc3ad5ea",
        "cursor": {
          "ref": "534f9512-347c-42a8-a1f1-3eb0276b62fe",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb583ee2-451b-4ef8-ae69-707179d3f10e"
        },
        "item": {
          "id": "0b19be30-2b67-4d64-af71-e450bc3ad5ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6939e263-c4d2-4e33-9cc7-ae6febbac2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ad2ef1-e620-4201-9753-8e99ae255883",
        "cursor": {
          "ref": "af263b6e-89b7-4c66-a406-e019b9860e52",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "158aa7a2-2e0c-47a0-98c8-01d9e5fa19fe"
        },
        "item": {
          "id": "47ad2ef1-e620-4201-9753-8e99ae255883",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0d31b359-0414-4c1d-bbc6-315355623b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d34150-5eb7-494b-92f5-90c0781d5023",
        "cursor": {
          "ref": "486bd94b-300f-4c62-ab11-54be31b4bcf4",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "62829ce6-74f9-4879-86f0-3cea308bca8c"
        },
        "item": {
          "id": "18d34150-5eb7-494b-92f5-90c0781d5023",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8db299c7-a464-48e1-8a0f-bacdcaf6fc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d13146c-f5e6-4a61-a9b9-b62a1e26becc",
        "cursor": {
          "ref": "dec3c66b-6f7c-4363-86db-402738bc4dd5",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f50fe560-95da-482f-9ebf-4c4a393b4fad"
        },
        "item": {
          "id": "7d13146c-f5e6-4a61-a9b9-b62a1e26becc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2a8a6a7b-69bb-47bc-b460-b1ea14c2a876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca5758c-9f49-4bed-8e69-df3434fd0464",
        "cursor": {
          "ref": "97eb5433-a75c-445e-8805-f6c35b8fe77b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "255e0290-24df-460e-9250-1e4b375bac46"
        },
        "item": {
          "id": "7ca5758c-9f49-4bed-8e69-df3434fd0464",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "13a3ca94-8618-4cb1-b127-9ef8d61fc863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50ca171-46a1-4028-8547-7719e70e8522",
        "cursor": {
          "ref": "96add0d3-580f-41fd-bddc-6f8f339a4bde",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ecdfad9b-f357-4ac5-94df-83153e8a3353"
        },
        "item": {
          "id": "d50ca171-46a1-4028-8547-7719e70e8522",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "82e2665c-ba06-4d5c-824b-4b6c077ba4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912f5cda-62ac-430c-8ba8-542fc02736df",
        "cursor": {
          "ref": "c1e1ade5-e18f-46f7-acd9-01891a7ee7d5",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "06a4a735-57f1-4fc4-a0ba-363c9a5bda8f"
        },
        "item": {
          "id": "912f5cda-62ac-430c-8ba8-542fc02736df",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b1d8c24d-22fc-492b-8cf8-e1d6b70ce47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fd8f14-2a17-4c2e-9a6b-7848a914fcf2",
        "cursor": {
          "ref": "79689ecc-7b29-485d-a5ff-1f1ccf65adb0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b15c273b-b4b6-4503-bdb3-1255d8a8333a"
        },
        "item": {
          "id": "96fd8f14-2a17-4c2e-9a6b-7848a914fcf2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "388cf528-c740-48e3-8341-dfe0600ee3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5918b5-5c80-4822-8638-c878c947bcd4",
        "cursor": {
          "ref": "3d0fcad8-d219-411f-84dd-ada03d5b4f4b",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a207e71c-2e1e-47d7-b6cf-9ceebebd6a79"
        },
        "item": {
          "id": "0e5918b5-5c80-4822-8638-c878c947bcd4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "917a93bc-bc34-4ff2-b5c3-0ed546f31ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8932fd-f55f-448f-8646-c55b11956871",
        "cursor": {
          "ref": "cc89513b-d531-4794-8273-2a15b8a97a8e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5344e6a1-6bc1-4944-949e-30f46e9eab8f"
        },
        "item": {
          "id": "7f8932fd-f55f-448f-8646-c55b11956871",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "206c3f9f-4820-4ea3-a2b9-9fb34e7878d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf20bf05-356d-4b63-914b-3366980cb316",
        "cursor": {
          "ref": "6919471d-118f-43a6-8a2b-f051905e0f6a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "509590f0-2ba8-45a2-a033-76d413c87427"
        },
        "item": {
          "id": "bf20bf05-356d-4b63-914b-3366980cb316",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "502948ce-302d-4136-a9a8-38c39da5451e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae9686e-2d71-4e11-8287-44ebe850f553",
        "cursor": {
          "ref": "187d0dea-ea12-4cc7-b4d4-8f26fdb98a11",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5d6f7803-9418-4144-8a77-57b4e6fb1fa3"
        },
        "item": {
          "id": "5ae9686e-2d71-4e11-8287-44ebe850f553",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "05e21cd2-a80b-436b-a84a-41861027f178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4681c31-0434-493c-bba4-d91ebe45bdf9",
        "cursor": {
          "ref": "b83a93dd-49d6-4603-bfeb-db2d3f0a5a27",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2296767d-b632-4611-b98d-e228ef280632"
        },
        "item": {
          "id": "d4681c31-0434-493c-bba4-d91ebe45bdf9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "acb6635f-6d5f-472f-b2c0-5b7bc47a2a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a417ef-94d9-4a99-93b2-81e38a598349",
        "cursor": {
          "ref": "62f32d41-cec0-4b27-833c-41d5bbcdd9e1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "eba609fe-40b5-45ea-8e19-96352e9d4442"
        },
        "item": {
          "id": "d4a417ef-94d9-4a99-93b2-81e38a598349",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "089f0091-1203-4eba-8ece-49ff3fd9f340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6847c224-611a-4864-a357-81eaf825b105",
        "cursor": {
          "ref": "d812becb-b8f8-4263-8254-19703352b06f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bf142e6e-e26e-43da-8515-c35d47684f4c"
        },
        "item": {
          "id": "6847c224-611a-4864-a357-81eaf825b105",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "af732b76-4734-4ebd-bf3e-b32937b02019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38186d3f-07e1-487b-aa0d-cad1f99af12e",
        "cursor": {
          "ref": "17da6a89-6a7c-4e6f-a501-18a78c027491",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "42b60317-87b3-49be-9ff3-4e9314c54527"
        },
        "item": {
          "id": "38186d3f-07e1-487b-aa0d-cad1f99af12e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "65178601-054b-47b5-9bbe-d9667cfe00af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d6a669-ca99-4b8c-a3a2-d4b8e2cc9a17",
        "cursor": {
          "ref": "8531b601-3cde-4479-ba40-bc24b1970457",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9f8ba0fc-d549-4598-ab0b-0d208e86c86e"
        },
        "item": {
          "id": "46d6a669-ca99-4b8c-a3a2-d4b8e2cc9a17",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fba6528b-31de-4eba-97bc-a5176a685f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a18470-0b95-4b36-8414-04473424f587",
        "cursor": {
          "ref": "853879fb-0a59-47d9-8446-342d1b083fdf",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5fc61d63-ee62-4ada-b79c-6e270e37f362"
        },
        "item": {
          "id": "c4a18470-0b95-4b36-8414-04473424f587",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "988eb8dd-747c-4d99-a953-fea9827dbc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96a3c85-58e6-448b-97b6-1eebc9860ed0",
        "cursor": {
          "ref": "ac0c0a98-4d7d-49f7-aea6-defa670c5916",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a8a9ee9a-8105-4e08-8d67-e2a9cf16d128"
        },
        "item": {
          "id": "e96a3c85-58e6-448b-97b6-1eebc9860ed0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "00e6073f-6a26-482f-81f7-108096456fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adc2cff-d530-4272-b56c-e03b41bebb04",
        "cursor": {
          "ref": "c00d23b2-ec2f-4b9b-b27f-56a89d59d2e2",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "88d0c4fd-2c94-46e0-919e-19d13b917f4d"
        },
        "item": {
          "id": "1adc2cff-d530-4272-b56c-e03b41bebb04",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6a724ab7-a951-49e4-a6b5-a894721ee125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1270c24e-09f2-469c-a28a-a39132c3b56d",
        "cursor": {
          "ref": "5eefc452-d068-42b1-baac-b2f5b60c00fa",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "de916624-f48f-4cea-8549-146fc3624d86"
        },
        "item": {
          "id": "1270c24e-09f2-469c-a28a-a39132c3b56d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "46a5a41e-7d09-4e42-b7ee-067018c48e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833da057-5fa8-495b-9e79-3211268c1e7a",
        "cursor": {
          "ref": "bf79a0cc-0ad2-4422-8e5c-eb8f393af3bf",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "af54c8fd-f5b5-472c-af72-7b0c0ced3f15"
        },
        "item": {
          "id": "833da057-5fa8-495b-9e79-3211268c1e7a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fd986e55-1f5f-4fa6-8c59-9774339cd95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3e0644-9566-48ba-abc3-24cfc70bdd60",
        "cursor": {
          "ref": "592a5dd5-fdaf-4f42-a6d7-bf406752f657",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a63fbb48-f3ae-4222-8d83-90d51328ab8e"
        },
        "item": {
          "id": "db3e0644-9566-48ba-abc3-24cfc70bdd60",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "225b04a0-42dd-4125-8ae7-3a0475e180d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b75777-4ba3-41b2-b6d1-a060f8ba9863",
        "cursor": {
          "ref": "9c7ab483-48ac-4f7a-8ad7-2af73af63f50",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2655b7ef-70a6-4e89-a08b-a94377d9e471"
        },
        "item": {
          "id": "09b75777-4ba3-41b2-b6d1-a060f8ba9863",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc3c057b-d0b1-41aa-ba26-aa6936d969f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e85fc2-daed-4b14-a451-3de22591defc",
        "cursor": {
          "ref": "96e6525c-73d9-44e2-b96f-0a856ee2d4d1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "81452e0c-34aa-4a19-8730-f62c9173fe15"
        },
        "item": {
          "id": "55e85fc2-daed-4b14-a451-3de22591defc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d428f4a2-a72d-4a74-bb58-ea50bd257d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a85b13a-98e2-4d3c-a022-e910266b6395",
        "cursor": {
          "ref": "12a5ac14-2be5-4739-a520-04571aa5548c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0336c665-bece-41a3-b79e-198e863edd09"
        },
        "item": {
          "id": "2a85b13a-98e2-4d3c-a022-e910266b6395",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dec0a49c-0879-4fb2-8bf4-ed4bd0654112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58281fe5-7e8a-4d06-a0fc-9e80b0a60a4b",
        "cursor": {
          "ref": "7b0907b1-1143-4b03-a2cd-13c6e048e6c6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "22e28c7e-f5bb-4c85-b8fe-c06ab31040d6"
        },
        "item": {
          "id": "58281fe5-7e8a-4d06-a0fc-9e80b0a60a4b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "93afe2f5-7872-4339-83ff-4af5e8d86c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d38645d-a397-46e3-b82f-9abd7cf20c9f",
        "cursor": {
          "ref": "84ebbb56-c53c-417a-9397-1ca39753b7b9",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "63c972ae-06cf-4fd8-9af5-65fa2219fef3"
        },
        "item": {
          "id": "8d38645d-a397-46e3-b82f-9abd7cf20c9f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a2313177-1674-468f-a7f3-8e625579ce6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a27197d-6043-46f5-95e8-6843e7918b7d",
        "cursor": {
          "ref": "6d2ebbd2-dc32-4a61-aca8-5777195d6c5f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "db505b26-76e3-488b-a402-3e011ede34f6"
        },
        "item": {
          "id": "0a27197d-6043-46f5-95e8-6843e7918b7d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "940bc7ce-b154-4630-b1c7-62d3d56b15f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad72c528-7eed-4404-be0f-2556fd3e55fb",
        "cursor": {
          "ref": "e56d3269-5f9a-4752-a634-8a9f176f6b0e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c8cfd800-b9a4-4006-9dc4-400d13cdf376"
        },
        "item": {
          "id": "ad72c528-7eed-4404-be0f-2556fd3e55fb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f426682f-2583-4a58-9719-4b3bf50fdbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e25b513-d0c3-49c6-a23b-fd0e97dcae32",
        "cursor": {
          "ref": "43937e40-537b-4d46-932d-2d78a83be465",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b333448c-100a-4a93-aed6-4a330095fc77"
        },
        "item": {
          "id": "5e25b513-d0c3-49c6-a23b-fd0e97dcae32",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3ddcbd5a-42ac-44ea-923b-0c1e3fc7df2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ccfc7f-e599-43be-ad44-1c2eed9a10b1",
        "cursor": {
          "ref": "66d52159-2069-4afa-b78f-04fdc076906e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ffebf367-e061-4dac-a934-0f492caabd21"
        },
        "item": {
          "id": "07ccfc7f-e599-43be-ad44-1c2eed9a10b1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c54932c6-62ff-4509-bd29-d9217b907023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca66eca8-8cc8-4c35-9fc4-e2fd54e65ca2",
        "cursor": {
          "ref": "3fc0fb03-b5f9-44c7-a151-5a7c798c8d77",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "193aca48-c116-442b-9d0a-0c0e3adb1e10"
        },
        "item": {
          "id": "ca66eca8-8cc8-4c35-9fc4-e2fd54e65ca2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1def0203-7963-4ae6-a7df-5422e67ba262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67608801-f08c-43a7-adcf-18bddbb46f7b",
        "cursor": {
          "ref": "01fb16a8-6611-4761-9591-50fe609abb15",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ccfa9e61-77f6-4151-8679-69e453acd2bb"
        },
        "item": {
          "id": "67608801-f08c-43a7-adcf-18bddbb46f7b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "eff23e4e-b641-4fad-bb72-3e97540d6f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0e1fd8-40c6-42fe-ace1-d393545a44aa",
        "cursor": {
          "ref": "5fcc6b2b-43f9-4cb4-a113-46b2b6d12174",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "30d2c357-e9bc-4038-be77-2cf00c73afe3"
        },
        "item": {
          "id": "5f0e1fd8-40c6-42fe-ace1-d393545a44aa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0dd4c8a8-5c7b-42ea-a483-7b1cf66f7827",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933aebdd-a782-4f46-a61f-d69d6da995e0",
        "cursor": {
          "ref": "3d50c074-abbd-4a2f-a426-ab808f7db693",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e023137c-6a8e-4054-9f11-23620333d20c"
        },
        "item": {
          "id": "933aebdd-a782-4f46-a61f-d69d6da995e0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dedfc35b-16c7-4109-8eec-166738f2ca94",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfd73b2-d9de-4124-82fd-2239f631eddb",
        "cursor": {
          "ref": "b52f9323-4f80-4a01-a746-b3922a27627d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ff97518e-19da-4ee3-98d8-e576c5435223"
        },
        "item": {
          "id": "5bfd73b2-d9de-4124-82fd-2239f631eddb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d90e44f6-1dfb-45e3-b46f-29237d6e5a1a",
          "status": "OK",
          "code": 200,
          "responseTime": 3243,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4936f7-df94-4eeb-8bca-91e197d7132e",
        "cursor": {
          "ref": "8b3b6e1c-7f3b-412e-aeb1-47afafd51b5d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "35ddee5c-1895-4fd6-bc95-73fe95d16da3"
        },
        "item": {
          "id": "1a4936f7-df94-4eeb-8bca-91e197d7132e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3893e568-0f16-46d9-a396-101c2ba1e475",
          "status": "OK",
          "code": 200,
          "responseTime": 3016,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "099a202b-8113-4ae7-81c7-5174b29cd3ab",
        "cursor": {
          "ref": "969958db-e2ea-4283-9cde-340c60aa94de",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a1dc5684-0ffe-4703-9d80-afb4cf6493bc"
        },
        "item": {
          "id": "099a202b-8113-4ae7-81c7-5174b29cd3ab",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "723cc61b-ccaa-4631-8e56-4ef046e70aa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099a202b-8113-4ae7-81c7-5174b29cd3ab",
        "cursor": {
          "ref": "969958db-e2ea-4283-9cde-340c60aa94de",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a1dc5684-0ffe-4703-9d80-afb4cf6493bc"
        },
        "item": {
          "id": "099a202b-8113-4ae7-81c7-5174b29cd3ab",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "723cc61b-ccaa-4631-8e56-4ef046e70aa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf79d5c-c978-42de-8394-357491e8ed48",
        "cursor": {
          "ref": "9123b81a-521c-4c89-ab52-8ae63936de0a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dcb9e82b-8e0b-4d30-b469-082eb7cc9cf8"
        },
        "item": {
          "id": "bdf79d5c-c978-42de-8394-357491e8ed48",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b195df16-89a0-40af-94cc-9c162ce2ebf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f70705f-d3ec-477b-a2cc-5645952cafc3",
        "cursor": {
          "ref": "98fcdbba-39f1-462d-95f5-716006945009",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "05707eee-b22a-4be0-be1d-b404b18fce7a"
        },
        "item": {
          "id": "7f70705f-d3ec-477b-a2cc-5645952cafc3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "059d6a1e-5d0b-4e6e-a15b-5e40a85858d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}