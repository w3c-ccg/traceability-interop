{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f3eda930-e841-45f2-b3e4-d4fe08785f44",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1da3a078-02c7-4b79-bc88-60decdf92ba1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1603aef5-1e98-41a7-8d78-50ad3e797511",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ae407f05-0edd-44fe-8562-4d92481bd1a7"
                }
              }
            ]
          },
          {
            "id": "f802a296-2bcc-48eb-8603-ad3be5b6e909",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d0958d3-4cd4-471d-a8c0-af72881f5167",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9383393-e29f-446a-a18c-9e512ee338e4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "60abd1f0-d740-4f7e-b619-422e37878733",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1d107604-4bbd-4d9c-9970-181c26711434",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9c1ae15-ecb3-4e30-b099-82b2825a6807",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9855fb7-bc98-4fbf-a8fe-eeafce52e037",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e7fb678-80fd-462f-a527-82ff77d51382"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c74e76d3-5066-4045-8859-41e6ea090a40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e74bd2ce-09b3-49a1-85a9-84381c7f78ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e34ba169-5882-4032-b2ea-1b037c32c4e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a9ed745-75d9-4e63-8e14-66ef691d6e6d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "142bcabf-d5f3-42ed-9f8f-97a859305a98",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "664b5841-26c4-49e2-894b-c67d32568d27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f8765dc-3a03-4dab-ba60-258c73d7e705",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0a441ea-391b-4a86-afe8-d474d9ea1ed5"
            }
          }
        ]
      },
      {
        "id": "ec4fcd6c-c545-4584-9a2f-2c06749c8ab9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8b4454e8-2abe-499c-af4b-0df092d8bbc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ceb5dd9-36c6-4a9f-82dd-3cb73f127a27",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7344e37-1ee3-436c-9e64-cb888685103a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45efe395-91f1-4d28-b95e-c14c89486933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8557cb0-e294-4d21-8530-da3a402b578f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1811bd0c-3fcd-406c-867e-d5ddb50bf81f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74faf2aa-cb68-43d0-8cea-239cdd32a903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3ee7e60-b8e2-43ce-a56c-e03612a768da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5049dbd-d652-4087-b463-3666c9ba0dfe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd6e812-6b01-4650-a000-71e54aad66ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b2d844b-c831-490e-8269-a9c57dccdd3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "afaa6695-1fc7-43e0-9d07-3ff2f6187e21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8ce66b0-ed2c-4c8e-b88e-1f51d81a4786",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9d38f6-f99b-4521-9408-a8e7b00e185d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6f4dbab-ef2a-472c-8924-ef980ee80386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073b0c36-f593-4411-87a2-2978d48f18db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9cd738-5bb8-4f4b-afc5-a7c8be7a2eb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "27d2791a-f70d-47ca-b3e6-c8804696fd6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f14b2a8b-3045-43b0-bd9e-a0327478d3f5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8ddc31b-0c3a-4dcc-a920-5ed6f8b3736f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "49140c38-d0a0-48f0-a043-3fd59f38cb86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d0fec50-d01c-4022-a238-d4a89a1c7119",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "03c178c0-0fee-4106-b4d8-7cf5def84648"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "904ef94b-a864-4101-9e2a-9381b6e2dd18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a1905ce-35b5-49f0-84f9-67bd0306ec77"
            }
          }
        ]
      },
      {
        "id": "3e9a52aa-fb54-49dd-90bf-fca600b4a22d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ef018ab8-7869-4b28-97d9-aa7deeae784a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac34b0c9-52c4-48e3-955f-4f040ae3563a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0c4d628c-a45a-44a5-b401-42fb2f973e34",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c6555f-26ed-4008-b806-294ec6c5b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4863de74-cdd1-401e-81f5-97ba23fc996b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a96f46-ffc4-4f4b-a537-58fcdc19eb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a099a52-bb49-4cc2-8549-f3f22bef5815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddd5444-5889-45c0-bd6f-0adf5f353347",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4602ad76-38f0-49a7-9dd3-2f60e7892644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7477fb02-c27e-4fde-bfa6-c5c89f0f2aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ed2b71-d218-472a-bffd-c9c02b845e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f8b420f-1368-4023-9da8-9def33bcc3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf867c99-0c9a-45d2-8b49-67f841d73a28",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece505c2-7f70-4bcc-8afe-2ba20780f8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1add1046-f70b-4172-aad5-0d0e9d94093c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fd91bf-a298-4f83-8d78-e06dd934076a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f21c018-df6b-46ca-8466-37158d98347b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad8e5cd-12f4-429b-8fa4-e347bab8d3d2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ec3302-872c-4c40-a57e-84a3565fad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868bdf2f-1181-4abe-862d-d9a80df5dad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85d4593-f17c-4485-a485-2c4e08d6058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d113dfa8-3b88-4dd5-a9b5-0e4249c127ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cef3fe-e851-43af-b169-f53aefb3ec1f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89878149-c1df-480b-9669-33406777a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacfbc46-85cd-47fa-80a0-f7d1912d9a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ed8c31-5551-488d-982a-ac7923c33175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "125eacac-d12b-4613-b5be-81c13eac83da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1985bf5d-0a5c-4ffb-9cef-cfcb1b7405a5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37faa5c2-4a76-42b3-8b9b-df0cc691339f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ec3fee-8283-44c7-b383-55ffc1fbc568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d94866-4fdd-492a-a1ff-e5eabdd5303e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5de2daab-273a-4035-9a6f-b59ff030f332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a275b40-4adb-4d63-9c48-479f83f7faaf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0889a78d-97e5-4e90-b863-4ce87c35f71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82b862b-91c9-4d5f-997d-f85037fcce9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd90a3e-9de2-40d7-ace6-4274bc493e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f29deb64-8d5b-4e46-aee5-f6704c13f653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6734da1a-26ce-4a6e-ae4b-b56fb3082e5f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f029b5a9-7807-4b83-97ce-a7a87f1f3149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74abc5e5-9b88-45e7-84f4-63798bcbfe2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea6f1c0-90c5-4a67-81f8-0febd7a39cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3139d025-bfc4-466a-8f4a-1d844dd6df06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d97d1a-1723-4bf2-a21c-cd32c17a70c1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6a24de-0624-4c24-a212-ebcdbc1beb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2f054e-5ff8-4c3d-9975-34229e3251c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1900c5c-3e35-4123-9d43-4d8989ec7060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8f7cbd0-5814-4950-abe2-33989b62b414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a9c839-6da1-4c1c-9109-61e246ad7eab",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd086d2a-4d97-4391-92fd-eb937cc9e68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b489cdd-2e78-4a7f-a802-9ebd382f12fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e930a3b-5ebf-41b3-866f-7d53f3aadc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e17c64f2-bccc-430b-828b-1d13819ad245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021d00e9-1701-45ab-b0e3-150e8780a069",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ca7708-40eb-4db5-9fdb-b2a176088e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04015fa2-87ee-46e9-b54d-a529a03d83f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8086a657-c80b-4522-93aa-c002b086a5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9bb2da4-3800-4739-8186-6d6af8e1d225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c40bf2-bd2d-4599-b8c2-72e4ef5a7f6c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8895e27-f2ed-48ea-86ef-5359109e9dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1c62aa-543f-4941-8efb-c07363b3b0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ead75b-afc4-4507-ae4f-1e573d7af8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5a25566-eb94-4291-81de-99a7f4743497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef60e8d2-5e79-4d07-bbd6-9680f1f44c8d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61e02ec-9006-46bb-9594-1b9d8e7dc4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bf51f2-691b-4099-9ad5-5424ffa1df76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7be5045-5734-45eb-aead-b581e06fbd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24e73400-834e-48d8-aaae-f668d5099b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b34c78b-b7f4-4c13-add6-29dd7c922402",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d130cbd-68c0-4dff-8052-a5d9f9092b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cda0482-063d-4af4-b2e2-5b5c15da3e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e477ba60-6add-4cfd-9b4f-77fd9b39acfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "604d74d4-fbcd-4a8e-8173-1a2aa8defabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7083f9-302b-4ecd-8f26-a38481b8b50e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab50eaf0-23df-4d81-9117-366723536d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44343192-2889-45d3-9a21-dfd1f45f48b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fb5954-8f44-478d-b7bd-6e8c0a10a82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0568e1b-b4cf-4fc4-8f11-bbe424307773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c490f555-cd74-472b-98d6-d34d9eca7f87",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97827dc4-e92c-425d-9e5d-f9fa785e50b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c4db5e-7eea-4236-8ba8-7839f029e524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef325a07-685f-4721-b991-cb0e1ab6294f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f4c3b68-48da-4a49-8cb4-cedb5f400a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7667476-d052-46cb-9461-5d989c20a5aa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74062849-73b3-44df-a0b5-63e661293066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910b9246-cee8-4c22-9d38-95fc1b16fd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36520f9e-97ef-44a4-aee2-457845ced673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c67de0ca-6495-4345-8ab1-19860054023a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef080036-5798-4ad6-9932-514656112e59",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799fd1d9-f4a4-40af-bd4a-0408c4f2355d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a7ebdc-7978-45f8-a606-08bd0d1fe0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec42ada-d534-4e4e-933c-1ccf646192aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f4f352-b666-496d-82e9-f4962f0a29b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7289cf-d6f7-4a17-87a1-d85306feb7c4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7948ac86-a8b6-4259-b0d4-a9c4918a9e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4730d8-a9cf-4438-9bf5-2431966151d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04401f44-c8d0-4080-8128-0eeaad70e517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c5c9e7-02ad-4b57-aa9c-19c1f89c681b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a620ecf-5579-4673-9ef4-677a2fb4689d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cbec75-4fbe-4dbe-98a7-5d6ac21cb192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71c8141-8821-45f6-a95a-19ca1cbce9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ff7bda-8684-4cc0-be1e-2a02cee5df3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f669e8-1c05-4536-90c2-e3455d034365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d9bd86-88f0-4c42-b725-0ef97e319515",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbd9cfc-137a-4c2a-9770-c1e9aba79a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988a93d4-fc66-42e1-9e96-2d4218c820a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c335e36-79f5-4a1d-8960-429ed1260635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee75547-0558-40be-babe-18e663b12743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6666dd-b49a-45ac-8f10-14b0aceaa927",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01559c0-474c-4f89-813c-b94201b9b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2671f6-3621-49ce-ae2f-7369007571f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d71c5a-5d77-4fd7-be31-fc470b612f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d965b0b5-7774-47b6-9d54-1d95db726898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b313ea-05bf-4fb1-a83b-d5b251aae22f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52bcd38-b281-44a3-9ee6-2a157d24cb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d34d264-6c57-4c24-903d-4ab8a8446147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d6c182-5b90-4806-a60e-e7e25ef2394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9dcd28-4b79-42ef-839f-9208d5385740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c155d80-40a5-4b03-a0ab-6dfeec157970",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bec9e8e-9b2f-4716-8b3c-24073e36615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666cb863-d7b0-4230-a3c4-750def9c89f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b1e96e-99a0-474f-b17d-c84d17155e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a327b79a-5351-4918-b294-8ac7d506f2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9268c12a-3c6b-4a9d-b1d8-c7da0bd5df9e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76ea52a-7cd7-4958-aed8-ee6ca09aa04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708b8509-af6d-4d8f-94e3-10865a6bb6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c02233-446b-4d1a-963b-e3717a3596e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb2e266-3771-44e7-b29a-0901a089747d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da39aa19-0412-44cb-a2c7-d3b1a8b305a4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3f2ca5-faf0-4425-b747-b0bb4b545006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74af358-e1a2-4857-98af-5cee90473ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecb4793-29bb-4f83-96a1-d583307a99e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3b07d7-00e0-4271-ad09-3b9182e6297a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb73b62-a943-4cbe-8980-3fd4c7d97590",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc31e0-c038-4c14-865d-3cf2e4028044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ab4536-19e3-4f2e-9fed-75b30f876be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40999da6-317b-46c5-9989-1142d510c0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b0163c-1130-46e4-8948-273ec80caa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9c88f1-e382-4587-9927-05f4fc9003af",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0466812-9dac-4980-8128-b9b0c4d1bae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52e37bd-f8d6-4714-9460-24db6d11ad06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47be36f2-5318-4d72-830b-f7c8938dead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5679ccbe-ee3a-40c5-ac97-5725fa5a7a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374db81c-4442-4a54-afbc-dec0e479cf92",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06addb01-610f-4e87-a586-2f6185e95a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d25f7b-1619-436a-b2b6-a0f100784adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21aeedb-05c4-43e5-bc6e-158b35ccc583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36040019-7509-41c8-ac99-db201df83344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddf0790-e396-4c9d-bcb8-d4acf9c45eba",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b34971-a5bb-4156-be54-b1665144a3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c02e33-6b94-4ab7-8ca9-58f101b5d8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539d5bbb-648c-4542-aba2-44ce6957e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8a9c7f-ecb9-440d-a0b2-2c55a44a11ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f32dd4-d6e2-414b-ad6a-19f37a2c7a98",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0a439-13d5-4623-98bb-20b5f6064713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312bcf40-57f5-42a6-b84a-a9768d7a2845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f07196-3dbc-4691-b038-7084697dd503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52ca500-c416-426b-a248-db0da9630ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b50b59-d160-4566-aeea-0c3f6c1808d0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2535271b-dab5-450a-8f8c-ef9069943ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5412af-889f-4f83-b11f-cb2583f3a3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9f75b-73f7-4ded-b155-97efcb42eba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81bd22a9-8ee8-46f0-83b9-2721adc9dd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2d8cc4-6298-4f23-ada5-5351742e3410",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177fc9aa-77fd-4a98-8af5-dd1289b8c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b23390-d290-4abe-b926-e7fe81cb0e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b19427-c1f4-4ba1-b9f4-dee1e0e643ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abf7808-4c41-4b27-b6d2-accecea2a58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbc9410-72ac-4e4e-a30a-4ffb06c518c9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0007d59-6feb-4897-a5c1-f7590b82f028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807387fd-690d-4478-a48a-02c867452563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cce875a-2f6b-49ba-978f-8eec4b3294ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "195d80cc-ff2c-4855-a1d0-300e3d72a65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa07c7f6-81ca-437c-9580-19ea8a96d981",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88f8942-7fa9-4c9a-836e-5be92e4dce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7af02d-4762-4cdf-b6e5-45c2ce0c1771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b02122-b142-408b-a3ff-23036d5e67af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "64df5fef-36da-4cee-aa3a-f939e753f4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c39129-2883-4ee7-8eac-4d6cd38d5bc0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152c5901-7389-49b6-90e9-b8e71c99bbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8713b49-1a47-4e1c-b459-ab8d0f2f57ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93fac33-acbe-4665-81bb-403d8c7363b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b443ff4b-5295-4051-90b1-c21349d13b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2943a010-c725-4123-a622-76bfd9e73561",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e8973f-4522-4302-91d3-8aaab160e847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97416f71-75cc-449a-85ac-bbc34082a0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b380562-adee-4e8d-980b-14c406b36540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "961b4f5d-501e-4a8e-a9f8-92e7c77ab66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138a4228-b28b-4c96-a5d3-5ca6146f9c67",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4d839a-19ab-4024-b4a5-1321e208edc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0505ccd5-8f3c-49f3-a00f-b1feda13bf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f51893-6952-49cf-98f6-1bff6c72ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5574d008-17f1-42fe-852a-8f82bf0b7b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c443b0-112e-4cfe-954e-298a8c829ac2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d027c20-d1f7-4634-818a-f3298cc4f87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca360fb-b011-4716-ab8b-d7a624412d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2eb451-5e3d-46ee-929d-2ef5d5354b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c04391-dca8-4647-a6a2-717a463bd050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4533f38-fb15-462e-a948-c2cfbe810e66",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5736d8a8-eaf6-4d4b-8e51-daaf819fb967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3adaf2-1cce-4488-81e1-3a40bbbfb873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9e6942-2e25-482b-9114-733d809b2428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d9d879-d154-4847-b2bb-03b16ad09cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f50cb34-a51c-490b-bd38-c42fbc2d567c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5e7ebd-b6c7-4c80-af31-26407b3cf2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fb0705-6caa-492a-a8d2-8d74d8af40a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952f1983-6a87-421e-b153-7d5cca322102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5718b6-3ce5-45ff-8eb1-d4bba6151283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bc0d50-9388-44e8-a9e2-a714670d501d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e36ee7-25ea-4afd-a35a-36ae803be982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba7cb4b-6f33-4541-b8c9-061ef4e03d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c552e0-ef47-4ddb-b3ed-e10df016f6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "64a92b41-4175-4a1d-b4ff-a9a0988a3765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4679e681-059c-4541-a8d2-a794c61cc0b8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34431c5-e787-483e-b270-72d2ec751786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181e0fb4-c91f-4f09-a0f2-14674844b844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93344c42-9d40-4200-a88e-4b905305a4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2344ee1b-9362-4e03-973b-ddc6b6c84862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1137f903-37b3-45b7-a60b-407dea3ffe4f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108c52f3-3a1c-48b1-9d87-e7886df0994e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4787e129-0578-4af4-b711-c1c83af426d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5964a58-7cab-4130-bb25-d2119178a289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "262c5e97-d323-4cd9-8578-7e5beb88e83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bac5306-b4db-435a-a670-b95c50380a67",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ad7256-2f75-4ef3-b77e-2a558eb3b89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8edf4b8-7073-4305-97a8-eeaa0dd12d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe119626-2a93-4e17-94df-6c0d01267137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70367e83-5580-45ac-b743-439ee2a30691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67926e3-af2d-4b0b-acca-1425798990f9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abb31db-2862-4ea3-9a6c-4806ba45db55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3b4475-b3fb-4648-b854-8a289d0165d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ad162-aff8-44ea-85c3-f85658c682e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60ba43d-7284-4ad8-bb94-f6e79027ebf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a381ad3-cd7a-49f7-8561-7700f2f240aa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f35768-1956-445f-b91e-9c2a056dde5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf22bf4-a25f-4cdb-99c4-c1c9d6c58cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e302470-75f7-4320-a8b6-fda5115a36d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a342fddc-0a55-4ab9-a1cc-013fec1db65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5140fc45-5926-464f-885d-3c83c4457f06",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95817387-8e04-42ea-8d48-ea6eab7af167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f06981-ea99-471b-bf1f-c1441748dd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937406a8-56bd-4efe-8446-75c988928c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03083e9-f399-43a3-9be1-7f41d2d872a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951659ad-1489-4eeb-9514-287e311d3519",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069b6ff2-afcf-40f0-8a67-3fd7b0169790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd661a8-2509-43ef-90a8-9900c4c72698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e1ef92-89b6-43e8-aefa-3d3dd3651abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f37165c-545d-4a64-92e6-f1a812dd56ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc84a400-6834-4586-8082-3f3f9c4bfa71",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4eb778-de1b-4f87-bc2e-7fdb9e7964d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091d5334-e16f-4090-9683-8d452e3fee24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb42b07-81bd-4707-8d33-06ac4fc96625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0672a49-4ea8-4795-a05d-ef6b76f2da2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dba896f-b8b8-4f7d-b290-7c32a8018edd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cdb5c2-c267-4de7-857a-d95cf28ff6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e27fb9-a8f4-4bbe-8b07-5bcc8a49a3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f623446-075c-44f2-9ac1-552344058bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1822faa-7c06-497f-85c4-e09b2bba60aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf39f1aa-6ae4-4989-8032-363362f6ccf6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdc94e4-f104-4637-a295-4ab7bce66248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51e3a1c-f1ee-4c6a-9901-37f60f5d01de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c220724f-5b71-4846-a34d-45b9179c9fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5870b5a-efe4-4306-b00a-f7b3c0d84c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e41c918-6952-4fd5-88c9-4e4845acfc2e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0ab808-2c46-4aba-908d-6825d7d8477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ae9113-5011-4543-a696-7a5a8cebf8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c5192b-7ec1-4aca-b7a4-2839bed62775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6328c645-2b0d-4ac6-85e9-f662d5f6ca19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecf93b9-5166-43f4-89f1-cf0b05dc10f6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c666b0c9-e674-4d62-aa08-8a84207ffc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98a736c-605f-4e53-b062-320f7416ef28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74f6062-7c58-4ed4-b217-43f17eb66b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74fb09d2-fbfe-4678-bd8c-818508b22b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e33b006-2350-40c9-9be5-90fbd8a2cdaf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434ec75b-fbc1-44fb-9cef-0515786c6cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b0b34e-b1db-45d6-869a-205860c10e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980080e6-469b-45cb-aeca-80ed0b84e33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f5226c-b2eb-4e85-8e62-d1b917372ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b751c226-0f77-43a1-be6c-74c24726e2c4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee14075-2a3a-4e3f-bc1a-f14efff15115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb87255-e774-426e-92de-cc35cb553df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5352377-7dea-49bc-bda9-000bb803fdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f8eb98a2-1aa1-4a66-be44-d8027d62b382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e530c7-f9a9-425f-aa8f-2b03aa28fcfc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66514a0a-eda5-41bb-9bdc-ddd54c39ea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0a215c-0d3e-44ce-a97d-357757e1a7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1967f08c-33ec-4837-877b-911ad9662ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f30830-4fee-4889-be75-51a98a0c75c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5763d1-5e35-4dea-a511-3c25dae50cb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48fb617-3ac5-43ef-a5d6-fc3e4abb2b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a96e8a-81e3-4c58-a130-97a57f4d5220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5be997-15ad-4965-80c3-53676aee853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e859c88e-a104-4142-968c-d641da053191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afe6ac7-f8b1-457b-b33e-cd0b17375848",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de71729f-8306-4443-8d38-54406306ee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b9dc9c-357c-499c-8679-c71865155a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e910ce-d28a-4dd9-9279-7a225cbdd2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20b7bb50-e10d-4a63-8727-55592cf3d48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f8aa8e-992b-45cd-91da-6762ad4dbb15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff50aa9-1894-40fb-8599-4d4fa024a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554a947c-652b-44a1-847e-59ab32b6bb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d563f28-6465-4cc3-aaa4-8fa6bc33e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fd12a5-1cff-4420-8610-f44129f69d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34adf5ab-d4a3-4f33-b25b-e12605a8de24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da41020-f736-4c95-b34a-99fbd1678b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586f5f0a-c174-45b6-8b4f-1f3c7c53ec26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd78d96-cff9-4592-ab68-b4e456492ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "61d3af2f-5020-45c9-85ff-1fabd2787011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0605ff4e-e34a-40af-b7c3-84dd4dc22517",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6dbbfe-7a40-4272-9786-c70cdb49a050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ed2b6e-f4cd-4154-952d-603990efda65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50a0007-d1b9-4491-8652-1c5dac69c474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d7c974-150a-4bde-8928-86c5352d76ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42690e92-c3c2-4efa-85dc-fe542479762c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b692a6-f7fb-4f7d-bd6d-18fd15d33552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30ab9f7-df67-4ffe-9f4d-d2f1e8cba894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3175bc94-5e53-4039-9ed9-a894aac2da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "46008c2f-547e-4a29-b18e-7f4b4664fa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ce0491-e638-4224-aade-19d537398368",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df708793-4b53-4dce-97e9-813053572dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0c8675-0902-4de2-9e9a-2d551af9db67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb79767-0c8d-46e3-b141-3a81662d0dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf30c57-cc3c-4764-9500-9a8431f3208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ea78e3-cec3-47ca-99c2-4626d4dfac99",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535175ba-ba64-4fa6-9c15-6ad167b8344d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c2a1c6-3bc2-4fe3-a2ca-c784a5062722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3144ef-5658-45d5-91f3-0fec56a3bdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bbed86-f6b4-4b6b-bc96-33e1f90cfc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06fb5ce-1619-4a3b-835f-0bdbd51bb2c4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afc2a21-3304-4088-bb3f-5f7b681d5661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ab6d69-52af-4006-8a79-f6ff1e03a278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e367442f-61c6-42d0-91e8-85e6412b38d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f3ce67-0439-488b-b778-7c172bcab038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09343f18-0832-4f1a-9d42-7f19057b9dfa",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1502e4ec-1ba3-4b99-9dea-952e3be03c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9614b38-90f6-40b1-83c9-c786b07eef28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b558777f-c64c-40ff-92df-055fd2f550a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f43d6998-dfcd-4eb5-94f8-abfc78b05afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5511ddf-c927-40d5-8d71-16a742a11de1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d18b1f-0cd6-49ed-b281-24ce8c4c6ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7c0d70-8ee7-40c2-a36d-dd3f770cd943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920534c5-da21-43c5-9ecc-524b03ef9df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c4c432-9e8f-42cb-9f20-aab3e2379374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373ab206-3f32-40eb-a1c4-1496cd2b4587",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98d909f-713b-451d-ae34-95966aa62075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dd5930-6f60-4961-bde2-4abdf2ed9f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d385bb-c8a5-43a1-8814-030b3981413d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fded3de-1a53-44f8-a758-9380ebbd8d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569dfb66-5185-4972-a480-49eedaff00bf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d9e5f2-5538-4e37-9e15-0e70149f5595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5179249-4278-496c-9ce5-59cd5cd99879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c37667-2cb9-4f44-8255-612604241e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c94aa0b-f3cd-4f07-997b-822516686841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ae4b77-6261-43c6-9f26-a7f1d3e177da",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f945602b-9c46-4035-9e10-f033b686520b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5269b38b-0352-4acb-8104-c1c844ef8067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1769f9c5-34ab-4c42-a5c0-c67ebb92febf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff83c41-9974-4b09-8fc7-636c7d16d4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd385bc-8a4e-4fc1-87be-d462c3c4764d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89db72e-555a-43a0-b92f-38c10bf5c3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8197a068-06be-42d1-b4a0-ae0518fa9376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e2353-ad9f-4ca7-b7ba-976976707ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a805c0-4cad-4605-8c65-04bae973ba98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e784ca-d281-41af-8831-67ef1b797b7f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b5dfb7-ab57-464f-9646-75044365aa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64c48c0-eab7-4593-83d2-ca82ba3d6e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f912c7b3-a661-4c9c-8416-1ebfb0c38551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5c033a-c889-49f8-a974-6e59c46d0fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff91f55-20dc-4a06-8c1a-f3a213bdc7ef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed62f769-1511-4d1f-a6cc-49ebef691cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11766cf-2a38-4ca4-a2a0-832cf9537f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b822b11-0108-4ac7-b84b-19bf58a31577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a53aedec-f645-4d48-8667-5faececcdffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d6b3c-8214-4af5-ad6e-67b5506f1d69",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9ae459-c9b9-492c-9791-cafa9e592ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac62b68-1687-4e4c-b74c-3bb2714e391b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4eac267-82db-4186-bd5d-975aac99c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ad40bf-6827-46f8-abbd-5b1ac6106228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72680174-cc8b-4f0d-8b7d-7387d4bed17b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8955bd03-4203-4f56-884e-e7e9a5b90954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27aa64e-0fda-4f98-bd74-f2bbbed27f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcaa910-3f61-4289-ab36-0cb125197aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11703d67-4548-4251-8b09-0f4fe3d4028c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453e166a-aa0b-49b0-aaac-c0f3d105c1ce",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d2fb53-3d2f-46e9-a6da-11175fb2a29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5208c02-5cc8-4376-a88d-388134e4580e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6153a347-7d27-4558-83ed-6cbbbf90306b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab75607-fbbb-4da1-9daf-8aa96008c8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db697f6-318e-41d1-b61c-a4513988da4d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257993c5-5f3a-4541-9123-56c58d67069a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48414fb8-c65b-493a-88d2-424bfc6afe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c73b824-cad4-4715-a08f-24593b790cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "baf45f66-c8d3-4f50-bd3d-2d677f8d8e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6de7cdd-1116-4ed0-85be-ff5d751c3225",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfee422-c0d4-4e5c-9fb7-dbf1fc9d7da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1208fe-4929-4c72-9675-3f28c10f821b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7ece68-99af-4925-9c16-c845047cfe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f71205e0-2325-4455-97af-c59106e9c352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e53f18e-b6f2-45dd-bb83-d05ca240f753",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eed8b49-8d13-4f2b-9c2e-9c790ccc5c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065c6d88-a598-4f09-a8e6-f07a0d916dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a57bb3c-3ebf-4da1-9b02-33fc14100ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d81c12d-9806-4dc6-87cf-570dfc7fafbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b746bf7-8d45-4ea7-9955-649339c21d79",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d9e77c-11be-4324-a589-7eb190cf9873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7378d22b-7489-4358-8d38-473e95983969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2e5d9a-82ac-41eb-84e2-7ba94ca92578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "337a868e-a15e-4ac7-8846-f06386c9c089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47beeb48-34ae-42fe-be98-e5fbfa693e49",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4f2d8b-71ca-4605-a7d4-f85da921410d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a131e30-c39d-47ca-86ff-595406aff01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9349084-288e-4c31-bcf1-fe76095d57cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40a7a1f3-b9e9-4265-8585-ccd96267b207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778c0b63-5184-46ab-ac98-dfb129f648ae",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39e4e31-b13d-4417-9eeb-b4739f79d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302dabca-9bd9-4279-88b8-6697c47bcd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819ba993-c85c-4edd-b49a-5e9963ec12e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47100eae-1548-4f05-876e-21230dedd7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d6cbe7-c92c-48c8-8b4d-0bfdf2ccc971",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e7ff52-d9e1-4966-9256-85b6c866657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca59b15-d860-403f-bec8-8d0946c57697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6ad94e-082b-437a-a60f-823e08d833ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e812e7d5-e897-4112-84e4-bad55327f38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99cb0d-54de-4c9e-8971-f7c4d775a1cf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0be43b9-ef7c-448c-b204-b0984839df47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd1f58a-34fe-4e48-8fb8-6f1549c958f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d21509-ed4f-4d6a-a401-e26590ca3612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d71f8e31-7a86-4cb8-aa50-71e42a652a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d819f05-7d41-40a1-92b9-4120b4742787",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02b8957-a256-4b5c-a325-851f46223242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204036b0-8f71-415c-9329-4c6bc9b1cbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284d5de1-ae78-4898-bf55-aabba8ed1f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c079000f-5022-4351-8b89-d23f5b28579f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febfe347-14f0-44e1-8073-ed2071c2ed7a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d585d71-1729-4e42-9974-d5cd1af0533f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c498d8-aa45-4594-b26c-fe9b4d4dcd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbed42b5-65a8-44e6-82ec-d3f6d9007192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad74c7c5-e4f2-4a09-b60b-15157321034a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d3326e-6167-4044-a78a-c0e361705676",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffd4292-6162-470b-ad5f-3cb90d8ddbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f773e81a-dac3-4b37-8c73-c919285e71cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc861cb-3b14-47b5-bdb7-16f042e4ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57b80b5f-8432-4629-bfcb-9202a5d0f792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deaf7d9-ae7b-4215-9c7c-81a697459961",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442c93f4-9c63-4e27-b829-e4806aafcf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bdc082-ad01-43ed-a43f-dc8ccec4f6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e476347-3d78-42ed-957f-30c12eb6cdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64a32562-5b06-433e-ace6-5c0c3dc2ca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63524ab1-3682-475f-851a-2a60c03ba8bb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe11c938-0ec9-4856-83cb-f22ca49eddfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d2ed91-ef28-45bd-a3cf-487ed87b35e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6004b7b7-c063-459b-9100-8b5ed017adc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b634ab13-a570-4fe6-9f89-8fc34e75eef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39ce8ab-651a-49f9-96b6-1ce0c8a8a8e4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30f740e-6423-439c-bef9-6878a467bb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54920207-6d35-47e4-93f4-976cdcc32e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885c68b5-43ad-40b7-b820-77536f971e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0e1769-e863-4a14-95c0-9828d3c9e548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30950f7-fc13-4e45-9857-9406166baa8f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565b9bb1-0e44-4ca2-b41c-021f552a6d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "20edc654-cee0-4175-8921-f06008106690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88c60b1-3a30-4201-a27a-1211cc0ec6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fea2e4d-0896-4ab1-96cb-2cc0b97867d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fad7c7e8-b11e-432d-8c0d-3407d056aa96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "883aa51d-3c2e-4752-a13e-73448d634c5f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12b5a85-e319-4534-900e-d894d438eaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60bbbe01-4bc6-41fa-aae8-d67e84d68c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc504636-45bc-4a73-ae1e-0e96fa59b0e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b664c93-df27-4715-9ac6-bec92b63c165"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b1b176e-c4e3-4e2f-9425-b75182141a03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "378c3940-221b-490c-be9a-076ebe54eb13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b40dd4f0-a5f9-4da5-a9b9-8eb7342c0e57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27e0d44b-d6e8-47a8-bdb5-3aa6beed5bed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8cbbf30b-cbcf-4b72-b8c3-e195deaf3a2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2680ab9e-d47d-4072-be32-69ece02b2404"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dea7f41e-c11d-4281-8fcc-15fd5c450ab4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eb36777-7e0e-4f96-b936-2246c2b10011"
                }
              }
            ]
          },
          {
            "id": "c8e873da-67dc-4631-896a-b4e42683dc3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2aab4f7f-eebf-4e19-a74d-005b7b2db580",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97f51cfb-fbf3-4539-9a32-feb839c3225b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66610c5b-3b01-48a3-bc99-ad98ca746aec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e788df13-5284-4d5b-9f3f-cf383255b199",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6219901e-b422-4fb6-ac1d-e2ebe250cde4"
                    }
                  }
                ]
              },
              {
                "id": "18c4e157-4d3e-4734-aefb-e98be24efc6a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51d992e8-2b94-479e-a35f-9c00fc1137ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e854eee-feaf-4533-a708-fadedc6717fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84e1e1c3-fb6b-46e5-847a-af711d083930",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b9e4b8c-ad49-461b-9af5-a6bfbf8ec417"
                    }
                  }
                ]
              },
              {
                "id": "8eb0335b-73cc-4006-8798-11e8ad5d3f26",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e0d4848-a681-49ad-a2a9-95483ccbdff6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc38cfa4-a90b-417e-8511-e4d054317822"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5849e283-d74b-488e-84e8-e1d0d6b43a61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85870a6e-f272-4d78-afb0-bdf55acec653"
                    }
                  }
                ]
              },
              {
                "id": "6094c724-3bd4-49ae-9f22-b7556a0c5cde",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc8ad450-49ea-402c-8ce2-f0cece51d06d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f2508cd-ce84-4f11-b8ac-5bc5e0f2dc58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c80bc03-b92a-41b5-b618-029e6e2d1b71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c0bcfeed-b067-4938-929c-8742566ec5d8"
                    }
                  }
                ]
              },
              {
                "id": "2992efb2-f6fc-4add-a4f4-92af0301a00b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9552f7dd-02a9-4958-af5c-460ae2738e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e688f238-ad60-4516-9d1a-0239d36a4172"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff19754a-c6fc-4339-8fe5-1b4a6f047525",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1008501f-6818-4794-b9ea-0a0167a15fb2"
                    }
                  }
                ]
              },
              {
                "id": "62aa10cb-a86a-4a44-bdd9-85975cc9eee3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "974e4159-a064-48ee-ab51-060854bf7f9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c91db499-5c8e-4843-8148-aab77b88cdee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "601a4491-5c65-4f4d-970b-38b1ba105a56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d731c163-985f-4c1c-8bf5-4f6a8ef0c670"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83025454-b560-4c6f-9deb-c857216c1557",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41225fe0-49e4-480b-96fc-b41dbb6c39bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ecacf10-ee40-4be3-88d8-10751dc9ff55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b673ad58-463d-4cf1-801c-195a4d67551b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "122245d0-e9d4-489a-aa91-8f109994097c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aa1e96f8-8527-4b29-b5f2-5f5407839bb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76b15b54-2c6f-4ee9-986d-64b6084c5786",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54b238bf-9e7d-4cfe-8108-6cd1be5ededb"
            }
          }
        ]
      },
      {
        "id": "3e7fd2d4-d147-4cc8-9c05-348965c157aa",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "59119b3a-103a-4c0f-a646-fc0460966f32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a37c0f6-a0fe-414c-91cf-1a6b42e8f5ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7919f7d6-8394-4c83-a5ba-6a0eb26f7313",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1839b182-92b7-43c6-ab1b-242096aa5b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67759c90-87cf-4eec-bfc3-e94c14f7718c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21baef5-867e-47f8-86aa-57cd30688335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbd042c-5f70-49cd-8677-18c67bc07597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1065c6f3-4b22-4979-884d-9faff92c353e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239883c6-c8ae-46e2-922d-8102e51b18ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef271301-f16f-442c-979d-dd8863a25297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0a2308-2fa6-47a1-8179-96562ac471b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "992c8227-44c7-46d1-bf95-ca2e30d50f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a33445-f11c-42c6-be61-b171648eb76f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ceae6c-0936-4d99-ab4e-49a2a910f673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbda35b-936a-47fb-97ca-ebb9ddad5ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ae80ca-3944-4a7f-9ab9-77e320b3969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "391fdce3-1de8-4958-abfa-be57f208e4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf2946a-d4fc-48c5-bf4d-c270df62b5cf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc240038-8fde-4f94-9ab5-933fe9a59ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4452dc82-2533-4099-b9c8-49b6f656c305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82663b9-29f4-4ba4-852a-ac5793229e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "249e0143-9eff-47c7-bce4-6e405b584825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fbe148-1961-4b0b-82b3-658e2437405a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fc0524-6edb-4d72-a1f8-346e64b909d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad17530-39bf-4799-b7a5-398c52f2cc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b620df9f-9601-4ca6-90e5-39587b7d0589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "409938a6-54cf-4db6-bda7-75ad0b3146e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0f5027-58b2-4786-8286-a31b01bed6af",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a52557-cb7a-465e-8692-d1c7ad2d5718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ed18fe-74ff-4630-a8dc-de877f762809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9580c525-d68b-4b19-8d67-56ceee44c272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fb793b-0094-4b0c-acfc-c47c4d11745c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ab335c-887c-4985-9de5-64e0bbb2df90",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fb807d-71a7-4c33-b954-cb3f60e9b9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd7df63-50ac-47a3-877d-0514f7fd2c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ad28c7-d725-4330-a81e-b0e483f0965f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9133f9-582c-4a71-abac-210eb6209a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb57091-f090-4513-ac4d-1a2ab5613490",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bb1a13-2b76-4886-a352-a8fbee72a425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17512436-7bce-4185-91c0-494af0681a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f6fe52-d21d-4def-bd2c-da67522bcdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37660012-02e0-45a9-ba02-2cf93bba5cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df28049-6896-4529-8dc4-fa3b8c6b2ef5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af488972-3124-4379-8b5b-392261077805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9580acc2-652c-4994-9fea-00d5f6eadbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c5b039-d023-4463-bcaf-ab552092ab70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "865743b7-7214-4ddc-bd2c-05e755cd3cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2731ce88-74c5-4916-a60d-45933b639d47",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254835b5-ab7b-43c6-b8ad-6fbefc89f252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebe0a17-df3e-4cee-873f-46e17c06a519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca3fe86-85f4-4142-927e-29543a39b8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6670ff2-707a-465e-9002-fb89f661383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3769199a-d80a-46f3-9e1f-da47f57d2688",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d6065b-ac3e-4e2c-a4ae-b4653e38f960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5259cf91-7a59-4e7a-adb1-d476cfbeb1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef64e8d2-4035-4958-a14b-a77ba23ea945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5eb783-9f79-4414-b267-ce1d87f610b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303117c9-3644-456c-b64e-9d37cdf95a72",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613c91d0-3236-48a6-b693-3ecb78c163e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abacb0f1-b943-40cc-8e94-76207c8e0f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3522328c-0e38-4ccb-aa97-d4cac0b16c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f0cc0d-854a-4b69-944a-5a744c0c45e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3fa509-53ee-4d47-a5a2-0534e7648ac1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b426b5eb-61a4-4525-8d9d-08090e8abe54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9943bde-d65e-4823-b864-111c1278a9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a16797-b120-4e74-92e9-4595b9321940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c06e00c0-8a4d-4c40-81b9-c96b6953a320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786e11a8-b846-4fbe-a8b1-18d81fc4c29c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1930aab5-e22a-4706-bcc9-061f5682cf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff69ff3-0e30-4a63-aa1b-8ece0744042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0620bf-785c-4bb2-bfd9-ad487bc8ca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d754a0-0681-4b91-8e35-e1b0beef1277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741d5796-48d8-4b42-84b3-3374949b0e10",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eda716-4795-4ac6-b224-af370d5a82f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e1894a-0a45-4e28-82f2-b93aa837024e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e70be55-ad69-4fc3-af10-ccdc33f2e63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d78c22e-34f6-4367-9e5f-f50116e476a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e744b1-e6c4-4f1d-8e6e-b3d08926be1a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93672b9-07b1-4fd8-bb85-89b63362ddd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a6400c-7ea2-416f-91bd-224e5bbd920d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a516b8-076d-4946-b008-d8cca033e2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94ae39d-8a3e-4e46-a79a-752dab1afa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e068640e-e368-4c9c-ab04-235489273785",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239893ba-55e7-4f79-824d-ce97f3c9be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453a60a7-2304-4f46-bf91-26f73cdfd7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10af5ad5-97c9-43b6-910f-24374254fcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "816859d0-73cb-48f3-beff-9d4cb193afe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b664ba85-78aa-4812-9d4e-305bd972e120",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2951ab58-1ed0-44a1-bcb4-16cfd4c9dce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3799f8d5-95e9-4cee-b692-c9190f5f9345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb0f255-93db-4b4e-8ff4-1331a4572fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c364773-eab1-4461-af4a-8b13b05a30a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bd6bc5-2448-4bed-9ef5-3cf58b0486ef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ce04d6-a6f5-4358-9ed5-23dc48e15753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bab2d9-8734-457e-ba2b-dfda6d794a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba71163-e85d-48cc-a90f-19202e83f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f1cb95-9cbd-4ad7-835e-0339fff3ff5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a48f172-4a19-40a1-82f8-427955efa328",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b869d059-106e-4d62-843d-264d7e0cffc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bce0e35-5e49-4b64-a467-4064dfd70d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0347e50f-95c7-4a65-8187-41bcf12a50c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69132dc9-e019-4277-be53-312143678320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5b4f4d-2653-4cf9-bf49-f1bc7db4f7e6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b08775-0621-4a0a-bb60-c47588114da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d397b2-7534-4165-a93f-54f3a1b17362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdee397f-9165-4bd9-a37b-e3eb85f5d6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d844d2a-a020-44ea-ae5f-aeee52b5b47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69e3e21-1499-4c10-982c-84eba13c6f4c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f0910c-ac6d-4493-a72f-2c0a17ce72d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b199fa-70f6-464d-b726-f476026530ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a34a053-6277-4e81-bdf4-f48fc74ff9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2b73bc-dad6-401a-b229-36b76478c27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c8c6c4-4a78-4840-9cd4-624bea47650d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca0bb9-4884-47f7-a370-80398cbcc586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11893929-231a-4ee8-a10d-f89f1cc0405b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f255ea-2788-481f-a2cc-c859c4313992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04b1ca0f-d712-44e2-b6d0-cc177f0e3d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87735e4-3f16-4d09-a1eb-8e7277137a6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881b5d07-26b7-407a-8d3b-af1c28340683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321d26fc-c502-456f-9d0c-c4c55efe6f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaec8b6-ea18-4541-9031-31c1f77406cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad384487-21ca-4a16-857c-9bf3a93c7768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d58fe9a-836a-4e0e-9bca-fa02ee34443c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e45f09-0257-40b5-985f-0878df85daec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37892543-c89c-40a0-a7cd-674b6b2ca5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f2dfda-d80c-47f9-ae5b-25d1fd96b259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54d016c-2c6a-4378-a9cc-b10b19ef1536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9e4330-54ea-458d-af6b-8897d92ac08f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964f008b-f62b-4100-8bde-8c0eb80b18a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21534c9-8de5-4606-afb2-bee45d905f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4f7dd8-9d6f-4ed4-9c67-5a465f5c5e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff48ad0-2cc9-44dd-aa13-631898f66f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4100c5-6b04-41bb-bfbe-c4425a841e98",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0ca831-b812-4cd7-9da7-6607922ae74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5b6c77-8938-45fb-adc1-b4522a692b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57b4f15-f0fa-4b1a-83c9-d10ae7c7edb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb3642b-e9af-4f72-9148-e1d7f11a323f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a993f3a2-726f-453a-bfc6-ed3232ab9202",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895cd018-ed29-43b4-b03c-529525a5fe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c31445c-a84d-4dcb-94bf-69ae630fe53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73557ba-3991-46e7-9e58-ef4438a3c396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "825550f7-2a1e-4877-a9c9-c4624d4f7d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8d080e-cc31-4577-b322-31e84e6b4220",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f15f503-cdc3-4e7c-bb0f-84a67a07eec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0387b50-4ec8-42dc-a527-2e00eb01652b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba919d9-861b-4d0d-95ba-1ba33b88ac85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f22745-86c9-405e-81d9-1116ba0d1b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2704c6f3-45dc-4762-a9d3-8f77003e6e1b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87ab897-951b-465f-a9fb-783a752b52ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ad7728-f633-4c21-9480-e866a9fac469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40714c6d-41ea-438a-b5d3-e745aced8315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "550d15d3-ccdd-49c0-a2f3-2d865d21502d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c110d6-b9eb-4a29-aeef-f71a74d2f8a3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523dcc45-ebe3-4905-987c-27b89eaf9401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faac628-1280-475d-8dd5-f42ebdf5eb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8157ef-471f-4035-b9b5-634008f8c7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0cd7a7-b84a-498a-821d-869801e41254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a627960-0366-4916-8f5c-a1fcdd6e440f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e4e1ba-169e-4aa7-bb6d-32563a485440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85472450-9145-45e8-8bcf-bd7668fcf151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eeb4f8-34a3-4627-8c68-7ae6ed6fa52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7173ff2f-8d22-4e02-9b05-428ed1bdca40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "544a2b96-495e-45a4-811e-9a7386526a68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a4ac226-90d2-4755-a81e-0c0dcc6603e8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47922b54-edcd-4c15-8a7a-629d1dcee6a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2054fe-f9a4-4a88-abb7-a9e78aabe2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdca3788-8416-4631-ae1c-717ebcfd55a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3413c73f-0f2c-463d-841d-36ccc0a99579"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf0651f1-a379-430c-b026-5102210460c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57d78255-5cae-4d8f-a111-cfbbec98eeda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88da4c6c-ff3f-44a1-87aa-39d4ef67dcd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70ae0077-7fed-46ff-90d6-9e662a482bf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "017843e2-b971-4fa4-a418-4b0c51582dc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42e5362c-080d-4599-9001-7462061c2c1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf096c04-bd61-4726-8f98-0a44f7aa2a04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a913f44f-bca8-4f25-a545-4e02f9d0c53d"
            }
          }
        ]
      },
      {
        "id": "6bb0b876-4777-4d4c-a81a-58d293700741",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5a388c39-dd68-40c3-9e57-152f44c0726c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "485ac584-6ddb-488b-9a3d-6ddc91e0e7d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf7653e4-9806-448c-94d2-143fdbd5098b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee81ab37-6f50-4dd8-88e3-c057623f0689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a186bbd8-dc54-4550-b6c9-725bcaabf07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a05201f-cb93-4792-b68b-9930614647e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "275855f8-26ef-4a93-83b0-d63a3e756074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336dd201-01fe-4325-a523-14d5cf6c93dc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba93cd53-b750-42a7-823e-ea41e7ece6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1696cbf8-bc35-472d-be92-f1c03050508d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376e0da1-f9a2-45c9-a951-93b7ce44f77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20eeefd-6f0e-4440-a2e4-576d46e80331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e145db24-3751-496e-a609-0e2968b4c5d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb531f3-87fe-40af-95a8-464d6eaf639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc61ca6-ea85-4d37-a2f3-118faea9107d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93f7366-b947-446b-9376-6cfc2f9ca54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5686ea60-eab3-42a5-860d-dcd80b4cd1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc495f4-b294-4de5-b50d-499b1033c0d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba990c75-e6d5-465d-96a4-b8affc7771de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eaefb67-2f74-4fde-ac08-2edcffc1bdfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d846459-4ed7-4ef9-af85-38d9db8ee017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d543f7a-df7a-413e-8039-16f5504ae2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a822b54-b7d9-45b1-9ec1-9fbfe81e7674",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e6ba50-b449-491d-af77-f044b9ac2266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a383cd7-c87b-462e-8c92-b52cd993012b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dfa055-3531-45d9-9823-8629e46b0787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2882394-dc93-46db-be6b-f1c9450723f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d29d16-6eb8-4cb9-81f2-90e8e568c6c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4df113-3ae5-4674-b01a-92a393587f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48ab339-4e24-4d2e-a918-9a3268c31a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee2167b-dfd4-4880-a72c-721d754b4633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96adae11-0a68-4cee-9dd7-e1a144d32e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695830b2-3534-41b1-93a0-628853579d2d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cf184e-e952-42f3-bbe2-1da064f52994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ebad9b-b9ec-4e5c-8c84-dd5fc9b56be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d93d2c-7f12-4df3-96e6-a2b2998e088b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e88f1e-8f25-4f6a-b21f-b20cac5171e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f121260-b404-4f81-bfac-384c3cc0be35",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8207522a-d010-4777-b01c-86554e3dce4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2084cea1-7b84-4e07-af66-7a8c1d80dabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4793ae43-d729-4d5b-8f10-b9bdb1429f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88f21cf9-3344-4386-a605-6c7e5e3c4a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262621b9-60c6-4b76-8e29-0e38ad9525a5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1fc011-7568-4823-ab30-4a423f23d52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17c1d6c-1a7e-44b9-af48-568fde676df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3079f095-d05a-4caf-876d-328fe2782df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c5e244-b5a0-46e0-94f3-3cec299ae6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f73b5f-794e-4922-87a3-23eee559b16d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53740a0-c021-429b-8a73-23765c298744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f2c87b-053e-4fdf-8cf2-0410dac135be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e11035-2aa2-493b-93d2-0e74456c304b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4e138b-f09f-4ec8-9d21-7231ea699475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9800b3b2-e5b2-4ac8-8dbb-8a2b6c41a598",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d40f5c7-4870-4381-b35c-4115b153eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c800df-d660-4ea9-89ea-05bedb82bbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54809d7d-42bd-4151-a981-37357469f1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "895e4783-53c1-4d82-86b7-841a23550b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b790373-1133-42c8-b13f-672e317d2c5c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6875aada-e4a0-480a-8ac6-37c59581d636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9304f811-2e85-497e-97e7-e9c7cae25762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b21a11-f221-457b-a2f9-b072c1a3f74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87d774ec-8131-4e09-9fa3-b8cd2203a989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dd5ac2-052d-45fc-8e97-5bf4cf8c0360",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7de2751-a742-46c8-a2fe-e1d516b1e796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d4454b-fda7-4005-a848-f405258e7ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18704a5-62ba-44be-9929-7f15b3131489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b470250-9146-4d28-b30d-5bac96a570dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca18e1d4-5dae-4e35-ad26-c4e7510656f9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bd3dec-e5ad-478f-aac0-51e1a3194308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b601d9-9b69-4fd1-bdba-fd05bcbd8d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e67eac-09a6-42c4-b38b-1a48ae6aeb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0999ee35-b66d-4fa4-bfa9-c5de649f0e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653fb823-d894-4358-bdb8-459a6974b2fa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea89d110-b1a9-4b20-8196-0cf69e960137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197f63a0-27eb-46f4-99af-cc44b8870f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfae6c0c-8ae0-4ce4-b435-b55cdc91350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7bbfc2-ce4e-453c-b9f7-9b7e1847d497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d901c3-06e3-49c8-8741-666ea4da8ab4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852261d3-b8be-4355-b8f3-5557897b6c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac46385b-f8a6-4ad6-bfa1-4ec47235fa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b415f38-3e3a-471a-88d4-4affe7989026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d016203-ba3b-4140-9f35-1f50bdf60c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb38663-6766-4ff8-b162-25459f83d3b2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae206f62-5c4c-4879-9141-3df0be14ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128bda37-18a3-48ae-a756-7866069efd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd0b88d-a5e3-42e8-8224-f795255cfca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d77ee36-4a5b-4630-ba64-af5621115fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1400f3ff-350f-4c0b-a464-0f42f6f4c631",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09557be4-5f07-4185-9aba-2f5e42f08e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96684913-26fc-4196-982e-04f2c0731e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbe4e41-d9ce-4861-a183-6748a132be53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98be1d64-0528-4c4c-b224-c6b402e281cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d813d3-68d7-426c-8219-991754ba57f4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a460e424-9beb-46b5-8599-f3c17ab245fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9b7c1c-a235-4358-ab1b-9448ded67f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa89d87-200a-403f-8928-a5fca7e80dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "957fa27e-13b1-43d7-aff1-37abd5fe5441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4679f9-febd-42c1-8aae-3b0576ebced7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f538ffb-4aca-4e30-bb88-f75d999f0df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4071f58-4a0b-4444-a239-f07e8ef212c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7a09bf-893a-4878-ae61-babbcff63990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbda3a2b-f61e-4eec-b108-fd8b5242942f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc36ec1-39fc-42d7-8c0d-0f003190cc9a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab4c6e5-c739-4d42-a7f7-736bbc1aaba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4555861-738a-4015-b5a4-f42139545d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9dd69f-b492-4fc4-b652-1a7bae226286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfe7e0d-88c6-4471-a013-eb37774aaf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c67e571-17c5-4444-9c8d-20b1efc65729",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1794e59c-4e51-496e-ab4f-bbd3c991e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8e0a84-11fc-42a1-94eb-474a79db138e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffe24a4-9af2-4a84-8e82-e2ea751196a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05ef18f-bf5d-42dd-8c62-739ec90f4f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39894009-b638-447c-bd42-8af2754149d9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef90431-10e7-42ec-8358-fe6ab89a4d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d745aa1e-bf36-4346-a983-f761a1d35da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef528942-c13a-442c-8cc8-cb422df64825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae4df27-f178-4dbf-a398-bb946c949a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ab2042-098d-4fe5-a042-4401c26b58e0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea0e660-2916-439c-9bee-d37a3036e91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca74f6af-29c0-4105-914a-b918bf99cea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb25720-9ded-4db4-bb91-6c8fe2c2cd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7d5bc6-5076-4746-86ac-f2ca69fbb8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce4750e-6478-4611-9d63-c721086f21a5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104b7cf1-8df9-4fb2-9c67-2d59407ce8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50d4cf3-5ef8-4316-b777-7f0fbab4bdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbbd1c6-0e04-4fa0-abac-50103a78515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5808f9-8854-46ee-8335-b2cbacc913be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829dd120-bcab-4207-990e-c0dc86fc7ef2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6b6e80-bb70-443d-b52e-66587f3100cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04950cfa-600c-4e7d-934d-4601c7f16672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f79830-a69e-496f-9499-9e87d213081e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "570bac3a-f183-469c-8ab9-5ce50a5ff2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772fb1d5-5278-4554-a169-f2620f638b74",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a983a9-ecd6-4a0f-a78a-166a5cfe347a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58392424-3101-4811-9d9a-fed70b7885dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeaba71-5c92-46c5-87cc-c1e4f5b3049b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "819edc8f-8e66-4d27-a75d-2b0e503f4c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b846b5d4-54e9-44c0-9cc6-621408a8985c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020167ee-8d78-48bf-a1bd-694319a08205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd4139f-565f-4e28-803c-892a8ce7c53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a388c9c5-2a42-459d-96db-edf51fbbb95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de0944c0-c804-4890-8230-01dea0c71956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0bddbe-c9ef-49a1-9cdc-2fa3fa8a4ef9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b965b25-a052-4979-9811-de5f3d205c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4360c4b0-3afa-4b1f-bc06-8588cd979161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10bd4b2-f9c0-4112-b095-0c88882ba66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d8c457-f3c4-47ba-87ca-d50b775013c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4898f3b-6b73-4b31-b8ba-25e1efee98c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51f2bc8-0afd-4eda-b8c7-e3d999faefed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693b82fc-f743-457e-8917-157e207185dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76638533-1666-4a67-859f-1cb342934efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ee1f03-29a0-4f1d-9a99-07b98fb3cebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918823c4-6897-4570-b7b6-4647ab754c53",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abb5569-290e-44dc-8159-4d0685ee4918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e38f908-7423-4618-b0a8-b96fd8c19e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c815f295-e28e-4b2c-956b-05d891990eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fcc8ee-9bbb-45e8-86f6-a5e9cc0b3d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d05227-bfc5-4a79-931e-2d08eafb2617",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b47b994-a07c-4069-91e2-995041509cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616d37fb-6ba2-49a5-92a9-4587c2d0044a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ecd56c-ed1f-4750-93f5-4a6e7c3e8bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372fd60a-49e3-4c11-bd08-c0593dbc603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4fcf02-899c-4585-a1aa-45d3d0f4b2e8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016bdf25-1eb6-4ab8-b785-97708957627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e8fc34-e78a-41cf-9ca1-7f05a6f861de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2ba4b0-aaf2-426c-91b6-3d16d226465d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00343dd-ae69-477a-9931-de50585bd177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3392ca6-bb08-4524-b466-3c3ed0846f54",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927a27d-3c47-4547-a911-748b58ec8192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b355df5-f6c6-42a3-b70f-eda1ab311c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9440b39c-3ba7-46df-8e23-531ee926da36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7fdf09-577a-4014-8699-1946bf6cef2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aa9b44-f80f-494f-9f21-bb3740ccb68e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2df3e9-4231-411c-8d29-e6efdfc16b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e098da11-224c-405d-a321-3500e6608b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774e3d6f-9b63-4ba3-97b7-4252867a2741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa204f5-53a3-4f39-b918-54572c341f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b56c855-d8fc-41f5-98e9-8bd286a2bccc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c143561e-86fa-481b-b2d0-c05d6383d5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63544101-484d-46e5-94bb-f9f9929bd6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c039c6c-1551-43ef-86f5-05f69dc27dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd2864a-1322-4906-a7dd-6a88bd922de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14a49a4-6c78-4175-ab48-358ddffb29cc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48db2270-fb9b-4eab-afcf-5a029e5c669b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ee30e0-b700-451e-afc1-b2a7df4ab4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8259eb62-ee94-4ea5-a0e2-998d2b765ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe6178b-b57a-470a-b0fb-1501e8d5b9b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c4bd13f-9119-4341-80ed-862b4ad2aedb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d044067-89bb-43ad-9c9c-4073c763ff10",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e004057-62d5-4000-8a71-4d7b96131b6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fbec8f4e-31ef-4a35-a91a-df77d7aea924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3a35b9-ebc9-46d7-8b76-a49041235d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1226a585-63a7-4f16-bad2-44760f5aeb38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f22f1b24-f425-4509-be73-835ee7957432",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a18edd45-0117-4454-8dc3-628a51b4fe2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab63d73e-11d2-4360-a906-1d2148f8f306",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53c4d9c8-2b9a-4f7b-b84f-7ae4bcc315a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "833c2a3a-3af6-4ca1-a47e-dc040d0c3376",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5864f441-1ef7-492f-b0ce-6105537b9ccf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18bc489a-b98e-4861-967d-bebfc8ac6fa1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d00cf2b-d366-4673-95b4-a4dd6c93adb1"
            }
          }
        ]
      },
      {
        "id": "9a608e4d-c6eb-4762-94f7-d8aa8c283cc6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4e043bb5-bfe8-4206-ae91-b62ab91c3a41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34780aa2-1cfa-44f6-87bc-28e595ad388b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4068b1b6-d306-4ee2-aeb2-1b90b1714dc2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0fb7a2-f2a3-4858-b7a8-d9b868e871a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118d4ba8-423f-4ed2-9480-c378ff8f99cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83e9c51-4cf6-4d1d-8b38-e7ab7ad67c72",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41f592-0496-4aa9-be44-dd98be897c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05422aa3-2d77-4bdc-a357-903313da9bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4ff5d5-7299-44cf-8b45-42cecf7ed04e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec0b7f2-53c9-4b8e-8ab3-789e2c2576c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3f47d5-27b5-4fa0-9705-64a8827f0e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61df8191-c122-4420-b954-9df09348fd93",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cb5cd6-9f79-44b5-a0e6-e29e59849bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e28fcf-c2fb-45b2-93b4-567bd6d65f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba520c2-7d67-4293-988e-c45a15a87d01",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c477e5-9ddc-4948-822e-b8298ac674a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6e6115-6878-497a-bc71-474c88375409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d936d2-06de-4a74-86a6-8092c8d1bd6d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30285b0f-20cf-44eb-8f1f-2938e10b4995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196afbdb-a153-4108-908f-53b99dbbc543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878cbb0a-0c39-43c5-9a39-292839bc1369",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f47b87-32e2-4982-8e82-c874a735d47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464cb6f0-b9df-4d38-881d-821bf992f6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f33f741-1b28-4a67-858b-981ef244dec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1773fa-493e-4d89-96a7-4af49569a67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e217de2-76ac-45f8-b729-96d63d8f4447",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb159459-8803-44fe-a85d-d2723862a94d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9309dad-92ae-422a-8ff4-01a5b32b39a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d73fa70-2a3b-460c-abe3-c8319104955a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a03ed74-cb8c-412c-aad4-915f96a1c5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf6d99a-4bca-44a4-b2d5-8ba190ea8ffa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3304b88e-9b24-466b-9e26-b2d62b2784ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b640cfc7-0959-4e77-a06d-ba8826a40532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc32d6ff-4546-4ec2-9d13-3cf9edaa2d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7b725a-7a73-4253-9e02-4047fc937978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366809b6-9c69-47a7-b0b2-244c911e2877",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3208fb1-ee2c-4efe-b55b-13aeef0e6f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6808602-4cb0-4083-9927-2eb38deac763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80826cf1-d845-4d6a-a8af-a364bd2cafb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e06aa96-ba1a-4106-aa6f-7672871716f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cadc70-3937-4b75-90db-2565bba509fa",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981783db-c522-45ef-ad27-1488dd097221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa18924-010e-41e4-8017-ef9c156408c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3f50cd-6645-4abb-92cd-89e7941203ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bdb796-af34-401a-a875-a86875eeef26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c89f32d-fbbc-4424-8674-3876334d563a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cff4c3-50da-4553-8678-1cc253c00b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e45196-cd59-409a-918c-fa0d21371f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6454be00-6d34-41ea-9ad6-65ded0274f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527d71bc-b9aa-4768-9aa6-662c42c36d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639e4561-0ecd-4ab7-9f06-3c0ad8a8ff32",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d145b32-5b17-45d2-96c6-75ea8d720da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd1e6b25-b0be-433b-8f61-640c07614256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0220c446-23bc-45fc-a4b9-39e32271264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797f5748-e977-4d8e-a829-564e78138ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d71b0e-4446-4352-a1fb-e662587e96e9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f9753d-df32-4fde-a313-4810db7818a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e94cbd2-22bc-4e3d-90c7-494acb6e17d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50be3416-b8e6-4c96-bcc2-19f160be0767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ee9e74-3d0f-4780-b10b-7f23fdc3b4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a314e41-6730-4177-8d6f-c52e7efa12bb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67729ba-3f3f-412d-a618-57532c21f75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f04f0e2f-09e3-4c48-9748-5a83e5073866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1211d9a3-31f3-4f65-bd45-eb08671e59cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c171b7e1-d126-4d34-9beb-ea0f5d552a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4f192d-1b87-490e-a03d-495f16501abe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a166c314-42de-499b-b5d7-43194fb15db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38789725-86a2-4ba2-a6ec-88e091e3a727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f69bb7-85fd-4313-94bb-259fa8205747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad67fec4-035c-4d43-939d-e5c928ff4860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b4a51f-7cc0-44ff-af8f-ee80853d3a93",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545ff960-5798-4653-ac64-491d50e86a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ce1fce-ffc9-415b-9ee0-90b551ab60b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858e71de-25bf-4af4-ade6-06b6c8e48fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb50378-1f92-447d-a286-843f872f196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eebada-f219-4b48-a213-40ae65b924d1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16f8af5-1091-4490-b6a3-e88a0781dc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373d81a2-8066-4f3f-93aa-d4831348506a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054d9dd3-06e2-4e93-8d3b-92e581447f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b00e95-a671-4bd3-ac87-eaebfa3deb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1043d20-4489-41b6-a505-476482ec2b6a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a700cc7-f9ca-4bd0-8fcf-c77e50dc0d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1268bd4-5a1a-4fe7-aed7-31846c17cbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0202b76-47e8-4dc0-a41c-4e053bba5071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb5fd98-e86e-4c51-826d-0eedadfb8d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4711cdd8-3cdd-4490-afb9-ac090ccc7991",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3871a43-9b8f-4bb6-843d-f4bf1f2e9cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56df7808-4260-4400-8548-a4dbe6b309e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3429f879-2641-4424-827f-395d6d41a733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c99af5-e687-4b0d-9053-dce338b2c199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcec51d-95c4-4686-8b2a-50029c28f0d8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2c558c-b5f8-4061-8e64-0d76806910b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a86701-1f26-4b25-91b5-243fa00c01c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dbd126-6b1d-4d02-a951-3f98032877ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8d936b-f9e2-4cb8-af8c-ac15a81dde12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c75653-cdf9-4051-9a55-9405c45d6959",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ad49e3-c6fe-437b-9f25-d4ba2b65f412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6339ee92-1291-4c64-b271-bfa55b73b87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e24c9fa-94d4-463a-9286-9f170c47a4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795831a9-c358-4565-83c6-391ee1c87d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c076ab-70fd-465d-9f1c-970264450ada",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e354887e-c681-48ba-bbe1-dc3eafc928b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7243db3-671e-4077-b99e-7f5d7063b3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca8ad36-c971-47bb-83bd-960da3c51595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca3ae2f-6bfb-407f-856a-5f332e4e4a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b995589-eb57-44d1-8f9b-a8d0c1467bdb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0672ece0-254f-4346-a11b-066635c0af35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43094d98-85be-41fd-98c6-1aa7e2525c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9488ff-8fdf-476c-bc9a-522d9ccda6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b110a5-2ec4-4918-9739-3294e1f82756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1ce533-acca-4a47-882a-be01a7da0ce4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d321670b-ac22-4e0e-89ce-defa5888ef66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1947c38-9df7-429b-a7ea-5967567d2d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc3748f-d9fe-4bbe-8cbb-d5c960e3284c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626bfc63-c8fb-4153-b0f1-229d32aade01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033218ef-e00c-426f-af1e-0e3ec29202c4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347e4ce7-e73b-42c1-b48b-7ea509b39304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ae71b4-3755-4a2d-8789-d28d58e40fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ef2066-0fe9-4e57-b28a-b020f67bd64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7847863-cc30-43f1-bd9f-f79672e0adba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c190fcf-32cc-49f1-bd3d-fc28eb1a7b84",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ebc867-9a0a-4116-9dcb-7272f78cac4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c503d1-f0be-42d2-b67d-fabb834534be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf760d9-eb35-4cde-a312-6270fd6313df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5c488d-5f2d-464e-b0e3-f6a100fb135e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc0bb11-0275-4e69-8006-8972f5fc54d5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc86446e-1ab8-4680-a28b-264de5c65779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40359135-c375-44c3-b622-7cfd7145369f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede63a54-0a89-4d29-98f5-ba1941d268b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd517ad-5d52-4254-b81c-376ef4f2c849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817156ae-6f48-45f7-bf28-80ed48166b70",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59910c6-dfb9-4a4e-a18e-80675a722706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9035bcdb-6788-414e-b4ee-abeea75db947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58fe8ca-bd7a-4107-9481-b0d57de70381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f86093-acf3-439f-a637-be2400a74347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208ce94a-6f5e-472e-a3a4-33aca249d611",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4241e1ea-2284-4f55-a0fe-98398124506d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00cd3b1a-e8ba-4181-a512-41b8770f4ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77319f55-6aa7-497d-90c0-62dab59e23b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868455a4-7bca-4b75-aef2-dd16699280d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d312917c-8dc8-40eb-b06b-d0238e80aafc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e63478-11e2-4bbf-aa8d-1b27b84b8c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e218700-3a06-4b9e-9c53-f18de142b3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ff0420-4a7a-4dce-9729-73b34ce442df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4298715f-866f-48b3-a81f-dc6517053f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919bf6fb-5e5d-4b1f-a7ea-0b25ec5cb530",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624b19dd-a5fa-4588-9a94-d243bd2524a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c8a5aa-ca77-4846-8a07-af19beda5a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703da5b3-30fb-4749-a10a-c9a16aca02c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6670419c-f5f3-4056-8561-7936f3136aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db096bdc-6b81-4686-a8fb-a3a7b1ad7dbe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2ae6b5-c189-46ea-b4e7-f5e01d76be6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b9f8f1-5af0-4177-99e4-e4be072c153e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a5035b-e15a-4f4c-a8e5-60524c0aee0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdf2bd7-a88c-4138-adb6-3508d63b4f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5245de5d-861c-4523-93b4-cc1a7aed88f1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69199a30-da1a-4a80-b917-ea1c07a2502b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ec1372-2526-42f9-be1d-bfa88bfa1a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaa1b35-e123-4a2b-ae35-602309e2855f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52385033-cef2-4db8-b516-1b383d7f2605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc8b852-de13-4985-a634-0d4c4223985a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96a7a8e-7a1b-4982-9363-453b9bebe9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c34ab63-2c7c-4c02-9243-0b688541e473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81ca21c-a0e1-4342-aed4-855ab2231a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed8cdc2-ee33-416a-a37b-118f8888f0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd164053-4362-452f-b85f-77de663fef7a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144a8cab-4224-4fdc-8c4a-b4822f6a8c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6897f3b-f62b-4846-af19-8d6b49678c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc804a1-3a3b-4258-b5b0-d2201dc538b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c48f754-b41f-4655-b6d1-f3195aefc9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68588592-aaf0-4e0b-bd66-c46e444f2175",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51af878b-7c52-42d9-826b-e2620fedac98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f5c565-89a5-4cee-a51a-e8256cd39d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f370aa8-d5c4-42ec-920a-eae3288f6394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa84aae-3765-425e-9f67-c9aa14d30f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6090d692-6f87-4b56-8bb3-1336088f6224",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec480077-c46d-4bea-bde0-4031a96d8ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233e91ff-b222-4451-86af-98ff6ec90f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e681644c-e59e-4283-a8b8-ca931ed7959a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8a01d6-6a43-4195-a5f0-1d45f6094b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24628a5-368b-4631-9dd0-adf39673ca5e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9c3aa3-803f-4eb9-9769-0eace8843561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0837191c-a91a-4679-a893-0adb27402f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f65fc-0269-437e-b295-32961b183548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b892d6-0707-41cd-8833-d9de444f2c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af090d0-4b31-426d-b380-0545b641f3bb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d04cb2-7202-4b07-9ffd-19ed9570889e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8927fa1-3531-4f19-8559-349427be3a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e559c40-87e3-49c9-88f0-9fc6b4f58eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cdd109-2ebb-4c6c-adfb-d857593a732f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b3cc2d-d775-47b2-9ffa-32ece51ff6b0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680a5a1a-6018-4c1e-95c0-3669887ecb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7e0025-5f37-4ccb-bb5f-4370b67e0d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3608cb8f-be58-495d-8801-b38f51e0991d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62897c85-0a2d-4212-8602-2c023c84b261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e850f0e5-d3e0-4fb7-8f49-0ed2ca652141",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e73b76a-d9fa-4d29-9899-2e8f88a688b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adf9c4c-88cb-4215-8f31-39967299cdc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14868cd9-2b05-4b7e-bc67-52c922f14873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0a412a-9aa5-4148-981a-83adad15b513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1559025e-b866-4ce8-9a1d-8247957860ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0b496a-fa40-4832-be21-a1fc7c498584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c3c511-a256-42a0-84af-151d931cb284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5493d233-dd9e-4d00-bd91-c20827b94f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c37ed9f-298a-4051-8abb-16584d9ae040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c906031a-1abd-4f1a-be2d-09ea722abdb7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdf77cd-d7d5-4b77-862f-aa221d53b8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0816c54a-ac25-47d4-8e4f-7453490888c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36846f3-8c63-4dae-8233-dc6f14d746b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45bf065-1bdc-4436-b00f-fc55fdbf1d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b2f521-dd06-41ad-a5a0-212ddacb8218",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c3e20a-a372-427f-b3f4-0e92009fd144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bd3183-1346-47da-ae8f-53d36a7adbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d622d65-1879-4698-89b0-0b0bfdb19507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1f3dae-416e-4be3-9581-92eadc4d2ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c48abba-b16e-4279-a479-1816a62cddf1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109e7008-0643-40ba-8060-87533ee4ba7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b1e616-8bea-43f8-96b2-043f05384a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a094c4c-5383-4dbb-ac18-e8a0418b0f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a682c4-0b4b-47f7-9bcb-f5bf1b6da081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fefe77-3823-4bcc-a0e4-b3019b7a37a5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a328496f-2cba-49d7-9eb9-0bcef5d2761a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642c3dad-cb4f-4515-8872-eee48e3f62a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd207ef2-13cb-4f9d-ba1c-edce2a537ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0359834-9825-42a6-be11-09469df781c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86da5fae-8e34-4a5e-8e2f-f78835ff102d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de0ac3e-ed84-44b4-ada1-a5cdfc0bd5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d75666-1f8f-494d-9fcf-2d0543011372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0fb74d-f749-452b-bf84-14e2cbf85d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ae3212-f202-4691-90cf-415ae37eda41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b2a857-26ba-465d-8578-2572978766c1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbae59a-7d0a-473c-8e14-8483150bc3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf02279-640c-446d-89b4-b3af0492c5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608e6003-4e63-4ce7-8f22-ac7c75cedf23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdf5c07-8233-4f3d-a7dc-124b9ea094d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ce3ec6-3e9a-4b44-a698-cf1dcca1cfb2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71c1d1b-ee7e-47ec-811f-5f91b8add75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f97970a-b4aa-4ec9-8096-f858a58cda89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0df285a-8c46-4b47-9497-774cb984b90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bee9368-753b-4ffb-8f86-016387ac1b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2cdd43-7911-4be0-ad7f-35ebdf977916",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981a9089-72ab-4b42-b4d6-39f34e58bdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3dd0cf-f079-4c54-902d-71df53438cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9851486-48e3-4fc0-8f00-04559b007a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ccfb10-01af-4524-8c5c-ba13467b338a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b65fb1c-2aa3-4634-9d2b-f8e01b74d973",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a056118-96c3-4bae-a9a6-d06968639e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb300037-b461-46c1-9d1b-cade4fb6cab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57584615-5015-4d30-a143-dd5cc2c19cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4138ca6f-e5aa-44d0-b057-c395835c48ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8061bf-00b5-449e-814a-490e4e0cca8d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3593db26-11d9-47c7-9e9b-91798caaa0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93b6dd6-79e1-4cbe-9d73-3f681a940326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1053413-b7bc-480e-b584-25be14031b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18d1135-ccbf-43a4-91fe-3fcb0aa259ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c98510-adb8-416b-b6c6-64f07d16db7d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d92305-27be-4c8a-a5f7-687cfc2b0bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d41addf-36af-4ef2-8dca-7d8692307f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c69b30-0a56-46aa-be4e-5f7d570f1009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd25641-fff8-457d-a0b1-47071fdf17a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838f31f0-e739-4d82-b779-d729c687e4dd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a29867-3f3b-4b01-a0c1-b34f8d97c204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b912ab0b-a3af-441e-af8c-4c8db50125ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53a11c4-20c6-4507-8e2d-2b50a37ee262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4607ee0-78d8-4743-a7cc-225931ebe446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073ea7df-c6db-4c02-9ea2-9c7b2340d0cd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8ab453-f766-4aef-9272-d747b88332fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb431745-e767-4e29-8a95-bd55add53cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa0688f-6640-4cef-a678-4bb0b79a4eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981b1ce1-0613-4d98-bbab-6ab06eedb1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4661d975-707d-4fca-bcdf-ac3bb35553dd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe84d16a-663d-44bb-8190-7238523806c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a017dca4-5f58-41ae-81d5-689225ec92da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bce821-dbd2-4a3f-af73-e21e463edc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b865daa-c87f-477d-b341-471c6802e9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3eb87f9-e0db-4793-80b6-9fec25225390",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb1e18c-0273-41c2-9ab2-cf81fb16695c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e2f04a-f6da-48a8-9817-f985c637b9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d265e0e-5e3a-4e90-99b4-861e4c4c69ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965730fc-9123-47f4-94bd-6329beb4a817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77370c8-955d-477d-a584-b81ad1f34be1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc07fe5-71d8-4130-99d7-886c909a944d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c58cda-9bc4-4020-ba38-c6eacb3cb906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122d0dee-80d2-4632-8688-c5f870cfd25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4edb9ee-3811-4da9-a502-085c438554d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1b7ce3-b923-4751-a821-2fcd086b3c6e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1357dea-c8c6-47d0-ac68-bc9c3e311acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d60f88-3a89-4f87-9329-3c8ed1c9dc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cd56ee-c648-4be3-a8bd-8e7a819cc90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e61966-1737-4393-8ef4-10f81da2da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b128bbe-1a80-4e3e-a9e2-d34466ee6852",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a36a840-f24a-49cb-8c2c-eb234a73b3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a61510f-aadf-4e84-81ab-42abec9ea21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6e5610-df45-46b6-8b6b-76b2aeddcccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5452dedb-3200-4fb1-96a9-d55cb9a47b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2fca68-507f-4680-a9c2-baa27ad5cc60",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc46158-1f75-457b-96b6-de3907a73aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db1aab0-aa07-4d85-9279-9032b0760c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83eeb52-fbed-49e0-8499-8a06a6015e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0823b8-14a9-4609-a14f-f3cf32afdf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9275176e-0278-40f1-87ae-96a170cb9a74",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a550607-55a3-46eb-bf95-c4b3319de987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea0a307-25e3-4728-8fa2-3163e635e5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc15e49-293c-4903-b619-9b715baf7b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3511b740-9172-4c7e-8665-fcb5183f6658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2f997c-536f-4354-8bb0-9703e64e4b9c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b17daf-f83c-4341-a6dd-c1d778883db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ecbb13a-8173-4de6-94a7-ceb3ff001870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2df5402-d6de-45ec-8b0f-5ee608c0d105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e9ec8e-262e-4e34-8807-5034ca994ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc56543b-712d-4f14-9ee6-703f6ca637ab",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f174c35b-18bc-415c-930d-cc44bb4440a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88511b25-b6e3-47aa-9dd8-e8de7623cc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b2fd98-3079-4fc9-9aa3-a7f46619621b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfd01d6-9b9d-4224-92e6-7ea3772c47f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b126713-7abc-43ca-a857-4d28f2c054ca",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12295fc-da9c-48ba-a46e-d261819b147e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ebd5403-8ff6-4b9c-860e-98f0d74ab39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941ebacc-e5da-4db5-8285-85f97bb82e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eb3427-a786-45e3-abbe-e062fb633ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50897471-f844-4571-9db5-8d07baa6c29f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c19bea4-8747-4c41-a6d5-067280e35563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eff8c530-a6d8-49f7-b225-286a89f3148b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffce11f6-a3e0-4145-909f-1b7cc6ad5a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1059bf49-487d-49d2-a1b7-9521e15aeada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043d07a1-4d9a-4cb3-9ba4-4e619904a60e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e9fa4a-fc2d-46e0-8306-34d835c0fb67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c729e2-8920-4d36-8a72-7d96d26323a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86157f05-5353-42c9-957d-46779431561b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132b2563-6b95-41f4-a4fc-13363d2bf82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ebbc5a-24ce-4864-97df-99c8601610e5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782256df-f06f-498a-8baf-a4d118789e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9639723c-f2a0-4bf3-bc88-073bb51384e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a0e624-e9c4-4a12-a559-d1810be84b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195b7906-51a7-48b1-b4e2-6692f3b29686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89780e21-592e-4135-a27e-4417b438e604",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d48c5c-5f1a-4d69-8fa7-35fca9843b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf54058f-d246-4d8e-bd50-44d9582447df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab29e7f-b18a-4784-8f62-70cb3b278333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5095891d-e4ce-497d-a8a8-e652869df444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4727187-6518-475c-8588-870c43576809",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecc3cb8-70eb-402c-b6ea-1af17268fdba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be99914-aee1-4679-a859-67ef51d35cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4066804a-bdb7-4ea7-84f3-70b737da10ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec666c5-2e28-4a24-92d0-dfe5e33cf2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9964c697-67f8-486e-8d00-38f13f07cf6d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a91dcb0-22ec-4678-9498-e9e4bcc3dbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a9a333e-a81d-48e2-a424-ffca71474a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea47b035-68ab-4e6c-930b-56e931eea9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2a00a8-c4ad-4d12-8cc4-0fecad42bb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6f2f48-edbb-499e-a22c-46e7fc3f65b3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a80de60-f1fd-44af-b0c0-d3d9ca1848df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e3f2e7-365c-4ca1-be5c-93d2b9ed714b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0153f1e-f45f-437e-9faf-70bd1395f228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee23720f-f845-4ab5-805b-6f4e4347bb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f90de9-da7e-4cde-9a7b-f530ae44a6cf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af85a0ef-927a-4def-bec6-e2da89caa1db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf43419c-dbec-4362-ac20-d0d600a11a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e175a8-0ace-4fa1-af33-e72d35ffb929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20131d8-15fa-4e26-898b-6f432f7969e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e9492e-d708-4f47-ae7d-abe40ea9de59",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8035a7c-e63f-4a12-b42e-889a4bb74970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c7022f-f86c-4dce-9ac1-841a166d2e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56940665-3979-4808-bb4a-5a4427d6a065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c93f3b-f68c-4eda-acf5-25b84f7186dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27595d49-816e-4fdb-8213-020b5b89202f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f02d86b-3a53-4e2e-94d9-7faad5a588b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce3b0f50-4e88-483d-8238-ff9274fb598d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09977319-6764-4089-8a24-64da1782ff76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46365f31-d224-43d6-9ab1-208c0c073a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c780d3cc-fa91-451a-abb5-bc5172a8d617",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0392dcb1-49d5-4eb2-a2a5-3207e0f27274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21991ab6-1038-4086-b7d0-3144a12226b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cf4f15-b396-4f89-a675-a7581ab7838c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622bb1d7-3969-4f44-8c31-5443b5fc6b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181b20c1-9fdd-4f8f-b405-3fe3b4fb2144",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3bf5cb-b599-4fdd-a3b3-5e822aef249d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd6ccf9-04f4-4631-b432-4c3d8e833746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7295002b-ae95-4490-af73-6c334227a514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6233117a-1c17-4039-a2cf-0dc4ab45de97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782f60ed-8804-46d4-bbf2-88d9fb84876d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a85837-5087-436b-bfa9-82b8ba128545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920fdfaf-98da-42de-ac2a-412bc9642cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0745d9f-e222-4fac-b406-8dafc80ad21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0f13f6-747a-4cc1-8b22-c7d5d0ea707c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f458dfc4-966d-415a-beb8-c9a8ea2801db",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41215c7-de75-4576-9988-99bd1be23f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6524474a-657a-490d-a0e0-a8116178c55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d303375f-80b3-4061-ad5e-6f0f1adf75bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92804196-73b7-461c-b1db-986dec69d9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139afcb9-9872-4ff9-89ba-752a08126678",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e1af47-1234-454a-aaca-0a57c97ff5b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9dddcec-2c97-4fc0-8f02-5837cdeac7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74e34b7-a7a8-45f6-b71d-cd24829494a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8df5d4-7bf6-4454-b826-c4413b5b350a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31625c7-4395-447c-a69e-bedfd1e42b29",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad47c88d-7f4f-4f69-8801-af81045eefec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b57fbc9-c7b0-420d-be7c-02e45c3adbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bc502a-9781-4fab-b9b2-f3a77a946dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8c50a6-b6db-4342-8842-bd2f955e76fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96024852-4034-4226-bd2b-2f4817f49782",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb605ded-0d9e-4068-9856-bff564e29541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e624944c-817d-4825-93c8-7c762e43a0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d75614-281f-4a99-b89a-eb495e052420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858e8daa-ca92-4a4c-b437-d35dd2b0f1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe77b377-8d03-47c4-bee4-01635292c4d7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ef2eb3-a85a-49ab-a226-3b0836839b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a6bbcd-30e3-4642-b196-d6af5f255147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947a8efa-34f0-4063-b413-0085603728f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd3dce3-55aa-4c85-8ee1-97da0bd42052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f122143-90ce-4f92-9a43-32bc2a56dafb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aa3b3b-9362-4be4-8b21-21b2eba72f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7064018-55e8-4210-a2d2-5c62ab889914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cd6c8f-cb87-4c99-83a2-da8ec13b59c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d530a52b-5330-4d00-b58f-41df80d0907f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395ace37-b5eb-4f66-b04d-3f43f85463eb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a596f650-3e72-41ed-9df0-0b8ea7e40fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e19f7ac-b787-4cd1-9b28-70d61cfd4137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142faaa8-c136-4a64-ab82-e4e7c66e6e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65e10cc-8535-449a-9df1-b1f530ebb143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9a70a6-c97e-470c-82cb-04f79c5b2d87",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea39a7a7-97e5-4afa-8885-16a713505873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bb1b6b7-58d8-462a-8d7f-99f9581f2147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db087cc-af51-4985-9274-412a8cefe3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea01420-fc45-4de5-877c-7bd8d1268cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f674eee9-18b6-4cba-8413-34a9d4fcaca1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89682ea-87b3-4a1f-9a09-4ac397daa585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658cf020-2c70-42b4-83ea-d48daf4c5b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c03aa7-db37-4b9e-9e24-badf339ff39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d739a1b-e412-4b80-adbc-1df5cfc5eb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd08cf05-0569-48fd-a427-07aafb1ccb32",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7baa6c-b7da-4c3a-a835-268bdd804481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a782869-e5d8-4aca-903f-e8ba5b60d3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4074bfd5-9891-45d0-85bf-ca6a2b99a5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9da00f-12af-4b63-a4b3-f9a81cc9eef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4699c126-0627-4f64-a71d-8a5874aa9566",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0584994d-157c-47d8-824f-571922514abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0fc8ce4-d311-4734-b7fb-d2abede062a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba94c03-dee9-4e21-a2b9-b2b8fb7ea373",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5dafb4-a545-4a9c-b0c7-cf1fa7be35b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cac263-7ddf-4963-a7db-9fbfeaea77d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9433ebf8-1d25-458f-bb14-2056e984b7dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aab64c3-7177-413f-82a5-f225603e95e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c4ef78-9c1c-446b-9acc-e9577af7f396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af466f5-c518-4821-aad4-26fa9e6cf429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e25e67f-7ef6-4c36-9c40-d4cbfcadde9f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e13d69-5b2a-41b6-bb8b-7ae9ad618114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "889c2185-c4ea-40a2-92ad-e3e52ab73756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d82337-d725-4845-8438-f1cd840c9688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cea97d-b09a-4db4-beb5-56ad4b41c35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f220cd35-e0ff-4967-a81d-d60dfe16ede0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f0ead2-2176-472f-9e50-0632103e3f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d10c12f-5037-46a8-8a5a-f3bb71597366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aaedb1-ad47-45ce-b62b-2e1f1b78f4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7435d184-58cc-4f5b-898f-a616b0e140e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0660e6-e435-4d5c-9eed-b7d5514ea427",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc286c-6a22-45a9-874b-7d375a01c3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60490c1c-7654-40dc-9f82-411643f408f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe1ab58-2793-4642-9a5f-c92d561c1a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0689a6-1bf4-4a42-9913-ae94a51de948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496a380a-0b2b-4f4e-b381-7df85eb7c8cb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fee6b7-9ae5-40e3-9d4f-c7ff2eb78dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0113a9d-08aa-452d-9393-ddc3ab9545b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4adbb3-8e48-4351-8d08-57f999f2ecae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65b17cc-84a5-4db7-b95c-7baab19cca67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de512d0d-1d40-4713-b913-98aa41a843c5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a795e16d-0407-4d60-b8b1-1b4517c767b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b06dea3-cc57-481a-b1b9-1fdd80e0a369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc5a28f-1b5f-4eee-8a10-08545f20fe8f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9b918a-2c13-4b5d-9449-0d9f36eac621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f74d99a-ef88-4bbe-94f2-a1040a94b96d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92347aa-6858-497a-8a37-8efa0e80bc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "554c4cee-8c2a-4660-9819-09ae7aae553b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d26c39-a0ae-4029-8399-b994223c6ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da565c9a-82e8-40d9-83a6-005d585d139b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95fa557a-e1a7-4e7f-8d7a-6bb27e796fa7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39194b91-a102-466c-b661-564d9a0eb7b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d02f2424-5ab1-4698-8638-2c81bd1a20f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55bfc74b-01ef-41fc-87d7-b5753d2d15dd"
                    }
                  }
                ]
              },
              {
                "id": "4532d3cb-661c-4951-a6c3-26945a067dde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a57ea36-5e80-4e05-9d70-c70b53f56678",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c99022-1ef0-48c6-b47b-6476d6178203",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3ca056b7-baaa-4745-8e09-b8b25c967199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7ac074-091e-4dd0-9be0-1c744ba47d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c89bd61-10bc-4757-84d7-65eeac1cc197"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e33769a5-8e1a-4512-9f05-b5a978aa209a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b1b5f33-2dcc-447f-915f-23eb447ef26c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fba3e65b-2ae9-4181-96e7-8e2cd4db8542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "407765e0-3011-43e6-ace2-e8f1e4371cb7"
                    }
                  }
                ]
              },
              {
                "id": "7ca3d915-a834-410f-8f93-54804101c45c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "854d1bd7-9bb4-4210-8057-8491c4099d76",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b30ff37-303b-4eb4-bb6a-96a7311d7870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97c96f99-505a-4be0-8018-f17ad08d2f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d339fa9-aff1-48b7-93ea-ff5cff3db796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a24b91-9be9-4ac6-ba29-bda36a290013"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a85bd55b-d1c2-45f0-92a5-29571f5afa35",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f58b93e8-fd69-4b0e-ba3a-46c12a757116",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc53d1e5-c439-4c04-b2a3-9acf67d17142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "841c5ba0-274b-4279-abaf-6ddbf690e49e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28d8a4eb-a3fb-4cdd-a9fb-909aa9f54d21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "945fecd8-59c0-401b-9ada-b78d4fd337a4"
                    }
                  }
                ]
              },
              {
                "id": "3a7c7709-5d86-437f-be58-5b7436c26479",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b9ebf89-e3cd-45eb-a2ba-3627553dfca1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "692ba2aa-fcdd-4104-be80-e516f753daa2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "211cf201-1465-4f09-8ecb-2dd5c8740a66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aecc752-c2c6-4110-b2e8-9b2c489ce94c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cca9fb3d-d72a-4ee7-88fa-1595f9b0b8ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "72a4a530-d147-4f11-8a25-97a8cd7a2d9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "800fee7c-5f9d-4a6a-a3f8-15d55891497b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ac12dbc-a9cd-4a2d-a151-33a852df75e9"
            }
          }
        ]
      },
      {
        "id": "3838ac4c-a17d-4d27-a844-1fa079e6da73",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ba1b3af2-748a-4ab8-85aa-93386f195a01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7df316eb-1ff0-4235-a0cc-aaa021d8e31d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "254f43d8-c520-469b-b0dc-5a564d6e8a5c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd39849-d334-43b1-a029-3fb39d1d4141",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2fd04944-61ee-4c62-bd7e-fd263c3999fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adbb098-bd2e-4a2d-a6f7-591a7d549a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "224e9544-b67f-4cc9-95ac-8f037fa8d3f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5081d42-a946-4126-ad40-55adaa9e9922",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da664dcf-ee3e-4dea-bab2-bd46965f64a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a222ae5b-f805-4824-978a-b55c999c01bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cd55d70-1fa9-4408-be19-26705d805953"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "519ce3a1-dc2d-4078-a9f2-e54288cd35c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "778f1cc2-8a4f-4892-b3a1-0302aed37bc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4543c011-88e3-419c-8ffa-0ccce683cf50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02f8c339-ee48-4a78-adfe-05d21de1da16"
            }
          }
        ]
      },
      {
        "id": "ad9f494f-b990-4e34-9cde-27376c04cc97",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9231bc37-04e2-4fbc-accc-daba7d1ba09f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2215a79b-a645-48f2-b3f7-771a154b72b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9160b5e5-5ce0-4d5c-a9a7-296f80165820",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d99a53b-05c4-4deb-a3b9-f5a0a0f02aed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef1b3368-cb79-4727-a037-6d7862add3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5817bde-a6a2-41c2-bcf0-0dd3b0d640ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2094e7e4-fcf0-4a8d-a4a0-75cf4a511200"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd397f09-cc9f-4ec4-8d99-930827d05dd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "876c6c04-b64a-420c-8353-919da9ab8752"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb0d8e92-8191-4e43-8705-bfb169f9152b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7482cbfa-e16f-4965-87b1-45e3d041fd10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13434cfb-294f-432b-94fc-7b2c787cdd57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d444485f-2f5d-4ca3-b09b-be29dbc289ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c543376-08cd-4dc8-bbed-95f5ff51cd62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5fc087d-4a2e-40d0-8380-f260e7b055ac"
            }
          }
        ]
      },
      {
        "id": "b348f5c8-4b8e-4a53-9b5f-b2257824c61c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1c07d596-2522-4206-9595-570f786ff0e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d30c8fa6-6d89-451a-bb75-fe2568cd2992",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23f8081e-d232-4078-8ccd-b4fcb9e872a5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47485201-0e47-45b4-ae5a-8aa127d3b44d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "188b13fc-48ac-4648-b824-de40859fa59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c89846-e5bc-4c95-a6e6-5fdb2adbce20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6eb253c0-7b11-4242-b406-7939f1f24a5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bdb553d-ce5a-42e5-9af1-be80224c01a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6506f858-cded-45b2-8da1-4d61788cd378"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74ad2022-c8f2-4935-b47c-43859202a42b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81d3f82a-81b7-48d9-b77b-1bfb291056b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a04958a9-ad54-47e3-bc6e-c48c06692e25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e01815e9-62af-4e1f-89af-e6be18ad2d84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e457022a-d82b-4c2c-8d05-2db90054aee9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b71185aa-0678-47a3-9e75-4aa2c6055114"
            }
          }
        ]
      },
      {
        "id": "c8819d03-6c16-464e-8914-4c17a7a3c7c9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a1b8801-d005-4a01-bfa3-6825fac54127",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c8ee470-1629-451a-8026-dc1cb611a51a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "861c01b6-e617-4b02-b9b4-c6054077fa38",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7c21e27-4694-4947-b510-b0206ac94503",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4aa3258-14c8-4604-b6a1-48c981c4ba0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 378.5140845070422,
      "responseMin": 8,
      "responseMax": 9252,
      "responseSd": 1017.9405454283582,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696466018637,
      "completed": 1696466142547
    },
    "executions": [
      {
        "id": "1da3a078-02c7-4b79-bc88-60decdf92ba1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "23889b42-613d-4df9-bb14-d5914bd19580",
          "httpRequestId": "ad4662ac-0514-46e9-b97a-c8dcd0fdb31a"
        },
        "item": {
          "id": "1da3a078-02c7-4b79-bc88-60decdf92ba1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "94ceec04-2bc0-4e44-aab4-fc3866e7ff08",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 0
        }
      },
      {
        "id": "f802a296-2bcc-48eb-8603-ad3be5b6e909",
        "cursor": {
          "ref": "114be659-eb5c-4616-8536-bbc2fbee26f4",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "072919dd-1614-4869-9271-f5cdbc47f911"
        },
        "item": {
          "id": "f802a296-2bcc-48eb-8603-ad3be5b6e909",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "da4b2571-87a6-4b42-8712-740b236bc061",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "d9c1ae15-ecb3-4e30-b099-82b2825a6807",
        "cursor": {
          "ref": "e45d02f0-2683-43b9-b761-6f15d3441be1",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2033f661-674a-4c5d-8dac-082df69459dd"
        },
        "item": {
          "id": "d9c1ae15-ecb3-4e30-b099-82b2825a6807",
          "name": "did_json"
        },
        "response": {
          "id": "5d5b5d60-f82d-452f-9dce-31c0f9deb29c",
          "status": "OK",
          "code": 200,
          "responseTime": 1437,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7344e37-1ee3-436c-9e64-cb888685103a",
        "cursor": {
          "ref": "43fb5bc4-732a-446b-8cf7-d065f695b204",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "08cbfc86-f323-474b-ac2e-82c19bef5fa9"
        },
        "item": {
          "id": "e7344e37-1ee3-436c-9e64-cb888685103a",
          "name": "did:invalid"
        },
        "response": {
          "id": "b06dd1dd-fc38-4f42-ad43-446da562643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7344e37-1ee3-436c-9e64-cb888685103a",
        "cursor": {
          "ref": "43fb5bc4-732a-446b-8cf7-d065f695b204",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "08cbfc86-f323-474b-ac2e-82c19bef5fa9"
        },
        "item": {
          "id": "e7344e37-1ee3-436c-9e64-cb888685103a",
          "name": "did:invalid"
        },
        "response": {
          "id": "b06dd1dd-fc38-4f42-ad43-446da562643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1811bd0c-3fcd-406c-867e-d5ddb50bf81f",
        "cursor": {
          "ref": "7ce38905-32bb-471d-95a8-45be72290436",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a9af382d-a41e-4f6c-9236-16b58a49af9d"
        },
        "item": {
          "id": "1811bd0c-3fcd-406c-867e-d5ddb50bf81f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "54beb6f8-9eb9-4908-81c0-9f1250e74059",
          "status": "Not Found",
          "code": 404,
          "responseTime": 350,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5049dbd-d652-4087-b463-3666c9ba0dfe",
        "cursor": {
          "ref": "f994ecb6-0712-46fd-9e13-7cb072a51661",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "740ceffa-5ce0-4234-b234-326c74f21015"
        },
        "item": {
          "id": "a5049dbd-d652-4087-b463-3666c9ba0dfe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a1442d34-0ca8-498f-9e7c-d43abe9cfe36",
          "status": "Not Found",
          "code": 404,
          "responseTime": 388,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ce66b0-ed2c-4c8e-b88e-1f51d81a4786",
        "cursor": {
          "ref": "17dac326-5c7a-454b-a69f-c46e6275616e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "13fee6ec-fead-45d1-976d-9b38b043fb15"
        },
        "item": {
          "id": "e8ce66b0-ed2c-4c8e-b88e-1f51d81a4786",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fd7d7ea0-c44d-4e55-a601-df905e2c442d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14b2a8b-3045-43b0-bd9e-a0327478d3f5",
        "cursor": {
          "ref": "472654e2-e723-4191-b99d-9ed88fcd407a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c5e41c9d-a092-4572-a633-25c5bde3b9d9"
        },
        "item": {
          "id": "f14b2a8b-3045-43b0-bd9e-a0327478d3f5",
          "name": "identifiers"
        },
        "response": {
          "id": "d7a2d116-ae89-4f4f-8d22-15d2b97b33c9",
          "status": "OK",
          "code": 200,
          "responseTime": 1181,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4d628c-a45a-44a5-b401-42fb2f973e34",
        "cursor": {
          "ref": "836c05a8-2287-4038-b15b-cf7163152b9a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "26a99fc4-44af-48cc-bb89-208c7bd6f423"
        },
        "item": {
          "id": "0c4d628c-a45a-44a5-b401-42fb2f973e34",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "94b83a66-b0c0-4603-820c-9f826a58dbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddd5444-5889-45c0-bd6f-0adf5f353347",
        "cursor": {
          "ref": "ef00d631-aaa9-4d23-9ed3-729f57ece51c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ff16ad2e-f8cd-4f2c-b01d-f81d1a506840"
        },
        "item": {
          "id": "eddd5444-5889-45c0-bd6f-0adf5f353347",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "47862e04-dff4-4905-8c1a-19e3ac2cb37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf867c99-0c9a-45d2-8b49-67f841d73a28",
        "cursor": {
          "ref": "c4ef02ce-bc7a-491e-881b-25478896284e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "595b5b8e-4647-4ab5-87d1-f9a37a09ee2b"
        },
        "item": {
          "id": "bf867c99-0c9a-45d2-8b49-67f841d73a28",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4068366c-c062-42df-9076-dff246a0cd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad8e5cd-12f4-429b-8fa4-e347bab8d3d2",
        "cursor": {
          "ref": "392298ac-77c4-4011-9ade-b985df9e9232",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "72881219-fa44-43f7-a991-f349ef7aeb03"
        },
        "item": {
          "id": "aad8e5cd-12f4-429b-8fa4-e347bab8d3d2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5364d997-66d8-4dd5-8b0a-80c37bc68c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cef3fe-e851-43af-b169-f53aefb3ec1f",
        "cursor": {
          "ref": "86fe16fd-f6b9-4e53-8561-e5cc48bf5e53",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4fa39cbd-cac6-45db-a33f-3b4ca97910e0"
        },
        "item": {
          "id": "00cef3fe-e851-43af-b169-f53aefb3ec1f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4cb64a79-5b26-45f2-96b1-96f36ccddc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1985bf5d-0a5c-4ffb-9cef-cfcb1b7405a5",
        "cursor": {
          "ref": "64a562f1-314b-4445-870c-cb8c88357544",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7aa9a6c6-86fc-45d5-b574-c029602468b8"
        },
        "item": {
          "id": "1985bf5d-0a5c-4ffb-9cef-cfcb1b7405a5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5145297d-9b3a-4bd2-a86b-5bbb538558f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a275b40-4adb-4d63-9c48-479f83f7faaf",
        "cursor": {
          "ref": "8858651b-a535-4d2e-a2bb-4eb9c743cf57",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "451c7f0b-7d07-42a2-b699-71a78b5b7e53"
        },
        "item": {
          "id": "7a275b40-4adb-4d63-9c48-479f83f7faaf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "92826a82-fde1-4160-99f9-7daa6a3e159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6734da1a-26ce-4a6e-ae4b-b56fb3082e5f",
        "cursor": {
          "ref": "fb07f353-4c5e-44eb-bd10-72308644cae0",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e5646546-f8ab-4bba-bb23-d37fa24fe0cd"
        },
        "item": {
          "id": "6734da1a-26ce-4a6e-ae4b-b56fb3082e5f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8a6ea3e4-a74e-4c7c-afde-e8279e264d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d97d1a-1723-4bf2-a21c-cd32c17a70c1",
        "cursor": {
          "ref": "85c327cb-dbce-4f3a-8c23-967e4f85a85c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eda41ef3-15f9-4620-9b6f-75d911735091"
        },
        "item": {
          "id": "86d97d1a-1723-4bf2-a21c-cd32c17a70c1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "73fe7c55-bc29-4cf5-b12c-3eeef67fd99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a9c839-6da1-4c1c-9109-61e246ad7eab",
        "cursor": {
          "ref": "93aebb73-e9be-4fc6-a92c-7e82e0822a5a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8acb1f5f-82f7-4aa5-a240-c66e9d36a7f4"
        },
        "item": {
          "id": "f9a9c839-6da1-4c1c-9109-61e246ad7eab",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06f0b063-a7ff-483c-8af8-739aca7fe4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021d00e9-1701-45ab-b0e3-150e8780a069",
        "cursor": {
          "ref": "22074f78-4a94-4368-bfc6-23e1c73fb720",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "74c47c76-4304-4a66-ae72-b80043f1c56f"
        },
        "item": {
          "id": "021d00e9-1701-45ab-b0e3-150e8780a069",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "682f40c6-a729-4099-8853-6a4bdfa9d0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c40bf2-bd2d-4599-b8c2-72e4ef5a7f6c",
        "cursor": {
          "ref": "2df82fa4-f93a-46cc-ab73-4aca6b82c6dd",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4a72cb0c-9e8d-4e39-a5ba-77e8723968ee"
        },
        "item": {
          "id": "73c40bf2-bd2d-4599-b8c2-72e4ef5a7f6c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "669b5916-b7b6-48c6-80b4-2671ea3e1675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef60e8d2-5e79-4d07-bbd6-9680f1f44c8d",
        "cursor": {
          "ref": "0e67ea93-3917-4f06-82fc-46846b436785",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6d0495a1-d06f-491a-8c7a-985a29e73e37"
        },
        "item": {
          "id": "ef60e8d2-5e79-4d07-bbd6-9680f1f44c8d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3c3cba71-6daf-4620-ae71-08ae6644177b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b34c78b-b7f4-4c13-add6-29dd7c922402",
        "cursor": {
          "ref": "ccefa553-d60e-4079-a1c0-5b8cfbc2721f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a6000078-7bb0-454c-b3f5-be76e5ca5163"
        },
        "item": {
          "id": "1b34c78b-b7f4-4c13-add6-29dd7c922402",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4fd34c70-4e4c-4ced-b33f-f4c48d4af0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7083f9-302b-4ecd-8f26-a38481b8b50e",
        "cursor": {
          "ref": "fc7d5c1b-ff4e-4e52-adf1-55266ccdbfd5",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2496dd40-9e72-43b3-b8b2-fd26cb8a2abf"
        },
        "item": {
          "id": "6a7083f9-302b-4ecd-8f26-a38481b8b50e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2330cc5b-739c-482d-a728-717c0b3520c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c490f555-cd74-472b-98d6-d34d9eca7f87",
        "cursor": {
          "ref": "ddae45c1-2e8a-40a9-8734-a1ba3a94d80f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1deeda4a-8ecb-497f-9c4c-4022e53543e6"
        },
        "item": {
          "id": "c490f555-cd74-472b-98d6-d34d9eca7f87",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7402b0b8-3717-4d7d-8bb6-192ed4bfed89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7667476-d052-46cb-9461-5d989c20a5aa",
        "cursor": {
          "ref": "7016ac66-7e66-48d3-8a85-765b0962cb0f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "67d0e196-6c20-4acc-bb0f-2b5df0a57eb9"
        },
        "item": {
          "id": "e7667476-d052-46cb-9461-5d989c20a5aa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9a99a33f-29be-4c6d-89dc-3cf28cd653cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef080036-5798-4ad6-9932-514656112e59",
        "cursor": {
          "ref": "7357a0a4-e84f-49ec-99cb-8a70e48b7edb",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cc64f9e2-173c-436c-8e5f-ce2d983b5576"
        },
        "item": {
          "id": "ef080036-5798-4ad6-9932-514656112e59",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5ac4e056-25e2-4cb6-81dc-4693befe5106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7289cf-d6f7-4a17-87a1-d85306feb7c4",
        "cursor": {
          "ref": "25855d51-3135-480b-817b-48c49e064840",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f160de0f-3863-4460-9669-5bd68f704e5b"
        },
        "item": {
          "id": "ae7289cf-d6f7-4a17-87a1-d85306feb7c4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "01a4d7d6-1dfc-4453-a739-97462fe5883f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a620ecf-5579-4673-9ef4-677a2fb4689d",
        "cursor": {
          "ref": "75369e33-b2bb-4a50-8faa-f5b12d776b14",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "55f5a462-b9a8-439d-87c0-934a8d1c6713"
        },
        "item": {
          "id": "0a620ecf-5579-4673-9ef4-677a2fb4689d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f22b2f3d-2fcc-4a79-9a84-2591a0e205b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d9bd86-88f0-4c42-b725-0ef97e319515",
        "cursor": {
          "ref": "155c3996-40b3-42ae-915a-675ed7d74040",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bda51e36-a3b4-4af0-91c4-de89ed7a35f4"
        },
        "item": {
          "id": "b9d9bd86-88f0-4c42-b725-0ef97e319515",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "34ba1e61-a01d-47f8-8cd7-5e1dad940675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6666dd-b49a-45ac-8f10-14b0aceaa927",
        "cursor": {
          "ref": "86e68537-6a44-4fb1-ac30-7a128b478ea7",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "689dbf9d-5bdb-418d-aad3-00803d5c7672"
        },
        "item": {
          "id": "3a6666dd-b49a-45ac-8f10-14b0aceaa927",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4cc4567d-ed6a-42b4-8446-4a656f3b610f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b313ea-05bf-4fb1-a83b-d5b251aae22f",
        "cursor": {
          "ref": "93f9cef0-1924-4044-b2fb-169767ee4eb1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2d4674c6-bfb6-4ecd-8213-aae52dbde980"
        },
        "item": {
          "id": "a8b313ea-05bf-4fb1-a83b-d5b251aae22f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "28fe15c3-933a-4a0a-adf2-9d4703ca98d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c155d80-40a5-4b03-a0ab-6dfeec157970",
        "cursor": {
          "ref": "17fb8bfc-c875-490e-b0db-afc58ebddbf1",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "eb00bfb4-073e-497a-8b5b-6c5b0433c913"
        },
        "item": {
          "id": "5c155d80-40a5-4b03-a0ab-6dfeec157970",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5f8b5769-680d-4ef1-a7c8-d35008ee4fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9268c12a-3c6b-4a9d-b1d8-c7da0bd5df9e",
        "cursor": {
          "ref": "846d86ed-b7cc-485e-88c0-601907738fd4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "356bf6bc-4787-489d-a1c4-6615e874182c"
        },
        "item": {
          "id": "9268c12a-3c6b-4a9d-b1d8-c7da0bd5df9e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9fe90670-2be8-4dc6-97eb-361157e0e26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da39aa19-0412-44cb-a2c7-d3b1a8b305a4",
        "cursor": {
          "ref": "b9296e08-406c-4b0e-a6b5-929f6ebecedf",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "33162f82-4f01-4185-abe8-b19996b1a735"
        },
        "item": {
          "id": "da39aa19-0412-44cb-a2c7-d3b1a8b305a4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "add3d5f9-dd72-41fb-950d-5425dda1c881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb73b62-a943-4cbe-8980-3fd4c7d97590",
        "cursor": {
          "ref": "3f087480-10a7-49c9-8a4d-ff42d5024b12",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "acaad576-aeb9-4406-938b-b43e2546a254"
        },
        "item": {
          "id": "8fb73b62-a943-4cbe-8980-3fd4c7d97590",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8c2b0a93-db42-46fa-bf2e-1e84ba5bc944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9c88f1-e382-4587-9927-05f4fc9003af",
        "cursor": {
          "ref": "4d168e08-3126-4bdb-9811-68118c9e0e04",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "337e4fc2-4d0d-491a-8af3-eb60922d896a"
        },
        "item": {
          "id": "9b9c88f1-e382-4587-9927-05f4fc9003af",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e4b69cf5-b7bf-48a3-bff6-4ed79e88783d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374db81c-4442-4a54-afbc-dec0e479cf92",
        "cursor": {
          "ref": "7f06cfaf-0f0e-4807-9225-85802ab00bc5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "21d89f8a-24d4-45ee-bca5-3c11c3007a9e"
        },
        "item": {
          "id": "374db81c-4442-4a54-afbc-dec0e479cf92",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dae7ae98-aacd-45c6-aad1-c7688c3f9e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddf0790-e396-4c9d-bcb8-d4acf9c45eba",
        "cursor": {
          "ref": "d4cd9558-9561-4375-8632-2b038bb6c5c9",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "13cffd8b-e6a7-4f29-ace9-92c975acc755"
        },
        "item": {
          "id": "fddf0790-e396-4c9d-bcb8-d4acf9c45eba",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "10fb1a80-271a-4d21-85ed-e9eb0076325b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f32dd4-d6e2-414b-ad6a-19f37a2c7a98",
        "cursor": {
          "ref": "f72aab15-b9ac-4469-a882-3686b41c63b4",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "55049ff0-76d4-4b3a-95f7-8359606122eb"
        },
        "item": {
          "id": "85f32dd4-d6e2-414b-ad6a-19f37a2c7a98",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "67276e8c-2249-4ff0-97d0-056ef53e75ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b50b59-d160-4566-aeea-0c3f6c1808d0",
        "cursor": {
          "ref": "18f291b0-d8bc-4025-b8a5-2059e8e9c445",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cb1f7fb5-3229-4d40-9680-53ebcf442ff1"
        },
        "item": {
          "id": "36b50b59-d160-4566-aeea-0c3f6c1808d0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "07dcbb67-577d-4fb6-9f0e-2f6e27e3edb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2d8cc4-6298-4f23-ada5-5351742e3410",
        "cursor": {
          "ref": "fefbf7bf-6334-48ee-9acb-4ef2b5ac5782",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e42db48a-abd0-4486-b685-a2ee9e3d4d17"
        },
        "item": {
          "id": "8b2d8cc4-6298-4f23-ada5-5351742e3410",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3411b8e1-f2b2-4218-b50a-5e4c9f71ae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbc9410-72ac-4e4e-a30a-4ffb06c518c9",
        "cursor": {
          "ref": "5477d927-4c6e-47d1-9652-af91413f4a0b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8c2a677d-b4cb-4b07-a8fa-a86fa583a478"
        },
        "item": {
          "id": "bbbc9410-72ac-4e4e-a30a-4ffb06c518c9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "20d22405-0a6e-4969-ad2f-da83f2ef2860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa07c7f6-81ca-437c-9580-19ea8a96d981",
        "cursor": {
          "ref": "e21dc308-adef-4eda-a327-c72542989c9f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7e505c0e-67b5-4ebf-a72d-ac6c752ed05b"
        },
        "item": {
          "id": "aa07c7f6-81ca-437c-9580-19ea8a96d981",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "27d35816-4009-4467-aa0b-ec2a1676eb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c39129-2883-4ee7-8eac-4d6cd38d5bc0",
        "cursor": {
          "ref": "f841b611-8c6a-4238-8c5f-9043cb43ea98",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "44d0e30e-febe-420d-a050-9addb1e5e4e3"
        },
        "item": {
          "id": "90c39129-2883-4ee7-8eac-4d6cd38d5bc0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4d4c1b86-77be-415d-960c-c8a39e4ae757",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 641,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2943a010-c725-4123-a622-76bfd9e73561",
        "cursor": {
          "ref": "110f9bbf-6d89-4a4e-93df-f0c46b1c1cee",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dc959cfd-4a20-4054-a279-f36825be20fe"
        },
        "item": {
          "id": "2943a010-c725-4123-a622-76bfd9e73561",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "98a4ee35-f82e-431c-8db0-c798d48bb300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138a4228-b28b-4c96-a5d3-5ca6146f9c67",
        "cursor": {
          "ref": "8069a6b2-2a2a-4fef-b5f6-d161902058e3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "704f345e-9fe2-4fc7-bd43-8e87c259b99f"
        },
        "item": {
          "id": "138a4228-b28b-4c96-a5d3-5ca6146f9c67",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0463bc70-bb17-4ab0-af12-ccf24fb1a2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c443b0-112e-4cfe-954e-298a8c829ac2",
        "cursor": {
          "ref": "6c777902-feb5-480e-8d15-c30735159026",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a6cbb185-eca9-43c5-a889-f3ba3cf1df37"
        },
        "item": {
          "id": "a9c443b0-112e-4cfe-954e-298a8c829ac2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b3ee51cb-df72-49c0-b50a-78d99c36126a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4533f38-fb15-462e-a948-c2cfbe810e66",
        "cursor": {
          "ref": "a233b097-b24c-4f43-a130-b2cb4addfab2",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4a462ed7-f6a9-4db8-930d-df7db331d9c8"
        },
        "item": {
          "id": "b4533f38-fb15-462e-a948-c2cfbe810e66",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1fdb42c2-9a2f-4281-8017-d79727074f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f50cb34-a51c-490b-bd38-c42fbc2d567c",
        "cursor": {
          "ref": "5ee0df14-e4db-4473-b16d-82796cc0c2e7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "778d3c61-3430-4dde-a29d-9636529767ed"
        },
        "item": {
          "id": "6f50cb34-a51c-490b-bd38-c42fbc2d567c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a629d000-7e95-4b20-9d18-005bf42134b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bc0d50-9388-44e8-a9e2-a714670d501d",
        "cursor": {
          "ref": "b1dcb238-d667-4eb7-b7a5-830d4013ddd8",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5cf11dce-b0ed-4ba7-b6b3-e37567422418"
        },
        "item": {
          "id": "68bc0d50-9388-44e8-a9e2-a714670d501d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4f6a9b55-8cc5-4b4c-a406-fe85e02824af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4679e681-059c-4541-a8d2-a794c61cc0b8",
        "cursor": {
          "ref": "6dbfa88a-ce61-4a43-a4e2-afa9bb109288",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b910b128-a5ec-4d33-87ea-0b61d8874cc8"
        },
        "item": {
          "id": "4679e681-059c-4541-a8d2-a794c61cc0b8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "72e1e55f-f575-41e5-a4f7-9aaa7029d3f0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 641,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1137f903-37b3-45b7-a60b-407dea3ffe4f",
        "cursor": {
          "ref": "875803a4-7955-460e-9ec9-5912f0d4d141",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7f4dec97-1db8-4855-9ce6-7053cffd31c2"
        },
        "item": {
          "id": "1137f903-37b3-45b7-a60b-407dea3ffe4f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0992bb17-f03e-4bad-b679-349d8320956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bac5306-b4db-435a-a670-b95c50380a67",
        "cursor": {
          "ref": "eddf6205-7f87-4dab-aa03-e886b3f8eadf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ba404588-d2f1-426c-a7a5-2c1a59671b20"
        },
        "item": {
          "id": "4bac5306-b4db-435a-a670-b95c50380a67",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "52ad8c2f-b88d-41d2-90a7-c599afc0ff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67926e3-af2d-4b0b-acca-1425798990f9",
        "cursor": {
          "ref": "cd8fef88-04bf-4cd3-8e57-d29755cd1bc6",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c074111d-ce90-4b54-b567-3b2a820990bd"
        },
        "item": {
          "id": "a67926e3-af2d-4b0b-acca-1425798990f9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a7a034ae-bcf0-4f91-8838-d60241c45faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a381ad3-cd7a-49f7-8561-7700f2f240aa",
        "cursor": {
          "ref": "15034359-a5ac-41d6-bb0e-7b3794644c0b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "813ad2ba-8842-4a32-9d4c-c8c3aa91d8fe"
        },
        "item": {
          "id": "2a381ad3-cd7a-49f7-8561-7700f2f240aa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "02ab69fa-bdd1-4d52-bbe5-17496d404856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5140fc45-5926-464f-885d-3c83c4457f06",
        "cursor": {
          "ref": "4a6b0a58-6ed8-4be0-b368-25c44d1917c3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "10df9f3e-1404-4382-9f57-667c2f5f977b"
        },
        "item": {
          "id": "5140fc45-5926-464f-885d-3c83c4457f06",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3a6c4e64-4494-4e70-a92a-ad3e94b45f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951659ad-1489-4eeb-9514-287e311d3519",
        "cursor": {
          "ref": "34de14e2-5d04-4ec4-a398-d930ae65f5ad",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "13643701-9ff5-49a4-80f6-485ef904dfd9"
        },
        "item": {
          "id": "951659ad-1489-4eeb-9514-287e311d3519",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "32dfc0d3-ca23-4ec7-9107-c611ee4532fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc84a400-6834-4586-8082-3f3f9c4bfa71",
        "cursor": {
          "ref": "46539bf2-aff9-41cb-82f9-bdc3477a4716",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9d45b515-708b-4b77-80ec-cee3a28b521f"
        },
        "item": {
          "id": "dc84a400-6834-4586-8082-3f3f9c4bfa71",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "79a458c5-8b58-4fb6-a056-1222b8fe1ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dba896f-b8b8-4f7d-b290-7c32a8018edd",
        "cursor": {
          "ref": "73ec6d65-6dec-46e6-a271-1720f3ac23b1",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9c89c5a5-0a01-4b30-8112-eb7ee7385ae2"
        },
        "item": {
          "id": "6dba896f-b8b8-4f7d-b290-7c32a8018edd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "936f165f-f949-41e9-8c3e-f2132f1e12ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf39f1aa-6ae4-4989-8032-363362f6ccf6",
        "cursor": {
          "ref": "a08ce736-57cc-411e-91cc-ad808f8ef580",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5f1aae4d-ba64-4def-be4d-8ae834ce8d88"
        },
        "item": {
          "id": "cf39f1aa-6ae4-4989-8032-363362f6ccf6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c696644d-147e-40ab-af5b-7c1698716718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e41c918-6952-4fd5-88c9-4e4845acfc2e",
        "cursor": {
          "ref": "6e1f6ab3-ef94-4ae0-88ef-2936852951f3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9c538f11-d479-454b-b004-6a9bc1b6245e"
        },
        "item": {
          "id": "8e41c918-6952-4fd5-88c9-4e4845acfc2e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f815de64-a733-46c8-9e3f-60d607f3749d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecf93b9-5166-43f4-89f1-cf0b05dc10f6",
        "cursor": {
          "ref": "a97d7311-947b-4f69-9fb7-3fffc7e411e7",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "24de5c25-698a-42c0-8031-195ffd355fc3"
        },
        "item": {
          "id": "aecf93b9-5166-43f4-89f1-cf0b05dc10f6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "103e9d83-c445-497e-8c34-bab3a6614d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e33b006-2350-40c9-9be5-90fbd8a2cdaf",
        "cursor": {
          "ref": "1480309a-0f3e-44b6-bc50-333ee1978702",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "418db0eb-efdf-4289-af8d-330abe23c2d4"
        },
        "item": {
          "id": "5e33b006-2350-40c9-9be5-90fbd8a2cdaf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "474d3097-4823-4acb-92e1-2fe6c70abc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b751c226-0f77-43a1-be6c-74c24726e2c4",
        "cursor": {
          "ref": "e87c4de4-115d-4644-aa8c-7e175cc34061",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a0186c22-956e-40e0-94c2-5c1f47e9d871"
        },
        "item": {
          "id": "b751c226-0f77-43a1-be6c-74c24726e2c4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b724a3a1-010e-4d72-b7b9-9a9a7588a6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e530c7-f9a9-425f-aa8f-2b03aa28fcfc",
        "cursor": {
          "ref": "75e90b8d-ee8a-4541-8f6c-d585088c6839",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "eb6b60d3-44fc-4947-9b69-f0021712129c"
        },
        "item": {
          "id": "74e530c7-f9a9-425f-aa8f-2b03aa28fcfc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d237d765-22f8-4707-998e-a5dd4a32a027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5763d1-5e35-4dea-a511-3c25dae50cb3",
        "cursor": {
          "ref": "a74fa0b4-2b51-4dee-8fc4-f9a02697efd0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eb5fe0c1-ea2e-4620-ab7a-1608ababf9da"
        },
        "item": {
          "id": "df5763d1-5e35-4dea-a511-3c25dae50cb3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fe652a69-64fb-4149-a194-7e1e78ffdb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afe6ac7-f8b1-457b-b33e-cd0b17375848",
        "cursor": {
          "ref": "5ab28104-bf5e-4e56-b24d-eab9363c7ec1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c17a50fd-6120-47c7-96cd-972d3079f9e5"
        },
        "item": {
          "id": "4afe6ac7-f8b1-457b-b33e-cd0b17375848",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "04dd0a69-26d1-451e-a6fe-752cfc18c449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f8aa8e-992b-45cd-91da-6762ad4dbb15",
        "cursor": {
          "ref": "e8f046cd-e695-480b-867a-c629d4564092",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ea39b88f-9372-4fd5-bfcc-1580837e05e8"
        },
        "item": {
          "id": "d3f8aa8e-992b-45cd-91da-6762ad4dbb15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c98d33af-02eb-484f-9ac8-bc06603cc031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34adf5ab-d4a3-4f33-b25b-e12605a8de24",
        "cursor": {
          "ref": "6c2ad2ae-041e-48d9-9a83-7e20f800d14f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "270cf9a1-0448-4c6c-8e29-cf1774ba7655"
        },
        "item": {
          "id": "34adf5ab-d4a3-4f33-b25b-e12605a8de24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e7d68a25-eb24-4820-966f-299a5d896d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0605ff4e-e34a-40af-b7c3-84dd4dc22517",
        "cursor": {
          "ref": "fb386c32-f286-4c69-8c15-d2a3ceca7ec5",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2bbc6363-cf84-47d6-a114-b0e1fbd1e958"
        },
        "item": {
          "id": "0605ff4e-e34a-40af-b7c3-84dd4dc22517",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "793c9ccc-edab-46c4-b885-6315e5fa7dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42690e92-c3c2-4efa-85dc-fe542479762c",
        "cursor": {
          "ref": "b2d6a2e7-7568-4846-8ee0-e633f8348f16",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a1497721-40bc-4393-bb48-802a657d0359"
        },
        "item": {
          "id": "42690e92-c3c2-4efa-85dc-fe542479762c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "090efd15-9e97-4739-885a-7420738f3093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ce0491-e638-4224-aade-19d537398368",
        "cursor": {
          "ref": "85865f4a-b8d9-4977-9306-4c7a99ffa804",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3075fb01-5baa-494e-915e-25746eb1e071"
        },
        "item": {
          "id": "c6ce0491-e638-4224-aade-19d537398368",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "897c0c4d-58bf-4fb9-a910-5d9cbba9b84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ea78e3-cec3-47ca-99c2-4626d4dfac99",
        "cursor": {
          "ref": "b6c6c757-76b2-4b8b-afb4-2c1537df40e5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4081a61e-4068-472c-b749-5250c6e1422b"
        },
        "item": {
          "id": "55ea78e3-cec3-47ca-99c2-4626d4dfac99",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "af507171-986c-46e3-8aee-832d5d09cd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06fb5ce-1619-4a3b-835f-0bdbd51bb2c4",
        "cursor": {
          "ref": "df4fc960-de52-4821-935a-b6cf35497085",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "32ac7e07-f2ec-41a4-9b1a-c8863a6425dd"
        },
        "item": {
          "id": "c06fb5ce-1619-4a3b-835f-0bdbd51bb2c4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7abb7d18-a8b1-49dc-86f6-f46d107a8e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09343f18-0832-4f1a-9d42-7f19057b9dfa",
        "cursor": {
          "ref": "0bb5cbbd-6fb0-4933-9fe6-01233a706e8c",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3a0459c9-08a9-4172-94f1-63d899f0f3a5"
        },
        "item": {
          "id": "09343f18-0832-4f1a-9d42-7f19057b9dfa",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9f25bc10-2326-4146-8dd8-490d4bd96479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5511ddf-c927-40d5-8d71-16a742a11de1",
        "cursor": {
          "ref": "3a2f1737-14fb-423a-b692-f820e3c9faf5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4337ab4f-6480-411f-9199-bffa9158be4e"
        },
        "item": {
          "id": "e5511ddf-c927-40d5-8d71-16a742a11de1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "854ff4c6-4a55-482f-9289-869952498292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373ab206-3f32-40eb-a1c4-1496cd2b4587",
        "cursor": {
          "ref": "d5ded0fd-3952-4bed-8bf6-3468d0c17496",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "42ee3437-f2f0-47c7-ac7d-a3cf9afec330"
        },
        "item": {
          "id": "373ab206-3f32-40eb-a1c4-1496cd2b4587",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c6be3199-3acd-475a-a441-90e87d5620b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569dfb66-5185-4972-a480-49eedaff00bf",
        "cursor": {
          "ref": "81e8f336-ecfc-45e1-a60b-029ae1ee8274",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "004e2bd7-8c25-45f7-9fa8-4911769843db"
        },
        "item": {
          "id": "569dfb66-5185-4972-a480-49eedaff00bf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "14f9c751-4d69-4151-b9a0-6298471e107e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ae4b77-6261-43c6-9f26-a7f1d3e177da",
        "cursor": {
          "ref": "32f76548-741b-4978-8907-c053fc77773d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f946eb47-b9c3-4398-9e6e-3e1433dd03cc"
        },
        "item": {
          "id": "c7ae4b77-6261-43c6-9f26-a7f1d3e177da",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4a64f76f-b5fb-4884-95bd-de633758cf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd385bc-8a4e-4fc1-87be-d462c3c4764d",
        "cursor": {
          "ref": "6364bd9c-31f8-40e9-9d45-196102556258",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c41e1d09-a368-4c41-9e1a-d462c9ace9ac"
        },
        "item": {
          "id": "fdd385bc-8a4e-4fc1-87be-d462c3c4764d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8dd7cad3-9199-41cc-bf3f-fddbc69cd527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e784ca-d281-41af-8831-67ef1b797b7f",
        "cursor": {
          "ref": "900c0fe4-e023-4867-94ae-129399c2f4bf",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9704239b-08b3-4917-8c64-3bdc244b781a"
        },
        "item": {
          "id": "d9e784ca-d281-41af-8831-67ef1b797b7f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aabbbd08-208c-4c3b-8dc3-7618a4372e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff91f55-20dc-4a06-8c1a-f3a213bdc7ef",
        "cursor": {
          "ref": "7d4c1184-8146-41d6-a3f2-fb670f280c52",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3279b3c0-8b89-49ff-8b4b-b8db6f2674f8"
        },
        "item": {
          "id": "8ff91f55-20dc-4a06-8c1a-f3a213bdc7ef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a2a40d99-a5aa-43d7-b07b-caa4354e8438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d6b3c-8214-4af5-ad6e-67b5506f1d69",
        "cursor": {
          "ref": "95178bb7-7cdd-4930-881d-5036ff443dd1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7d57dddb-701b-4ba8-a891-f17e26e7048d"
        },
        "item": {
          "id": "003d6b3c-8214-4af5-ad6e-67b5506f1d69",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "119ceba6-fdb3-4c6a-801f-c34545853777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72680174-cc8b-4f0d-8b7d-7387d4bed17b",
        "cursor": {
          "ref": "bcdb2edc-a1d6-4942-a3d4-a99993a68e1c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f6131fdf-3dbc-4899-bad0-42a1c0960754"
        },
        "item": {
          "id": "72680174-cc8b-4f0d-8b7d-7387d4bed17b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a1bf1290-8e02-4d50-ab38-ee8b5a09b98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453e166a-aa0b-49b0-aaac-c0f3d105c1ce",
        "cursor": {
          "ref": "4e89ffec-0cac-4823-8b34-95f2f1f81584",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b841698c-f720-45df-8aff-0e08294422fe"
        },
        "item": {
          "id": "453e166a-aa0b-49b0-aaac-c0f3d105c1ce",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "82960e87-1aaa-4978-8960-bc5c9dc6979a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db697f6-318e-41d1-b61c-a4513988da4d",
        "cursor": {
          "ref": "bbc82fd8-7bcc-4fb9-ac5b-ed2501e1ad10",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1fff1f48-4b51-4118-845f-95a8234708fb"
        },
        "item": {
          "id": "2db697f6-318e-41d1-b61c-a4513988da4d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a5eb2c66-d7b8-4f17-8312-4e3dfad6e3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6de7cdd-1116-4ed0-85be-ff5d751c3225",
        "cursor": {
          "ref": "e01087b1-6158-40de-a8c8-301e964661bd",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a982baa3-c0cf-4c04-99e0-955dccde4a48"
        },
        "item": {
          "id": "d6de7cdd-1116-4ed0-85be-ff5d751c3225",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a6b85e72-f436-4cac-839c-a79a95f46ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e53f18e-b6f2-45dd-bb83-d05ca240f753",
        "cursor": {
          "ref": "fa040595-6e95-4de9-b692-32784f3d85ff",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "20d7c987-94a2-4b48-8aaf-28e70abb329d"
        },
        "item": {
          "id": "0e53f18e-b6f2-45dd-bb83-d05ca240f753",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "78f30265-2bc1-469c-974f-9b036d1a144c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b746bf7-8d45-4ea7-9955-649339c21d79",
        "cursor": {
          "ref": "e874660c-f2f2-472c-9495-f92e3bf7cce6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "110ab507-4758-4ca2-ba95-f2dc0cbb71b9"
        },
        "item": {
          "id": "2b746bf7-8d45-4ea7-9955-649339c21d79",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "627afdc7-a154-479b-8204-5fd88be32b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47beeb48-34ae-42fe-be98-e5fbfa693e49",
        "cursor": {
          "ref": "f6d73659-f1d3-4c9c-85e9-ee61f56e5287",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a02c7a42-c570-4254-a0ca-92b622b9b160"
        },
        "item": {
          "id": "47beeb48-34ae-42fe-be98-e5fbfa693e49",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "598e9eeb-17cc-4c4b-ba70-da12bf2296cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778c0b63-5184-46ab-ac98-dfb129f648ae",
        "cursor": {
          "ref": "3579ee8f-d140-4b53-a64b-fbb987162454",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "09164e31-1a31-4638-9f9d-1be84d86d34b"
        },
        "item": {
          "id": "778c0b63-5184-46ab-ac98-dfb129f648ae",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e24c6e46-971e-45bf-811f-70de56f2cf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d6cbe7-c92c-48c8-8b4d-0bfdf2ccc971",
        "cursor": {
          "ref": "471cff2e-41dd-4a87-b19f-99463776c381",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "95d92180-5500-472f-9c54-5d8a123be5e7"
        },
        "item": {
          "id": "77d6cbe7-c92c-48c8-8b4d-0bfdf2ccc971",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9f808c0e-92fc-4f31-899a-1a8f75052cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99cb0d-54de-4c9e-8971-f7c4d775a1cf",
        "cursor": {
          "ref": "dd88e6ff-a98f-4c2b-8f45-fd0fc3757d71",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "34e996af-af74-4f40-ba00-02cafd06f9df"
        },
        "item": {
          "id": "0e99cb0d-54de-4c9e-8971-f7c4d775a1cf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e6a5f6dd-706d-45c7-811c-b446d59b91ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d819f05-7d41-40a1-92b9-4120b4742787",
        "cursor": {
          "ref": "c000b1a7-6c18-4405-a7e6-211c530ffb05",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e00b25be-01f3-4de5-88fe-58288676a013"
        },
        "item": {
          "id": "5d819f05-7d41-40a1-92b9-4120b4742787",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7eb6510a-3998-4891-9493-c37838d60a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febfe347-14f0-44e1-8073-ed2071c2ed7a",
        "cursor": {
          "ref": "23309b33-c969-4c9e-8455-f5ca61ad55a1",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a4ae5ed6-4590-4d77-b0f6-2d9bf6fd4a72"
        },
        "item": {
          "id": "febfe347-14f0-44e1-8073-ed2071c2ed7a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ab0ff702-8aaf-46a5-9221-59e59babb8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d3326e-6167-4044-a78a-c0e361705676",
        "cursor": {
          "ref": "4eb85fa2-3b45-42e2-b877-e33b9e25032a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0b1c1f81-2ea9-485d-871c-0ba9a8cbcf4c"
        },
        "item": {
          "id": "77d3326e-6167-4044-a78a-c0e361705676",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7456f6b7-f04f-49e8-9201-a2c425114645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deaf7d9-ae7b-4215-9c7c-81a697459961",
        "cursor": {
          "ref": "e2a6c42c-fbc3-484a-9949-625ef065a2f9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a1d67800-1063-418f-af5e-06fdf2512919"
        },
        "item": {
          "id": "4deaf7d9-ae7b-4215-9c7c-81a697459961",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "36f792eb-691a-4e1b-ac54-e5997eab4996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63524ab1-3682-475f-851a-2a60c03ba8bb",
        "cursor": {
          "ref": "0f912be0-482d-4ac0-8272-66598bdff7cc",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "77829c3f-11fb-4949-9a37-555102fa1446"
        },
        "item": {
          "id": "63524ab1-3682-475f-851a-2a60c03ba8bb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ced8eb63-c9e5-4420-b677-07390ec9197d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39ce8ab-651a-49f9-96b6-1ce0c8a8a8e4",
        "cursor": {
          "ref": "70794fc1-767b-4295-bfea-ca2ca7f84a01",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "63a082cf-8c2d-42e7-8ea5-fabcb46cbbe1"
        },
        "item": {
          "id": "b39ce8ab-651a-49f9-96b6-1ce0c8a8a8e4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a258d8e1-f50b-46d7-820f-2276d97a7fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30950f7-fc13-4e45-9857-9406166baa8f",
        "cursor": {
          "ref": "59405614-d6bc-4d81-a4a7-cdab76f2c8f6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6ba04268-c0cf-4565-81c1-1d7758273a9d"
        },
        "item": {
          "id": "c30950f7-fc13-4e45-9857-9406166baa8f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3357533c-2209-46d7-9c5c-62183f2bbff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883aa51d-3c2e-4752-a13e-73448d634c5f",
        "cursor": {
          "ref": "81e8de90-a662-4026-a8e6-62e1330ad788",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "90457539-b1a4-4c7f-b622-c06158534855"
        },
        "item": {
          "id": "883aa51d-3c2e-4752-a13e-73448d634c5f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f469c334-e583-4128-a0c7-2a7b4bb5242d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aab4f7f-eebf-4e19-a74d-005b7b2db580",
        "cursor": {
          "ref": "472a75f5-58a6-4b76-b6be-9525b1e16d5c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ecba3d04-1463-4c20-9dda-b0563bad5878"
        },
        "item": {
          "id": "2aab4f7f-eebf-4e19-a74d-005b7b2db580",
          "name": "credentials_issue"
        },
        "response": {
          "id": "26776ea9-7985-4ccc-9137-789d8ed0adfc",
          "status": "Created",
          "code": 201,
          "responseTime": 8512,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c4e157-4d3e-4734-aefb-e98be24efc6a",
        "cursor": {
          "ref": "ae94c9b0-d553-46ba-9c86-c718cbd3abb5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9f9cc3c7-5c70-4642-8078-c28b4d48609a"
        },
        "item": {
          "id": "18c4e157-4d3e-4734-aefb-e98be24efc6a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "be83b579-9e70-46fd-a3d9-e890963f68ba",
          "status": "Created",
          "code": 201,
          "responseTime": 7109,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb0335b-73cc-4006-8798-11e8ad5d3f26",
        "cursor": {
          "ref": "b1521c59-02d2-421d-acd1-4b67aaa1a3e3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1b6efa80-e692-4a22-90a2-399d290e4605"
        },
        "item": {
          "id": "8eb0335b-73cc-4006-8798-11e8ad5d3f26",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7586caff-eb26-48b8-a1d2-e8720794c4c7",
          "status": "Created",
          "code": 201,
          "responseTime": 6939,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6094c724-3bd4-49ae-9f22-b7556a0c5cde",
        "cursor": {
          "ref": "8e055d13-1d47-4669-acfa-be661a6b2673",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a21b632d-9515-4c9a-a20a-59e24e7cfb76"
        },
        "item": {
          "id": "6094c724-3bd4-49ae-9f22-b7556a0c5cde",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a6727cc4-415f-4f0d-87fa-c1e50f109852",
          "status": "Created",
          "code": 201,
          "responseTime": 9252,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2992efb2-f6fc-4add-a4f4-92af0301a00b",
        "cursor": {
          "ref": "0640e046-d100-4c3d-8e46-e4a32499584b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54c95886-c7ef-4af4-b5a0-f6ce1de2b878"
        },
        "item": {
          "id": "2992efb2-f6fc-4add-a4f4-92af0301a00b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "60c6dbb4-78f4-43f6-8bb6-f9838c51d7ee",
          "status": "Created",
          "code": 201,
          "responseTime": 6858,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aa10cb-a86a-4a44-bdd9-85975cc9eee3",
        "cursor": {
          "ref": "d08c4de1-c0ec-4181-8e3a-0391a09a6d2f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0727dd82-84d5-441d-ab26-61684c396c71"
        },
        "item": {
          "id": "62aa10cb-a86a-4a44-bdd9-85975cc9eee3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b7033b7e-fe7f-495e-98ba-340d453ea33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "7919f7d6-8394-4c83-a5ba-6a0eb26f7313",
        "cursor": {
          "ref": "51f6a07d-0c61-49d5-ad66-07965e4a8b6d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5f65d519-7688-47a3-a148-64b5238fa902"
        },
        "item": {
          "id": "7919f7d6-8394-4c83-a5ba-6a0eb26f7313",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0c7e4cea-aafe-48bc-820c-6aa276a6d9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1065c6f3-4b22-4979-884d-9faff92c353e",
        "cursor": {
          "ref": "aba9a421-5b9d-44f3-9c21-2121b0b471ec",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "44932129-582c-4924-a976-d93952bc6d60"
        },
        "item": {
          "id": "1065c6f3-4b22-4979-884d-9faff92c353e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5d0bf21e-ba14-4b66-a41b-218aeb07f35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a33445-f11c-42c6-be61-b171648eb76f",
        "cursor": {
          "ref": "3b096475-c96c-4215-bf42-bf8d083a5505",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a0437cc0-cf1d-4bae-87e8-f30a3b7ccd9d"
        },
        "item": {
          "id": "b4a33445-f11c-42c6-be61-b171648eb76f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "51c6972d-f3e0-41ff-b5a3-e283740ad6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf2946a-d4fc-48c5-bf4d-c270df62b5cf",
        "cursor": {
          "ref": "b998e133-5258-4d25-874d-170e1104a651",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "75f58645-7a3b-425f-a3e6-398c2b4e2e72"
        },
        "item": {
          "id": "edf2946a-d4fc-48c5-bf4d-c270df62b5cf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "885030c1-ae59-45a7-85b1-865cbf8479e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fbe148-1961-4b0b-82b3-658e2437405a",
        "cursor": {
          "ref": "3fd8aacb-6f00-4696-8e86-2bcd7db9bdeb",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b1d4461d-411e-4fa6-a108-84987039ba3c"
        },
        "item": {
          "id": "11fbe148-1961-4b0b-82b3-658e2437405a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a5841c19-d3e1-4fee-a6f1-2903f68b0e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0f5027-58b2-4786-8286-a31b01bed6af",
        "cursor": {
          "ref": "7aab3425-53e2-497a-8f28-08406dde0d03",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d4378e2a-534a-4296-8551-0bdd20da1b69"
        },
        "item": {
          "id": "6f0f5027-58b2-4786-8286-a31b01bed6af",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "75e97ff1-6391-4518-b1ab-1ee2ed61751f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ab335c-887c-4985-9de5-64e0bbb2df90",
        "cursor": {
          "ref": "53c82083-4049-4d33-879b-919f4b9b14d4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bbbde0b0-69a1-4209-a8da-fce2d6c1e7df"
        },
        "item": {
          "id": "11ab335c-887c-4985-9de5-64e0bbb2df90",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9c72f0f1-5e68-490e-8c0b-d99bb7b72e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb57091-f090-4513-ac4d-1a2ab5613490",
        "cursor": {
          "ref": "23694627-56a7-43a4-82f7-4de0ebf8efbe",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e0450d1d-5c02-4103-9552-55c5ced66b14"
        },
        "item": {
          "id": "2eb57091-f090-4513-ac4d-1a2ab5613490",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c478a66-6d83-4e45-a39e-0018439a09c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df28049-6896-4529-8dc4-fa3b8c6b2ef5",
        "cursor": {
          "ref": "8c4fe5a8-75b2-474f-b165-49ba97174aa4",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "74fea80a-9a82-4b8a-987e-29cf02139714"
        },
        "item": {
          "id": "5df28049-6896-4529-8dc4-fa3b8c6b2ef5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5e0c93f2-9a1a-4256-adf3-28e6f2350a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2731ce88-74c5-4916-a60d-45933b639d47",
        "cursor": {
          "ref": "68325b38-6176-47f0-bd6e-5a24ee324636",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ab4dbe24-eaf7-4840-a303-7676f060acb3"
        },
        "item": {
          "id": "2731ce88-74c5-4916-a60d-45933b639d47",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0c139fe9-8130-41ec-aa01-d61305b8800c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3769199a-d80a-46f3-9e1f-da47f57d2688",
        "cursor": {
          "ref": "23534339-910c-41d3-9763-3216ac6fa319",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4e2c652a-d85f-44b9-9d10-dc47e94c4311"
        },
        "item": {
          "id": "3769199a-d80a-46f3-9e1f-da47f57d2688",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7e9cacfc-f151-466a-9183-307ad734fd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303117c9-3644-456c-b64e-9d37cdf95a72",
        "cursor": {
          "ref": "11e8d6f9-abad-43a7-85e7-f93232f5fdbe",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dce35e01-23ca-447d-9324-b5ca7c4c3f19"
        },
        "item": {
          "id": "303117c9-3644-456c-b64e-9d37cdf95a72",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2109e9a3-ce01-4086-8035-95a3e1b8f9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3fa509-53ee-4d47-a5a2-0534e7648ac1",
        "cursor": {
          "ref": "3834620b-f2bf-48ad-96f4-266292db63f0",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8671d346-1642-4eb2-bc5c-818d3f462866"
        },
        "item": {
          "id": "0e3fa509-53ee-4d47-a5a2-0534e7648ac1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b6e6469e-3bb1-4a11-8ceb-c070ff3b0e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786e11a8-b846-4fbe-a8b1-18d81fc4c29c",
        "cursor": {
          "ref": "4fc5af6a-7bbd-46fd-ae2a-0cf893aa7d5b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "18583943-c48b-4aa6-89c2-5dba016e7b01"
        },
        "item": {
          "id": "786e11a8-b846-4fbe-a8b1-18d81fc4c29c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14325918-32b1-4d00-95c7-e5ebdd52a478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741d5796-48d8-4b42-84b3-3374949b0e10",
        "cursor": {
          "ref": "09bb423c-1613-49b8-9c35-0d5eefc97250",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2b75a86b-ba66-41a7-ad87-4f912ea95e4e"
        },
        "item": {
          "id": "741d5796-48d8-4b42-84b3-3374949b0e10",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "18dfabf8-495f-4a4f-b946-9b247878c759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e744b1-e6c4-4f1d-8e6e-b3d08926be1a",
        "cursor": {
          "ref": "fc3d8c48-64e0-43bc-8202-e682bdd3d98c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "27e82c5f-08fe-4059-b277-8c794f5fde4b"
        },
        "item": {
          "id": "c3e744b1-e6c4-4f1d-8e6e-b3d08926be1a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "17fb1e1b-9205-4fbe-8a9a-4ccb6632a1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e068640e-e368-4c9c-ab04-235489273785",
        "cursor": {
          "ref": "45dc2e9c-1736-41d2-b2c1-a7c0e6225057",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "347fdcbf-e0e0-46a2-9925-8e2395244343"
        },
        "item": {
          "id": "e068640e-e368-4c9c-ab04-235489273785",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0f7e0f15-531d-42ab-89cd-62c584bc796a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b664ba85-78aa-4812-9d4e-305bd972e120",
        "cursor": {
          "ref": "f0612c61-aed0-49e3-b349-b4b6b855f410",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4615601f-b534-4424-82aa-6e1cf005e94f"
        },
        "item": {
          "id": "b664ba85-78aa-4812-9d4e-305bd972e120",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "af74b30a-f506-496b-8bc4-7b537f932ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bd6bc5-2448-4bed-9ef5-3cf58b0486ef",
        "cursor": {
          "ref": "26b9363d-3b0d-45b3-8176-ac7d7b519e93",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2ed064d8-7d7f-4512-b853-bb3018a5ff16"
        },
        "item": {
          "id": "78bd6bc5-2448-4bed-9ef5-3cf58b0486ef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1450b586-7102-4787-878f-5bda4fa242b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a48f172-4a19-40a1-82f8-427955efa328",
        "cursor": {
          "ref": "12200785-c431-4289-8b93-1e797fc7fbf2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "43404506-a1b0-479e-b346-2cfd64862219"
        },
        "item": {
          "id": "6a48f172-4a19-40a1-82f8-427955efa328",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "949f8bdc-a7bb-40eb-80dc-e21a718c5987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5b4f4d-2653-4cf9-bf49-f1bc7db4f7e6",
        "cursor": {
          "ref": "6bf778a5-202b-4daf-9dcf-b8483524e629",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "115d76f2-d99f-431b-9ff5-f3f852a04f73"
        },
        "item": {
          "id": "6b5b4f4d-2653-4cf9-bf49-f1bc7db4f7e6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c7a25f9e-3e64-4ff0-bd7e-d43638bc979f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69e3e21-1499-4c10-982c-84eba13c6f4c",
        "cursor": {
          "ref": "50db7862-b30c-4d77-a7d8-a0e1181463b6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8e247ab0-8cdf-457c-a839-6581c8b9a87f"
        },
        "item": {
          "id": "e69e3e21-1499-4c10-982c-84eba13c6f4c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1fe95ce2-60f3-495c-99eb-dabc6f91c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c8c6c4-4a78-4840-9cd4-624bea47650d",
        "cursor": {
          "ref": "0a2fc2b3-f6e6-458d-9c9c-622bb1c18982",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2d7b9684-2f48-4f50-a3ce-29268c614d6c"
        },
        "item": {
          "id": "d8c8c6c4-4a78-4840-9cd4-624bea47650d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ae185319-2a7a-4d32-b44b-816b79d02ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87735e4-3f16-4d09-a1eb-8e7277137a6d",
        "cursor": {
          "ref": "d1883ae4-c242-4ab2-8831-b51ba29ef601",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1b716086-f9d2-40a6-ab5e-33e158de4026"
        },
        "item": {
          "id": "a87735e4-3f16-4d09-a1eb-8e7277137a6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b318e5c1-4145-4fd6-ae72-7b20c3837b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d58fe9a-836a-4e0e-9bca-fa02ee34443c",
        "cursor": {
          "ref": "de385926-85fd-4a30-b0d6-72e9803a5d50",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dd984b85-b28f-40e7-aa53-f5ea6cb2166a"
        },
        "item": {
          "id": "9d58fe9a-836a-4e0e-9bca-fa02ee34443c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "151449f2-60a2-47ea-9703-f3a9d3c6098d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9e4330-54ea-458d-af6b-8897d92ac08f",
        "cursor": {
          "ref": "0902824f-bfc0-4ba2-bd27-56b8b04b7e15",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "59112441-2807-4ee6-aed9-a3a722d767aa"
        },
        "item": {
          "id": "3e9e4330-54ea-458d-af6b-8897d92ac08f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cbce3013-434d-4f89-8cff-0d0bbd93c95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4100c5-6b04-41bb-bfbe-c4425a841e98",
        "cursor": {
          "ref": "661c1e53-f6d7-4aa8-b6e9-0c19b6471d1b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "806b0745-2dd8-4be6-9faf-b9f7d3f0a95f"
        },
        "item": {
          "id": "2d4100c5-6b04-41bb-bfbe-c4425a841e98",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05a150c0-193e-4f03-8072-0a2aa494fef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a993f3a2-726f-453a-bfc6-ed3232ab9202",
        "cursor": {
          "ref": "fc4b10b4-33c3-4e82-8d7a-18874971f296",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f5f3452b-1a9f-4f51-94ef-13d61306e6b1"
        },
        "item": {
          "id": "a993f3a2-726f-453a-bfc6-ed3232ab9202",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c82e4ac5-952c-4f73-b1f7-9b30f84e28b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8d080e-cc31-4577-b322-31e84e6b4220",
        "cursor": {
          "ref": "c0ec89eb-740b-405c-8de7-7d8fbb656d6e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d77acaee-0296-46a8-a030-6fb2cc3f89cf"
        },
        "item": {
          "id": "1c8d080e-cc31-4577-b322-31e84e6b4220",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e70c3c72-0b16-4de7-bf8a-fe2c4fd1d410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2704c6f3-45dc-4762-a9d3-8f77003e6e1b",
        "cursor": {
          "ref": "41034693-f7ad-4690-b3a7-99bd26031239",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cbc93e54-df05-4eea-9ad7-920cd012f151"
        },
        "item": {
          "id": "2704c6f3-45dc-4762-a9d3-8f77003e6e1b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3100567f-a36b-44b5-88f4-50dfc7b7e7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c110d6-b9eb-4a29-aeef-f71a74d2f8a3",
        "cursor": {
          "ref": "5f9e882b-d874-402c-bf2c-3738f547e5e3",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3178293f-6979-473b-908c-7ee5a1add7a1"
        },
        "item": {
          "id": "95c110d6-b9eb-4a29-aeef-f71a74d2f8a3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "07484b0e-4efc-49e6-b24a-193e15b35347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a627960-0366-4916-8f5c-a1fcdd6e440f",
        "cursor": {
          "ref": "01eaabff-94a3-483c-83f5-e744263306c7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f9fba604-5512-425c-bd44-18612c99b8a7"
        },
        "item": {
          "id": "3a627960-0366-4916-8f5c-a1fcdd6e440f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b20bc4ce-d265-445f-8f1b-df82097ecee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4ac226-90d2-4755-a81e-0c0dcc6603e8",
        "cursor": {
          "ref": "32107545-e08c-4f19-8a13-e6a286578e94",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8886b462-6829-45a4-b5cd-0a1fff1b0eed"
        },
        "item": {
          "id": "0a4ac226-90d2-4755-a81e-0c0dcc6603e8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2fd2f9c0-11fd-40b7-9c6c-afdc5aa639e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7653e4-9806-448c-94d2-143fdbd5098b",
        "cursor": {
          "ref": "cc465729-1b95-4859-bcc1-ae3ee1b5c44b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a1154909-4cdc-4163-9411-bf28b6fe2375"
        },
        "item": {
          "id": "cf7653e4-9806-448c-94d2-143fdbd5098b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d88c3009-1488-4e97-9c06-6bc9ce9b0346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336dd201-01fe-4325-a523-14d5cf6c93dc",
        "cursor": {
          "ref": "9a1ed2bd-81d4-47f7-b997-a874ac5c25d6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "30c2b750-fefe-443e-a294-53ce352f6e27"
        },
        "item": {
          "id": "336dd201-01fe-4325-a523-14d5cf6c93dc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "deaa480c-d98c-4738-b853-02847b12b10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e145db24-3751-496e-a609-0e2968b4c5d0",
        "cursor": {
          "ref": "c496bf4b-9851-49d3-9d35-5642c4734fa5",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "81619a96-ffad-4c1d-970c-257dceefb28f"
        },
        "item": {
          "id": "e145db24-3751-496e-a609-0e2968b4c5d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "565d98c3-beed-4841-ab08-b1cbd7f92373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc495f4-b294-4de5-b50d-499b1033c0d1",
        "cursor": {
          "ref": "7c62b98c-763c-4168-8a22-19b866081894",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cedc7e71-fb96-4592-89bf-ef480db5dc9f"
        },
        "item": {
          "id": "0dc495f4-b294-4de5-b50d-499b1033c0d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a2482ba8-2faf-4d9e-b530-5787900c9e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a822b54-b7d9-45b1-9ec1-9fbfe81e7674",
        "cursor": {
          "ref": "28c35518-9fa5-46c1-979d-6d6f3df2ffd7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "21ccc237-cda1-4eb1-b324-f2725352eaf8"
        },
        "item": {
          "id": "2a822b54-b7d9-45b1-9ec1-9fbfe81e7674",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b929405-2bd5-4cf7-a672-122005b2d239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d29d16-6eb8-4cb9-81f2-90e8e568c6c6",
        "cursor": {
          "ref": "64fd34c2-47a9-46a3-a29d-2cb7c0b5fb01",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "52b613fa-1c48-4df7-8f22-e25af1979bdf"
        },
        "item": {
          "id": "36d29d16-6eb8-4cb9-81f2-90e8e568c6c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4622a70d-b74c-4f7c-98cd-a91c282bd821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695830b2-3534-41b1-93a0-628853579d2d",
        "cursor": {
          "ref": "20b5bc57-dfd1-4b3d-9d61-d201a452d748",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "db6c29f8-20a9-454e-87b8-bc856d9d2214"
        },
        "item": {
          "id": "695830b2-3534-41b1-93a0-628853579d2d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "235b5a10-f610-4ab0-bea7-9f684de80d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f121260-b404-4f81-bfac-384c3cc0be35",
        "cursor": {
          "ref": "56db2416-9370-4f12-8b98-3fcbbb9d86b7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b3185355-f176-4af9-aa93-d1c6ff120b06"
        },
        "item": {
          "id": "6f121260-b404-4f81-bfac-384c3cc0be35",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c77d1420-4623-4e15-b758-4fd228a11dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262621b9-60c6-4b76-8e29-0e38ad9525a5",
        "cursor": {
          "ref": "58fedb9e-d3cb-4678-91fa-8b799857ac12",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "23218b3d-aec5-4828-8698-049e84dc44f3"
        },
        "item": {
          "id": "262621b9-60c6-4b76-8e29-0e38ad9525a5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1843adaa-5878-4f47-98d4-5ae339823397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f73b5f-794e-4922-87a3-23eee559b16d",
        "cursor": {
          "ref": "18212213-0160-46b5-b8ab-b345cbc7e69c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "29829c02-bf5e-40b7-a6ce-a307bf1b69d9"
        },
        "item": {
          "id": "b4f73b5f-794e-4922-87a3-23eee559b16d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22fd9e25-d888-4d30-905f-662938ba046a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9800b3b2-e5b2-4ac8-8dbb-8a2b6c41a598",
        "cursor": {
          "ref": "be1b6044-1208-4d91-9ff5-cd1348edd898",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ff529ea7-fe04-4de5-b71b-9522efa5e2db"
        },
        "item": {
          "id": "9800b3b2-e5b2-4ac8-8dbb-8a2b6c41a598",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "15117e64-244f-4702-b65e-4e9cd0927683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b790373-1133-42c8-b13f-672e317d2c5c",
        "cursor": {
          "ref": "0df01fb2-5c03-4dcb-9e26-9fd7bbf45ca2",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cdfabada-492f-4675-b0ee-90f047e4661c"
        },
        "item": {
          "id": "6b790373-1133-42c8-b13f-672e317d2c5c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "535a1a6a-cb34-4c19-bc28-356beb8b1cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dd5ac2-052d-45fc-8e97-5bf4cf8c0360",
        "cursor": {
          "ref": "78037d69-166a-43bc-9b4a-7a0e2b9110e4",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "43b1a21f-878a-41dc-bce4-f79b338c93d1"
        },
        "item": {
          "id": "86dd5ac2-052d-45fc-8e97-5bf4cf8c0360",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fcbbe3db-606f-4aa6-a9ee-c06a68f583b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca18e1d4-5dae-4e35-ad26-c4e7510656f9",
        "cursor": {
          "ref": "efc1cd0c-9b5a-4758-a152-a5721ccd7a90",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "44b1c3e7-5802-46f7-a752-00e0c13347b2"
        },
        "item": {
          "id": "ca18e1d4-5dae-4e35-ad26-c4e7510656f9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4ad36f44-22f8-4d6a-a7f9-a2eeb197ad76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653fb823-d894-4358-bdb8-459a6974b2fa",
        "cursor": {
          "ref": "923194f2-3807-43bd-b6d0-9035ad38e202",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fcb7c280-df2b-4001-89b5-38e6047f4ce4"
        },
        "item": {
          "id": "653fb823-d894-4358-bdb8-459a6974b2fa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f85ef372-c063-4025-aeb7-9203b64d18ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d901c3-06e3-49c8-8741-666ea4da8ab4",
        "cursor": {
          "ref": "e0bb83cc-bb8e-4573-8c65-3f9ede096dd3",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "07596a46-6c58-4a5c-8990-14f5d634e3fa"
        },
        "item": {
          "id": "a9d901c3-06e3-49c8-8741-666ea4da8ab4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2eea4508-2c3c-433b-9b50-58f2f1149e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb38663-6766-4ff8-b162-25459f83d3b2",
        "cursor": {
          "ref": "1b0201ef-9871-41c5-bc03-6b83f11727fc",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "911277d1-fe2b-4854-9ea7-b3c402a51ac8"
        },
        "item": {
          "id": "3bb38663-6766-4ff8-b162-25459f83d3b2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9ec9a4a5-72d2-4514-85c3-0af628b6b65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1400f3ff-350f-4c0b-a464-0f42f6f4c631",
        "cursor": {
          "ref": "f4a34f11-4db1-4ba4-9fbf-c30b8c71144a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "67167f28-e3d1-4c5d-a56d-58a18f32daac"
        },
        "item": {
          "id": "1400f3ff-350f-4c0b-a464-0f42f6f4c631",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83f57f62-d084-406b-a5e0-79b956cdefc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d813d3-68d7-426c-8219-991754ba57f4",
        "cursor": {
          "ref": "7771f9d4-b83b-4843-9547-883ee26781da",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7b98ace8-8ebe-4622-b9a9-da943e5bfbb8"
        },
        "item": {
          "id": "f2d813d3-68d7-426c-8219-991754ba57f4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "588acf14-e8b0-4bdd-91e6-2196654f86f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4679f9-febd-42c1-8aae-3b0576ebced7",
        "cursor": {
          "ref": "1bd9b67d-1a35-4416-95ed-5615928571ac",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "68053fb1-6ff4-4779-8b52-2f9998f8cf22"
        },
        "item": {
          "id": "9e4679f9-febd-42c1-8aae-3b0576ebced7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3681dedc-cba4-47c8-9735-da7d82caa2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc36ec1-39fc-42d7-8c0d-0f003190cc9a",
        "cursor": {
          "ref": "0aa86976-c461-4f0d-8082-cd545417ea9f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "302cc9e6-ef05-4c81-9de6-e5076b3135aa"
        },
        "item": {
          "id": "3cc36ec1-39fc-42d7-8c0d-0f003190cc9a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ab2e0433-10d4-4a8c-b387-3d352b8d0670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c67e571-17c5-4444-9c8d-20b1efc65729",
        "cursor": {
          "ref": "92804338-8d75-4a92-985b-c381cc4f4864",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8f4e3d62-e610-4dd6-af5f-4bb4e5ab26af"
        },
        "item": {
          "id": "3c67e571-17c5-4444-9c8d-20b1efc65729",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c597b033-9fb6-4aef-be7c-297aaab37a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39894009-b638-447c-bd42-8af2754149d9",
        "cursor": {
          "ref": "1bbde702-9b14-41ff-8ff2-91ef94d7aeb4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cb9a16cd-b719-4a6c-8c07-b42ab47b05e7"
        },
        "item": {
          "id": "39894009-b638-447c-bd42-8af2754149d9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "051a8abc-b376-4132-b361-67fe263e010a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ab2042-098d-4fe5-a042-4401c26b58e0",
        "cursor": {
          "ref": "fb2c5661-0a74-4d1d-ba7b-906386846ffc",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "51cab165-ab3b-4ec8-aebd-8405727dc12b"
        },
        "item": {
          "id": "f7ab2042-098d-4fe5-a042-4401c26b58e0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9bc77888-39d5-4119-a4e3-cc72ca6b1112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce4750e-6478-4611-9d63-c721086f21a5",
        "cursor": {
          "ref": "5df63f49-8b92-4d12-aab8-667ee113caeb",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "30ecd547-0027-48e2-b413-0eb13d2ff811"
        },
        "item": {
          "id": "7ce4750e-6478-4611-9d63-c721086f21a5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9c3664af-f5f9-476f-bdf1-277423e5895d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829dd120-bcab-4207-990e-c0dc86fc7ef2",
        "cursor": {
          "ref": "6dd59e58-de41-4498-9bfd-74d65f41fda8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f4cf74a0-ec96-4905-a76d-720126b103a0"
        },
        "item": {
          "id": "829dd120-bcab-4207-990e-c0dc86fc7ef2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "585f7192-d9be-41d2-b811-bd3d75554363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772fb1d5-5278-4554-a169-f2620f638b74",
        "cursor": {
          "ref": "07b0b737-3dd9-4cce-bc7a-26e01297f6f9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "41eaccc3-6f96-46cd-bf07-c72b2e6b8815"
        },
        "item": {
          "id": "772fb1d5-5278-4554-a169-f2620f638b74",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "eeefc42a-07c6-4f4b-b8ff-c60e666eff57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b846b5d4-54e9-44c0-9cc6-621408a8985c",
        "cursor": {
          "ref": "7bbc8e8f-3136-469f-a8bd-3bcea772226a",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8e272d62-4b9f-4114-871a-e76172645310"
        },
        "item": {
          "id": "b846b5d4-54e9-44c0-9cc6-621408a8985c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dde8bca4-d1d6-46c3-ad0a-f9afca93f56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0bddbe-c9ef-49a1-9cdc-2fa3fa8a4ef9",
        "cursor": {
          "ref": "bb45bb33-987e-45b2-ba13-3fc195aae968",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fdd86c17-e523-47e4-8788-79c82677da06"
        },
        "item": {
          "id": "4c0bddbe-c9ef-49a1-9cdc-2fa3fa8a4ef9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ecc3a227-718b-47a4-bc5d-23f6891635d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4898f3b-6b73-4b31-b8ba-25e1efee98c1",
        "cursor": {
          "ref": "e142cfd6-c66c-47c4-9f2e-3bf61f8da6dd",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "245246a3-6334-427a-9d9a-7dd948b8e993"
        },
        "item": {
          "id": "d4898f3b-6b73-4b31-b8ba-25e1efee98c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "af6ef936-b5ee-4932-a9a7-80e675e39361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918823c4-6897-4570-b7b6-4647ab754c53",
        "cursor": {
          "ref": "82ee911b-ab05-41e7-a4ab-8cd90209ee62",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b992c1bc-2eb3-439c-89b3-0f98a004cbd2"
        },
        "item": {
          "id": "918823c4-6897-4570-b7b6-4647ab754c53",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a8bccf32-bc9e-469e-9cf8-1b6e18cd7ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d05227-bfc5-4a79-931e-2d08eafb2617",
        "cursor": {
          "ref": "caf157a0-a477-4749-933f-2846618dbc74",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b2e85928-4068-4e3f-9a7d-fa8188a3d7fa"
        },
        "item": {
          "id": "68d05227-bfc5-4a79-931e-2d08eafb2617",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8e6b2e36-4d58-4dde-8999-a9996e705540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4fcf02-899c-4585-a1aa-45d3d0f4b2e8",
        "cursor": {
          "ref": "5371a819-ae2c-48d8-99cb-d9d0f410ce9b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5151b526-2643-4281-84be-af867725bd60"
        },
        "item": {
          "id": "1f4fcf02-899c-4585-a1aa-45d3d0f4b2e8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d3832a39-d4b8-41ea-a62e-6a391c4d680d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3392ca6-bb08-4524-b466-3c3ed0846f54",
        "cursor": {
          "ref": "dbcbcd59-6858-4ecb-860a-9678b0ada317",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "23ae5e41-5d0a-476e-a3ce-bd4fc4ebab99"
        },
        "item": {
          "id": "c3392ca6-bb08-4524-b466-3c3ed0846f54",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2e1c5de7-e08c-4721-a908-9cc09ee79412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aa9b44-f80f-494f-9f21-bb3740ccb68e",
        "cursor": {
          "ref": "f784e027-db70-4af3-adf4-d073bc67dca8",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8c09b823-d68e-4708-8d3e-01fe72703ea1"
        },
        "item": {
          "id": "b0aa9b44-f80f-494f-9f21-bb3740ccb68e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c72a886a-c2dc-42da-876a-ebdcf710c2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b56c855-d8fc-41f5-98e9-8bd286a2bccc",
        "cursor": {
          "ref": "be26f3a3-3f20-4d67-a369-7cde95be9c3e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dd7b149e-eb62-4a86-9b64-78f34898b0aa"
        },
        "item": {
          "id": "9b56c855-d8fc-41f5-98e9-8bd286a2bccc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5454ce6a-1705-405f-8abe-c600b40cad96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14a49a4-6c78-4175-ab48-358ddffb29cc",
        "cursor": {
          "ref": "1e1d736b-0dff-491d-a522-9f0f984ade39",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "46a7a584-c84d-409c-8fcf-66f3f3ee9299"
        },
        "item": {
          "id": "b14a49a4-6c78-4175-ab48-358ddffb29cc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3ed76fd8-250c-4b6c-a8a3-b3b99decb863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d044067-89bb-43ad-9c9c-4073c763ff10",
        "cursor": {
          "ref": "d1abf9e5-42aa-4990-88bc-9a96dd38f8e8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7328ed4f-b75b-4c68-83fe-4d8f67e83c2c"
        },
        "item": {
          "id": "1d044067-89bb-43ad-9c9c-4073c763ff10",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "49a27969-d0ad-4e18-9009-a3c37b5e8b5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4068b1b6-d306-4ee2-aeb2-1b90b1714dc2",
        "cursor": {
          "ref": "197e2dae-58e3-4ba5-9a9c-fba38845348f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "20c3b354-d037-43c7-aecc-5ca2d19d977d"
        },
        "item": {
          "id": "4068b1b6-d306-4ee2-aeb2-1b90b1714dc2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d92e5b78-ceaf-4969-9e73-183dcc68c089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83e9c51-4cf6-4d1d-8b38-e7ab7ad67c72",
        "cursor": {
          "ref": "74613243-e94f-4429-925e-2305e4958111",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc814d2b-ddb3-411f-bf55-6794ab2e0261"
        },
        "item": {
          "id": "a83e9c51-4cf6-4d1d-8b38-e7ab7ad67c72",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f2745e94-7aa6-4852-a7c0-7ac84806545b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4ff5d5-7299-44cf-8b45-42cecf7ed04e",
        "cursor": {
          "ref": "243e4b80-0325-4143-85cd-43230cb1ebdd",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8b3e2165-f8a8-421f-a5d3-727a4a6add01"
        },
        "item": {
          "id": "db4ff5d5-7299-44cf-8b45-42cecf7ed04e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ccc09275-302a-478f-8e3c-bde190dacb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61df8191-c122-4420-b954-9df09348fd93",
        "cursor": {
          "ref": "8a90261c-d9aa-420b-8f42-fda9ee4dbb86",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7eb5a1b8-55f4-4f8f-937b-9b9bba128e3e"
        },
        "item": {
          "id": "61df8191-c122-4420-b954-9df09348fd93",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "633574cd-d807-4dd7-bd86-36ede4009c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba520c2-7d67-4293-988e-c45a15a87d01",
        "cursor": {
          "ref": "6ea262ff-502c-47cb-aedf-5bb17cfc2666",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ee93bedc-851d-4cad-946e-0331ee8267d3"
        },
        "item": {
          "id": "9ba520c2-7d67-4293-988e-c45a15a87d01",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bf2007e6-280d-47cc-8874-a50939f985e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d936d2-06de-4a74-86a6-8092c8d1bd6d",
        "cursor": {
          "ref": "d76eb54b-34b1-491f-8aec-f80f8f8882e1",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9c71b58b-6852-4c8b-83bd-af8cb6d4b7c7"
        },
        "item": {
          "id": "88d936d2-06de-4a74-86a6-8092c8d1bd6d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "17da93c1-b63e-4893-905f-f2575ddd5d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878cbb0a-0c39-43c5-9a39-292839bc1369",
        "cursor": {
          "ref": "16dffd05-1375-42a5-88ce-0d9c4028c2cc",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9f1dca16-5401-4bfc-9fbf-8e11267d732c"
        },
        "item": {
          "id": "878cbb0a-0c39-43c5-9a39-292839bc1369",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ad47f613-3d98-4b84-b61b-6e722fc37873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e217de2-76ac-45f8-b729-96d63d8f4447",
        "cursor": {
          "ref": "f32b99b6-be57-4e39-8116-05eccdddf713",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3bb43067-d324-4830-a25e-1e367b3e57b8"
        },
        "item": {
          "id": "8e217de2-76ac-45f8-b729-96d63d8f4447",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4bf28035-1cb3-4b0d-b9c2-0c37ce39203d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf6d99a-4bca-44a4-b2d5-8ba190ea8ffa",
        "cursor": {
          "ref": "b651299f-5278-44f8-86cd-e231e888049f",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "06ad14df-3f3a-492f-bfe3-a8a81f18fc09"
        },
        "item": {
          "id": "caf6d99a-4bca-44a4-b2d5-8ba190ea8ffa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "673812e9-00ca-4dd6-b18e-e605e8c7db6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366809b6-9c69-47a7-b0b2-244c911e2877",
        "cursor": {
          "ref": "91602786-b918-49cc-a82c-c123b8448604",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b3c84abe-2944-4f15-870a-9cd77d77cbb8"
        },
        "item": {
          "id": "366809b6-9c69-47a7-b0b2-244c911e2877",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7583254c-fc23-4aa7-a2cd-2ba90582a649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cadc70-3937-4b75-90db-2565bba509fa",
        "cursor": {
          "ref": "a8c20809-0a30-4e50-889d-6cf0706c1549",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "311cc153-9c5e-4a9e-aee7-ef3794f8b28b"
        },
        "item": {
          "id": "41cadc70-3937-4b75-90db-2565bba509fa",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e93847bb-8caa-4e40-b937-ca32f4e966bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c89f32d-fbbc-4424-8674-3876334d563a",
        "cursor": {
          "ref": "d4811a7c-95c8-46eb-b193-6a7b5bbf61ac",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f41c1257-4336-42a3-8ec2-57f6710e5eb2"
        },
        "item": {
          "id": "6c89f32d-fbbc-4424-8674-3876334d563a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a9ba5dad-1300-43e4-8b0a-8e8427d8b877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639e4561-0ecd-4ab7-9f06-3c0ad8a8ff32",
        "cursor": {
          "ref": "b2a5519c-e4e9-4b13-b3e2-f743e1180fde",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1a21e675-dab7-41a9-b3a3-60aeb34abdd0"
        },
        "item": {
          "id": "639e4561-0ecd-4ab7-9f06-3c0ad8a8ff32",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "158bd159-bbef-4eaa-999e-ab022555b73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d71b0e-4446-4352-a1fb-e662587e96e9",
        "cursor": {
          "ref": "153b36a5-2ffa-4f8a-9344-4039be1626d2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7553eaec-1a6c-4836-bcbf-50c6b5252dd6"
        },
        "item": {
          "id": "29d71b0e-4446-4352-a1fb-e662587e96e9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4d5a4e34-e392-4d83-ae88-e0df2d4cd273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a314e41-6730-4177-8d6f-c52e7efa12bb",
        "cursor": {
          "ref": "4dc9319c-cea4-4d85-901b-e2e54bf53728",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a28d1dd1-9fcb-4fd2-bd34-9d803381f1aa"
        },
        "item": {
          "id": "4a314e41-6730-4177-8d6f-c52e7efa12bb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d6d9cf15-7e43-4ba7-a4b3-687a4b10638b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4f192d-1b87-490e-a03d-495f16501abe",
        "cursor": {
          "ref": "c38625da-5ab1-4f85-a948-506122a5af2e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4038ee26-7b64-480c-9d94-df35e7c723d8"
        },
        "item": {
          "id": "cd4f192d-1b87-490e-a03d-495f16501abe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "aeb32319-8444-4cc8-b685-d7cb88a52813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b4a51f-7cc0-44ff-af8f-ee80853d3a93",
        "cursor": {
          "ref": "67147919-c57a-48d2-a78e-6e53fa0c4e78",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6c76ac60-dd3f-4d67-873c-f695de81e977"
        },
        "item": {
          "id": "27b4a51f-7cc0-44ff-af8f-ee80853d3a93",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5c2b6946-969e-46f7-86ae-c11290670d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eebada-f219-4b48-a213-40ae65b924d1",
        "cursor": {
          "ref": "08237623-dd66-4516-a498-35c55bf70666",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "032cdb33-d37d-4410-9459-eeda5f68c224"
        },
        "item": {
          "id": "41eebada-f219-4b48-a213-40ae65b924d1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2111ab2d-5a9a-4481-94c6-f60684a619c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1043d20-4489-41b6-a505-476482ec2b6a",
        "cursor": {
          "ref": "d78b0c52-a4aa-4934-9888-90c06d061722",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f0f1f7db-0e88-4f3f-a22e-ab5ac9b88e47"
        },
        "item": {
          "id": "a1043d20-4489-41b6-a505-476482ec2b6a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8118f3d9-4ef0-40c0-899d-1af16477dfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4711cdd8-3cdd-4490-afb9-ac090ccc7991",
        "cursor": {
          "ref": "e21265f8-8978-43fd-b9fb-1477d74f69eb",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "54e7002c-3980-4989-8e51-f03491b3736d"
        },
        "item": {
          "id": "4711cdd8-3cdd-4490-afb9-ac090ccc7991",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e4570687-2bb1-4f93-9ea9-02316a24f2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcec51d-95c4-4686-8b2a-50029c28f0d8",
        "cursor": {
          "ref": "231cea79-7b4d-4cb8-bb42-1b7c8c7ca02a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "250f212b-ba2a-4b8a-b191-ef84b78ca4b8"
        },
        "item": {
          "id": "3bcec51d-95c4-4686-8b2a-50029c28f0d8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cd35a34f-4878-4ece-b3c0-cf04eeddc86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c75653-cdf9-4051-9a55-9405c45d6959",
        "cursor": {
          "ref": "fd4f194a-6324-4035-852a-fc7c136826c1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "af541482-a551-42e1-a4d6-68653fca1b83"
        },
        "item": {
          "id": "41c75653-cdf9-4051-9a55-9405c45d6959",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6b0b28d0-9154-491b-bf7f-efd1556a7464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c076ab-70fd-465d-9f1c-970264450ada",
        "cursor": {
          "ref": "76547019-5f0c-42ce-8b3d-25478317c54b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "12e1201f-12aa-4095-9ef4-07270409d081"
        },
        "item": {
          "id": "e3c076ab-70fd-465d-9f1c-970264450ada",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "32e24207-ff39-4007-ae94-dd3e267c9fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b995589-eb57-44d1-8f9b-a8d0c1467bdb",
        "cursor": {
          "ref": "0b0db11c-3841-4ae5-84ad-8ff88b51bc3e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "31cd96ed-b1e6-449a-9b4a-4bcc3d161c2a"
        },
        "item": {
          "id": "9b995589-eb57-44d1-8f9b-a8d0c1467bdb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "25a59045-b1c9-4f0b-86c4-daff9067082a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1ce533-acca-4a47-882a-be01a7da0ce4",
        "cursor": {
          "ref": "0ebbd8a2-b531-4b5b-a59f-576f73717274",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5de8f34c-9874-45ee-9ea6-7b16c0fee1f5"
        },
        "item": {
          "id": "ba1ce533-acca-4a47-882a-be01a7da0ce4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "af4ae3e2-265b-4c20-8790-ba1340acacb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033218ef-e00c-426f-af1e-0e3ec29202c4",
        "cursor": {
          "ref": "df7d5c95-3530-4413-a42f-ede171d7f9fa",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "26bdeaa5-b587-4516-977b-8d724897cc1f"
        },
        "item": {
          "id": "033218ef-e00c-426f-af1e-0e3ec29202c4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8d489f4a-370e-4e65-ac0c-3a16cc4c033c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c190fcf-32cc-49f1-bd3d-fc28eb1a7b84",
        "cursor": {
          "ref": "6ce10a51-f471-43c4-819a-1352476e9777",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "300fadee-2ac8-414b-afbf-eb996b97c41c"
        },
        "item": {
          "id": "8c190fcf-32cc-49f1-bd3d-fc28eb1a7b84",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "71ff7674-3670-48f5-afa8-15142fd6758c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc0bb11-0275-4e69-8006-8972f5fc54d5",
        "cursor": {
          "ref": "6587f1e3-0b5b-4511-825b-c913314e0b30",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8464f5b3-7af6-43e6-83c4-f024169d103e"
        },
        "item": {
          "id": "ecc0bb11-0275-4e69-8006-8972f5fc54d5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2091b4fc-28bf-4efe-b20f-62eae7c3af1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817156ae-6f48-45f7-bf28-80ed48166b70",
        "cursor": {
          "ref": "ef499287-86c5-4cbb-b1f3-dff34df02140",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0be212ed-b2f3-40be-bdd2-eabcef6c09f2"
        },
        "item": {
          "id": "817156ae-6f48-45f7-bf28-80ed48166b70",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8584fba8-64cd-4e7b-9fcd-b15a57489eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208ce94a-6f5e-472e-a3a4-33aca249d611",
        "cursor": {
          "ref": "d6f7d3e2-0b7b-4a9b-84c0-29ed9a5263c5",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0466063c-5344-449f-b7e7-3f27b8fa9502"
        },
        "item": {
          "id": "208ce94a-6f5e-472e-a3a4-33aca249d611",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "695fa826-ecf6-4f89-a910-60358065a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d312917c-8dc8-40eb-b06b-d0238e80aafc",
        "cursor": {
          "ref": "d5325c6e-8f21-476e-b52a-025afcccbf60",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c5716f6d-bce2-4698-a611-f0915d5faade"
        },
        "item": {
          "id": "d312917c-8dc8-40eb-b06b-d0238e80aafc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "731fccae-1f9f-495a-8467-723402888e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919bf6fb-5e5d-4b1f-a7ea-0b25ec5cb530",
        "cursor": {
          "ref": "72650285-541b-4152-9dfd-77ac0cc6d2d6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b3d312e0-7b22-4611-a5bb-e31064741f2d"
        },
        "item": {
          "id": "919bf6fb-5e5d-4b1f-a7ea-0b25ec5cb530",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "833edbe5-9b78-46e6-be4f-acb0da8ef6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db096bdc-6b81-4686-a8fb-a3a7b1ad7dbe",
        "cursor": {
          "ref": "88c9ee5b-f2bc-452f-a82a-98b6d0bd0ad6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1f35eecb-2cf8-468b-945d-ce9d0c8db8ee"
        },
        "item": {
          "id": "db096bdc-6b81-4686-a8fb-a3a7b1ad7dbe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ae2373e9-725f-4a96-9a30-79b5c92bd8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5245de5d-861c-4523-93b4-cc1a7aed88f1",
        "cursor": {
          "ref": "add1ef7e-ada6-47b5-b638-cd066e740533",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "df640e4f-2b1f-4198-9afb-ac97f07321a0"
        },
        "item": {
          "id": "5245de5d-861c-4523-93b4-cc1a7aed88f1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b2100dd-acc5-4aa6-8e02-9e7d6d9a3fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc8b852-de13-4985-a634-0d4c4223985a",
        "cursor": {
          "ref": "27e19f4d-75a5-40ca-83f4-103b8cbc393d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1e2cc7fd-af99-44e4-815d-bbe385ae9005"
        },
        "item": {
          "id": "8cc8b852-de13-4985-a634-0d4c4223985a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e518f3e6-40e0-43f5-8ac2-883840f15d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd164053-4362-452f-b85f-77de663fef7a",
        "cursor": {
          "ref": "36985179-12b6-4f82-9dd7-f0367d800852",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f6491c47-8083-42f3-aca4-6b4c453846cb"
        },
        "item": {
          "id": "bd164053-4362-452f-b85f-77de663fef7a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9d5d74bc-6d73-4f7c-8120-74fac39089c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68588592-aaf0-4e0b-bd66-c46e444f2175",
        "cursor": {
          "ref": "0103a761-e58c-409a-bfe8-175a32883f6d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0a8641ab-0d4d-4dcd-b39a-7d33505aba52"
        },
        "item": {
          "id": "68588592-aaf0-4e0b-bd66-c46e444f2175",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dcd12e07-30e6-49b3-95fc-96e8c7ffb288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6090d692-6f87-4b56-8bb3-1336088f6224",
        "cursor": {
          "ref": "dbe5f234-dd14-4d81-b932-d732c9364a4d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ee5a084d-4e7e-41f3-b4d1-80b881d044f8"
        },
        "item": {
          "id": "6090d692-6f87-4b56-8bb3-1336088f6224",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bda4b79d-7ce6-45e6-b45e-7551b0632371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24628a5-368b-4631-9dd0-adf39673ca5e",
        "cursor": {
          "ref": "be25e4ae-802b-4431-b74d-4dc08aca5aeb",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8be6c018-7d30-4a45-a118-564ce1b794c5"
        },
        "item": {
          "id": "b24628a5-368b-4631-9dd0-adf39673ca5e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2cea335f-e0d9-4a6d-9028-d0bf02f2120c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af090d0-4b31-426d-b380-0545b641f3bb",
        "cursor": {
          "ref": "09c5956e-7a2f-4464-855d-4193d75fd32b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e3f4e1ca-89dc-4590-901e-f1a7b3f2bf3a"
        },
        "item": {
          "id": "0af090d0-4b31-426d-b380-0545b641f3bb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "71028915-eb8b-4fb6-b12a-c3e35e592c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b3cc2d-d775-47b2-9ffa-32ece51ff6b0",
        "cursor": {
          "ref": "20147ee6-ef0d-4837-ac15-5b29f56431c1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c24849f6-ecc7-45e5-96e0-a8aace0866c4"
        },
        "item": {
          "id": "15b3cc2d-d775-47b2-9ffa-32ece51ff6b0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ee5a6d92-095e-4cde-930b-797e0e254650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e850f0e5-d3e0-4fb7-8f49-0ed2ca652141",
        "cursor": {
          "ref": "e01a6852-eefc-429e-a60f-a88948b8b022",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "33d38755-8fa8-438c-a9ef-1203ec57278e"
        },
        "item": {
          "id": "e850f0e5-d3e0-4fb7-8f49-0ed2ca652141",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bcfc7b28-a38a-4268-b0ff-d3267a869413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1559025e-b866-4ce8-9a1d-8247957860ae",
        "cursor": {
          "ref": "88d28a41-1b0b-4495-9756-d8c40b12b20a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1e73c7d0-1afc-42db-861d-45aa1c3aec6e"
        },
        "item": {
          "id": "1559025e-b866-4ce8-9a1d-8247957860ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "59b8fd59-2d41-432c-8040-f9279c59b84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c906031a-1abd-4f1a-be2d-09ea722abdb7",
        "cursor": {
          "ref": "264f42ca-7504-44c1-b0ba-d620dee0f106",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9d4e0187-9a21-427c-80af-55d02fcaba73"
        },
        "item": {
          "id": "c906031a-1abd-4f1a-be2d-09ea722abdb7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "805e7f44-9a6b-422a-bfc3-8e6f53dd5678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b2f521-dd06-41ad-a5a0-212ddacb8218",
        "cursor": {
          "ref": "afce8294-b0fa-4b5e-9ae8-5a0364c64282",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fa5af9b7-f1d1-40dc-8d1d-25f20da71afc"
        },
        "item": {
          "id": "a2b2f521-dd06-41ad-a5a0-212ddacb8218",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "40f8c9b8-c959-4cc5-82b7-7912b3becfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c48abba-b16e-4279-a479-1816a62cddf1",
        "cursor": {
          "ref": "3d8b6265-77fe-4d4d-a271-5fa9d0de3f8d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "412657f5-2ef6-464a-a348-2c00c2e45c49"
        },
        "item": {
          "id": "6c48abba-b16e-4279-a479-1816a62cddf1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "18a9d12b-be5d-4d29-aa61-5fecc35af315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fefe77-3823-4bcc-a0e4-b3019b7a37a5",
        "cursor": {
          "ref": "1c97cb95-2341-4054-9896-c879e0435374",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "163522ac-d99c-40f7-8781-ec6b21358336"
        },
        "item": {
          "id": "d9fefe77-3823-4bcc-a0e4-b3019b7a37a5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5273dbc6-59c7-4ca4-afe2-6e0d368eb080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86da5fae-8e34-4a5e-8e2f-f78835ff102d",
        "cursor": {
          "ref": "17025e7a-b1f0-4a6c-bdd4-f5b6431ae678",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b9570891-3818-4c17-84d4-d1c0ef393d65"
        },
        "item": {
          "id": "86da5fae-8e34-4a5e-8e2f-f78835ff102d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "29b33f50-7bc9-4561-8340-69393e95f548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b2a857-26ba-465d-8578-2572978766c1",
        "cursor": {
          "ref": "b9de35f7-7303-4036-bc07-12e0c5a9ad0e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1e4612ae-2af0-4969-b1f7-37eea4c06f71"
        },
        "item": {
          "id": "c7b2a857-26ba-465d-8578-2572978766c1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d24d2b61-944a-4ed6-88f4-d6075a7d1e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ce3ec6-3e9a-4b44-a698-cf1dcca1cfb2",
        "cursor": {
          "ref": "c24d6c2f-8b69-438e-b1c3-8484d3c83c90",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4794b8a7-a7ac-4eb6-9f58-24b29d8c2192"
        },
        "item": {
          "id": "03ce3ec6-3e9a-4b44-a698-cf1dcca1cfb2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4e8fd819-1983-4f45-a9c7-734e79c380b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cdd43-7911-4be0-ad7f-35ebdf977916",
        "cursor": {
          "ref": "bd7d154b-1c05-4b48-9e39-b82884155119",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0bfc5d4e-85ce-419a-92bc-dba5ffeff36f"
        },
        "item": {
          "id": "1a2cdd43-7911-4be0-ad7f-35ebdf977916",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "95c66ca1-068b-46cb-a006-feff25e167e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b65fb1c-2aa3-4634-9d2b-f8e01b74d973",
        "cursor": {
          "ref": "f63c26c3-e825-4ae9-a513-714b6203e0e2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "08b7fe72-78fb-48fc-a002-b35c35bb575b"
        },
        "item": {
          "id": "3b65fb1c-2aa3-4634-9d2b-f8e01b74d973",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2138528f-8338-4406-b57d-d2fac7be5abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8061bf-00b5-449e-814a-490e4e0cca8d",
        "cursor": {
          "ref": "69fdef57-d1a0-4f86-b480-fe2f87f8dfd1",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "19d747b5-9a2c-47ac-9772-3516951c3894"
        },
        "item": {
          "id": "3f8061bf-00b5-449e-814a-490e4e0cca8d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d528c00b-2d17-4f87-ac28-16de0c764ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c98510-adb8-416b-b6c6-64f07d16db7d",
        "cursor": {
          "ref": "3075ccca-9957-4b95-8e14-91d580e4ddf5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7e389db8-b01f-4cc8-93e9-6bbba3b712e3"
        },
        "item": {
          "id": "71c98510-adb8-416b-b6c6-64f07d16db7d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f0a88b8d-21ad-4462-b635-0825273852b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838f31f0-e739-4d82-b779-d729c687e4dd",
        "cursor": {
          "ref": "a684b496-43bd-4d36-9cce-7d9935a73ec6",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ed812491-3e02-4cfd-b606-c0a5777e18d9"
        },
        "item": {
          "id": "838f31f0-e739-4d82-b779-d729c687e4dd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dfe48bc1-1619-4f4f-8358-52bfb669890c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073ea7df-c6db-4c02-9ea2-9c7b2340d0cd",
        "cursor": {
          "ref": "488daf18-216c-42fd-b659-55f22e761af6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c4dafb32-975a-4b8f-a685-929adffba1d2"
        },
        "item": {
          "id": "073ea7df-c6db-4c02-9ea2-9c7b2340d0cd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "001e9eff-b23a-4017-8531-c3653c54f142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4661d975-707d-4fca-bcdf-ac3bb35553dd",
        "cursor": {
          "ref": "f552a664-e100-470b-bb98-7353cdc2a4bb",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "716f8382-5ee8-47e6-85ca-2fdb74564c79"
        },
        "item": {
          "id": "4661d975-707d-4fca-bcdf-ac3bb35553dd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cb7be537-7d1e-48e2-b955-cd6e9f9d2fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3eb87f9-e0db-4793-80b6-9fec25225390",
        "cursor": {
          "ref": "5e48e851-6b9d-40a2-83cc-78f2806dad1e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "64689d75-5f16-4393-8da0-12e81b6199af"
        },
        "item": {
          "id": "e3eb87f9-e0db-4793-80b6-9fec25225390",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "154d9778-9c54-4f24-905f-01e2876f0248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77370c8-955d-477d-a584-b81ad1f34be1",
        "cursor": {
          "ref": "c8f2d70e-d1b9-4246-ba10-4b46af6bd51c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "74c4a5a1-e055-4f73-9291-57d59fe36248"
        },
        "item": {
          "id": "d77370c8-955d-477d-a584-b81ad1f34be1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "50f0cc4c-ef5b-431d-8490-e90e59a45fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1b7ce3-b923-4751-a821-2fcd086b3c6e",
        "cursor": {
          "ref": "c79ad708-2adf-4b66-8e88-c9fd193e6cfb",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "88157e43-e43f-4d53-9c8c-c0266df857d6"
        },
        "item": {
          "id": "3f1b7ce3-b923-4751-a821-2fcd086b3c6e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f159c152-eb26-4a7c-b091-6ce6bc98b98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b128bbe-1a80-4e3e-a9e2-d34466ee6852",
        "cursor": {
          "ref": "05a2207c-6093-46b7-b4c6-facae83015ec",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "60e015be-d893-4f71-8a31-3fc291054870"
        },
        "item": {
          "id": "4b128bbe-1a80-4e3e-a9e2-d34466ee6852",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bf20a78a-7c9f-45e0-93c3-925b5e04e03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2fca68-507f-4680-a9c2-baa27ad5cc60",
        "cursor": {
          "ref": "baa42d5a-faf2-4d7d-8eda-ab50df66400a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f06114bc-329f-42cf-9f8d-978237f5ddb4"
        },
        "item": {
          "id": "ab2fca68-507f-4680-a9c2-baa27ad5cc60",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "270023e9-e7c7-43b4-9ff3-39e3098cb22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9275176e-0278-40f1-87ae-96a170cb9a74",
        "cursor": {
          "ref": "45df0bf2-16a7-43a4-904f-d9ca6595fab2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ad79c1be-bdf3-4dbf-84bd-e2c6ea5b6703"
        },
        "item": {
          "id": "9275176e-0278-40f1-87ae-96a170cb9a74",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d3c3555d-fb90-4c31-b309-49017fc79ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2f997c-536f-4354-8bb0-9703e64e4b9c",
        "cursor": {
          "ref": "2c1da8f9-ec76-4dcc-9e3c-c14245bc495e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c534b878-e46c-418b-927d-a87c656032fb"
        },
        "item": {
          "id": "4c2f997c-536f-4354-8bb0-9703e64e4b9c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3196ff64-b53e-497f-b893-b6bc621d345c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc56543b-712d-4f14-9ee6-703f6ca637ab",
        "cursor": {
          "ref": "1bab995b-4a9f-4ad5-8d19-076c56e01414",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "95052dcc-8dff-487a-b0cf-b5923433254e"
        },
        "item": {
          "id": "fc56543b-712d-4f14-9ee6-703f6ca637ab",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c0347ec4-4d80-4286-9ce1-55542f9f78d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b126713-7abc-43ca-a857-4d28f2c054ca",
        "cursor": {
          "ref": "aa8f41c0-0f7a-47ed-98a4-be9c2b25bb35",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d07694fa-f29e-4d89-897e-90ee8c78d937"
        },
        "item": {
          "id": "1b126713-7abc-43ca-a857-4d28f2c054ca",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8837bcbb-fbaa-4532-a01d-60bad9ba33bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50897471-f844-4571-9db5-8d07baa6c29f",
        "cursor": {
          "ref": "3b4d7ba1-2810-4df6-b6d2-57da80fec89c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "87af7b31-a4a7-4f0b-a8e0-1b1d79f44083"
        },
        "item": {
          "id": "50897471-f844-4571-9db5-8d07baa6c29f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "de7c070c-b4ad-4fa8-9053-f44cfe64df30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043d07a1-4d9a-4cb3-9ba4-4e619904a60e",
        "cursor": {
          "ref": "0cbea821-1fc5-465c-8c6c-7807a83d3c75",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5796d62c-3b4c-4aba-b4b3-349509700761"
        },
        "item": {
          "id": "043d07a1-4d9a-4cb3-9ba4-4e619904a60e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e2cf32f9-2ec9-48a9-9b84-946b63879959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ebbc5a-24ce-4864-97df-99c8601610e5",
        "cursor": {
          "ref": "109390c0-3bbd-48a2-a5c8-6e072fceef64",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b8c70584-b1d0-42be-8b61-c391f897e3c0"
        },
        "item": {
          "id": "b5ebbc5a-24ce-4864-97df-99c8601610e5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5c3e2523-b1c3-4267-b7ed-153990aa4835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89780e21-592e-4135-a27e-4417b438e604",
        "cursor": {
          "ref": "aa907437-7d1c-4935-93c3-43b6fc25c9bc",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2aa9dccd-915c-4582-a9bb-ee5d33a91bc1"
        },
        "item": {
          "id": "89780e21-592e-4135-a27e-4417b438e604",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "150a5a8d-4c21-40a6-b67d-047433d1e516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4727187-6518-475c-8588-870c43576809",
        "cursor": {
          "ref": "2577fc85-abd2-453e-b710-25a4645e25bb",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1b6c52b7-78db-4077-9939-5acae6f5520e"
        },
        "item": {
          "id": "b4727187-6518-475c-8588-870c43576809",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c92ed500-d4ab-4f39-9aa3-e079d4f90d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9964c697-67f8-486e-8d00-38f13f07cf6d",
        "cursor": {
          "ref": "eb71f091-dbd4-4c8a-b0c7-b552f821ad70",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "65caaa8f-3403-4858-932b-657ce5975088"
        },
        "item": {
          "id": "9964c697-67f8-486e-8d00-38f13f07cf6d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a62802c8-2fbc-48db-9da3-4297a789bbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6f2f48-edbb-499e-a22c-46e7fc3f65b3",
        "cursor": {
          "ref": "5a8d769f-557e-4516-9308-13524f08ed61",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5a85d67e-befa-4c0e-b5bf-980769bec120"
        },
        "item": {
          "id": "dc6f2f48-edbb-499e-a22c-46e7fc3f65b3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5add0b33-6101-4c52-a2ba-99e959a99b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f90de9-da7e-4cde-9a7b-f530ae44a6cf",
        "cursor": {
          "ref": "28146daa-011b-48c6-b534-d089c1b4d873",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "67527027-52b0-4402-b87f-000f2c45b981"
        },
        "item": {
          "id": "14f90de9-da7e-4cde-9a7b-f530ae44a6cf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2f048036-e9d4-4ef6-80eb-20f3e6b44aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e9492e-d708-4f47-ae7d-abe40ea9de59",
        "cursor": {
          "ref": "e86c3297-0b82-493c-b5e9-b252b9407e5a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ce12b0dc-12a9-4cc6-8c38-32f8d35b3e6a"
        },
        "item": {
          "id": "a2e9492e-d708-4f47-ae7d-abe40ea9de59",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9146a66f-2c56-4011-88de-955a9f399ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27595d49-816e-4fdb-8213-020b5b89202f",
        "cursor": {
          "ref": "7854e1a0-d26f-4c1c-bb7d-0812c7f78cd9",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "16a77d50-6d10-4ef3-b58a-9305839df7f4"
        },
        "item": {
          "id": "27595d49-816e-4fdb-8213-020b5b89202f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3fe5c7f1-2126-46cf-9bc3-7d698621cc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c780d3cc-fa91-451a-abb5-bc5172a8d617",
        "cursor": {
          "ref": "79b4a878-c3c8-4465-a82c-8b3ef15fbd7f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "dd8c912b-a8cb-4b0b-b625-292efb930c09"
        },
        "item": {
          "id": "c780d3cc-fa91-451a-abb5-bc5172a8d617",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b7b795ab-2b19-410f-aefe-89e4ac8a1a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181b20c1-9fdd-4f8f-b405-3fe3b4fb2144",
        "cursor": {
          "ref": "d71abf94-d5d5-4309-8013-3f4dd5e46357",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "47bca0b7-1898-445c-9f3f-edf7d464df50"
        },
        "item": {
          "id": "181b20c1-9fdd-4f8f-b405-3fe3b4fb2144",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c5713406-02bb-43ba-a4c9-b2d06c39d9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782f60ed-8804-46d4-bbf2-88d9fb84876d",
        "cursor": {
          "ref": "12eb2a56-1e6d-4a4e-ac2c-21619a601b30",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0a82a31d-6a72-4a06-8b6f-80bdd686c035"
        },
        "item": {
          "id": "782f60ed-8804-46d4-bbf2-88d9fb84876d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5abe80ba-9978-4497-9f65-ffdb24e68b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f458dfc4-966d-415a-beb8-c9a8ea2801db",
        "cursor": {
          "ref": "914d9b8a-8b99-48de-b19f-237a4d259885",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2acf3d39-0143-4cb3-8f6e-36ddc2cf1b5d"
        },
        "item": {
          "id": "f458dfc4-966d-415a-beb8-c9a8ea2801db",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cfa2ff4e-75ea-46bb-9928-c0d083c17976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139afcb9-9872-4ff9-89ba-752a08126678",
        "cursor": {
          "ref": "4960fed5-44f6-4cb1-8765-af4641c1c1c4",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6829c34f-7fcf-4f59-a4ce-c0daf70a3719"
        },
        "item": {
          "id": "139afcb9-9872-4ff9-89ba-752a08126678",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "96b9ece5-01e2-4c0f-9656-025bf766e3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31625c7-4395-447c-a69e-bedfd1e42b29",
        "cursor": {
          "ref": "5ab891f7-9fe2-479f-81a8-1ddeb9efd4cd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9f58db74-2486-4696-81ea-9dc5ae6fb93a"
        },
        "item": {
          "id": "e31625c7-4395-447c-a69e-bedfd1e42b29",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8c6f4ba7-4e2e-4f76-ae7b-256ed48a4af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96024852-4034-4226-bd2b-2f4817f49782",
        "cursor": {
          "ref": "a82e38bb-dac4-432d-84e9-9d430f381d9a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e68a3ce3-3a15-4b6b-ac2b-ed053d65ca07"
        },
        "item": {
          "id": "96024852-4034-4226-bd2b-2f4817f49782",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dfa67044-7af1-47c6-a98c-8cb57d82a34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe77b377-8d03-47c4-bee4-01635292c4d7",
        "cursor": {
          "ref": "ae4b1856-6215-4fd5-b01d-075c23087605",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3b2e2d39-d8f7-4c4d-a813-6ad6af6ae951"
        },
        "item": {
          "id": "fe77b377-8d03-47c4-bee4-01635292c4d7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e1e88284-f338-4a84-9ed4-b5cad4e9204c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f122143-90ce-4f92-9a43-32bc2a56dafb",
        "cursor": {
          "ref": "639ef502-fda9-4bdf-8d05-9cbfe7b47ca7",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "33179710-c662-4a6d-8817-107009e37696"
        },
        "item": {
          "id": "9f122143-90ce-4f92-9a43-32bc2a56dafb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "11b0f2e9-e86a-4099-9a5f-98b31c80084b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395ace37-b5eb-4f66-b04d-3f43f85463eb",
        "cursor": {
          "ref": "99504b31-d98b-49aa-8899-59d31d8f451d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c486f662-1c90-45b6-afc5-194051dc2576"
        },
        "item": {
          "id": "395ace37-b5eb-4f66-b04d-3f43f85463eb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "513a802c-60e3-4b8f-9b5d-b615e7a5fd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9a70a6-c97e-470c-82cb-04f79c5b2d87",
        "cursor": {
          "ref": "a22c811c-e28a-43aa-9bb6-c722c9aedc5d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e9210659-06a2-4b79-8227-5511e932e7f2"
        },
        "item": {
          "id": "7b9a70a6-c97e-470c-82cb-04f79c5b2d87",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b55b8d22-aa3a-43c1-9af4-e578535a6337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f674eee9-18b6-4cba-8413-34a9d4fcaca1",
        "cursor": {
          "ref": "3b57b164-1b78-4e3e-be62-cb3db7c302ae",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fa300d8c-13e9-47cd-b46f-1d2b43e665c4"
        },
        "item": {
          "id": "f674eee9-18b6-4cba-8413-34a9d4fcaca1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f5131924-09da-4fd6-ac64-c2b8240c1231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd08cf05-0569-48fd-a427-07aafb1ccb32",
        "cursor": {
          "ref": "35453662-c9f6-43aa-a7e3-1945de50b6db",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f65ebae9-b8b7-400e-b638-d1f46928a910"
        },
        "item": {
          "id": "cd08cf05-0569-48fd-a427-07aafb1ccb32",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b0691fd0-370d-440b-a811-077b9df8385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4699c126-0627-4f64-a71d-8a5874aa9566",
        "cursor": {
          "ref": "b1cd15b3-d577-4e68-8ec9-09b235aa5a4e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7d8076d0-5a4d-41b2-84e8-c0a7bd39c1b0"
        },
        "item": {
          "id": "4699c126-0627-4f64-a71d-8a5874aa9566",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b80eed03-b47b-49af-86c9-4f3040a1e7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cac263-7ddf-4963-a7db-9fbfeaea77d2",
        "cursor": {
          "ref": "bc6c4134-78ef-4820-bbb4-7924cca77699",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6fc5d778-bcc2-4277-8f38-51083bd29c1e"
        },
        "item": {
          "id": "10cac263-7ddf-4963-a7db-9fbfeaea77d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "99e8a38a-1c46-4ae7-9361-08631e90ab16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e25e67f-7ef6-4c36-9c40-d4cbfcadde9f",
        "cursor": {
          "ref": "bdc8a9d0-745c-4cdd-9766-53d2fa60eabf",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8ec04872-d9e4-4b58-827f-4d812828839e"
        },
        "item": {
          "id": "0e25e67f-7ef6-4c36-9c40-d4cbfcadde9f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6ad6e2a3-29b4-4e34-b7de-df2c6440adcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f220cd35-e0ff-4967-a81d-d60dfe16ede0",
        "cursor": {
          "ref": "f19f63c1-01fc-49ae-b14e-d27a4871545f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "de83ad32-a2ec-4089-9fad-382ec77c2105"
        },
        "item": {
          "id": "f220cd35-e0ff-4967-a81d-d60dfe16ede0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f589d6c1-8d90-49fa-adea-38e5905f1746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0660e6-e435-4d5c-9eed-b7d5514ea427",
        "cursor": {
          "ref": "92fb7bf8-a01f-4ee5-8d31-06d6182241cd",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "07c6d99a-07e5-410d-97b5-7f483835ec1e"
        },
        "item": {
          "id": "8d0660e6-e435-4d5c-9eed-b7d5514ea427",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8d739d51-6983-4464-be89-3624f112a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496a380a-0b2b-4f4e-b381-7df85eb7c8cb",
        "cursor": {
          "ref": "7e251b19-90cd-4c5a-80c6-aa8303d52f83",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "536be73a-36bb-4c2b-bdf0-54c6e3c9ea07"
        },
        "item": {
          "id": "496a380a-0b2b-4f4e-b381-7df85eb7c8cb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "95f358cc-3926-493e-ac7b-d69a80e942d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de512d0d-1d40-4713-b913-98aa41a843c5",
        "cursor": {
          "ref": "41faa8ec-8557-4109-9163-af7e966ebea6",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0db585de-6e44-4748-9e68-f997e3cfd9ce"
        },
        "item": {
          "id": "de512d0d-1d40-4713-b913-98aa41a843c5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5f1f4e52-9a98-49a9-9a1c-81a5031f59e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f74d99a-ef88-4bbe-94f2-a1040a94b96d",
        "cursor": {
          "ref": "aa0673f8-95e9-48da-9812-b1f183a1183e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9aa48769-f280-4750-8d7e-4dcbaa1a2c47"
        },
        "item": {
          "id": "8f74d99a-ef88-4bbe-94f2-a1040a94b96d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "10418f84-6f65-495f-8877-6a4e6d4ad8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a57ea36-5e80-4e05-9d70-c70b53f56678",
        "cursor": {
          "ref": "82f30375-bedc-4f55-986e-3746a08b34d1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5ef503d7-4c75-4ac3-a13a-7f57ae0fc97f"
        },
        "item": {
          "id": "2a57ea36-5e80-4e05-9d70-c70b53f56678",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7c4d5aea-c326-4232-a661-c57759e14270",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854d1bd7-9bb4-4210-8057-8491c4099d76",
        "cursor": {
          "ref": "cedaf821-639d-44a2-a93c-8e7ac1b4c7d0",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "90cf32e7-33e1-4322-82fb-af93a02adf8a"
        },
        "item": {
          "id": "854d1bd7-9bb4-4210-8057-8491c4099d76",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9ec4ef12-729e-4c80-8967-004ddb31fc65",
          "status": "OK",
          "code": 200,
          "responseTime": 182,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58b93e8-fd69-4b0e-ba3a-46c12a757116",
        "cursor": {
          "ref": "21844158-a144-42da-a774-316e621b8445",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dc0bb550-29b8-4f0e-97b8-7b454b79a359"
        },
        "item": {
          "id": "f58b93e8-fd69-4b0e-ba3a-46c12a757116",
          "name": "credentials_verify"
        },
        "response": {
          "id": "79eca29f-1b44-422c-98ef-f97c26d3b96e",
          "status": "OK",
          "code": 200,
          "responseTime": 2295,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7c7709-5d86-437f-be58-5b7436c26479",
        "cursor": {
          "ref": "031df41f-6d0c-4715-a3a2-32a7b107e478",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d540f7c5-f325-4bf9-ad2c-73a615fd8761"
        },
        "item": {
          "id": "3a7c7709-5d86-437f-be58-5b7436c26479",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "94464aaf-57ee-4f67-99f4-507d748ecdeb",
          "status": "OK",
          "code": 200,
          "responseTime": 2076,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "254f43d8-c520-469b-b0dc-5a564d6e8a5c",
        "cursor": {
          "ref": "df5a6375-c749-417a-852b-3499d8768245",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0f1f6c62-a0d5-4452-b1ce-b29bf2a4d149"
        },
        "item": {
          "id": "254f43d8-c520-469b-b0dc-5a564d6e8a5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e31d496e-a16f-4577-8b4f-d7da14c756f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254f43d8-c520-469b-b0dc-5a564d6e8a5c",
        "cursor": {
          "ref": "df5a6375-c749-417a-852b-3499d8768245",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0f1f6c62-a0d5-4452-b1ce-b29bf2a4d149"
        },
        "item": {
          "id": "254f43d8-c520-469b-b0dc-5a564d6e8a5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e31d496e-a16f-4577-8b4f-d7da14c756f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9160b5e5-5ce0-4d5c-a9a7-296f80165820",
        "cursor": {
          "ref": "9482801f-de5b-4f04-8c2b-41271baddc3a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "98dbcaa9-aff4-4ebf-b8a2-d076dd4a5858"
        },
        "item": {
          "id": "9160b5e5-5ce0-4d5c-a9a7-296f80165820",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "314cb077-0cd9-4fcc-9c56-63fd9890bde8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f8081e-d232-4078-8ccd-b4fcb9e872a5",
        "cursor": {
          "ref": "e7099554-4536-49a3-9441-73d1944b2b83",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3de82deb-1a1c-4622-84a2-a6a841fda912"
        },
        "item": {
          "id": "23f8081e-d232-4078-8ccd-b4fcb9e872a5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d377fafa-ff58-4aa0-9a91-a65ed1cdba03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}