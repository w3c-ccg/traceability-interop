{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "96f49f26-bb17-41fa-9f62-0d28e3cfeb23",
        "name": "Clear Cache",
        "item": [
          {
            "id": "52150d19-62ed-4084-a380-8a18e2df6c33",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10b9dd5c-59ca-4a2e-813c-331370221006",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "adada680-0d6c-439c-aa85-698b018bb1f7"
                }
              }
            ]
          },
          {
            "id": "52c9f6f6-2c43-4dd3-ae5d-e15d6f30494b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "633733f9-9a7f-4b47-95bf-e909208642eb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c96b8364-ba76-48c0-a0ea-af6fe5d31d60"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1abec772-6625-40f8-8332-313222e59c9f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c81d5af1-69a1-42f0-92d4-06664f9dc3c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c13c15b5-0f7b-44f9-9eee-bc02784da394",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bff014e-8188-4861-8d91-bde98c1d00fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6585b75-de7b-498e-8462-ab53b9b0d1e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ad98d91-66db-446e-aa12-2c254442320e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1811f6e-9900-4dc9-9486-98294f2bd1bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ba4cfa1-5646-475e-931b-a6064d0eaed5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6371fd74-aad9-4648-9784-0dc22a749ec5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27859a37-c550-4b98-85f7-955bcdb949c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0d795185-ac44-4e35-861e-91e892f294b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eddc0a75-cf5f-4738-a50b-76e65dde4959",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e817fde3-a539-4934-9a69-c5f6ac93736a"
            }
          }
        ]
      },
      {
        "id": "80c3a5f3-b07f-4e5d-944e-45ae86cf23d8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dd0e88cd-ab1b-419d-9a6c-a68f9906d2ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99643309-05fc-4612-b3a3-ad740d84a53d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5d5a7bb-0061-4991-b7f5-ed6d7319d8cf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f3ad50-0c4b-4d88-8217-9c9a4ada7415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a060253-a33b-4b1f-add0-eec99b89b26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b219ba-9a4c-4b3a-b4d6-ca09f535e880",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7e6b34-fbf7-4b5d-9e67-2eb34702ced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c98c6bc8-4af8-478e-9689-da7afc53f7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b84dfb1-8fa4-4a00-9f69-6e2b01cbb2d6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9fd177-b81f-405b-b508-970dd7e764c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bebcabf7-9aac-41eb-9bf1-5004936ecade"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e898077-56c4-48e3-9bfd-ed9768fbf83c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7c6a48d-dafd-4e07-89ec-f27fbd125b46",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28fde59-7d3b-423c-9059-1cc9f657cec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da322e88-1236-45af-8bbf-5ba43d79ef8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa286b8-f65c-434d-ba41-6f9051333011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b794956a-3f0a-4166-bbf0-2785c8c04eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c2be76-259a-4b66-802c-75f7dbb0dfa3",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4433616d-c0af-4971-a105-090779c06554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54c19b47-388e-4fbd-8502-b2713650184c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7213c4c3-f915-4541-8cbe-f1245351ae20",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "2be6fc5e-93f7-48d2-a55f-6e8c3fb28e8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff1c826c-8aae-41b3-9559-7ef59e7e1e77",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af199a7d-994e-4c5c-a434-0c169a1e8e96",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d702b20-c74d-4b6e-84aa-bcb0cdaf08a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9803a9e9-3b02-454c-9c6f-770cc8ea3873"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b3cbfed-364d-4fa4-8d5e-3b72f0dc5dc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "11a64ce7-7e85-4150-a370-127100876ac4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b61ca60-bdd1-453a-9bbd-a8f3d486aefc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62b7d258-e986-4673-a640-c76088866a26"
            }
          }
        ]
      },
      {
        "id": "15d4df43-8768-400c-9f17-c2c7f14d413d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "024b6a70-d5db-4c2a-9e7d-616ebc61d0ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7dd6cebb-fb3c-4143-a86a-ec0d5b17ea56",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8b00a04a-68d5-4ed4-8a86-cbad98f8dbef",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323c00a2-6964-492b-b577-e7fc7db0aa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ce8bca-844d-412f-9451-210497528760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742ee95f-8039-403f-a809-812c68faa72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c667c80b-d1b6-4fe9-8d69-767fd7cc592c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f976871d-00ff-4feb-b3a1-3825e61cc50e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff482652-d0cb-4392-8db7-a6e3f344aa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bd8fd6-c433-4c42-9a36-d7dab8f5101b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1663665e-b352-4d37-ba65-eae702edbff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "882ada51-b003-42b1-bb6a-9b20bfedfd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a68c9e4-940e-45f5-a3ed-3097d3fea8ad",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974ab86b-3341-49b2-85f5-be244d63593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195fbe25-7602-4f18-87de-3f00fff8ccc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ad5170-fc28-4c00-92ea-e204aa9aa88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4bbec19-a870-459d-b611-5c5da69b016b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807e4725-cdef-42d5-8841-828779c1da25",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da0e7f8-a240-4802-9007-35bd0dbae576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e724f6e3-4d8d-480f-82da-9fb23e2596e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e3a3d7-4442-40d6-aefc-f490d92ced0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "800095d1-ecd9-4e47-a151-12152f6f0126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08a8f5e-644c-4df8-86c5-df25fe77f98b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c276defc-a535-4a96-8a67-cf74c4c7618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d816fc7a-fc2b-4704-818f-8fa587769f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7141813-6afc-4977-928a-0bd8a366638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7424f08f-be46-400d-adfa-f6ada48d7431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83d83db-ac11-44fa-9d45-533e20914ac5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249e9346-c8ae-46fc-a71f-14b463873891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4325213f-6e42-42c8-9045-a5222f930bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915876a9-0a7f-4cd3-8d43-885042203b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8485fbcc-0b8e-4c7d-bb01-e12a9fb4fe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e47e03d-730f-45f3-8d7d-6624b7337fc0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d9aaab-3646-41f4-893a-f1fd925085de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad50092-e905-4ee5-b60f-2d2ce7a1850f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b31b44e-1c05-4d14-8fcd-1d7701b66408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6990b361-4ecf-4dcf-a80a-4002e19067b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d2edf0-7bbb-4659-8fc8-a35211f046c5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f2bb9e-2b4a-45c3-9252-e0d63a27f34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72448d77-ddc9-4f0f-8ec7-ef7c943e87fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34799e6-d9b1-49f1-b6cc-bcbe65ede227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d07590a6-f198-4fee-a38b-9d3bcd9dc3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d7db0-52f7-4fbb-accb-a534b4654109",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f21396-303d-4e9e-b6f7-5797b1b143d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a3b356-3a87-4fc6-aa95-333314f3be3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c163e6de-6c5b-46bc-85b2-3359f30d71ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6494e8d-58c7-48ae-8032-83d20d7fb437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d4a4e9-6f2a-47e6-a7c1-dcac34b52777",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe1c080-7fe9-46f9-8252-e7a7245c9084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d11f4bc-afd6-4797-a70f-e52d68d1e006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987fca79-0ecd-4f32-b8dc-a9343fc676f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13439507-1eee-4b99-b663-09c19977f879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bde513-17c3-44aa-ae38-563167bc7b21",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187a9423-14c9-497d-b90f-3ee9687fedd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc3837b-0762-4887-895a-ee1f174bbf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60b765f-9fdf-4027-969e-d76c78b9fddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a567b95b-51d2-4b66-9d4f-5fedd45906a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51f996d-71e4-47de-9a19-4e1e3a9dc483",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc1832d-f86b-4061-8814-84249c0b32e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc28127-a82e-4b66-8f94-95e65c4aec17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b5bec7-c439-4494-96ad-e427c7137c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15db2d09-3c9b-4563-afa3-69125d090155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f560cb9-cea1-47f3-a87c-c1220624e769",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6770350-f227-4177-b1ff-f80a790cbd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fe7cdc-0262-4fd1-855c-f959b590a41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8558d27b-09a4-4d7e-86d4-3ac1029a8c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee1cefdb-8dcb-4b2e-97a1-58f784a885c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f316c584-c742-421b-a36f-b4d6cc1213a4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20307fc-7838-4e9a-8305-ea99de31f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c187522-e6ca-4166-b14f-cd2ee9a8cba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71721178-bdee-4c50-9e7c-053dad2cbfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43d2c423-81e7-4a45-9cde-8ee25d5ec993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c749b4-318d-4f03-8651-2fa0f763c347",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb282c32-a6cb-4775-ae7d-1e23c82c9ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0575615-2763-44c0-8207-cc21e8b085fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9af4c9-c800-46c2-b892-e2403360e455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e15345da-a552-49f3-a75c-18d703edac26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f22dfe-1dee-4804-9e8e-05d569223c6f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b5e180-726f-472c-85a9-961811b989f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b84c6f-a96d-4ff6-8408-9ca4554ff8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e5eab6-be7b-45a0-a4ce-6990f8e8f174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adf1f97c-bccc-4091-bd29-926502620ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e0f0f3-c5f5-4d33-b968-ba433be5d23d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb05f84-f471-4956-8b90-f3bbacf059a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6ff99a-aa04-404a-9ff5-9a300d67edf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e797d6b7-3e4d-4532-b8e4-a87f499fd596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb3495a2-5a00-4f5d-b556-d4036d5aabb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c26675-9147-48be-af9d-555be5dfdcbe",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5340f87d-dbd7-44b0-a7e5-1040859d47fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfe9f74-50d0-42a2-9cbc-0b5f6a1480b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ba10e9-0b6d-4715-a86b-fbde96c656f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a1cf06-0be8-471b-9a0a-f8cf0c7c1b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d4c8c1-ea4f-418f-9e5d-f3418bc09416",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0bf623-f59a-4ed7-9b2c-6bb4abd466e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a712e2b-9c7d-477e-8ac4-b6292e70b654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9678d0f0-389e-45a0-ad76-9ea203ab9201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "630dc913-cd41-407d-b440-97592ae6d793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746c9058-4d4e-4e37-9029-3abb5cbef7ca",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c6b12c-38cd-4eef-b9b1-deffee5841bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d7d35d-5e66-486c-abb7-18ce974b61ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14996f85-d38b-4158-8dfd-13a9ee110fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d567d1-86a3-452f-a165-338983b8a641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e824e17d-9084-4fcd-96c8-5d25b8a0afe7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c787a661-4678-4d26-99b0-5467fc594361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e6a257-f746-4096-85eb-0f2d065fcecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b048f-7eaa-48fc-b3df-812d2565bd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66db0cad-1a49-4349-87a6-d2c59fb6df0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51b3b70-8fe6-4662-806b-16fe5f939db7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14be4d18-ddfb-431d-94a5-f0ab6739acd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e408758b-6cd7-46b8-9183-98ee53a767c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683d8db6-80e2-4a6a-b87a-bf726fd12fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54a16af8-73d6-41a2-81a0-31203563e833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85693a05-9c74-4dad-ab1d-08a0d23a3d9d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d683e3-a796-4a61-8b64-884745da41f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980fb166-dd5f-4c42-b7d6-f0fb6304a2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c41853-a9b9-479a-b09b-d250299e6617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98a8e068-f455-4dca-b7e9-0ad03bbeba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8097c250-9064-47c2-90d0-083674feeafc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d719c3-68a8-436f-b1b1-8b603b30a276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf1acfd-795e-4ad0-b16e-c5a62dfc0565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd28909-0fff-4282-a882-c80449c04a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bc9a33-2002-4246-abb2-a6ca32abcb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4ebd35-47ac-4bcf-8e52-125b74c4f90a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a2781d-cc91-4d3b-b935-cf3d8a8e8cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc7a0f3-7ab3-46c1-8a21-d36a97f00410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a872291-baa9-4d83-9dca-5b21d4bdd912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "030a549d-3d50-47ee-b1c2-d0d5cd972b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da99c0e0-1028-489e-8446-995914384035",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9c6986-09ee-42eb-9920-bb658fb574a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c027d3d9-3bf8-4fdd-af92-43f06168ba4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7689c7cb-bcef-45c5-8327-3491749c84ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8126f8cf-46b1-4e8c-a287-ce08c423b1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928f0417-8fbd-446e-88ba-fce793e4e1f1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f816b67c-d4de-4f0d-a6f2-f0d78d978e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6a5112-a982-4dce-99b2-0cc13cff6f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adeef6e9-234d-4e8d-948b-22e17abe5c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7c53a1-1eab-455b-8d19-1066422aa58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6580d312-e4e9-4013-9714-8bb544cf5910",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644639b2-c849-4cb4-a616-318694321d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a884c4ea-4677-484f-9f86-982583fdf888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174c5d36-a716-4fee-b5e5-b48d5a0d344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80979e89-dca0-450f-8797-cdfa1303be9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8af2c4-2f4e-4b57-a616-3eec54eb7ca5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8843cff0-4643-4871-bd4d-794f9afa2d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ce9ceb-735f-49ad-988d-260a1e311c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22170e48-3e13-4839-94a5-d5b36d65e559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed657c0-eef3-4ec8-a046-1a65464ee514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75537fd5-3c34-422e-aff0-6812be8ec1b7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5564b7-900c-4cbd-a9db-bd4ef4ef3e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da91d64d-8786-42e4-ae96-ee888a443dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a078b3ab-8b7e-494e-8a50-f5ce000e11b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d25b20-2389-498b-a636-5b51211d12bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa59d384-9919-4f60-b0de-61431df77b0b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b95cec-a0eb-4df4-ac4c-b2588935239b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599bc823-9548-48f7-9c2f-07a01f2f3f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908ae42f-b724-4636-b8f9-228292a5cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e65eefb-6a73-4446-a1ad-c6c1c6aa8738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c92e5e0-14ed-4d66-af8b-2cef91a6fd06",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da18e1d2-6bad-4065-91e9-1b647461b1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de4cddd-b615-4ae2-8d05-8fcf543fd55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9359d34-6d7e-42b6-a036-9b346ffc4285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4465799a-fd41-461c-b2da-f0152ff8a1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc779e2d-8183-46e9-9791-28f7dc3f197b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f90da4-3386-4ac5-88c3-a84c0fe1cf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647f67f7-6312-4920-85c3-b30efb7043eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fa557f-50b5-400b-956e-795920141438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ec5633-e777-4a58-bf34-b4903180779c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f92cd-04d6-439f-ae04-0df8b6941800",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedbed9a-42dd-428d-9c20-36fa97e0dc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882dc88e-197d-4f3a-be33-6adf67b8d3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0f4fee-7672-4671-b2cc-02b08516cfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3c8b75-d1bb-4b9d-a643-9c41bcf8c1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd3023b-c5b4-4fe6-8f65-e020a2d1b42e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc1eea2-ede7-4b19-bcfc-e2109390f1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4cedb8-ba24-428b-a041-3a85bf3b48ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d154b4-a138-4476-ad3c-1d56e8747671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8db9d0-1e6f-45d0-bcf7-3f3d2c4093e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1077f46-997b-47da-ae44-6c8f28268a1d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff675e-85e2-4996-a1d3-da54814ecb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3967173-f2ae-4436-a17a-ae9c9cea6df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760aa2e1-58b8-4a7e-b224-e54ab5ec5ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6146b2-5341-4477-9a52-07c206dfdce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac7f6ce-376a-47af-885d-a3ec0685c7bc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636c7c4a-e287-444a-9c10-dbf5bebd78e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0d3d29-f661-40f0-88b1-e1bc69e5d090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d468e3d-4ace-4ca0-9294-ed5cab54abfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa5d576-3c3d-4b82-bf3d-e8e7ef24c930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849e4cc8-e3bd-45ea-b4f3-238e12efb0ca",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c9e133-af41-4459-a2ff-616cd9296002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bb9381-b02b-4698-b044-511177d0e859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b6bcc8-9c2d-4da7-8864-80a5da370d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31ede53-f3b2-4338-a57f-1e6fac6116c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c434ee0d-af4c-4a0e-b935-843b9d2259e9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72fd46f-a120-4262-8725-1ceb8b56c69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b52fa6-56c3-473b-aa9c-95a78c30e16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856a8879-b7af-4222-98de-c547349dee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9126829-0ef3-4fb4-9ec4-87ca4aa8a82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af36256-101e-44c2-9c60-ca858318f42c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232d8feb-a643-4e4f-9523-3633a57236d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7779de14-8397-4001-a8b5-b53c28847e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e76513b-f202-45c9-8619-af39d91a09d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c660a7d4-d7ca-4ad7-9a3b-93653f0ab962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7afdd4e-b6e2-4e0b-b9b1-381b0cc8b3e9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cc9828-9851-4afe-a9ad-0e6264f0ccd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066ac405-9f83-4126-8ba6-8480eb5afd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdd3dce-b666-42a7-8f3a-23ce87c7824a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41da48a1-872b-4a13-aaed-ac7a7f453a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f457f17-bdce-40a3-9f7f-a0161f28b1e5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afa4d6a-f8d3-4c30-a8b0-07b809a6a75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf2b1bf-f8c4-48bd-a303-cdffa8acb247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6880966d-1374-4143-ae39-f5ed9d737f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9069a776-360a-4f2e-bbf5-7cc89e3f50b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebc4c07-7fba-4d20-a335-88d81525e40d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d41039e-c681-4483-b415-3c59a91385f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026b32c2-541c-4a6e-bdc1-f14f2a4bbb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc92e4f3-84de-487e-a409-9c070df603ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "639c32fe-f988-42d6-a3c7-ec3f3cafe5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95504167-040b-4ffa-8634-f4edfb3b1e80",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fc82a6-d487-42b2-91fa-2902d9b80900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbe05ae-ed9c-4829-a328-5695976bb7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59045507-30ee-4097-8a8f-7e58bceca1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3ff6a0-6672-43dd-bab2-2fd7a2d11aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b83056-36e1-4fc5-8871-075cc7cebba2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a22bdf8-35ae-4f5a-a952-91827c6e8451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02955fec-dbc6-43ef-a5f9-beb3026fb584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f377c6-c80a-45a3-a8f3-75d78b4834c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5d1093-3afc-497c-93a2-ba18953c8bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874a8b58-20a4-4f7c-9881-98cf3135ddda",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e59493-caaa-4e3b-bc7b-bce3e776794a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10b4213-0537-4b7e-8fab-75b40c331ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7dc0b7-824d-4367-8e1c-f62d411b9f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67cee24-c66e-4152-878f-1ae6191380c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80a03e1-4754-4e9b-90d3-84c985cd8514",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c78d42-001c-4990-ac8b-a72b07090688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c00c717-cbb9-4de8-ab74-de4d19b91b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75c4c53-9d15-4d35-9275-562a07a14a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9f4c58-5ad3-4790-bb1f-bfa19b6d1203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c383a166-5abb-4fad-8c70-6cb905fc8d2b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d6adbb-cb3e-4fde-acb8-37f15c917bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065a940e-1ab2-4133-a2e6-f7a6cee95e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ce51df-66b3-455b-9c6c-f00eb5f4c4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c20e18-0e87-45ba-a5dc-56628cc8ea77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16da834-2e28-45eb-9dab-86b833ccac14",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d237f9-9d81-4f54-9a9e-b76b2a862bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6438bc-b303-4680-8d42-c3608bc17eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402923b0-7f4c-4005-9949-c7f45ea1fd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "939a7461-6163-46b1-8389-299d917c5f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7c826f-0259-4402-aca4-08ad24551bf1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eef6375-8ce3-4aa5-909a-68d66f220c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c80c799-302e-450c-a3b9-1a16b660d956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e521552-0823-4cf1-86a2-9366e0b8715f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2eae9672-7080-4700-bb20-b250e0048d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6692e79-96ca-42ef-9a3a-5e1ca5a74afa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad14f52-9a90-4cc1-acd7-707c6a94c506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0a882f-1d5c-43e8-9c0b-e61b293931d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c8cf99-2236-4650-9936-a2df744a82a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0041bf54-9b95-480e-97a4-4c11a33b045b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07305d72-9311-4f10-9d76-6630544b86ac",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96154b1-eb7f-4921-825b-7dc2269a197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccf32e6-4fc3-4244-8e25-c04dfe1dff14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f1b220-4e2d-46e8-b6f0-a2133f2d4955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2615ee-fa99-4639-be6f-84789f0926b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94804b1-243e-4042-a75c-c3a76b090bd3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a9f907-b77b-44c9-bbb8-fa34ff9d1acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b10c415-eea0-42ce-9437-04634e057a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f660bd3e-ab3d-4496-ab8c-263612db8a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c7e0ee-e7da-46e4-a02d-16f34e514e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3a388e-367f-49e4-80a7-b807da8d4f0d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3351249-f4d9-41f9-a357-3444b26ea9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f75870-72e2-417a-8aa4-69787405b39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616e2b3a-c9e0-4bec-a5f6-f79181017b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb83e69-2d4f-4766-8169-de5c3690ba3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e00cce-fb86-4c32-9eee-52ab9077a267",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea82194f-788c-4daa-b0bd-db3f098c316d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7ac97d-c019-4567-83ce-da855b3a25c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f47cae-ecd1-40c7-acb9-18c7e67e3498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9975d606-cbfe-4f45-a18e-f79a0d60f3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b4c17f-cda9-46f7-8538-e4906aa6078b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a66daa-6f5d-48e6-8dea-fbc734a7f028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47518c28-1858-4540-af7c-8385169e95f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8295b7-4798-4e4e-9216-1f4191d28621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b65a9a-914f-4ae1-86d5-d78c96850422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f90d7a6-fdec-4211-89dc-3401e4d4ac9c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7480a5ac-4d26-4c9d-b6f8-698c72852f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3b212f-e210-4d3e-ac14-a6e09cd100b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a4fe0e-632b-4875-b3ee-54965de06eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb3282c-7acd-429d-a8e2-adc04f1106b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b96172-bf79-4421-9826-e0dbe67a05b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75570a7-39b8-4e81-a1c9-e96114e24c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18998c9f-72cf-423d-9dd8-b61c045785cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e2ff65-6ec7-4df3-8b37-32e863abf7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3a5fc4-667b-4018-9702-54eaf15a9b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d906f14-ad9b-4268-be6f-33ea7f1bed76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccf0a01-ca19-4675-828a-6e291bfe4c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92d6d1e-413b-4203-842d-6c6a4c48ed02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5461624-65c7-4970-b01a-6f1837ee5834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfcfa1e-8079-48a5-86a8-14c2ffa5aa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b45598-6eea-4493-8ddd-34c02a7d041d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aa031d-c4bf-4555-8798-d836b482ebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b875043-0584-434d-b8aa-8e4f983d0e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def43d61-a507-489e-ae45-9e24ecdf88ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3da1f65-e78d-4ad3-9d73-c2414cea9aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628e9f2e-e06a-4a01-b0ce-facd0ddfdfd6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bcf9b6-9373-44ab-a659-fdfb1f299e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56068547-5ffa-4655-96d8-c2b91969bd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25def37e-c9b7-4e1b-bb04-87bc98f4a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "37e7d033-7e5d-41f3-af89-bc9ea783addc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658502ec-f010-4504-911f-b7b199523741",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bbe53e-dd7a-4914-8e4c-e357e19c6092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3de94ee-fca2-4a8d-8948-85585ed80219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2143b1ef-c096-418d-bf3d-e0d1d3b2eff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f976d2e5-5906-47ff-8a5d-820ee3fb6528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30ae325-0993-4ec5-a337-00a5cf543b9a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068ade7c-ef50-44d9-8b65-ddef452d02b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a2e9e0-8e5e-426e-bbaf-dc455c5f604e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c0a150-e5ae-4c21-8ce2-b8383ea1f550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c112a4b-3c26-457e-88d6-12f57e692b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca3cf5b-989f-47da-a2c3-2d84c6990a8a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4ed88b-a027-4b46-a510-16644e491f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca72866-a57a-4e33-961f-e1eef300b693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07f0d14-ffa2-4c67-a1e1-c1bf95d30d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a780da29-1465-491e-86e2-df99d9b42662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065384a0-0d1e-4567-868d-b60bf6844a21",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7bc60b-0cc3-4775-b128-b3343e8c5f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548c7679-11ae-4a04-aa98-ca9d1bf2c663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d85d1a-6fc7-477c-8ff2-98d761ef5ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "054d7319-4b4d-4f9d-bdb3-1ced3f1fa2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff12cd3-cd03-4b7e-90bb-11ec7621addc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef093e2-7277-4d2a-9f32-4c8dc4c0064d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d3c247-df28-4c32-bfa9-7ffd484efaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11463614-8711-41b1-b6c2-5b0727540396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c83098b3-989d-4459-ab8c-c8253b83dd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ddf990-cbe0-4dad-ba28-2475bf683245",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224af82f-6697-4a54-a2de-4f972a232449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b6d262-823e-4adf-b39c-168f8477b667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452dbfa0-3b66-4649-8c8b-cef46b5d1e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bdcf93-cf9d-4af2-a1bb-c6c5c9fb06ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b1874d-e97b-49d3-aefe-b32e2c03757e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ab4c66-df54-424e-8992-c841a2daac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cf6624-79ba-40a1-a69d-dc7177ad58c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee526e1a-cf1c-490e-bfd4-6e47387e7a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ae3f0a-e240-47fd-ab20-c80f024292ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4cb9b8-90bb-494f-84cc-b6529067cc96",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08d9533-31df-422b-bdd5-6b310f85f943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01921a3a-c508-4727-ad12-812369d80e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598afff1-3804-4ca3-a0f7-ae2d17bd8a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeab5647-0025-47b2-acf1-af4aebfadde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1396673e-271e-4b59-9d46-099060ce8c1c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43c96db-a12e-41d0-a1b8-20444e64d24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be3daa4-a6a6-4946-a88b-aecb8de625e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ac2242-f4c8-4fa4-be63-75e39d6792a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea331f8-4843-48dc-963a-c3c19f02a2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356968f8-0594-424e-848a-820820b341c0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1d3e10-b0c7-4992-ba9e-c19fb6dce7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0782790-c4e5-45af-9c03-15e8ffb8c21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d6bbbc-0fec-4446-8bc9-4f3b51782290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59276c17-aba0-4c4b-afa5-ece14e7878d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c4843c-f4b7-4fb6-9328-ad0283e4b875",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabda7a1-59f2-4950-9fb5-2e8c27c4ced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c808ed41-bf6e-42ca-bc86-d7afe93e2c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0ef7b3-d9cd-429e-8326-3713c4dc0846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92b7eeeb-554d-4287-8ae6-6d4feb1bc6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d56f8e2-2497-476e-a78e-711dec63d224",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b160398d-c820-44e6-9136-ecd2784ddc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0604ebd-a7d4-434d-94de-7d070a3e8565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e8367b-e6fb-41cd-9a1e-a4136125ebd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f779d8f1-9b90-434e-8253-f9298603bc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f038185-a199-4a79-b95d-95c5898546fc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f648a33-2d68-4408-82c2-a9aba68bebab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b581517c-6756-4e28-840c-5f2c5428a965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f22166-f28d-45ec-ae45-9a326fe67db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc795ca-c43f-48eb-a5bb-86dac4ddca5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b624b5-1f94-49f1-b58c-dab077ca72a6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a206ae4-25f9-4114-afa5-e5af0fddffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e32ff4-958c-46da-abc0-7d51aa896468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5ae575-a717-4cd1-93d6-5b54025990a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e3752e-8267-47f8-a82c-d488b15c064e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09e8ef1-9063-405b-b506-a771a29d8e8f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc350c5-deb4-41f2-bc08-1fa7d000a0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51244e85-f44b-4499-abd2-41a580c5c37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdac6f5f-659c-4e0e-91f1-63950209b383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff8413b-8810-4f24-b6e4-225707fa70f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a99059-6aaf-4b54-abfe-fa51ef5ed7c7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e88170-9820-433b-837c-96e1b3e2a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed70d206-0907-4ecf-bb56-3ae929d9d90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7ebfe9-f633-4081-8b91-6306bbb59be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3baec3-f73b-483e-9504-dbe1824c2716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404f9a00-8c33-4689-ae75-9c383395ce0d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf6bb9f-c5a3-4edc-8101-424704876347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27414d6-2dab-40d0-9428-68c1e497370a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdd588b-e64c-466a-a140-53788dec2723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60f45a24-fecc-4171-8252-7b08d5800d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5238df-6589-4b2a-9674-10a247685c05",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fdb2b1-556a-4ec9-95ae-6403d82e61ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b3c40d-4198-4c85-b9a0-400af33696a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9be246f-7f51-40e2-a264-f56cd643d375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7818d027-365b-4a57-93da-18d02625bfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad72df43-4558-4c25-a400-5de2a3476575",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda24230-1c0f-41ad-b2dd-751e2a9ae6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bef63a8-31b6-411a-8650-2e3334692e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc53c4f-7fe8-43e7-a167-9ac66963ca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca1a638-6344-4d69-9339-de4ff95f72ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1880a968-d41b-4001-a686-2e801aa7bb34",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196fdca1-1bb2-4bd6-9f6a-90aae36b9bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa59291-99a2-4fa1-a751-ac5e756438c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a145a4-846b-4710-a3b0-dafdcaa238bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b92b76-da9c-4a72-a660-b7038cfc4ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd64b89-38d3-4e21-8cc4-1b7fbb7c5d3a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848f7406-ef1b-4133-9471-1fd05ca0f376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f1d438-c6d3-4886-95db-81bde5fadb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce0e0f4-37d6-49c3-8a49-45627c581901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba66a9a7-3db3-4bdf-a12d-cb854a9fe028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64758c6f-d391-4315-98cb-002fdd7e6000",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd050514-f445-4700-af6b-d50d22f7b888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0359df1-07e3-43ed-a384-30379cf12456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9301ffe5-5b60-422f-a6b9-5f790d1b9e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0dad04-e436-47c7-bcc5-15330eeb4ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40083b57-acf3-4ffe-a198-bcec746cf0ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a860f7f-250b-4c57-8ac4-616fad8f6689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29479d96-95cf-41cf-8ce0-4fe180de66a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b1eef8-684e-43cc-a3a1-fb7c2be4fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd01abbc-c933-4bbb-b101-729033f3095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86383590-50d2-4706-90ef-e359ed2526da",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca494fb2-e866-4aec-8dab-7cdf4ee94b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e332a2eb-a69a-4d0e-8009-92a7d29a8224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac883937-314c-4034-845d-0a3f536ca182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec8ce8e-afd2-4139-b658-94c75607ec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d40d16a-b495-4f96-a584-a155749d6a47",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f0f16f-eed2-443e-9c22-35f6514d70a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3494a38c-93df-4b5d-9f61-7a2eb9a857d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ce829e-0427-44d6-862f-fe2d1c41473a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a80bee82-dcf2-4a3c-b989-0feb186dee81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3c5a72-e061-4037-baaa-7ed240c07a5d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dba9f5d-2790-4db1-9c3a-19e4504c8b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b5c047-e19a-46b8-ad76-40b142dd4a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cd163e-3bdc-4305-8aad-4811c03c752c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa877918-ec11-451b-a2f8-318ee7de68a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c82798-33ff-43ab-bd85-70abb5d8d2a4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2ad262-1d6d-443b-acc8-1a47bf773ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0cacf4-baaa-4464-a3cf-90f3fcc24c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85be13f6-874b-435d-8249-5a04d7b58e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b02320-0e7f-4401-8858-fc8c69842a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd211a81-b5bc-4f4e-a198-55cea544cd26",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0b75ff-d28e-4d67-b829-220d96db2a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e7ae1b-88a4-47ec-88fb-c43e0b7f64ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458fff20-ca94-46b3-b579-075c4427f031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fda71155-df4c-40ea-861b-9cd48c331ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c39ea6-3b70-4f5e-b7ae-0ba556164d71",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4013718c-b002-4c2f-a776-102af803a2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66c21ba-5797-4529-99c2-28b33b32e45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e819785-167a-4ca3-96cc-c92df7b9036a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb04dd7-9d86-4d0d-8b9d-5d49e8832694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd84f3c9-6062-44cf-8ac0-327d718ee4c9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b891206-6a9a-4bcd-b2a2-f08e7fed6596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31f585e-f27e-4e68-843a-c27a49bb536a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68f482c-7ede-4029-88b9-3c7b1e357a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a891f4-f926-45e5-9df4-8e468cf32979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae234824-bbca-4fda-bf44-b33457c36693",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea254da9-2cb6-42d4-bcfa-eec27c6ad63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "71339a9f-d3e2-4ec4-825c-be629fba2d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825b2966-b91e-4f0a-ac72-342095f9195d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c252437-66df-4190-addf-896fbc541623"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5dd60e3f-07a7-440b-a9d7-81b541149c13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68153b2d-65af-4c5b-a2ca-98337d5e950b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7224286-dd1f-4859-9582-2a57f4a810ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f55fd09-5839-40ad-a35a-5dc5c42e1be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba95189-0c90-4a8d-be81-10534d266386",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fc814c5-69f6-4878-a908-b43cc6bb9989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aa01d6-648b-441b-bca3-d4f3fd970ea6",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1985996-40f3-4f39-911a-c12d48a6757b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60cbfee0-1d9e-4d53-8f99-0e9566f81418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd993a4-a040-497d-b4ec-c5e8cf547848",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39fd6e0c-896e-4b77-b891-368d5a1868fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af66a29a-bd2c-4ad2-82dc-039673342f3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5eccf355-17d8-4777-b49b-fa3e2ba064d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffa57112-5963-4b66-8f5c-7611556966a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b08a128a-8be0-46fb-8fc5-ca48367cacc4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b75da2f-ca58-4ac7-90f7-39490948cf00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "809f81f1-d075-4969-9e7a-9000aecc2095"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a125bbb-0e5f-4c34-8311-2be16be97308",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "313b1998-d644-482c-b3ee-9059b20c5506"
                }
              }
            ]
          },
          {
            "id": "880a7220-47d0-44ef-904f-46f1fa04001e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e2002ab-2694-4476-a1aa-099f1bc15486",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6628aa5c-d9b8-40b5-92ad-44b4f887b7c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25bbb078-6bcf-4d67-9c2f-8dc9e09ae571"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83ea0106-344b-49c4-b40f-b259b251d5a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4fc667df-af1b-4c93-b67f-0abb5d569739"
                    }
                  }
                ]
              },
              {
                "id": "512d7940-d949-4e29-85e2-824c8f8af121",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "158a6916-3c27-4f49-b1b8-9ecc2c12a45f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "609c011a-ff63-483c-9a94-d71eab7c9245"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d31fd119-9836-4e4f-a1a2-63730e9a25a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d2fa316-feb6-4d18-a04c-405fc4df098d"
                    }
                  }
                ]
              },
              {
                "id": "6d06c48a-9488-43a1-95f0-7e6ec2e3f491",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88db7101-c305-4363-96e8-6b6582ee0af5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3188e30-2482-443a-a6d7-e88c32c556b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "722821dc-b664-402d-b9c4-5485887a6289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "af4622cb-7989-4e55-b399-e26465962d1d"
                    }
                  }
                ]
              },
              {
                "id": "ed33d15e-45c2-4baf-842d-30e6a6efbb39",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16db625a-f642-4009-a67c-95593ab65b64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "064fb643-7993-4f97-986d-bd1842c2ebc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b47fb4dc-646e-4793-bba4-40713d8b4354",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "296377cb-1f26-4b10-8166-cf8e92216d21"
                    }
                  }
                ]
              },
              {
                "id": "0ca69c15-3b77-4d2e-a802-7c03abd0cf0c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "390f07b3-e74f-43fd-875a-8bae1d6580d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1d18b16-e2df-480e-992e-5e9180bf7dd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97d0f76e-e99f-4f6a-9d6a-77be7fd29e5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0672eba-3fc5-4862-b338-00a474465904"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d93a4897-0862-426f-96bd-68c99d8ce890",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db464ace-c3fe-4888-bb10-b22a05ce2736"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0991ae28-68d2-47cb-af7c-dc8de0c26374",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3fa4a58-230c-43f2-b8ff-a40a4d6a7ff7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "093b38ec-06af-4e0b-8e92-f75f7e7bfd89",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aec43724-82a9-483e-bfc2-f26c239a9ba0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27693492-27a7-45e9-93b9-b555cd099d3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f990feb-7be9-4f6f-ab03-d0757fb27eed"
            }
          }
        ]
      },
      {
        "id": "1056cc0d-8f71-4bac-a34f-fbe2939a04de",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "45b73e4a-c882-400e-956d-e508644a642d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89964fbe-95eb-4b4a-b9a3-02119d194726",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71ade8cd-156e-419a-879d-28782996d48e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9514aaa-64e2-49a6-bd3f-e17470d942cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3541d640-c7ff-4c86-87d7-2c39dafe06a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b001f6-c5d5-49a7-8504-8682d7e79bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ee036c-3aa5-4193-bf49-8ba4d0dc8402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d407b343-b5c0-4daa-a806-38fea9b272bc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a331b155-bd68-4805-9b09-24c0327d2006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810282f8-d54e-47bc-86c1-87676205ca74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228fe551-c23c-4c21-b24c-2a180196b0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "773b0aeb-2f24-435e-b34f-0d6b879b936d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10e0d6f-234c-4af7-845a-06fd2bfa7d80",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa130fb-8863-42b2-bef8-073a651864a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f230637-d0f0-40d2-9ea2-f93e3919f94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bc0a1d-0431-4618-8d5d-ae5264fe7300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e9ca87-c4f9-42c1-89e4-9b28320b7d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4596cfe1-f674-4067-b3d9-d534cd4bceee",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abc2a64-b996-4049-a255-52afe31e62bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f643ad1-d0f4-46e3-b826-9fe7e7f48c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7bb40d-15da-4651-b8ee-e0182508e911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce769a4-898f-44cf-9b4e-09399521c55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a080d61-5e5f-4a7d-8926-9954eb7db389",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e618cc53-813f-4e61-a778-451cb2c3b386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcae9a1-5c3e-4095-a804-1755fa3d48c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c30e2c-91c5-4549-8930-5e338b09daf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca49455-ecd9-436c-b5aa-f9d77c3d7ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ff1231-01b9-4fa9-8505-a5f6f1cbefb9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cd5929-76f5-4740-a0d6-31b3cf6a1d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68833d90-179f-47bb-86f7-d044dda3d5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6931d33c-886e-4aa7-ba8c-46c50725d43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7d4b35-bd85-4558-9dba-6734d31ef900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd2f196-28c1-429c-983e-e36716b2c84f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2a3bf9-b5e8-49f0-9325-a8c735b3dccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a08c89e-02fd-416d-bea2-d1326bc7f177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971ed1a4-fe38-4b98-b0cb-80afb9091c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89613d9-1f17-4001-a03e-40d682869ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d566dd-9217-40d0-9c6e-81d81d86cdb1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7914f5e-9850-4029-a497-8c21b2b802dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136448f7-3244-449a-876f-122fbd83cab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6190ff52-39d6-41dc-9cb4-2185c3543723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54691a6b-cb76-4382-94d9-ad475ac76074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a3b6c5-104c-4e10-98b8-432be6b79eab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cd72b4-2790-44fd-8aa9-b9ef3044c2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da3b7dc-d6b6-43aa-93fc-1e8079e26b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72914af2-c88e-4f29-ba3c-c9470e1e5c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8a3ed6-45d1-42b9-a7e6-ddb71e61fcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60b381f-f00b-4430-be4f-07e3b1f390c1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee373e2f-b2fa-4c2a-99c5-b8354405c95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8812120c-47e0-4974-8b83-213e7d2e714f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018eb324-7288-4f8b-8679-e2d1f34c0bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a754e947-4bd5-4112-9602-bf08f94dee77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e791d3a-437a-40cd-bc47-fd14d59a979a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d6b1d9-b03a-4c6f-8cac-99ca7f347e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8ab75b-e662-4456-9433-2d95a9fa4229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ec301d-7237-4a8f-becb-4e098ff6a7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d1db01b3-45a2-411c-a60a-128059ae6ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401d1a9c-dbd0-4c31-9636-dd006cf0bb09",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b20e04a-e758-41df-8c13-f71abc86a48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1b1085-1ce3-4f2f-b656-6d27e129301a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9376c694-5c7d-4fda-9ad9-e136706a33fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdc87e5-c873-4bb4-b309-c921ec860855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9143524-e6e8-469b-abc5-ee587f04ecf3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed134c6-ee6b-4fa8-94ae-65a7f71e71b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df406ed5-e602-4c03-90c6-8fde45e4ad43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511418c6-bf67-4a18-b2ba-c76ad40bbc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e2c830-4667-44da-b291-67f17a5128f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215b75c2-25e8-4d58-a04f-6b99c5cedb82",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a4fbb0-275e-43a0-9284-b2982ee556e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fa7b2b-7d69-422b-b65d-3a1f3abcff2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f76ed7-fa20-42a1-80d6-5098d9b97106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7389bb84-a424-459d-b7e5-59e675b16817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3729c35-b062-43b4-bafb-d0bcda6de094",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d0afa-ff32-4d30-879b-f2400a53b1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cea092d-5044-457d-aa67-acc8958f7008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd19d4bf-16bc-442e-b923-cc0886d80288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e38966d-1136-4fd0-b607-aeeb8f895e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef96756-7a54-47d0-abab-e4cfdd046f2a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6362e15-f2ae-4779-839e-7abc01f7a8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd93878-c602-4ab9-8848-be7d478574af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644b00c8-b13c-49f1-bd19-b59d3d32c60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e1765a-05ef-4862-a104-ecead595aa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6b1bae-ed34-45f9-b63e-bf4cdb6c4884",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459e3d00-01fc-49bc-8cb7-bfac90018555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd486ff-04c9-4153-96ed-8f9beb10e119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ca0c55-adb2-48fa-8d6b-e59da2701263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "19485294-3cb7-46c5-a990-363c9a3bd928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7427a7-a2dd-43c8-8572-9bfefebc439a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29392245-b419-4c86-b74a-1641ae304ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f390a95b-51a8-4d73-9b83-97603bc60937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f91378-c102-4f3e-995e-e88facbd8543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e761b21-7af6-44cc-a1bb-451f23195a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef25542-8045-4fa1-822d-d90826b56c87",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2b8067-bff1-46ec-b861-9e1e9a30287b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613e231b-1be9-4201-ac0c-c89f527b39c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe99903a-d173-45cd-93c4-03960cc2107f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88270d3-d362-4d6e-a71d-8a41630c5334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d5da7d-c5fa-46f2-8def-9ff0dd1476be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663d0f31-3c8e-47ff-8f17-66c19a5c0427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1bb2c2-f7c9-45d5-a76c-1ecac2834e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa476693-26a5-43af-8b68-0c5e0ef32987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9963a327-a2b3-4c01-8ebf-d560b7846343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562c32ca-cb04-42d3-9267-207980e182b1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8ecbe8-0aaf-405a-a63e-fbc3a9f015e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d4bdea-1884-4ca0-8a2e-4c7ae95d348c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebea617e-5f7d-494b-8b95-0d69d0311b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13cb7a45-d7f2-406e-8210-4b63fcf67bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e91006-9d17-4244-8688-7ca007c04f3c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f90636-981a-41e4-8fbe-4eaef02bd15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07835710-f080-43bf-bea4-dfc0dd7feea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec08708c-cd43-40bd-9479-86d08b13cd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2187b272-5ba0-41db-8f2e-44b240416603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484a16d1-9e69-4364-8ee7-6989e8fd9000",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bcc151-bacb-4f26-8a86-bfe44700bbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983f379f-3f47-4f27-bfe7-dda934927b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fee907-f297-4cb5-8cc7-f3957a5b3887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04871254-aa01-4e98-8943-6a419fee677e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2282fb-ee8e-43f2-a7e7-c38c4baa41ca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3700533f-2833-45a2-9201-d99920006849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7191a77b-e82a-4203-bb43-2cce4c8c2b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e18119-d42c-4c08-8e4c-cf7382ac2954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab07037-37ec-4006-bffd-522dcb9f2bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894ad586-3fc8-44bc-92be-c9bad8d36077",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddc92e5-ca5a-47b8-9749-f9d2724924ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac19de2-86b6-4a98-b1b2-909c86b2d03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c8c76f-8474-4b43-b786-6f9e25f453d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1d1ded-8d98-4347-9c45-6e9ab7cb1de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2e6021-4ece-464f-82ab-b37e9c28f006",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20058182-7cd9-431d-8ec3-b9c88879b8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4335cf-0792-4d54-96a8-17de7a5e39a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1545f6-a033-499c-bcba-0254d2ad5c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32996cf-ed58-42cb-b965-7f69add9b894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b2524f-d6e2-481e-a25a-23c0ec19a4b8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f8ee07-1306-4c90-8a3e-e1897461a60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e20c850-7a22-4f7e-a2e0-9acbb9b585a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb9e9b-6f7e-43f6-b5ba-5676ca2e551d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "763bde73-b7c6-4f79-8d61-f7a6b95d0bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0600c3d7-f32a-4450-a050-1157e3ddec0e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aef1c7-8ee4-4286-a91c-750e6f1d3f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dcd996-88b8-4fee-a6c6-0fb6719438f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f86c9e-6aec-4942-9aa3-d26314cc10db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae366faf-60e0-4c2a-846d-56c037b5eb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39739c9d-6a3e-486f-9b42-f1e3d948a5f1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c14f84-b4c0-4c27-ad77-f990e0c79e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8ae330-7d12-43da-ae96-1851b5f0bca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54f943-9243-4ac6-a98c-6b666b0767e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "338d0ffb-aaad-4c4b-8ee2-0357ca037bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0163a9-f54f-492d-aa7d-85be3975c749",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1917a4-c0e3-4363-ab7c-2c9f9e2c4366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6411837c-315b-4dbd-b34b-24ae482df6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06de629-94a3-453c-899d-59810e7b4368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3c86e2-d753-4cb2-92ee-168d1fc0fc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c15206c-4faa-4926-b36b-300a33e899d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd50a5e-3a36-43d0-8eb1-1460b2d76f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9a647d-a7bc-4966-a9f9-949215db2718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dec8a4a-c4aa-45f7-89ea-cb55731c665a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21cf7ef1-a96c-4642-a77f-eab26091dc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827444e8-df78-4a58-8982-ba931b8aa5e8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e17cdb-f401-4dfb-b69a-f34ecec65f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ba3d60-6558-496d-8afe-458f84d45764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89762276-b758-4792-8442-8d3d28b82ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2befd7c0-18a0-4911-aac3-b282244b0bbe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "221f5147-b396-4758-a87f-7aeafaa0fef2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48b7e782-58c6-4f15-8429-a68b80447390",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcd0b6d-7ba1-4298-b788-5c6d47bc2754",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "04f16303-4be4-44e2-bf40-6ab09c906a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dca3e3-a026-4316-b3b4-4cf95179cfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e4d38a5-a9dc-408e-8644-226e26da6c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30ab674-6921-4ef0-bb0c-47374467dbf0",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273ae5bf-b0aa-4c53-9bdc-540b1bc15a88",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f15d5cbb-570b-4e7f-a33a-13ddde1e9e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26338b1-c9a3-45f5-8ea8-a0f74114e35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e667746-e1d7-467c-b0f4-f0fcc645979b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d3ed130-3b06-4a40-bc36-df9d508202f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a29be018-82a6-4141-83ce-60148c1561ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8979deaf-7df5-4a56-aedb-a14d0130a065",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a8dbdb-3560-4863-aa2f-c4a730031e1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b016c7ce-6b3b-4ced-a483-73f64a1a7bbd",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "897801f6-a761-429e-9431-a0e7aa15ed26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf92b36e-c627-473a-a09c-e244c587180a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "306a0e32-1498-410a-a39b-9d82d112783f"
            }
          }
        ]
      },
      {
        "id": "77692be9-3084-4a90-8b4e-7e41a163a024",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "28d9530b-a4f5-411e-afb9-4e195774626b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "809bf396-5c6e-4831-ad15-f95e96fcd53f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e561af19-46cb-4303-99be-32ff2ee7f8f0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807ab3f5-9ab6-4a33-bbea-dcf42c575df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b357f508-88f5-4de4-a732-039141ed527c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb871ea-fe00-4345-8fc8-2b0f2936b3c8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463de327-d370-4927-bc2b-b862eb8ed1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7841a089-25f6-4c83-bd23-e2790d6d406f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa76168-e19a-4f04-969b-532f81fa86ea",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2912714c-e9cf-4d7d-bd7f-4469f004802d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801c13e5-eb59-4798-b958-383d81bfae33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd039f4-0068-47b6-9c84-f4ebd4db375e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e9490b-75a9-482d-9c7e-ba7acc914594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd133d47-8c2e-45e5-89ec-98ae3274dd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b470a8-148d-4635-a442-28d8ae9c3525",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b1c987-eda1-4077-96dd-e974a74eb317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff4f0a5-85e2-40bb-8ad7-a70a7b6ff269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8839cfe-160e-48da-ae07-0a7aebd1a436",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2aa272-2ee8-428a-b677-b07e3bb34946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a39455f-5ea5-4941-845d-06af97081e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cf0f0a-c4f9-46be-844f-ff6e54284c1f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be488a33-94d8-46b5-b6e1-f6a18437e060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde9c95f-6421-411a-98c9-e7a13ecd02cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca74dd0-b2ce-4345-8882-84ec6eff082d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9cca5f-c593-4fb8-8821-5fae81efe029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9872d7-f50c-4fae-b45d-ff7c70440675",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54ac4b9-f057-4ad5-8241-50cae5dec612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f0cc6d9-ee22-4254-90da-a457b3e7079a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f7588d-3af3-41d5-8434-015c1dbf1ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1954be-b0de-4ab2-b925-64b36716b61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebe21ba-bd16-4c57-bd53-fc50ddc18f3f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d05995d-ba3e-4933-834a-142a26827867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd871c7-f9e4-4d64-8deb-4d8c5f79bd54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b792801-8fa4-4692-b151-688758ece131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca3f650-143b-4050-ae86-f11646e9623d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4336c1-134a-43cc-bfa1-4ae73758d3e2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc01e14-87b9-4ab0-9752-1b6033edfea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0ea655-499a-4c24-8daa-7bc0a871a149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598e70e9-6a78-45da-aa48-68cc88ca4489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2e2c29-ec20-415b-ae20-eafef82cf8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72f31c1-74e7-4532-8fc9-0edb8d35ca1f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1efd91-aea4-44c8-826d-b5597cd27829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6eeed1d-dca7-4087-9598-5d06e6c328e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36e9f9d-ddb2-47c7-924c-3bd85c247ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64902456-adde-4ba7-810f-52e85d9a155e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884da73b-d67d-4bf6-8242-7b72f005b0d2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786ba853-862d-4988-96dd-5376d9ae29e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882be91a-cd62-41ed-9a35-a782840ed906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e7b2cd-2778-4f42-ae73-dc5ec7c1a769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346bd6f5-8ce7-4abd-804e-6052a754eb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da101ae-680f-4315-b9e8-3bd7e1577dd5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4c5772-cc0b-4871-83d5-4301eb6fd3d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25779b4f-45fd-489f-b6cb-3ef609acca3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3844e4-30fc-45bc-aacc-189f8a4135dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9976f2a7-c974-48a9-a412-eb9af135489b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34db45b7-70de-4964-aa05-d6a15ce80f60",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25ca0ae-a17b-4038-833d-d0502675a78b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6eb6f00-cfa3-42c2-95c7-b993c6e0a98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f172d64b-5572-48bb-abec-bcd19cd6fb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eaff25-2bc2-402a-ae6f-eec4466d3d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4345e6-d687-4c68-905b-b5880673ef31",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8ea18e-3824-426c-9276-ef7031db7c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20eee858-ffed-4c00-a9a9-083e526fb003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3aa7af-7758-4f8f-99bb-2f7c7b989fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f94a7d-3bf4-402b-83b6-bdba88072323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1385444-9ee8-4f9f-9436-ca3be7fef1fd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d8b50e-f7cd-4c7f-9d2d-67ea16adf870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c19e24c-b434-4eaf-9833-54e330a98cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1c7e16-305f-4b75-a231-3690adfab4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f5050d-383e-4ad9-adc5-1ec87a862bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68fecbc-6e88-4169-9f2a-0cf37fdc8ab5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca78376d-a4e6-49c2-8235-bd545100f091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5cb2d8-df36-4fb0-9ea9-799bf2c945b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1051ca89-2270-481f-b00d-12131fd2f769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f47cc0-a4f8-4a66-ba26-3dccb0669b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597874ad-b3d2-46cb-bb8c-83e9260dad7f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47ac98a-67aa-47a7-9d4f-142d8ea8ba27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec09a0ae-383c-4c51-bfd0-55be69bddb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291dfe95-c470-4671-aa50-4c3abeae4b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef78299a-8172-460e-9b45-68f5f8b67f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20538274-b03d-43d7-978c-e44ed7c60e61",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bb8c5a-a662-4293-a841-7bf18c8be7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6187e5a7-dfa0-4099-912a-2cfd0d715f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fa6558-bd8d-404e-9899-18ce57b00451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78a7f60-56c8-4e56-8e67-8c1ac606f434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b0c10a-cf28-4972-8e19-ca3f2a762149",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f486add-db53-450c-aacc-eaccadfb14d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1b1939-5900-4ecd-925b-64b196997c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa6435c-eb5c-42ac-8a1a-c20ff5b9641e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f25ec1-c358-4eed-a632-118e556b5f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877a44c2-ac3b-4d15-825f-f1242e03f4b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2a9a5c-2f55-4522-937c-d9355f4e24e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c50f303-89f5-414b-8b40-60c4ace6e64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1578b85e-1d0d-4173-ab68-bcabed1cf52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c906edcc-f18c-4ac7-a198-81fbf76878c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235127a0-092d-45c9-aeeb-98e0b4bfcd0c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcf759c-7329-469a-8e3f-133f0e220a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fb15ea-78cb-4db4-83c1-4947a14c553f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ae6ef5-9cfa-4c53-bdf3-eb1342f80d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c70c57-8df1-49fe-9626-920605d36c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066000e0-2cfe-43eb-9196-fd7e02810efd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533d4edf-2c37-4e3b-9373-d561fcec38a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8994e5f-7c70-4314-ac17-3448d5980998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd9b36f-e7b5-41df-b55f-a9655eeae16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafe0771-df8e-4e8e-a42b-31735b42b1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19808d2-5938-4615-aeaf-bcaf80777885",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9463768-6495-4590-b848-ebad8d2611fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeec1ced-8377-4958-a1d7-83ca0ddaa8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6893e9d-83a8-4114-92ed-c64dc97ad527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed34b7b1-f43e-4dbb-98fc-deefe51e3d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049bb94a-5a6b-48d3-88b7-7b6cec4e98e8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c478a47-bbd1-4584-9445-4ee81a74f15a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4b8d52-d0b5-4adc-b9f2-c1f3f503348b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8961f9-f12f-4130-aabb-ae6a89917ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c2be10-79c6-4273-8db6-fb05f9673c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfc7464-91ec-4faf-a1ba-ba9adf945328",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0602b511-d091-46fd-8902-b2a948e87ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2b5f6a-4920-43e3-a969-577316da40c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5513f51d-c413-4722-9230-eb92b7da1c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed56a47e-d1a2-464b-9a42-0ae286b31b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a858b7-de21-4a7f-ada2-af9a5af6c494",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68690b0a-b625-4081-9aa4-498ba54cfa42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abcd3778-85f2-4341-a575-d49f1be4b6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e58ceb1-1f69-4587-aad3-50ce1b9ffec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d04702-2760-4534-ba80-f06767f87896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5325d8d-e3ed-4354-a0b4-1fbde73f687f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e0d9ef-d9a5-45a9-93f0-04a085043f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71548d1-20d5-4e44-a4dd-18a85c0f8392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7d59b4-0a52-4b84-94a1-89dad852c3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e1846b-8685-4079-8606-3d75c49a0439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2d0b00-305b-4098-aed6-57fe00c72e83",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d537b62e-b0ca-4cb8-86ca-ce1caba19cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eebfd9e-d4cd-491e-b9a3-aff4acc0bbad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05591a0a-9b26-4d7a-8c9e-062a7547fab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7214c5d4-d333-4024-9852-32d598437da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602b9184-6203-436b-b57c-06a5fcf51467",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066f4c99-3dfa-4f18-8973-0524bc8f27e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25330181-d064-4d4b-85ce-f9c7887fdc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47089701-6910-4606-82dc-dcc8c1ced394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1833ba6c-a113-4081-b529-199ebb72ba4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d44533-9a9d-476c-b47e-2774d14254cf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065268d9-8498-4b30-92f2-ed75d506e820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fbac005-7b42-42d1-b462-a5193b184dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605fa8be-54ff-4d30-bb1f-a28f4effcd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8389a136-6851-4d03-8230-f1858785e786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf43c8-3621-4926-8964-e4f8033b66e2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f464df65-9581-43f2-bf92-a6613754f02a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9504b1c-48d2-419b-95a3-3f63d70adeba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548fd11c-8247-4bb6-8f12-e9bb85aef299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afb08c2-218f-4353-8a81-037cbc2eadfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34947d9-ab5a-4de8-bbfc-0617cde9eeae",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adaf554-01e1-455f-b2cb-d13e025d1a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "048223f2-d543-4126-8e99-8bd742834da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889d6f71-112f-419c-9506-7d7e6405a29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fb17c9-94cb-4d66-8736-9f6bfd19eed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2efae7-af51-43b2-9159-83fad404ea88",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48b6e8c-c6a3-4a96-9281-ccc1d726ead8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee763b9-e281-40ba-be14-4ad4e92d9bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0769b1c-35bb-4d3f-824b-b83966834e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4bf2d4-0adb-4586-b596-9059f7d5062d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bf112a-eaee-4746-b732-8f70a4250c4c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b067b4-4c1d-424a-8c91-a635c24255d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7920d5-6e87-4f37-9080-fa6e0f9516a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8406f695-15e8-47e7-b07d-b3a4f9004b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f925b3a-3a01-4861-8553-f676b924df73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70623f81-ebec-4791-83f6-aba26d54e2f0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc265d4-6185-4d92-a72d-3f1352931123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c736478-51e1-4317-b1a5-6f62db6587c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27620131-2544-48c5-abf5-aa5287ddc91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee723a1-7e66-4c88-be28-0ab79308da2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd667623-d596-46db-becf-aa2d20d8b1f0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7a26d6-1771-4117-a81d-d36664fcab8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1318a7-0e83-40e4-9eb0-a8d9d2b93a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25d3c29-f4f6-4860-a288-83a8229920a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf833eb-8b86-45de-bb21-a81421cffc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410fd9b7-afa9-4065-92db-a16aae3c87a8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e595b2-561c-4483-a9c9-d03ef5190199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99858c23-176e-4bc5-9bc0-0712654a5e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba311f2-84e9-468f-b9bb-9a4ae5d7948b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfaedc0-6057-47d6-af9a-9fda3a98ed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf0caf5-979b-4987-8992-376d2ee19f93",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcaa53a-41a1-4781-919c-05a6b650ecdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456a6d0a-4fea-4b70-a663-231ff52506a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b999b90-a311-4325-a9fc-079b1a4b8360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27680168-39bf-4f9f-9349-cd49873ab4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6036ba-b774-4c84-95bb-c1f298bd0eb5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7832fe0f-77a2-492e-bab3-28bb63662538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ce224f-5dfc-40fa-a0bc-3bd0b343f250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a3d65e-b2ba-41f4-89ef-52b2125362a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9091ccf1-ca59-4942-8b91-bdd45bc3f8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed717614-b66f-4162-8039-b743e77770c3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed31d75-bfc5-4b9b-850b-6e47db7b7c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa96105-f6f8-4c75-9ce8-f6727d6ce73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee6b609-dffe-4b3b-995f-b269e51667d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecefd05f-7925-43d4-9934-6e4c20d068c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a900e0a7-5cb5-40eb-bbe3-c6d90d776560",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3161b12-f4f4-4bea-84c9-ab571ae6de14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e84affb-3f20-4200-9dcd-e7301339d205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c2c10e-72a1-4134-bcc5-839404fd8593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3195928d-7e05-479b-8127-b8472ae33f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd10a46-44ec-4e85-bfad-26ae604c7790",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6540c1ef-c5bc-4936-a3f9-0b129880d9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8534a0e7-a78b-4f8d-b30c-c52934082879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e196620-8f66-4ba9-ac08-9868dc134f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204a9144-f553-4653-b76e-d15a926cfac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d3a3ec-a426-4458-b924-b02c84672b35",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868873d0-b35e-463b-a969-dd6846802ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260e00eb-8075-4fba-8c46-3795f7623b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ab2ced-0d3c-4aa2-8d9f-fac0956c4924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab4217d-d130-4237-bdde-80ad27764f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105379dd-2524-4142-95e8-38f2ae78a037",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fbee64-a264-4f59-a3b2-5b85fdd60bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d25d349-f1db-436a-b23e-4d54b7e0303f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf04c4d-0527-41df-8fc5-d9f3a351b667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aeb4662-0288-45be-ba88-a7626db726d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a438ff63-9be5-4778-b0c4-e99ed77208de",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410f8c3d-eee2-4cfe-a030-8af3abfc5c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c6e36c-7d1c-4591-9b9e-489e2b2a4631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e032efe-2bd2-41d8-be65-ec6258497ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c33071-3b8c-4c33-b8e1-ff16732ba8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b90625-4ffe-4478-ba06-4fb0da89e144",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f401e180-1e07-4328-9caf-738c9f545c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b2c4d3-e993-4d9c-a456-7ce86994fb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecee637-4e8c-4f13-9b53-2e88162a6407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe4562c-ff06-49f5-abb9-810723ddea4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f6ca40-1611-4900-9321-da6f49f3c275",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a3737e-e569-410d-aa53-bd5d579bfd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff715560-18f1-4bf2-8011-ebef53e7d96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921ec657-2c4a-44fd-a55f-28bc932e6624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffd158a-cf88-4a5f-9880-f821f0c7331c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31190711-9287-4580-8947-e49b2882fa69",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f0d4e7-8130-4350-aae3-f5d221ebf1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5991596-5164-4302-b2dc-2300016e7959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d773f444-7035-4f56-82ee-b325fbfe19f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72071b8-5fb5-4b98-9f97-56045bc2af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660405a4-e589-4a05-902e-64a63ec43b50",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aed47c8-d6c8-4a07-bfad-9e4f10b7daf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d8e85f-8af0-4cb6-89ac-cc41abc33252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde83403-fede-4f16-b32d-f023bae943a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a005211a-88c2-48ed-a07d-3a2063a7b0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37637e3d-ec75-4e00-8d93-6ef97659688b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab73d83-fd53-40dc-ad23-b01f7cff36cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97f55e0-039c-4dfe-b02a-5b5b827b2a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103b2644-a119-4238-8d36-bbfd10e6d830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b4c543-0467-423f-8615-c3003dd62fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44ba1e2-0a56-4509-b24d-d5265d935c76",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f008b635-c73d-4ca0-88f9-ae9b8717b16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fce1538-7d65-4b29-bd1c-2e1e829f1091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79168840-0d11-4db9-9212-a8993593c45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576c56d7-7cea-4b5d-b632-365016e8fdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd67118b-96d4-433f-9874-3dc7dacbbc4c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9b9aec-ff6f-4ba4-8a75-2d1a23f9a947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5108e121-f442-4baa-b1f6-29fc726c8215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa79399-3196-48a6-9148-7625acf1a24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98089776-4966-4c75-8117-62db129fa8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a466ea67-7882-4521-951d-e6cf1bdc0a72",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f5f13f-2197-4d0b-a0bd-faa197f2b9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4180778-9aed-4150-8d47-24c9f7b18a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331cb293-0729-40ba-82cf-667203d7f89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90d1aa0-b7ae-4f84-bd7a-6230d351f306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c21e53-f1d0-487a-aac7-0c9153b2e514",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971deb9c-9011-4869-9559-8fc2d77dffbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414e1d5e-60aa-4093-a0c8-f3fb277222c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af98c0be-74b8-43ec-94ff-7c9e3ef76960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d76f08-3da3-454d-8b50-16ed4eba942d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fc24be-c297-4a07-851e-3340c47398de",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61dcebd-d7b2-4df6-bcc4-fdd000970e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ead53c-fa56-4c65-bb48-b26fd3a5fa7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9925f0-27a2-4464-a71a-316d68b21d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3318b9-1ee7-4fbd-b7aa-1ab30d989500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0770ca-69e8-4e53-9dfa-883f326999e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e763311f-6bf0-4ae9-a238-d6c11c165bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdc40b5-0d84-4080-b499-c041d2d6b5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b083c8-1293-41a7-b1e3-b3d15056c821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401d78ad-267b-4766-a498-8c419870eda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81531436-0605-4f93-a126-b9f18aab80d2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316608b3-b0a3-4904-80dd-4ea78ff70308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f66195-9de7-4596-b5a2-e244124cccc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15894c0-adb9-4bac-b26c-e55cd6b2c895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b07eb0-55b0-4284-b373-149cbadbaff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b202b6e-7d84-4cb7-a507-777323489b39",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbed9d88-76f6-47b4-a5b6-7d7edb1e89a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d0c719-2539-4094-9dc0-aaf9d2b44f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff01e2-d2c1-4c49-b73a-953bdf83b1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5583a3e3-a0d7-42df-b11f-1302ec42149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acaad0b-7fa2-49ae-a94a-808b088c7fa7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb1a274-fd90-4248-89c0-8869f5c8feac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09956a18-cfd7-4ff2-a396-068f3a989b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60706e6a-4931-48a8-aa5e-4f2c0e567542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2578fb67-76c8-478b-8010-9947932c6db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02149a1-a787-47cc-8ada-305ce3aeb26c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9250ab64-788f-4589-a17d-52064f7f586b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884e2461-448a-4302-a669-4aabfbbb049d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cd757f-a319-41ce-97e9-8cc271ad4064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144fb23d-83a6-483c-96fd-7cf82787b866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02057873-59a2-4604-8779-4c68afea312b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7865ad95-2008-4a84-a395-fad3c9fa830e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fd78ec-9b12-4353-91e8-51a00e02d17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655cd1f8-6769-4e2c-bca0-4973c44d899a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013d3a02-a978-47e7-b166-4de2260c803e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679bd557-e849-44e3-9881-4412819b65f3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ecdc38-e269-4f83-b1b2-89b4b74233bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62a668a-1a1d-46e2-a35a-7656f9b2c8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efeda060-a8a8-4fa3-9418-c0e1e99985f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1271efab-84b0-4188-892d-315d8fa60dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a27a1d-ea73-41b9-971d-c2dd289d0a3c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9008e6-06a6-4da8-8d2d-2b561a0dc21e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb929c14-55b3-4257-a80c-4391b871c23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617df85e-9ea4-4072-a7df-2bf153ee7c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2fab99-861b-4d0b-b868-0f3444810bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b84e6f-a4a3-4a9f-b777-64dd283f1f68",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a8d90f-a4d3-4f1f-bf1f-994344f55b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b6e7ecb-18fe-4850-ac04-198212b78741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935c4a18-bb30-4be0-8bab-478180fee1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a18d875-2735-44a6-abc0-59bd2daede85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e6ca51-9ae1-4a77-8ecb-4b6b41a6402a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba28c4e1-c506-466c-9458-3350006e9a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991af180-1e8a-4c27-8424-5060a88afde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbdc3f2-e1eb-4086-855d-406ebb02f0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9832c6a2-a02c-4fcb-96df-1bb1d00261ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf7c7db-752c-4e95-a4e6-ef972ec13926",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb248a09-680d-4f87-b936-82ce31d26992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32db6d5c-615d-4238-95c5-be9c680bc482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7393d04-b60a-4ebb-8396-fce9d60d72f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616e3150-8dea-40ea-8c7a-036eea597903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ac4aed-962c-40b3-9372-78e6c63335ff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03338e4e-49f5-40ca-bbd0-ed94b6f1c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6afc9035-ce7c-46ef-a288-24dd9bcd27b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b181fdb-40bb-47d5-9b2d-cf0737d84bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271f133b-c493-4950-9125-4174d92671ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967a0655-33e3-46da-8cdb-bdf1ff067ce4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4428f3a0-dade-4dbf-91a5-6959d5450938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3400c907-014e-43fe-b59d-11511edaea93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c94d6e-a28d-439c-9a64-f542905749ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7827835b-4ab8-4417-81eb-f6fbe6ebe6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5451a6-e220-4b0e-ad2f-30b57c142899",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8a05d6-125a-4df5-9d55-fa08cda7e344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54463869-1a12-42eb-a452-61dc52ff945c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b0f07e-e3c3-4583-bbe7-d908dd250680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8873c5-ef8b-4e1c-a573-59d897f9cf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da8819f-ee22-4edf-b9b8-df69ee4d6412",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096989dd-8f79-4934-8d45-439f429d1b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d0b184-1d8d-45f6-9d1f-e1065e403839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113311bb-eed6-45d8-8a2c-15e97aa01f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857474b3-022b-4afc-9b65-e4793e9a6d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901dfc5b-c5f4-49c1-8b9f-5ba3b0a12eea",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98475723-c95c-434a-b57b-b11a5cf154c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f2486be-9fa1-45e1-99c1-613ead2101ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881fbc00-8a3b-4d0e-97bf-5f45eb7c0759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db501c01-0e6a-4f88-9ed5-3b71a6903bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3985ce7-90c7-4202-b208-456a72f326c1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db3177e-2127-4da8-9717-b258bdf7d1e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4424ab32-f3a8-49c0-addc-ae16f80b1c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e8df91-855a-4ea7-b9cd-492b78c4445d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cba84b-b062-42bf-a0f1-9780ce10ae29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d0b82b-7ca8-44d4-9a94-dd25842a91f9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c060bb3-c81f-450d-bf82-b9ab219ec3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a148577a-6e98-4747-a03f-f2ce6cb35146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5a3096-b331-475b-bd1c-03ab1515e53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd2f6ac-4930-43df-a482-f0ccddf8d28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d329428-1a3b-4117-9cc8-f6829ede8216",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d137e-06cd-4148-9b6d-0c543bcc66ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e7e398-1836-4118-9f15-13cb8e80bd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e28bc22-f4b5-4c0f-a8f2-4ebec7a3156a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9014ad4-6889-42b8-b476-1488d4fcd856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f88610-b679-4a67-bafc-6cf01bb8221d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548e2906-45c8-4479-ac36-1d5ca07a6f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667697ae-a302-4aa0-bff2-a268cb5eba81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cf4895-4094-4126-ac5a-d39f8d97417a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0cd342-17d7-451e-bd6b-69c076d1d67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3a4616-5d2a-4d99-8cf5-4001478a4264",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1970b1b1-6ba0-4a7d-9145-b1d332ff5487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc15bf8-b9d5-45ca-a6d3-2a06cab34078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20dbeff-243d-4d0f-972b-37878748eb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f227667-cf41-49f2-8e56-6a2db8010482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcf4961-a502-490b-9bf1-bc0c753dcced",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f808f8c1-c9e7-4038-8154-6f86fccb4c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d61796c-044a-464a-b5d1-7e663f9bf443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2c6d14-cd35-4697-b4f4-ee8e5a2a08d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236bf3c3-487a-44df-99b3-25dd788df041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc9126-af09-4e16-bb17-090efd138a96",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d025950-a34c-494d-9058-2337455002da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e85d65-0233-4880-a397-7fdf2b50c7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900ba2f6-977e-402b-8f9e-db34d8790cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b0090c-1323-4358-a663-cbf9770f1ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9a87dc-f479-4206-88cc-ce1a2aa4ea69",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5296c61e-d737-4c7f-b414-736f97d122db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a5d7a9-067f-482e-909d-0cc515a16bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a179dda-1714-4c7f-9cd9-17ecf51e0cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf512736-be03-4a9a-bdd6-8d9c6a09f7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083f788c-221f-4b31-92c5-b27dcd5051b4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322ac376-4c37-4608-b8be-931de5f40f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e4fa0dc-57ca-4dee-ac32-9b15a52a9251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d64060-f587-4f07-b16f-618ec5a5d690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbcda44-469c-42e1-be29-a3efbba94869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712435a8-8e3f-4947-8a47-dd43c1407c89",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f5bd8d-d25e-4e85-a566-a1801e8f7a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7c38a3-324d-40e9-935a-3b66752aac5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59b8a43-011e-4362-9417-f5401d4d75cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5f8b07-2e95-47af-a959-1aa21118dce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2e201d-0058-416d-a41f-ea90e4c02def",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb381b2-5a75-4350-9b0f-2fedc2fb83ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd9b566-f149-4c9f-a1f9-8dea265d3429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee22109-d510-4fff-9f92-971eec504e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52eaa8ee-f7ee-4e99-80e1-2bda7fb3371e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a296d6-0afe-4dc7-9a66-20f659f2b6db",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013efbb0-faaa-406f-abf3-97eb40a2eaf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73d6922f-61b7-4b0b-8886-c633f3fd56f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20c9092-a82b-4d71-88d1-7d721741eb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4725926a-60cc-46b5-ace8-1807399d3c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a759ca-e13c-46ae-ace5-1dda96c98e3e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837ade1f-7b31-465b-9d81-62d08a867e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9c0230-6e6f-4105-a785-0afe2962be9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5d105c-41cb-4802-805d-930a0ebb3599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d4cf20-cbd2-42d6-ae6c-a5580514f3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d89208-69c0-4c31-9576-9f38f64e8778",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcaeefb-17ef-4539-822c-d4717d295e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "375ffd38-1c34-4c95-968a-708fc0bfdeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e38b65-759e-4a56-8045-5c512213f892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2aff05-c429-43bc-8859-dcf1611f3cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5aff67-b005-4e5b-8ed0-38a6184c4c42",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cc32cb-ba42-4ed4-aa9c-e1aa7453b09d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd54047-6351-4cba-bffe-0cd93c61b40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e9e932-39fd-441e-bd97-ccb284c691d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06638981-ae1e-48fa-8359-1c36d1ef7a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6c049c-6490-4aa7-bb9d-afd7be8b4365",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8b2aac-5a32-4a6f-ac27-3a4c7b1ab6d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e387e4a-47c3-4ca4-8bf9-cad1e809e40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515210db-b2c3-44f5-ad62-322ec79753b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0499fdd-399c-4d4e-81e8-6773fd7b07e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecafdab6-0053-44e5-b944-29321fc6aae7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af118b4-baf5-45b7-ba5c-346a05ea7b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b132cab-0946-48eb-9f21-021a2007686c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde155a0-5a24-4c78-9168-9f28eefd51d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b801b9-1654-4d88-b288-cf8a8a3f5294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa58a44-d780-4121-91ba-76ce65a22c51",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4095825-300f-41bd-a31a-c5f7fe46f8c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e3dce9b-b2ca-40e2-883c-00aa3ac0e62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a38151-6438-4d18-80c9-25a7d446c3ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302e7244-5bb9-42fb-9f0e-72a45b533409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c90f1d-3900-4b26-9ae2-95cefd4d3e27",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2bdf07-f620-45af-8e12-9a7ab10e2ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4e034f-9316-423c-90dd-4658a165b0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8973c1-f408-4526-bfd7-a06852c044f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64be757-e120-4f79-8cc1-3fa5dd597ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c72fc4-68db-4891-9c96-3fd64f9bff5f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64be6a95-ef92-4ccb-b246-16b086048a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a78bc8-b3f1-4a1e-8cdc-a25b9c09f524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0765ee-e059-45d7-96ea-3e380a735e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556da69d-e171-4e7c-8ae7-db45c7bca867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3721ab0-d9a1-446d-bf9a-42489ffe5af7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fc67bb-4f74-4cff-9359-8b6828ef4a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7235c95-6960-44d6-ad52-8105194db784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0e15e7-025e-494c-a9b3-27cb52a108f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a80f68a-f987-4600-98f9-c4b07975ad8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663806db-bb4f-4e2a-a197-f656c455e13e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c75d6a-6b25-4082-a250-50dd5645aaf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d4ddb3b-0f7a-4465-94ee-356c9eac8849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc87719c-e542-40b4-af36-1382be08c450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66948028-668f-43a6-983a-8568b413ae5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5c22a1-bba3-4d06-ae4f-1a0f30d897c4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1654051-7ae5-45aa-9f8f-c07927f5cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5394b39a-badd-40d0-aad6-ff9b70db8e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efea306c-7d16-4dea-bdd6-2ab32f56223b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5987c13-681a-443f-b8e2-dd5d954b860d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d01c22-792b-49ea-b496-77373a79ec27",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb0d775-9c18-4858-a998-ad3bcc7b038e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5eea1a-1130-4b94-a65c-744e1c331ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4d97fb-b704-42dc-a00c-7724245e18f8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3594b3-ed1b-4b37-8c03-aef1f2216d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b648527-2d50-4fc9-9e3f-9df671a262e2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cd06e6-acd6-4bec-8d0a-74d85bc93c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8acf383-e042-453b-94a0-bb7cfc0eb020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84c8c74-0bb7-43d5-a47a-322ed980c94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a5c877-3ea3-4e15-b3d1-06eff1d11670"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7895e297-fd39-4da1-8ced-367282021aaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19e1b00e-2cc7-4058-bbe2-5c1779a40cbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ff76dc0-6d7b-4a45-a8bd-39358985df5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdfff6c8-ae39-4d14-b0e0-37f9ab5a6bb0"
                    }
                  }
                ]
              },
              {
                "id": "7be2d46c-0aba-4201-8ce4-7b17bcad8cef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1582b7bd-ebb7-42e8-be2e-474f427e943a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fef861-42b7-4be0-9ec9-d3a33620c138",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "899186a8-fb85-41fa-9af4-c99e0482ce5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9326e91-a59a-48d9-97dc-5a7f7f17616e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8eb06e8d-3961-4299-9e10-f4247d1c86c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e2265a-048f-4eb6-aec8-01133a9ceb5f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d572d32d-9478-43e9-b28f-1d6ab64c8373",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9036ef74-6a92-4df8-acd9-34bf0cf680da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f2c46b-03e4-4494-b032-b371c9da0a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f93bec7-39af-4faf-af73-c9d1510076a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "001e3d89-4f1f-4c69-be1d-f901ecf076d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28dbbe8e-ceda-42c9-98c0-87d63b04756f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "132e8b9a-3521-4158-8cda-52fe95fca748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fce5870a-d0b5-4aac-a702-4c87643635be"
                    }
                  }
                ]
              },
              {
                "id": "fef239e1-652b-4877-b942-88b69e192961",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "88a3388b-c3a0-480a-b846-3487ef011932",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d10374-5c98-410b-ad3e-a50245ff07ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3ee64c76-d495-4490-892b-3705cb7b0eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2494692c-ebee-4bba-9fe5-e916b82848cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4fcf98-7022-4bd0-9d54-b9009ba7367e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8d080527-6a01-4931-9049-c14e8ba84e9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "252c1883-b31c-4006-b242-9413622b571b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d39e3ab-07d2-4bed-92a9-32238b855fce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "599161da-39a0-4f86-9ddd-26a52113c6dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73b8096d-8365-4941-9304-e4176fa799c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "010bdc92-e3a0-4e69-9056-37a5444a55ef"
                    }
                  }
                ]
              },
              {
                "id": "6c372d16-4aeb-4a10-b302-96b71f7879cb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2cf31d4-df51-4460-a1b3-7b4d21355ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a249d61e-6b34-4489-941e-243d573fdf38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59febac5-0eec-458e-a713-c2889164bcfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d1d5e8e-884f-4963-b445-32b5209e440d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abaff0dc-a0c9-4d96-a7d6-8f19b594f490",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a02ee003-812a-42ef-b208-01586890b376"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "655c05c3-646d-421a-8ead-570222f6f736",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "409b400e-0721-482b-bfd5-ec70507dae6f"
            }
          }
        ]
      },
      {
        "id": "0a8285bb-5575-4371-9831-b4ee088619e3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8c3f8fc8-91f1-48c2-9a39-d2508fb3136c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "117f981f-5311-421b-b514-30fb279f0f04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecbc2097-a91d-4647-aca8-e4c61e6f1da2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9d335a-81b9-434d-ae3e-f11d9251ea6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32b503c8-49bd-4d0c-98ce-19781d9e4f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663db651-d470-4dac-afec-02fedc350c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b081099b-0496-438f-8218-d5548135015b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d953c13f-e0bc-4e04-8996-9bd5ec984f92",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e67213-a821-4342-9b16-0de180aac677",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "66612aad-35b7-4436-9199-baaefc49e00c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09970ebc-41df-4503-ba86-c34aa6168a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f3e6ce0-6561-47c6-bcf0-bd4f2850bc0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fb81868-aaf3-4537-97bc-50b0a5e5d748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22c64f68-d9ef-4a19-8e8d-7f4b70c5b37d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9fd36d8-f97e-4c7a-9bf3-401a571fe919",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "761bd2c7-79a5-4683-be57-1a7c99c641ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96488d94-fd12-4938-bf6d-339051382a21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2b29bad8-a81f-447c-b25b-75df21c6a4d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2f6281a-a774-4d97-871f-bfac8ff3cecb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81489af5-351e-4cdc-a8a4-2f70f4241d5b"
            }
          }
        ]
      },
      {
        "id": "d6e02c8a-b1ea-49ce-b5d9-f0ff449c8042",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ea93f9c5-3218-485f-9e03-bb5bd7a542dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a634de0d-b132-47d0-92b4-6dc0794d534e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bf77ac3-02b1-48c5-9066-b7f15187ab6b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416d8d33-b455-416c-8248-6c4a93c555ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e777a9a-ffd9-4ab8-816c-0d680b07e6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc5025b-7718-4d7e-b178-a3079dcd9808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "508cc154-bbfa-4a3a-a1d8-9ddc58dfe039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df403987-a8ef-4991-bf6d-04ae2072f08d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318d4299-b00e-45e8-bff4-e72b54880d3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dc450668-0f54-4557-9c73-35c83c932a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ac4d49-ee0c-40a4-9430-4cb8748bc458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "471e7963-6a28-4aa3-bea0-f9444ec448d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbadc71b-aa88-4acf-a8b8-e28c184d4bfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17c070ae-f2b9-4f5b-befb-91b36d27525f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bd525eb-31d4-4088-9bb6-53dc22b41e00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b727a21-b443-46b5-abe2-e4e0f10861a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d296b70e-af68-449a-8b01-c0d4a3aef19a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54429838-2419-4eb0-90c9-2462f079a186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d704ddeb-450c-43ac-b800-e8f1f03f5b97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1948832-4160-4437-b437-67456aa7a8f6"
            }
          }
        ]
      },
      {
        "id": "5ab45a08-fac5-400e-817e-c17ee7c9e44d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2d9f619e-9af9-4bbf-9025-5aed34c6f660",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e56a2fb1-77e2-4f07-bba2-a4291d925d6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "502acc3d-235f-4c2c-bb60-8e03e4222131",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667094b5-908d-46a7-80ad-31284daf9399",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97de62c4-bb8d-49ff-8d95-bfaf7bb642d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342d0dd6-13d8-4229-bfd3-2a5fa3e00b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bbaef3a-e1b2-4ff9-8d2c-b6a8de813799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6f8c28-d191-4c0a-9e3a-31e8921b7d3f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88fdf71-d440-4898-a6d7-801c9f56c2c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0df78371-3f04-4d07-bb21-0f88fb08eae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bdcd12-2ea7-4b35-bd25-8bbdebd8437c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d22f8ab2-1a2c-4c21-b849-bfc67bc7fc59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9c300ec-db0b-40eb-b560-422be44b83b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62477343-9ebb-43a1-be43-453f7cd95f5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd729ade-23d1-4f8b-a2c5-06d9b2f015ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac01c5e3-0d7c-4eef-a0c4-5588e74e7bb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59009e5b-b0ab-4f1e-95a5-4c7677e4ab29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "927865ac-4b6f-4997-826a-54b489038d70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "381535b7-89ff-43cf-b1b9-9623f6ce8a01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3de2d71b-37c1-4ed2-bf13-fb0651da83d4"
            }
          }
        ]
      },
      {
        "id": "eef156f5-4025-4cb6-b92b-f6e7e540309d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b60f9d53-e0d1-4350-a57f-5fc954bdb856",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70dd9923-ab27-4b25-b80f-a505f9d7ad95",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dfc8a3d2-abfb-460a-883b-e62c61557b55",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f9a2bc9-bf96-4e9e-8474-af298dadc777",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "071d218a-e316-4ce9-927a-e585af996167",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 654.9305019305019,
      "responseMin": 7,
      "responseMax": 5614,
      "responseSd": 695.3001206085613,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678754143302,
      "completed": 1678754325472
    },
    "executions": [
      {
        "id": "52150d19-62ed-4084-a380-8a18e2df6c33",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a93752d5-e90b-4496-8355-8816ce18764a",
          "httpRequestId": "6aa98079-c41a-4b40-97ef-76a463035402"
        },
        "item": {
          "id": "52150d19-62ed-4084-a380-8a18e2df6c33",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dce56946-4f70-4506-ba86-74541adc3678",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "52c9f6f6-2c43-4dd3-ae5d-e15d6f30494b",
        "cursor": {
          "ref": "17f632ce-82b5-46b1-a0b1-34d426b790cc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "50acbfcf-19f8-4b96-8f90-77cb14de7ca7"
        },
        "item": {
          "id": "52c9f6f6-2c43-4dd3-ae5d-e15d6f30494b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2c89d9a3-1e43-4431-8913-d7e70f2bebad",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "c13c15b5-0f7b-44f9-9eee-bc02784da394",
        "cursor": {
          "ref": "b2d9ffaa-d0a0-4c55-b055-00edde15585e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a616f621-903b-475d-b31e-c9ead794fb59"
        },
        "item": {
          "id": "c13c15b5-0f7b-44f9-9eee-bc02784da394",
          "name": "did_json"
        },
        "response": {
          "id": "d46cb2e6-7e8d-45dd-b61d-063af094b2ec",
          "status": "OK",
          "code": 200,
          "responseTime": 918,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d5a7bb-0061-4991-b7f5-ed6d7319d8cf",
        "cursor": {
          "ref": "1420311d-a3d7-485f-8914-b46cd8c652e4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d96fbf3-f13b-416c-84cb-7898c3f691f6"
        },
        "item": {
          "id": "b5d5a7bb-0061-4991-b7f5-ed6d7319d8cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "1266a6ec-353e-453f-9fae-82352fa04a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1315,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d5a7bb-0061-4991-b7f5-ed6d7319d8cf",
        "cursor": {
          "ref": "1420311d-a3d7-485f-8914-b46cd8c652e4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d96fbf3-f13b-416c-84cb-7898c3f691f6"
        },
        "item": {
          "id": "b5d5a7bb-0061-4991-b7f5-ed6d7319d8cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "1266a6ec-353e-453f-9fae-82352fa04a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1315,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b219ba-9a4c-4b3a-b4d6-ca09f535e880",
        "cursor": {
          "ref": "d10b879d-f03e-4fbf-9191-07c1687461dc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5dd268b0-7250-4bf0-a0cc-0d491b43d68c"
        },
        "item": {
          "id": "83b219ba-9a4c-4b3a-b4d6-ca09f535e880",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1af4588f-9dd4-4c93-9569-afb9f5809b11",
          "status": "Not Found",
          "code": 404,
          "responseTime": 656,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b84dfb1-8fa4-4a00-9f69-6e2b01cbb2d6",
        "cursor": {
          "ref": "5b3d29cf-2bc2-4e7d-b6da-7bb7b51d21e9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "26b429c3-9e84-499c-909c-abccbc36851d"
        },
        "item": {
          "id": "8b84dfb1-8fa4-4a00-9f69-6e2b01cbb2d6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "852e495c-6f22-46ea-bd36-2a3ed0a9c49f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 787,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c6a48d-dafd-4e07-89ec-f27fbd125b46",
        "cursor": {
          "ref": "3186423e-6563-4bac-9fad-97e0719ec9d5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e4a2d91d-42a8-4d38-9e52-9534575f96a8"
        },
        "item": {
          "id": "a7c6a48d-dafd-4e07-89ec-f27fbd125b46",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "64cb44ec-8a92-4582-8498-fe9dfbb298a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c2be76-259a-4b66-802c-75f7dbb0dfa3",
        "cursor": {
          "ref": "059df583-dfdd-4d00-91b6-1980ae56e831",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f5bddb56-7806-488e-b079-d807e4ce2f24"
        },
        "item": {
          "id": "c5c2be76-259a-4b66-802c-75f7dbb0dfa3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "82d9f827-a465-4b5d-aae8-cdf469656bb3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c2be76-259a-4b66-802c-75f7dbb0dfa3",
        "cursor": {
          "ref": "059df583-dfdd-4d00-91b6-1980ae56e831",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f5bddb56-7806-488e-b079-d807e4ce2f24"
        },
        "item": {
          "id": "c5c2be76-259a-4b66-802c-75f7dbb0dfa3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "82d9f827-a465-4b5d-aae8-cdf469656bb3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af199a7d-994e-4c5c-a434-0c169a1e8e96",
        "cursor": {
          "ref": "5bb2ca98-e44d-40a0-aa96-2a2b1ea047ff",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "122e6b5a-a12e-4f1e-9131-687b0f4c6a2b"
        },
        "item": {
          "id": "af199a7d-994e-4c5c-a434-0c169a1e8e96",
          "name": "identifiers"
        },
        "response": {
          "id": "e0579f16-b048-4a8c-a5ef-45ac42509379",
          "status": "OK",
          "code": 200,
          "responseTime": 1004,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b00a04a-68d5-4ed4-8a86-cbad98f8dbef",
        "cursor": {
          "ref": "dbf31337-a779-4d22-8d38-3a1bd3d641d6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4d735990-57ee-44f8-8ea6-b40dc8273694"
        },
        "item": {
          "id": "8b00a04a-68d5-4ed4-8a86-cbad98f8dbef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "61cd18fa-082e-4fef-acc2-734970253a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b00a04a-68d5-4ed4-8a86-cbad98f8dbef",
        "cursor": {
          "ref": "dbf31337-a779-4d22-8d38-3a1bd3d641d6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4d735990-57ee-44f8-8ea6-b40dc8273694"
        },
        "item": {
          "id": "8b00a04a-68d5-4ed4-8a86-cbad98f8dbef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "61cd18fa-082e-4fef-acc2-734970253a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f976871d-00ff-4feb-b3a1-3825e61cc50e",
        "cursor": {
          "ref": "8feb58b6-db95-421b-9455-6b46711938ab",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "098619bf-d02b-4439-8fbb-a8e71ae745da"
        },
        "item": {
          "id": "f976871d-00ff-4feb-b3a1-3825e61cc50e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b0d093f4-eff0-48ab-a6d8-cf0738a2e5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a68c9e4-940e-45f5-a3ed-3097d3fea8ad",
        "cursor": {
          "ref": "a5c1a89b-4df0-4221-891c-a1cf252ebcfc",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "feefd9a7-a9e5-4848-ae0e-e744ff6bde72"
        },
        "item": {
          "id": "4a68c9e4-940e-45f5-a3ed-3097d3fea8ad",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cab93fa7-5116-44b2-8262-699f6a84c40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807e4725-cdef-42d5-8841-828779c1da25",
        "cursor": {
          "ref": "b3cb30a6-8126-4225-9cf9-f227c3a44308",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e859ac2d-5627-4848-af51-4e1931244bfb"
        },
        "item": {
          "id": "807e4725-cdef-42d5-8841-828779c1da25",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "13ce0a3b-2825-433b-8355-9f463fe20e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08a8f5e-644c-4df8-86c5-df25fe77f98b",
        "cursor": {
          "ref": "b7cc5316-c55e-4ee4-b670-0102d214ba3c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5e0dd10a-c58a-46de-a4d9-856c636e199c"
        },
        "item": {
          "id": "b08a8f5e-644c-4df8-86c5-df25fe77f98b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3fabbfa5-6c3e-4ac0-a8b2-a08a641a68b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83d83db-ac11-44fa-9d45-533e20914ac5",
        "cursor": {
          "ref": "d166caec-4477-45c9-b19f-633c1ef49919",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "da41abad-79f1-4f69-8b73-472735091744"
        },
        "item": {
          "id": "f83d83db-ac11-44fa-9d45-533e20914ac5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fc849549-a78b-4fa2-aa3c-acd42d159e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e47e03d-730f-45f3-8d7d-6624b7337fc0",
        "cursor": {
          "ref": "6f2bee8a-0053-4cf5-b29d-e3c858f126f1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "74b557b4-7e2e-40cc-a0e3-5d9d68dd181b"
        },
        "item": {
          "id": "7e47e03d-730f-45f3-8d7d-6624b7337fc0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f3326520-8456-48de-9b44-02336610c078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d2edf0-7bbb-4659-8fc8-a35211f046c5",
        "cursor": {
          "ref": "c44e9700-a848-42e7-9607-83298576898f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f0f9ba6e-ed99-4095-81ff-721ae17d8c1d"
        },
        "item": {
          "id": "91d2edf0-7bbb-4659-8fc8-a35211f046c5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "51e36522-41df-4ea5-ad85-7d914c4eb2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d7db0-52f7-4fbb-accb-a534b4654109",
        "cursor": {
          "ref": "afc98efa-b8ed-43dc-8ef9-eadf9c726a64",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc9d925f-18c1-40a5-99a3-814078421ed8"
        },
        "item": {
          "id": "f38d7db0-52f7-4fbb-accb-a534b4654109",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8f34d78b-9940-4859-9e9d-d5971fbb0734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d4a4e9-6f2a-47e6-a7c1-dcac34b52777",
        "cursor": {
          "ref": "82d5a7c2-981c-4e90-bdf8-1546be639e01",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "42cc8f73-a96a-44e9-a76f-4812fb8cb99b"
        },
        "item": {
          "id": "40d4a4e9-6f2a-47e6-a7c1-dcac34b52777",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dd7e0211-70df-4131-b4c8-182ea9a0a2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bde513-17c3-44aa-ae38-563167bc7b21",
        "cursor": {
          "ref": "b0c0deee-ad29-4cd8-a795-4e290bd167bb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "25e60151-d238-4be6-8a1a-273cad084aa8"
        },
        "item": {
          "id": "50bde513-17c3-44aa-ae38-563167bc7b21",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9d61f895-68bc-4000-a871-063bc3485b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51f996d-71e4-47de-9a19-4e1e3a9dc483",
        "cursor": {
          "ref": "e84d13c5-c4de-4d18-9178-1af8c76b40e7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "31767879-2ef6-4dd9-9ed7-564eae2fd15b"
        },
        "item": {
          "id": "b51f996d-71e4-47de-9a19-4e1e3a9dc483",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "be996836-a473-42d4-9413-8bff89df631a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f560cb9-cea1-47f3-a87c-c1220624e769",
        "cursor": {
          "ref": "6347d6ed-0fde-4f9d-92de-44c4e01c0683",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7a5e89c7-f520-465d-a26b-13fa73c77873"
        },
        "item": {
          "id": "0f560cb9-cea1-47f3-a87c-c1220624e769",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "37bb1fed-16ad-46fd-9b2c-03c3f164adb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f316c584-c742-421b-a36f-b4d6cc1213a4",
        "cursor": {
          "ref": "637099b3-c749-42ae-ae3a-07404568f1f0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d98fb238-608c-4e91-99f1-9283add09dde"
        },
        "item": {
          "id": "f316c584-c742-421b-a36f-b4d6cc1213a4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "87ba7837-f300-424f-994b-c9bc2622e13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c749b4-318d-4f03-8651-2fa0f763c347",
        "cursor": {
          "ref": "1bacfb1c-e46f-4378-bb48-cfe0705afd84",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "30a2924c-5ebe-4b17-8efd-db8d19f4756b"
        },
        "item": {
          "id": "78c749b4-318d-4f03-8651-2fa0f763c347",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e0ec4cd2-959e-40e6-af68-4a410b5cd6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f22dfe-1dee-4804-9e8e-05d569223c6f",
        "cursor": {
          "ref": "31a3e265-390b-4947-a5a2-5f4be0ae09ba",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "929b5ff6-671d-479b-879f-547f29b401b8"
        },
        "item": {
          "id": "36f22dfe-1dee-4804-9e8e-05d569223c6f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b92d9984-4aec-4947-8b2a-81ffcf7770c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e0f0f3-c5f5-4d33-b968-ba433be5d23d",
        "cursor": {
          "ref": "1b21a94d-5d8c-48d1-a71f-b0efe1de52c4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8fd262e1-123e-4780-9979-71883a32875b"
        },
        "item": {
          "id": "30e0f0f3-c5f5-4d33-b968-ba433be5d23d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3c9f4702-3a6c-4d3c-94cb-09c6e479f196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c26675-9147-48be-af9d-555be5dfdcbe",
        "cursor": {
          "ref": "1d361372-46b7-43b2-b8cf-4b9943090e74",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "201eb86e-defa-49c9-ad15-2937f5ea9e32"
        },
        "item": {
          "id": "26c26675-9147-48be-af9d-555be5dfdcbe",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0880e9c3-a66f-4c40-be91-e52ef230f32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d4c8c1-ea4f-418f-9e5d-f3418bc09416",
        "cursor": {
          "ref": "b784aa58-3c4a-431b-80c2-6de33090c02d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d47e8b04-ff46-449a-a177-51f6375dd65d"
        },
        "item": {
          "id": "69d4c8c1-ea4f-418f-9e5d-f3418bc09416",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d78886d0-c2c1-4815-acc7-5b17e0c3962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746c9058-4d4e-4e37-9029-3abb5cbef7ca",
        "cursor": {
          "ref": "e29ce868-000c-4bca-a0a4-ea68fddf8b9f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ed5d2178-33aa-4fcd-be82-05929152d62d"
        },
        "item": {
          "id": "746c9058-4d4e-4e37-9029-3abb5cbef7ca",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7489ea3e-1a33-4beb-949b-a99a84c0d6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e824e17d-9084-4fcd-96c8-5d25b8a0afe7",
        "cursor": {
          "ref": "f7a445ad-57ec-4ccb-8732-00df212fcc6f",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1ec951f7-6fef-4471-94ff-bd4e71c05289"
        },
        "item": {
          "id": "e824e17d-9084-4fcd-96c8-5d25b8a0afe7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "46251886-1ea1-4610-b4d6-4e912a40bb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51b3b70-8fe6-4662-806b-16fe5f939db7",
        "cursor": {
          "ref": "379b0981-74ae-4a8e-a340-e18887975f53",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1df5b204-a45d-43b8-b6c4-95591f8ef25a"
        },
        "item": {
          "id": "e51b3b70-8fe6-4662-806b-16fe5f939db7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0a8b6cdd-c4dd-48e4-b673-961de115d6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85693a05-9c74-4dad-ab1d-08a0d23a3d9d",
        "cursor": {
          "ref": "90fb51be-82e7-48b4-be63-e23a1f0aaff6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c56cccca-e0a3-457c-8e87-cecf144587b2"
        },
        "item": {
          "id": "85693a05-9c74-4dad-ab1d-08a0d23a3d9d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2ad25eab-5670-4fc9-b244-97842d483955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8097c250-9064-47c2-90d0-083674feeafc",
        "cursor": {
          "ref": "28ba6c46-d874-4170-9e66-fa39400e1446",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "74e18256-9cd9-4107-a6ff-b47469dcb940"
        },
        "item": {
          "id": "8097c250-9064-47c2-90d0-083674feeafc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "83f77cb3-e4b8-4f0e-9452-f5c8d64cfa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4ebd35-47ac-4bcf-8e52-125b74c4f90a",
        "cursor": {
          "ref": "7b0bae2f-261e-43a5-9e96-45bc924acd51",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c7858d25-be14-434b-b802-758f234e6048"
        },
        "item": {
          "id": "fd4ebd35-47ac-4bcf-8e52-125b74c4f90a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5090d292-793d-4bb8-965e-089629a82c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da99c0e0-1028-489e-8446-995914384035",
        "cursor": {
          "ref": "11d45d90-9330-4b9c-9916-ff30b776c9ea",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "130f78ce-750d-47fb-a3ab-d60fcec61af0"
        },
        "item": {
          "id": "da99c0e0-1028-489e-8446-995914384035",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "84efef88-e8c8-4b61-828e-832f90ad58d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1094,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928f0417-8fbd-446e-88ba-fce793e4e1f1",
        "cursor": {
          "ref": "4517529a-f9c1-4220-a15d-f5457fceb882",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b2981ad1-70ac-4f42-bc10-c65ab521cd63"
        },
        "item": {
          "id": "928f0417-8fbd-446e-88ba-fce793e4e1f1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0b563602-8b47-4aa9-b221-a202106b9fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6580d312-e4e9-4013-9714-8bb544cf5910",
        "cursor": {
          "ref": "c902ba8d-b525-4ce2-afb4-887cfaa27867",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d11a2ac8-ff80-4169-a980-809c26a685d9"
        },
        "item": {
          "id": "6580d312-e4e9-4013-9714-8bb544cf5910",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a6a565c8-e026-4019-89a5-4d73d9c3acc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8af2c4-2f4e-4b57-a616-3eec54eb7ca5",
        "cursor": {
          "ref": "7c030305-33f1-43c4-bf01-1261ac9aa8f7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "92338c71-f69a-4520-a64d-beafca37df7b"
        },
        "item": {
          "id": "aa8af2c4-2f4e-4b57-a616-3eec54eb7ca5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8b3e58a2-cc90-4dec-9f9a-0ed4a68b9720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75537fd5-3c34-422e-aff0-6812be8ec1b7",
        "cursor": {
          "ref": "cd9a16c2-7e24-4c92-bc81-b3033aa9a2bf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1e78ea8f-a095-493f-92e4-045282761282"
        },
        "item": {
          "id": "75537fd5-3c34-422e-aff0-6812be8ec1b7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "33e18081-3c83-4835-b5f9-9e1c428e0207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa59d384-9919-4f60-b0de-61431df77b0b",
        "cursor": {
          "ref": "6e002050-2d19-46c7-b8a4-842ac8f2147f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "91aedc8a-7493-4495-9997-ff5c9def972e"
        },
        "item": {
          "id": "fa59d384-9919-4f60-b0de-61431df77b0b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6f8a1ee3-0622-4ae2-8bb6-81abcc327563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c92e5e0-14ed-4d66-af8b-2cef91a6fd06",
        "cursor": {
          "ref": "b2a48a4b-9f6d-41d6-bf4f-c56245aac8a7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "80482f75-a6b2-45ca-b7d6-73b57bc945ac"
        },
        "item": {
          "id": "4c92e5e0-14ed-4d66-af8b-2cef91a6fd06",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5ddca534-1a57-4d0c-a97e-ab946a389bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc779e2d-8183-46e9-9791-28f7dc3f197b",
        "cursor": {
          "ref": "65730bf4-ef4d-4e42-a2f1-a71e40adedb8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "946fb1ea-6bb2-4949-bbc2-ef3206368da8"
        },
        "item": {
          "id": "cc779e2d-8183-46e9-9791-28f7dc3f197b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3678ecca-3a5e-403d-85c1-60c5f6928767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f92cd-04d6-439f-ae04-0df8b6941800",
        "cursor": {
          "ref": "17e87cf1-658a-4318-afca-913cb4a57ada",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "40b17ce1-632d-482f-ba69-3156c18c2227"
        },
        "item": {
          "id": "f29f92cd-04d6-439f-ae04-0df8b6941800",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "756a2441-4836-4d34-9417-0358e8b184e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd3023b-c5b4-4fe6-8f65-e020a2d1b42e",
        "cursor": {
          "ref": "8905096c-5858-44b3-a01f-67c60bd035c5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "510e379e-9954-4629-b004-c5c547d8db1e"
        },
        "item": {
          "id": "ccd3023b-c5b4-4fe6-8f65-e020a2d1b42e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2a722c44-26dc-4b96-a1a0-3a4a4489e86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1077f46-997b-47da-ae44-6c8f28268a1d",
        "cursor": {
          "ref": "2f003342-704c-4087-9e9d-d8a3b79345bf",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "19b3f70f-26d8-4fdc-92c0-2ec0d1bfc8b8"
        },
        "item": {
          "id": "d1077f46-997b-47da-ae44-6c8f28268a1d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ae3ef66a-03d5-43ce-b6de-8ea36b71682b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 694,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac7f6ce-376a-47af-885d-a3ec0685c7bc",
        "cursor": {
          "ref": "5972fd9c-9d0c-4373-a7a3-1ac7809fb739",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "57e80f8e-ee95-4b31-b5db-60a6c032fc9c"
        },
        "item": {
          "id": "1ac7f6ce-376a-47af-885d-a3ec0685c7bc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "572a5e29-fb73-4064-b403-e243c52d050a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849e4cc8-e3bd-45ea-b4f3-238e12efb0ca",
        "cursor": {
          "ref": "280def61-9092-4e93-8a2c-7f650d311e14",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "256f40f7-82fa-483b-9106-d2f9cb1a94f2"
        },
        "item": {
          "id": "849e4cc8-e3bd-45ea-b4f3-238e12efb0ca",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bf0a66d6-ea24-4317-8b37-3571f1630873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c434ee0d-af4c-4a0e-b935-843b9d2259e9",
        "cursor": {
          "ref": "aad2c992-856f-4ed7-8e65-068bb57ab885",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7404b940-b195-4859-96c6-3c2b2f00a8d1"
        },
        "item": {
          "id": "c434ee0d-af4c-4a0e-b935-843b9d2259e9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c1bf6ecd-7789-4262-a89c-10c05d98c650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1072,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af36256-101e-44c2-9c60-ca858318f42c",
        "cursor": {
          "ref": "1145156f-744c-470f-a1ce-4aa25ee93313",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e9b0be1a-d532-4d8b-a77f-162445037262"
        },
        "item": {
          "id": "2af36256-101e-44c2-9c60-ca858318f42c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "02ab0cd2-70a4-427a-91ef-cdab95af6de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7afdd4e-b6e2-4e0b-b9b1-381b0cc8b3e9",
        "cursor": {
          "ref": "91131d49-b9cc-4e01-bded-3735091daefe",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c76d691c-1583-4ade-9ad2-fe1aa612ce64"
        },
        "item": {
          "id": "f7afdd4e-b6e2-4e0b-b9b1-381b0cc8b3e9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "20a08b7e-47cb-478c-8da3-c01b905ec5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1118,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f457f17-bdce-40a3-9f7f-a0161f28b1e5",
        "cursor": {
          "ref": "f4184222-538c-4488-8e7d-972f453bdd7f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "277695b2-3fc7-4288-9627-b83438744911"
        },
        "item": {
          "id": "9f457f17-bdce-40a3-9f7f-a0161f28b1e5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f61b3fd6-7d1a-4766-a23a-97dbd1a260ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebc4c07-7fba-4d20-a335-88d81525e40d",
        "cursor": {
          "ref": "a74eb8a7-1c33-46d4-8e15-eb22daa8c896",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a995b162-2ca0-4424-8eda-6b0445c942d7"
        },
        "item": {
          "id": "eebc4c07-7fba-4d20-a335-88d81525e40d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "da451cd9-c62d-4614-ac71-546c60438fe4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 656,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95504167-040b-4ffa-8634-f4edfb3b1e80",
        "cursor": {
          "ref": "468bab93-741e-47e0-baed-ff41eab24047",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e3af1212-b3ad-417a-973c-9b979f1dac98"
        },
        "item": {
          "id": "95504167-040b-4ffa-8634-f4edfb3b1e80",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b1fadabf-25c4-4262-be6b-0e8b734d9f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b83056-36e1-4fc5-8871-075cc7cebba2",
        "cursor": {
          "ref": "c3fd31d4-78ef-4789-bb96-2db7d54e0698",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "834a701d-a60d-420f-915b-f9b1e767000e"
        },
        "item": {
          "id": "f9b83056-36e1-4fc5-8871-075cc7cebba2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4566bb87-600d-4e58-949e-6df81f773515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874a8b58-20a4-4f7c-9881-98cf3135ddda",
        "cursor": {
          "ref": "2fe2b547-7d46-4a67-a92f-be5e149d314c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "80bab1fb-0eef-4153-a35a-99a7cc66b68a"
        },
        "item": {
          "id": "874a8b58-20a4-4f7c-9881-98cf3135ddda",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b166f05f-50ac-45b8-8036-4f1c94d2b283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80a03e1-4754-4e9b-90d3-84c985cd8514",
        "cursor": {
          "ref": "69814414-4d6d-486b-9bc5-0a6fc7562dba",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cb6401a1-a13d-4b64-a020-a730690b2c6c"
        },
        "item": {
          "id": "a80a03e1-4754-4e9b-90d3-84c985cd8514",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2f3a21ef-3fd1-44c9-9cb3-11fe5d689cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c383a166-5abb-4fad-8c70-6cb905fc8d2b",
        "cursor": {
          "ref": "ad0207e6-466e-4c8a-b421-d1de9fe0d0bc",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "572a3646-3778-4686-ab23-1e45940d1184"
        },
        "item": {
          "id": "c383a166-5abb-4fad-8c70-6cb905fc8d2b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bc954835-5d5e-48b8-954f-efe4aa0a1b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16da834-2e28-45eb-9dab-86b833ccac14",
        "cursor": {
          "ref": "d361f073-1e8c-4ca5-8c87-93e3b0903356",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e9b94e3a-42ab-4124-884f-3fa2f280d7a9"
        },
        "item": {
          "id": "e16da834-2e28-45eb-9dab-86b833ccac14",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ea4cfc34-4b79-4ca7-9f22-a562de833baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7c826f-0259-4402-aca4-08ad24551bf1",
        "cursor": {
          "ref": "e0230314-c23e-43dd-898c-6a56c7404554",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d6761f72-8435-4793-86f0-1454be8f18eb"
        },
        "item": {
          "id": "ca7c826f-0259-4402-aca4-08ad24551bf1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fdd5da13-2349-4e96-9ed8-4c36bd2879f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6692e79-96ca-42ef-9a3a-5e1ca5a74afa",
        "cursor": {
          "ref": "900b9b9b-7074-4430-b16d-d7eb075f229e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "630d6ebd-1d90-4a9d-8b99-6592858ecea7"
        },
        "item": {
          "id": "a6692e79-96ca-42ef-9a3a-5e1ca5a74afa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f0147bb4-23ae-47a2-9785-3793555b1919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07305d72-9311-4f10-9d76-6630544b86ac",
        "cursor": {
          "ref": "6c7e45e2-cfe7-4cd3-a549-9e94329aa475",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3f805c9e-b0f3-4e54-86aa-8a7bfb4c859d"
        },
        "item": {
          "id": "07305d72-9311-4f10-9d76-6630544b86ac",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "288c25c0-b17f-434c-ab9c-3215e7f25663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94804b1-243e-4042-a75c-c3a76b090bd3",
        "cursor": {
          "ref": "94ccb4c3-0593-45c9-9ff1-c33b220ec39e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "83a69731-2b2f-4479-9000-5519e7ed2aa6"
        },
        "item": {
          "id": "f94804b1-243e-4042-a75c-c3a76b090bd3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e8ba9ef7-5ade-48df-90a4-7698607f70e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3a388e-367f-49e4-80a7-b807da8d4f0d",
        "cursor": {
          "ref": "c44626fa-774d-4ad2-a08e-2b0140efa221",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "526cc54e-4773-463c-a589-3cab36cbd814"
        },
        "item": {
          "id": "ff3a388e-367f-49e4-80a7-b807da8d4f0d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "119b8901-6e7d-4f05-983d-f2bc8e34c0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e00cce-fb86-4c32-9eee-52ab9077a267",
        "cursor": {
          "ref": "350871fb-7464-4927-86b1-548d304860f9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5c8e274e-10d1-41fc-aff3-af82443a0cf4"
        },
        "item": {
          "id": "c6e00cce-fb86-4c32-9eee-52ab9077a267",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c93c2777-ce4b-4133-8fe6-114131d8ad6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b4c17f-cda9-46f7-8538-e4906aa6078b",
        "cursor": {
          "ref": "86465709-1e15-462f-ab29-e5dd10d83349",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dd6de017-e3d8-43ed-b8ec-8be0f478879f"
        },
        "item": {
          "id": "26b4c17f-cda9-46f7-8538-e4906aa6078b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c2837508-83c5-4d1c-b1d8-ad86491a19d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f90d7a6-fdec-4211-89dc-3401e4d4ac9c",
        "cursor": {
          "ref": "9476b196-b0eb-4455-8c1d-bb786e89b9f1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "db0cb770-b2a8-41dc-b577-3c32c1a69023"
        },
        "item": {
          "id": "3f90d7a6-fdec-4211-89dc-3401e4d4ac9c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "332761b9-8469-4b73-bdaf-c038ee42c9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b96172-bf79-4421-9826-e0dbe67a05b7",
        "cursor": {
          "ref": "1a284dfb-fe00-40cd-8544-92c530e66fe5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c30f43b3-0fa3-4be2-9681-b5c2ed1f6e49"
        },
        "item": {
          "id": "44b96172-bf79-4421-9826-e0dbe67a05b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bde4a7cb-0deb-475c-ad41-3f09f7167406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d906f14-ad9b-4268-be6f-33ea7f1bed76",
        "cursor": {
          "ref": "0d41988a-eeb9-444d-9c26-137b19ed9472",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "12ab07dc-9c7e-4145-9b5e-be3793b64710"
        },
        "item": {
          "id": "9d906f14-ad9b-4268-be6f-33ea7f1bed76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a4fca81b-c22f-4964-90be-cd30277fe838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b45598-6eea-4493-8ddd-34c02a7d041d",
        "cursor": {
          "ref": "2456d2d8-e5f7-4981-8b04-1250cac29d4b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "da94ea7d-3368-4231-a67b-e250827c0b63"
        },
        "item": {
          "id": "40b45598-6eea-4493-8ddd-34c02a7d041d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8557e2df-47f0-474a-972f-cecf1336d2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628e9f2e-e06a-4a01-b0ce-facd0ddfdfd6",
        "cursor": {
          "ref": "301420fc-ec8c-4006-806b-110173ba18bb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b6f4af5e-7572-4a8a-81cf-91540d2f646d"
        },
        "item": {
          "id": "628e9f2e-e06a-4a01-b0ce-facd0ddfdfd6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4f3c07aa-475f-4e15-b39b-1747efb5b830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658502ec-f010-4504-911f-b7b199523741",
        "cursor": {
          "ref": "26d58eba-2c4e-4a86-9cb4-72a4febf2116",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c4783267-f7a3-48ec-bdd2-46fb5a345157"
        },
        "item": {
          "id": "658502ec-f010-4504-911f-b7b199523741",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3094a35a-9565-4443-9d1b-e4e3108f5802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30ae325-0993-4ec5-a337-00a5cf543b9a",
        "cursor": {
          "ref": "087f1917-2dfb-4d92-aabe-e3f65b38ad71",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c615646d-14d5-454e-b92d-b5b265002916"
        },
        "item": {
          "id": "d30ae325-0993-4ec5-a337-00a5cf543b9a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1f1ad107-887a-4edb-9724-83a8b7f7865f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca3cf5b-989f-47da-a2c3-2d84c6990a8a",
        "cursor": {
          "ref": "ef0d608e-1dcd-480e-9adc-a7c80a32b241",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b0dcf163-d023-4034-98cf-5e715f69fb96"
        },
        "item": {
          "id": "6ca3cf5b-989f-47da-a2c3-2d84c6990a8a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5ae4a040-db59-43cc-995b-d5d2ed887d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065384a0-0d1e-4567-868d-b60bf6844a21",
        "cursor": {
          "ref": "2b121f95-7b49-45b3-9109-69b3eed6588d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1e07dd5b-4f9c-4b3a-ada3-b40495a7ac61"
        },
        "item": {
          "id": "065384a0-0d1e-4567-868d-b60bf6844a21",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "97f3a523-486c-4796-8729-f1415babb46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff12cd3-cd03-4b7e-90bb-11ec7621addc",
        "cursor": {
          "ref": "2f8fad68-ee71-41b7-b149-29313d0c2a45",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dfd82146-028c-45d1-a472-bf7773de0e9a"
        },
        "item": {
          "id": "5ff12cd3-cd03-4b7e-90bb-11ec7621addc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e8c88036-e858-413c-8b85-6df9289a92de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ddf990-cbe0-4dad-ba28-2475bf683245",
        "cursor": {
          "ref": "493f50b7-6b73-4b71-8221-86e850ce0853",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "527fe89d-e7bf-4598-9950-9d69a05ebe22"
        },
        "item": {
          "id": "80ddf990-cbe0-4dad-ba28-2475bf683245",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3474a40f-acaa-4e8c-8bbe-90d9f1594125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b1874d-e97b-49d3-aefe-b32e2c03757e",
        "cursor": {
          "ref": "6a481b75-1c3d-4110-93c1-c1e37747e0d4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1c4e3b43-ec9a-48bb-b49f-af190ad39dac"
        },
        "item": {
          "id": "a6b1874d-e97b-49d3-aefe-b32e2c03757e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fd8d1a3f-81e6-4a92-a0c9-043720776c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4cb9b8-90bb-494f-84cc-b6529067cc96",
        "cursor": {
          "ref": "1581a34d-23f0-40ca-bde9-a7e773fe028d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9e826c59-4100-4611-8789-d36120ee8a6a"
        },
        "item": {
          "id": "cf4cb9b8-90bb-494f-84cc-b6529067cc96",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3ed668fa-a9bc-44f7-b820-53335105a046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1396673e-271e-4b59-9d46-099060ce8c1c",
        "cursor": {
          "ref": "a4a4384a-af5a-405f-abec-f800190c5026",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "24a4960b-db1e-43a3-9fab-b1ba6208b7b4"
        },
        "item": {
          "id": "1396673e-271e-4b59-9d46-099060ce8c1c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "93db2f72-4936-424c-9378-7c7c9ba3f9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356968f8-0594-424e-848a-820820b341c0",
        "cursor": {
          "ref": "f5d6e287-bf6e-4769-a2a4-4598931f7c6d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5350cc06-6f71-46b3-bec7-9f2da21ea265"
        },
        "item": {
          "id": "356968f8-0594-424e-848a-820820b341c0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "edd5dacb-3398-4bec-92a8-89e899961f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c4843c-f4b7-4fb6-9328-ad0283e4b875",
        "cursor": {
          "ref": "afb74136-86ea-41bb-b10f-a2268d357833",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "19671e18-39e6-4d23-8960-b2f3f1416334"
        },
        "item": {
          "id": "b2c4843c-f4b7-4fb6-9328-ad0283e4b875",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2d9e7bcb-fb7c-45f8-bf7b-9edf0546ad80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d56f8e2-2497-476e-a78e-711dec63d224",
        "cursor": {
          "ref": "b8a7233b-f617-4e01-b950-0e66a1981317",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6753c0ac-d533-4894-8852-ba32c21589da"
        },
        "item": {
          "id": "1d56f8e2-2497-476e-a78e-711dec63d224",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "27082ad0-1ebd-42d0-827d-c42688da5e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f038185-a199-4a79-b95d-95c5898546fc",
        "cursor": {
          "ref": "af76a576-d7e6-4291-8b64-828a81327e95",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e7980a9f-566b-45fa-8490-2c0663b20eb3"
        },
        "item": {
          "id": "3f038185-a199-4a79-b95d-95c5898546fc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "25cd3d85-ac54-4998-8476-ef34128fd171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b624b5-1f94-49f1-b58c-dab077ca72a6",
        "cursor": {
          "ref": "54029295-1061-4476-8162-1b2ab269feba",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c9683937-f103-40a0-92e2-4eee4bfcf5ba"
        },
        "item": {
          "id": "10b624b5-1f94-49f1-b58c-dab077ca72a6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "59c2bc86-7c3c-4d48-be51-f05f3d812dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09e8ef1-9063-405b-b506-a771a29d8e8f",
        "cursor": {
          "ref": "0cbf4066-511f-424d-8074-4b5f538d44c2",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9d318041-f39e-41e6-b957-2044ad970c06"
        },
        "item": {
          "id": "a09e8ef1-9063-405b-b506-a771a29d8e8f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c98026b8-86d4-4588-9f73-df1132dcc8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a99059-6aaf-4b54-abfe-fa51ef5ed7c7",
        "cursor": {
          "ref": "0a012d5a-000f-4d9e-b8b1-a357a9337977",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "30736896-fd04-4a50-9aee-626938f7a92f"
        },
        "item": {
          "id": "f5a99059-6aaf-4b54-abfe-fa51ef5ed7c7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "17064a0b-39d3-4f9e-9cb2-4456180e8308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404f9a00-8c33-4689-ae75-9c383395ce0d",
        "cursor": {
          "ref": "0740277e-e2ce-430a-a94c-949f5f687050",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8aff49f5-89a1-48dc-80cf-dbed1ff457ba"
        },
        "item": {
          "id": "404f9a00-8c33-4689-ae75-9c383395ce0d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a09e786a-5215-46d5-bd3b-3176cc17cd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5238df-6589-4b2a-9674-10a247685c05",
        "cursor": {
          "ref": "c12b96cc-ac1e-4e1e-bf84-7b1d6a229681",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c930c355-0a48-4515-971c-6dadf925d647"
        },
        "item": {
          "id": "2a5238df-6589-4b2a-9674-10a247685c05",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ee7172fc-903f-4b46-9b2a-b2b3436fb63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad72df43-4558-4c25-a400-5de2a3476575",
        "cursor": {
          "ref": "1831403d-4bc9-4ca9-a805-4e7ff900cb9b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8df34b53-49c1-4573-a334-633672f84ab3"
        },
        "item": {
          "id": "ad72df43-4558-4c25-a400-5de2a3476575",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1298e3da-5bb2-4916-b461-f05fcf8729d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1880a968-d41b-4001-a686-2e801aa7bb34",
        "cursor": {
          "ref": "5b0bdd91-2a9c-403d-9b17-55109236ecbb",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b9d19dda-55b4-4325-aa1c-625d7efab5b6"
        },
        "item": {
          "id": "1880a968-d41b-4001-a686-2e801aa7bb34",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "69bf0db2-b565-4b21-b5fe-21e909ac876e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd64b89-38d3-4e21-8cc4-1b7fbb7c5d3a",
        "cursor": {
          "ref": "de3952cc-5cd8-4e67-95ae-958d0d8aaeac",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a5d7ba82-dc7e-4170-be10-4228b0815a76"
        },
        "item": {
          "id": "3cd64b89-38d3-4e21-8cc4-1b7fbb7c5d3a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "40644e85-226d-4fc5-a8d4-0e0983a1c086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64758c6f-d391-4315-98cb-002fdd7e6000",
        "cursor": {
          "ref": "d5bea1de-9cef-4ed8-ba5e-15b210656c56",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6001b6d4-6db7-4bdf-be2c-c710e7b4bdf5"
        },
        "item": {
          "id": "64758c6f-d391-4315-98cb-002fdd7e6000",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "59d3c01f-790b-44dd-964f-167a696c89e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40083b57-acf3-4ffe-a198-bcec746cf0ce",
        "cursor": {
          "ref": "76a4c894-f605-4ab9-b4b4-532a51338054",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23e34750-eb55-456c-9e3e-5ddfc285ddfd"
        },
        "item": {
          "id": "40083b57-acf3-4ffe-a198-bcec746cf0ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a01dddcb-46ff-443a-b977-1c7778c8eb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86383590-50d2-4706-90ef-e359ed2526da",
        "cursor": {
          "ref": "f0c32bd1-b560-4f34-bc06-4d82bd5bb957",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "70868c41-007a-4e88-88b9-e3b93f0dd429"
        },
        "item": {
          "id": "86383590-50d2-4706-90ef-e359ed2526da",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0aa05802-12a7-4309-95e6-a1e1ce181556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d40d16a-b495-4f96-a584-a155749d6a47",
        "cursor": {
          "ref": "28f2ab23-4db6-41af-91a1-a75d126f2509",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "20ad5f41-d8fc-434a-b9d2-3f09ca3a2aef"
        },
        "item": {
          "id": "1d40d16a-b495-4f96-a584-a155749d6a47",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e9af213c-41d1-4be1-a6de-d28f65ac7561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3c5a72-e061-4037-baaa-7ed240c07a5d",
        "cursor": {
          "ref": "299eecb6-62ea-43e0-ae30-e72baf1b9389",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2034657c-d4d4-4858-8dbd-08d6851e0377"
        },
        "item": {
          "id": "7f3c5a72-e061-4037-baaa-7ed240c07a5d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "02e11071-4848-4452-a0b9-585a87efc770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c82798-33ff-43ab-bd85-70abb5d8d2a4",
        "cursor": {
          "ref": "00bf5136-1910-49f9-9016-ed92beb9c156",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2d32ec6d-a28d-4faf-9e5a-38c7aa6fa578"
        },
        "item": {
          "id": "c3c82798-33ff-43ab-bd85-70abb5d8d2a4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eec6314a-a257-4689-ba03-94909beef7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd211a81-b5bc-4f4e-a198-55cea544cd26",
        "cursor": {
          "ref": "a46601b7-0da6-49bc-8506-512184c89a6a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "97490518-d3e6-4b9b-b3cf-ba840edde7a0"
        },
        "item": {
          "id": "bd211a81-b5bc-4f4e-a198-55cea544cd26",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "96897690-6316-4667-b093-b54f5b9215a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c39ea6-3b70-4f5e-b7ae-0ba556164d71",
        "cursor": {
          "ref": "558cdd43-c366-4323-b366-e37e8c9760de",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a5db8499-b18a-4b53-8760-5d4b9ee4fc9d"
        },
        "item": {
          "id": "39c39ea6-3b70-4f5e-b7ae-0ba556164d71",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8e349c4b-947d-4171-b071-b787d20ce396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd84f3c9-6062-44cf-8ac0-327d718ee4c9",
        "cursor": {
          "ref": "f5f01da1-f30f-4790-8e47-8c217f0e3f5d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b22b93a2-28f8-45c4-be5e-55a179027c68"
        },
        "item": {
          "id": "bd84f3c9-6062-44cf-8ac0-327d718ee4c9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e18bd47b-95d3-4898-bb28-624670c0c2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae234824-bbca-4fda-bf44-b33457c36693",
        "cursor": {
          "ref": "3197b256-5610-4aa7-a2d0-92bae0754022",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bbf13010-94c1-4f9b-9b0d-82e6c1cb2fd5"
        },
        "item": {
          "id": "ae234824-bbca-4fda-bf44-b33457c36693",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fd004424-59ce-4632-a40e-9185d758e9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68153b2d-65af-4c5b-a2ca-98337d5e950b",
        "cursor": {
          "ref": "aeac9973-21cc-434a-beda-0e1d736352a3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "00642a55-9cb9-458e-96e5-8554bc514cd9"
        },
        "item": {
          "id": "68153b2d-65af-4c5b-a2ca-98337d5e950b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c498d356-6509-416a-9eea-db22c2f79622",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aa01d6-648b-441b-bca3-d4f3fd970ea6",
        "cursor": {
          "ref": "f6153a7d-ef3e-47ca-9f3c-12419a5fd59f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a3e2cc98-0138-423e-9161-151efa374c79"
        },
        "item": {
          "id": "e8aa01d6-648b-441b-bca3-d4f3fd970ea6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "30162bf8-5dbc-4b3d-9082-b9b052a4e9eb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 562,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2002ab-2694-4476-a1aa-099f1bc15486",
        "cursor": {
          "ref": "00e81ada-9e60-4075-bdb1-277d524cd9a8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "41c55f91-ca0d-4e7e-803d-03067d650870"
        },
        "item": {
          "id": "0e2002ab-2694-4476-a1aa-099f1bc15486",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a2964095-b864-47e4-b70f-8519cda0a382",
          "status": "Created",
          "code": 201,
          "responseTime": 5151,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "512d7940-d949-4e29-85e2-824c8f8af121",
        "cursor": {
          "ref": "9e3729e6-2efc-4f83-96e2-666ca426ca57",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "57afe58d-8c53-4416-8a2b-c0c8f8b12f4e"
        },
        "item": {
          "id": "512d7940-d949-4e29-85e2-824c8f8af121",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a79e8f41-ef5c-475a-98e9-ce3ac5539e2b",
          "status": "Created",
          "code": 201,
          "responseTime": 5500,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d06c48a-9488-43a1-95f0-7e6ec2e3f491",
        "cursor": {
          "ref": "e25f605a-210a-4eac-9b3b-26a7235a9cc0",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ba13d5a0-ecdd-4b21-b65a-79980b03297c"
        },
        "item": {
          "id": "6d06c48a-9488-43a1-95f0-7e6ec2e3f491",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "68dc1c93-f243-4e71-8b64-6b67067a115c",
          "status": "Created",
          "code": 201,
          "responseTime": 5614,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed33d15e-45c2-4baf-842d-30e6a6efbb39",
        "cursor": {
          "ref": "ca5c9582-b02a-4917-9185-b7888aa96579",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6eed9fcf-3360-474e-a7f7-02b350f447ff"
        },
        "item": {
          "id": "ed33d15e-45c2-4baf-842d-30e6a6efbb39",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "74d51e44-6e48-4c38-b74b-60103ece47ee",
          "status": "Created",
          "code": 201,
          "responseTime": 4557,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca69c15-3b77-4d2e-a802-7c03abd0cf0c",
        "cursor": {
          "ref": "5b42dbdc-aab8-43c0-8347-5d4956e9fba3",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2af2320b-5657-4f55-960b-ac756bd3adcf"
        },
        "item": {
          "id": "0ca69c15-3b77-4d2e-a802-7c03abd0cf0c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "934343e1-2c00-4b85-895a-ccffa16fb06e",
          "status": "Created",
          "code": 201,
          "responseTime": 5456,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ade8cd-156e-419a-879d-28782996d48e",
        "cursor": {
          "ref": "cf2192a2-ffb6-4195-ba9f-1652bc25a05f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d7d06081-5b03-4968-8120-c0d59dd8cf31"
        },
        "item": {
          "id": "71ade8cd-156e-419a-879d-28782996d48e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "beacaee6-8efa-4bc3-8060-e2d0bf60f284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ade8cd-156e-419a-879d-28782996d48e",
        "cursor": {
          "ref": "cf2192a2-ffb6-4195-ba9f-1652bc25a05f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d7d06081-5b03-4968-8120-c0d59dd8cf31"
        },
        "item": {
          "id": "71ade8cd-156e-419a-879d-28782996d48e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "beacaee6-8efa-4bc3-8060-e2d0bf60f284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d407b343-b5c0-4daa-a806-38fea9b272bc",
        "cursor": {
          "ref": "df1fcc47-8f8c-476b-9436-3567ed5f5f15",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d6d0d2ea-c7fa-48cc-a194-7f70202fa698"
        },
        "item": {
          "id": "d407b343-b5c0-4daa-a806-38fea9b272bc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c0529edd-4678-47c5-afd9-c0c90295f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10e0d6f-234c-4af7-845a-06fd2bfa7d80",
        "cursor": {
          "ref": "f60259b9-608f-4089-890d-9d7726f58a08",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9613fdf0-f967-40e6-8853-5b9d91594f76"
        },
        "item": {
          "id": "d10e0d6f-234c-4af7-845a-06fd2bfa7d80",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e2b1a671-44bc-46b4-a84b-53daa35dd691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4596cfe1-f674-4067-b3d9-d534cd4bceee",
        "cursor": {
          "ref": "2ddbca42-3bd9-4106-a222-bd434c6cdd44",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6f96b996-da17-4c7e-8a56-4c3c830418d0"
        },
        "item": {
          "id": "4596cfe1-f674-4067-b3d9-d534cd4bceee",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9d4bac02-9d5e-401d-bb31-0c2a5f7e1260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a080d61-5e5f-4a7d-8926-9954eb7db389",
        "cursor": {
          "ref": "21e5b5b2-9a90-42b8-9803-61a7c5abaad8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "470770c1-b89a-4179-99a5-512dd8d17d1e"
        },
        "item": {
          "id": "3a080d61-5e5f-4a7d-8926-9954eb7db389",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "086408bd-113a-40ba-a3a5-6cc4b182adf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ff1231-01b9-4fa9-8505-a5f6f1cbefb9",
        "cursor": {
          "ref": "3e05d0c9-648b-4052-bfba-864889597c05",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b47c6189-12a3-4339-b17c-b296a899b7a9"
        },
        "item": {
          "id": "20ff1231-01b9-4fa9-8505-a5f6f1cbefb9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e3909ec1-a938-450d-a787-377023163979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd2f196-28c1-429c-983e-e36716b2c84f",
        "cursor": {
          "ref": "19e14d34-02b2-4899-9066-8003c9522d07",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7e0a0f3f-0b4b-424b-9a72-a0c019b7f336"
        },
        "item": {
          "id": "cfd2f196-28c1-429c-983e-e36716b2c84f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b26fd80b-a667-4b87-af7e-a2fc56ff6855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d566dd-9217-40d0-9c6e-81d81d86cdb1",
        "cursor": {
          "ref": "25f47531-1881-40d8-8f0e-bc9feb3aeb1e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "261f2fc9-ac70-4d34-84e2-1cff779986c3"
        },
        "item": {
          "id": "28d566dd-9217-40d0-9c6e-81d81d86cdb1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c0e5dcd-3421-4b4d-8645-cd03e8baa3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a3b6c5-104c-4e10-98b8-432be6b79eab",
        "cursor": {
          "ref": "e89ccd7c-5e38-4d59-a53d-48667739157c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "06ad08a6-e549-456e-aa88-980b67ce0126"
        },
        "item": {
          "id": "21a3b6c5-104c-4e10-98b8-432be6b79eab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "665f7b31-aa91-470c-9fba-92a5553200d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60b381f-f00b-4430-be4f-07e3b1f390c1",
        "cursor": {
          "ref": "0b3db0af-32a0-4559-b47a-4f45388acaef",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e996610f-e75e-4f19-bb4a-c207402d830d"
        },
        "item": {
          "id": "b60b381f-f00b-4430-be4f-07e3b1f390c1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "236215d5-1e6b-4e72-9f37-900197720a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e791d3a-437a-40cd-bc47-fd14d59a979a",
        "cursor": {
          "ref": "d3750dee-6871-4b17-98d4-65ac42f259a8",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b81374d4-6cce-40b4-927f-c5a14330ab71"
        },
        "item": {
          "id": "4e791d3a-437a-40cd-bc47-fd14d59a979a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7dc5d219-79fe-4323-b52d-ec39407c95f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401d1a9c-dbd0-4c31-9636-dd006cf0bb09",
        "cursor": {
          "ref": "8f6c0364-9389-4b8e-bd32-0611d8f8e3e4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c1640064-9fdf-434f-9138-8d2256801f17"
        },
        "item": {
          "id": "401d1a9c-dbd0-4c31-9636-dd006cf0bb09",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d12504f0-5ff3-4527-b472-e57a1ff9b801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9143524-e6e8-469b-abc5-ee587f04ecf3",
        "cursor": {
          "ref": "a0e28321-ead1-4cf0-a0df-18170fe79e12",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7a163427-48e0-4834-886e-1a0338e14039"
        },
        "item": {
          "id": "c9143524-e6e8-469b-abc5-ee587f04ecf3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b0e3dc6a-7922-4f9a-88fe-a5021c9a3c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215b75c2-25e8-4d58-a04f-6b99c5cedb82",
        "cursor": {
          "ref": "0cd2aff6-a6d8-4fa9-bc1c-0c104653c05f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "94933bb2-f84e-44ee-ad9a-4a99b9202290"
        },
        "item": {
          "id": "215b75c2-25e8-4d58-a04f-6b99c5cedb82",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "463e2c88-1885-45f7-b8d7-9c402ee2521a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3729c35-b062-43b4-bafb-d0bcda6de094",
        "cursor": {
          "ref": "59c81d24-544c-4b65-9cbf-3403291aa23a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a0e23536-49ca-45e1-9833-c080589abef7"
        },
        "item": {
          "id": "f3729c35-b062-43b4-bafb-d0bcda6de094",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "63645ece-d728-48aa-9ecc-6941ff35b9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef96756-7a54-47d0-abab-e4cfdd046f2a",
        "cursor": {
          "ref": "56b7ba09-5403-4646-af73-74100fa63e4b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fd39018b-5313-4c91-a5fe-8e166d255eb3"
        },
        "item": {
          "id": "aef96756-7a54-47d0-abab-e4cfdd046f2a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e0cfaf56-f3f1-4194-9f98-4c08b60203f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6b1bae-ed34-45f9-b63e-bf4cdb6c4884",
        "cursor": {
          "ref": "58087bd8-bae9-47d8-a000-e1b079469ce6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d721cf82-4361-4e6a-93c6-5223d34df80a"
        },
        "item": {
          "id": "9c6b1bae-ed34-45f9-b63e-bf4cdb6c4884",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7d9bcbc8-4d51-47ca-a238-1aaa22d9a132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7427a7-a2dd-43c8-8572-9bfefebc439a",
        "cursor": {
          "ref": "1c8b39bd-74bc-4e4c-ac2f-405f85ca4495",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1244a7ff-f87c-42f4-9d88-6ab32abd246f"
        },
        "item": {
          "id": "8e7427a7-a2dd-43c8-8572-9bfefebc439a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d0e16b3e-ea14-4f7f-82df-a878d80a501e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef25542-8045-4fa1-822d-d90826b56c87",
        "cursor": {
          "ref": "d5eaaa83-eb87-4ad4-be18-3710e0b5d8f7",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a82c4ad8-b776-4cf6-bf88-7a1022a91eb9"
        },
        "item": {
          "id": "1ef25542-8045-4fa1-822d-d90826b56c87",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ba8f7a12-0773-4756-a88b-473008ebe2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d5da7d-c5fa-46f2-8def-9ff0dd1476be",
        "cursor": {
          "ref": "358ced27-e432-4d84-909a-3c4b7514c3c3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c90e0495-d839-430c-b3e6-88d15fd4fa10"
        },
        "item": {
          "id": "91d5da7d-c5fa-46f2-8def-9ff0dd1476be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7c3ff8e2-681b-4a16-8e11-9f443d73f131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562c32ca-cb04-42d3-9267-207980e182b1",
        "cursor": {
          "ref": "2c1dfd41-a062-458a-81e8-d62184f81f62",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b20764d2-2a12-42df-b400-db50d9845583"
        },
        "item": {
          "id": "562c32ca-cb04-42d3-9267-207980e182b1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9acdcdf3-1195-47b4-a4e5-51868f528093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e91006-9d17-4244-8688-7ca007c04f3c",
        "cursor": {
          "ref": "3280bf80-90bb-4136-b17e-8d550dce55fb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "92b8d95e-b2a4-4768-8250-c38a414aa942"
        },
        "item": {
          "id": "79e91006-9d17-4244-8688-7ca007c04f3c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a92d01b7-2f33-442d-8484-2cb13f538007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484a16d1-9e69-4364-8ee7-6989e8fd9000",
        "cursor": {
          "ref": "99788b51-9b38-44c3-9530-2a2f490881b5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8947a2ee-be11-4c22-b60d-d794b9cc7412"
        },
        "item": {
          "id": "484a16d1-9e69-4364-8ee7-6989e8fd9000",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "61a8f933-d2be-42af-99b0-5f757d0a384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2282fb-ee8e-43f2-a7e7-c38c4baa41ca",
        "cursor": {
          "ref": "7233e3bd-ae6f-4b63-a3af-71aeebc45aeb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "29f3628f-73d7-4085-96b0-56cac8cbfa9c"
        },
        "item": {
          "id": "7d2282fb-ee8e-43f2-a7e7-c38c4baa41ca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8c505477-60fa-41dc-965f-2b7e8af87a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894ad586-3fc8-44bc-92be-c9bad8d36077",
        "cursor": {
          "ref": "1cd6a8a6-c5b0-4faf-92af-478d8618a5b0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e6f92f22-a1ab-49a5-81cd-192120ef84fb"
        },
        "item": {
          "id": "894ad586-3fc8-44bc-92be-c9bad8d36077",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4a2d0f32-7c37-4b30-b1d7-71f0c1748d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2e6021-4ece-464f-82ab-b37e9c28f006",
        "cursor": {
          "ref": "1afc3e3b-dd9a-4001-9d52-6d920490532e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c2bce551-5adb-4a81-9d90-501849ab97c0"
        },
        "item": {
          "id": "dd2e6021-4ece-464f-82ab-b37e9c28f006",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a93c6c26-5368-44c5-82b2-318f7a6853f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b2524f-d6e2-481e-a25a-23c0ec19a4b8",
        "cursor": {
          "ref": "ff90a4c3-7304-43f4-8329-2f6e6ce961c4",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "33c94bf8-1ca5-494d-8021-99cc99163f43"
        },
        "item": {
          "id": "80b2524f-d6e2-481e-a25a-23c0ec19a4b8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9e37cccd-7c57-4410-bbaf-f010ea1f5062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0600c3d7-f32a-4450-a050-1157e3ddec0e",
        "cursor": {
          "ref": "a47c1bab-0ce5-40e3-a3b5-5cf6ba596507",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "694857fb-8244-492f-af65-510b8c88a8f0"
        },
        "item": {
          "id": "0600c3d7-f32a-4450-a050-1157e3ddec0e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a6122966-0a4b-4f8d-821b-dba109c65e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39739c9d-6a3e-486f-9b42-f1e3d948a5f1",
        "cursor": {
          "ref": "7ea539ac-dd09-48a2-910d-7e9d06ddc7da",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f99a1d71-0678-400f-b881-6242823d398e"
        },
        "item": {
          "id": "39739c9d-6a3e-486f-9b42-f1e3d948a5f1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3f5eb2d2-1633-446a-b219-003651795d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2173,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0163a9-f54f-492d-aa7d-85be3975c749",
        "cursor": {
          "ref": "7513c32b-96a0-4cb6-be7b-f32d20e4e852",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "21394120-9b31-4975-8ef1-a802e6b943d0"
        },
        "item": {
          "id": "cc0163a9-f54f-492d-aa7d-85be3975c749",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "059a63e0-f44a-46c1-b01e-6bab0aac4b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c15206c-4faa-4926-b36b-300a33e899d2",
        "cursor": {
          "ref": "d491721f-a283-4f9e-a9fc-8d25de77616b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "09636527-56c0-4ab7-9d3d-6daeca1da9b5"
        },
        "item": {
          "id": "5c15206c-4faa-4926-b36b-300a33e899d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7a5c85c7-3ea2-4562-9ed4-2580c2d78b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827444e8-df78-4a58-8982-ba931b8aa5e8",
        "cursor": {
          "ref": "c6e65e37-1579-4686-a4a3-b0e82b0e7563",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d66f6427-b9d2-4f6e-8cfb-ef8ed7a49c63"
        },
        "item": {
          "id": "827444e8-df78-4a58-8982-ba931b8aa5e8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0dc0afe2-5bd6-422e-9832-66420d123f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b7e782-58c6-4f15-8429-a68b80447390",
        "cursor": {
          "ref": "f8835623-e811-48fd-9cda-f3df522876f4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "75edb1ef-6490-4906-a874-066b72b1dfa7"
        },
        "item": {
          "id": "48b7e782-58c6-4f15-8429-a68b80447390",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "42d31343-5c15-48a4-bfb1-73a4626171c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30ab674-6921-4ef0-bb0c-47374467dbf0",
        "cursor": {
          "ref": "3a8a8efb-baab-42c2-bef4-7be034da6dce",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "36dbfab2-0546-4e9d-8f8e-19739b7fa87e"
        },
        "item": {
          "id": "d30ab674-6921-4ef0-bb0c-47374467dbf0",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b6bb187c-64d7-4a03-a138-f1e908630d57",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 542,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e561af19-46cb-4303-99be-32ff2ee7f8f0",
        "cursor": {
          "ref": "9423e81a-5336-4e52-bd70-2aa6a6ba905c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3446bf32-4a6e-4d63-ab5b-37bb164f170c"
        },
        "item": {
          "id": "e561af19-46cb-4303-99be-32ff2ee7f8f0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a0a0997a-1b17-4cf4-93eb-5f972930dd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e561af19-46cb-4303-99be-32ff2ee7f8f0",
        "cursor": {
          "ref": "9423e81a-5336-4e52-bd70-2aa6a6ba905c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3446bf32-4a6e-4d63-ab5b-37bb164f170c"
        },
        "item": {
          "id": "e561af19-46cb-4303-99be-32ff2ee7f8f0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a0a0997a-1b17-4cf4-93eb-5f972930dd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb871ea-fe00-4345-8fc8-2b0f2936b3c8",
        "cursor": {
          "ref": "4e795c32-ce30-4467-855a-6a00a4dcf4aa",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a12c8a82-a55c-4b43-b8ce-25cb1b0751ca"
        },
        "item": {
          "id": "8eb871ea-fe00-4345-8fc8-2b0f2936b3c8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2f06c951-2f2b-4c3c-856c-df9afe62eaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa76168-e19a-4f04-969b-532f81fa86ea",
        "cursor": {
          "ref": "776630cb-60f2-40d5-b171-2adb93388d08",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "edaa60aa-3a84-4bc0-8cac-d7e3ae6b7286"
        },
        "item": {
          "id": "baa76168-e19a-4f04-969b-532f81fa86ea",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b7d8b90e-9eeb-493a-8d3b-d8f7e04a6dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd039f4-0068-47b6-9c84-f4ebd4db375e",
        "cursor": {
          "ref": "b6762920-82d3-4452-aca0-c113ae9ec7f1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "12e40516-169b-44b9-9236-b26594924d9a"
        },
        "item": {
          "id": "cfd039f4-0068-47b6-9c84-f4ebd4db375e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fc6785ed-d72c-4627-a897-77a090f9ae7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b470a8-148d-4635-a442-28d8ae9c3525",
        "cursor": {
          "ref": "c1aa4106-6958-40f4-851b-3b15cf4a86ce",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7b6c57bb-513d-4d94-aea7-85c1d32a13c6"
        },
        "item": {
          "id": "31b470a8-148d-4635-a442-28d8ae9c3525",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b62b0af3-92e9-4f4c-bbad-9f3784e1c2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8839cfe-160e-48da-ae07-0a7aebd1a436",
        "cursor": {
          "ref": "cd99592a-042d-46d0-ad52-5f4b62fe6bae",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0f27d5a2-0a0f-4246-90c8-aab2a90d457d"
        },
        "item": {
          "id": "f8839cfe-160e-48da-ae07-0a7aebd1a436",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1e183f78-1279-482a-b3c5-1ff890b36f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cf0f0a-c4f9-46be-844f-ff6e54284c1f",
        "cursor": {
          "ref": "e6e1e53e-27bb-4d75-9b7d-5e6e037d3e2b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d4b91859-7e5d-459e-934c-d1de3080273d"
        },
        "item": {
          "id": "76cf0f0a-c4f9-46be-844f-ff6e54284c1f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4ea47718-4660-487c-9573-ca7f463193f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9872d7-f50c-4fae-b45d-ff7c70440675",
        "cursor": {
          "ref": "6f838be2-97cc-418d-a20f-05b9b270bd3b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ad343b1a-1e42-4542-bbaa-5953f95a269a"
        },
        "item": {
          "id": "0b9872d7-f50c-4fae-b45d-ff7c70440675",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "355e8efc-a0ad-4ef9-ae1e-31fa822c1f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebe21ba-bd16-4c57-bd53-fc50ddc18f3f",
        "cursor": {
          "ref": "dc7ece9e-7b8e-4535-99b0-43b8e4aecab4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e1f7cdfe-e6ce-49b3-9629-46535a37c8c1"
        },
        "item": {
          "id": "cebe21ba-bd16-4c57-bd53-fc50ddc18f3f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "31272738-49ef-4721-8058-7454db0d70da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4336c1-134a-43cc-bfa1-4ae73758d3e2",
        "cursor": {
          "ref": "da1e5547-2225-4c9a-aad0-87c4b444cffa",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c5ed004e-152d-4e8b-9b40-18084e38bd48"
        },
        "item": {
          "id": "cc4336c1-134a-43cc-bfa1-4ae73758d3e2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f94daf25-96b9-44cf-988c-d0a17815b54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72f31c1-74e7-4532-8fc9-0edb8d35ca1f",
        "cursor": {
          "ref": "6f3aedac-668c-4420-a74a-4efb88f831bf",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a21ae03d-225b-47d4-96a9-10a991ed1374"
        },
        "item": {
          "id": "f72f31c1-74e7-4532-8fc9-0edb8d35ca1f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3075b439-35e7-4758-b0f5-d0c44f26742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884da73b-d67d-4bf6-8242-7b72f005b0d2",
        "cursor": {
          "ref": "488c63af-9331-43d0-a81b-42c023728055",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c8faac82-efbd-4d57-894a-41bcff097393"
        },
        "item": {
          "id": "884da73b-d67d-4bf6-8242-7b72f005b0d2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3a2ee4a2-6c0a-40f3-bb80-d8ec637e37fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da101ae-680f-4315-b9e8-3bd7e1577dd5",
        "cursor": {
          "ref": "29ac30f2-a2de-4bb3-b5a9-f15b1141027b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "52c75efa-f74b-41eb-a2e4-205e661a06c9"
        },
        "item": {
          "id": "3da101ae-680f-4315-b9e8-3bd7e1577dd5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0ddf726e-cbfb-46b6-86f4-f7eaea716668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34db45b7-70de-4964-aa05-d6a15ce80f60",
        "cursor": {
          "ref": "a625940d-6770-4058-9b9d-87223873181b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "32cfcddd-12b6-4218-b52c-f2fd1c4d951e"
        },
        "item": {
          "id": "34db45b7-70de-4964-aa05-d6a15ce80f60",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e03b2283-5edf-49bf-9142-fb12984aff04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4345e6-d687-4c68-905b-b5880673ef31",
        "cursor": {
          "ref": "38fe51d9-7b21-4590-9877-393291fb9914",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1da26968-a666-4f3e-96e0-1cc6646055df"
        },
        "item": {
          "id": "1b4345e6-d687-4c68-905b-b5880673ef31",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3494fe23-947f-4512-ba6b-46ffe758089a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1385444-9ee8-4f9f-9436-ca3be7fef1fd",
        "cursor": {
          "ref": "73720c65-edec-4aa0-98b0-2f877d241d45",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2fb460d3-0dad-4f34-868a-fa4451cc76e5"
        },
        "item": {
          "id": "a1385444-9ee8-4f9f-9436-ca3be7fef1fd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e0667943-df91-4456-882c-e1e95cdd2bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68fecbc-6e88-4169-9f2a-0cf37fdc8ab5",
        "cursor": {
          "ref": "61f64ec8-435b-4e6c-85fc-774b4d028e8b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ce6f1c9c-b865-47ba-a487-95b20688fe80"
        },
        "item": {
          "id": "e68fecbc-6e88-4169-9f2a-0cf37fdc8ab5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d6c80e94-8284-4059-b791-de45e579dd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597874ad-b3d2-46cb-bb8c-83e9260dad7f",
        "cursor": {
          "ref": "c837b886-53ef-44b7-ba3a-d464ad2e6e5c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e81538ae-edaf-4bd3-a51a-cdfba55b48d1"
        },
        "item": {
          "id": "597874ad-b3d2-46cb-bb8c-83e9260dad7f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6908f745-4f01-4428-bd29-afb49fc85710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20538274-b03d-43d7-978c-e44ed7c60e61",
        "cursor": {
          "ref": "f95af667-e0ca-434a-aad1-7481bdb73715",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "761c2618-eb74-4958-8571-c5f037e7a07a"
        },
        "item": {
          "id": "20538274-b03d-43d7-978c-e44ed7c60e61",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bd83c41b-8adb-42df-a378-b611124da2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b0c10a-cf28-4972-8e19-ca3f2a762149",
        "cursor": {
          "ref": "92967449-942b-4e8f-9d99-0cf351653692",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ce2d9b25-613e-47f5-ad41-95cc34db79f8"
        },
        "item": {
          "id": "71b0c10a-cf28-4972-8e19-ca3f2a762149",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "31a8846e-010b-461b-a9ea-b23137633645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877a44c2-ac3b-4d15-825f-f1242e03f4b8",
        "cursor": {
          "ref": "bb632457-d2b0-4691-90c1-a9a7663b236c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c18a51b2-4b21-487d-8125-daa4042b8283"
        },
        "item": {
          "id": "877a44c2-ac3b-4d15-825f-f1242e03f4b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9a2ab861-5333-40ef-aedf-93135e39c4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235127a0-092d-45c9-aeeb-98e0b4bfcd0c",
        "cursor": {
          "ref": "03f649a6-8eba-4c8b-8df5-b7985c1173b5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b010d469-780e-4916-b625-739698c6c0be"
        },
        "item": {
          "id": "235127a0-092d-45c9-aeeb-98e0b4bfcd0c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "455100fd-7d1d-4a0b-85be-8a4ebb008ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066000e0-2cfe-43eb-9196-fd7e02810efd",
        "cursor": {
          "ref": "85e2bda5-ad57-4c4f-ac6d-82ba51ed21a8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "395c0fb8-82a0-4473-bc62-3ca582ecf08c"
        },
        "item": {
          "id": "066000e0-2cfe-43eb-9196-fd7e02810efd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d75b1e74-a9c2-4c51-9eb9-9642df3a0b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19808d2-5938-4615-aeaf-bcaf80777885",
        "cursor": {
          "ref": "68840408-7444-47f6-8817-36db8a687531",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3b1c0c5a-83b0-442e-b66b-4033801372b4"
        },
        "item": {
          "id": "a19808d2-5938-4615-aeaf-bcaf80777885",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a9ce505b-f4bd-40ba-ba31-7a7389e07869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049bb94a-5a6b-48d3-88b7-7b6cec4e98e8",
        "cursor": {
          "ref": "26aabb87-3f4c-4ef1-88ef-c83d1ef66bcd",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6a1fff65-4532-4934-9dce-2315c9a68c76"
        },
        "item": {
          "id": "049bb94a-5a6b-48d3-88b7-7b6cec4e98e8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9289614d-482a-44dd-95a2-a9878f2ee79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfc7464-91ec-4faf-a1ba-ba9adf945328",
        "cursor": {
          "ref": "049e34c6-2aa4-48fb-86a7-e75bf590a887",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bbd47853-81f2-4d86-a13a-747466563569"
        },
        "item": {
          "id": "7cfc7464-91ec-4faf-a1ba-ba9adf945328",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "457c01ff-1a3a-4e10-a162-67997bec8e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a858b7-de21-4a7f-ada2-af9a5af6c494",
        "cursor": {
          "ref": "c0d79b5a-594f-498f-92d2-9aee596bb7c8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "429e3701-3ef2-4dbe-81f7-d770aeac7ef3"
        },
        "item": {
          "id": "38a858b7-de21-4a7f-ada2-af9a5af6c494",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a9d96a00-1488-4d44-9525-9cf9ad9976c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5325d8d-e3ed-4354-a0b4-1fbde73f687f",
        "cursor": {
          "ref": "46ade59b-47d1-41fa-86ff-9986cf7a2ed8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "574a3448-d49a-4038-95c6-aa741cfd832d"
        },
        "item": {
          "id": "e5325d8d-e3ed-4354-a0b4-1fbde73f687f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bb01a45f-b787-4604-9827-8ee0b37486f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2d0b00-305b-4098-aed6-57fe00c72e83",
        "cursor": {
          "ref": "be5e9d78-c11d-480b-843e-4a87219336a9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "52164136-0d0f-440c-87ce-906e1fd29fba"
        },
        "item": {
          "id": "2a2d0b00-305b-4098-aed6-57fe00c72e83",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "768b7b86-b89f-43af-a435-ac35262a9820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602b9184-6203-436b-b57c-06a5fcf51467",
        "cursor": {
          "ref": "8d2bdf46-a75b-405d-b689-f1daf01e96f6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b6a3075b-6b6b-4e9a-8591-2f855b7f4713"
        },
        "item": {
          "id": "602b9184-6203-436b-b57c-06a5fcf51467",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4e77e513-bae5-409d-8299-fae1321ca5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d44533-9a9d-476c-b47e-2774d14254cf",
        "cursor": {
          "ref": "71eb6578-d7c2-4372-b2b5-e9e1a26514c5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "52f78bec-05a7-4108-9762-50126a58bf58"
        },
        "item": {
          "id": "c2d44533-9a9d-476c-b47e-2774d14254cf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "430633a3-e16f-423c-9178-0c8434ee15cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf43c8-3621-4926-8964-e4f8033b66e2",
        "cursor": {
          "ref": "cc5dc511-4874-41b0-8080-0e12223064df",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8aabb956-9ccb-4388-b501-11c6dda65e96"
        },
        "item": {
          "id": "d8bf43c8-3621-4926-8964-e4f8033b66e2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ec54ce37-3a74-4549-bf28-4a9cbf39000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34947d9-ab5a-4de8-bbfc-0617cde9eeae",
        "cursor": {
          "ref": "026e4fe2-b318-4121-b1fa-b08e841fde57",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b35dfb96-5deb-4142-8fce-7dc7c45fdd2d"
        },
        "item": {
          "id": "f34947d9-ab5a-4de8-bbfc-0617cde9eeae",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c3b53891-a90a-4c7b-a3d0-34420cfb51dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2efae7-af51-43b2-9159-83fad404ea88",
        "cursor": {
          "ref": "bec9d157-7716-45b3-8028-30ad9307e2d7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3b4576ed-2862-464b-8cd3-b29cb7d0def5"
        },
        "item": {
          "id": "0f2efae7-af51-43b2-9159-83fad404ea88",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f2487e15-e561-4ce8-9df9-58ca4fa8a13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bf112a-eaee-4746-b732-8f70a4250c4c",
        "cursor": {
          "ref": "ef51a98c-4888-42da-a7ce-7901bd6ce68b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "09bb4608-c6d5-4657-986e-7f0debfa5514"
        },
        "item": {
          "id": "39bf112a-eaee-4746-b732-8f70a4250c4c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "422bfa16-8653-4e70-900b-8f70d2dc253d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70623f81-ebec-4791-83f6-aba26d54e2f0",
        "cursor": {
          "ref": "520fb695-2aac-437a-af6b-0c8a522bf252",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fa702d36-97c9-4454-8f4b-b966922e9031"
        },
        "item": {
          "id": "70623f81-ebec-4791-83f6-aba26d54e2f0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "87f7d0b1-0fe6-4336-8937-9b9e129d6bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd667623-d596-46db-becf-aa2d20d8b1f0",
        "cursor": {
          "ref": "594ea2d5-1fd6-4722-a08c-fd852b748700",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c6036c69-aba6-473c-9c5a-de40b92da3e8"
        },
        "item": {
          "id": "fd667623-d596-46db-becf-aa2d20d8b1f0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c84d18ad-20e7-42d4-9430-4c24b279386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410fd9b7-afa9-4065-92db-a16aae3c87a8",
        "cursor": {
          "ref": "f95c2dc4-b365-491d-8033-bfd3863842ad",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0e197d7c-7c68-46e3-b338-179f7e538b29"
        },
        "item": {
          "id": "410fd9b7-afa9-4065-92db-a16aae3c87a8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "24fb2705-d8e2-423b-94e1-39be38aa17ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 951,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf0caf5-979b-4987-8992-376d2ee19f93",
        "cursor": {
          "ref": "c882e160-1982-432c-9a34-247835df75a5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3edcd2e4-2364-4f4a-a574-bfd305ff4766"
        },
        "item": {
          "id": "2cf0caf5-979b-4987-8992-376d2ee19f93",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aac2b788-51c9-49ca-bdcd-67b0e0380d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6036ba-b774-4c84-95bb-c1f298bd0eb5",
        "cursor": {
          "ref": "d524ea79-c5d2-4f4e-ac51-0e3619f72b0d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "396e2cd5-8799-4272-b9f9-12dad11c453a"
        },
        "item": {
          "id": "3f6036ba-b774-4c84-95bb-c1f298bd0eb5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0cf8c5ae-4369-4571-9844-33f307e02005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed717614-b66f-4162-8039-b743e77770c3",
        "cursor": {
          "ref": "f5eeac73-939c-4316-adf8-90050cb20942",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d4ed9be-e523-4901-9833-2058f90a0467"
        },
        "item": {
          "id": "ed717614-b66f-4162-8039-b743e77770c3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "97c2dc80-83eb-41ad-b0db-b1a650de70c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a900e0a7-5cb5-40eb-bbe3-c6d90d776560",
        "cursor": {
          "ref": "dad1922c-702b-4f18-9dd9-3e6d59a56e5e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "024fd834-77d8-4006-b8ab-a69faa232c6c"
        },
        "item": {
          "id": "a900e0a7-5cb5-40eb-bbe3-c6d90d776560",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6bc4521c-bbfa-47ca-8de1-1a91d1f2b211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd10a46-44ec-4e85-bfad-26ae604c7790",
        "cursor": {
          "ref": "092e3f6d-d5df-43d4-b609-6fec2fe6767e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bc2896b7-7811-4a36-8afe-7bc7bf12ef54"
        },
        "item": {
          "id": "3dd10a46-44ec-4e85-bfad-26ae604c7790",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c7e205e8-b4c7-4aba-8629-9927a2850474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d3a3ec-a426-4458-b924-b02c84672b35",
        "cursor": {
          "ref": "7d6a9a7e-520d-42e8-9567-2438d67eff62",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b2e2f6aa-70cd-4bfe-b245-1fed3c1738e6"
        },
        "item": {
          "id": "53d3a3ec-a426-4458-b924-b02c84672b35",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "42e08b02-1d41-42cd-9827-3f3803d2e7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105379dd-2524-4142-95e8-38f2ae78a037",
        "cursor": {
          "ref": "9c56f484-956d-43fb-afb7-e46136030071",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6b086b24-718b-4a0a-8522-75d292dbe3a8"
        },
        "item": {
          "id": "105379dd-2524-4142-95e8-38f2ae78a037",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3c661b1b-e84c-4e78-9150-4956599386cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a438ff63-9be5-4778-b0c4-e99ed77208de",
        "cursor": {
          "ref": "26d897ae-5ad4-4e1f-88e9-62c90b70c104",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "26e18a5a-f4ac-4951-a6bb-cc3b1bcfc9f4"
        },
        "item": {
          "id": "a438ff63-9be5-4778-b0c4-e99ed77208de",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a0f66dbc-d66a-4395-a4e6-778fad02c98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b90625-4ffe-4478-ba06-4fb0da89e144",
        "cursor": {
          "ref": "690c4ab9-a873-4d9d-9ba0-e21000f5fbb1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9d450830-6e82-48b8-8480-d5d87f180f66"
        },
        "item": {
          "id": "64b90625-4ffe-4478-ba06-4fb0da89e144",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f069d0e5-34f7-4547-97ad-0a2e17fe147b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f6ca40-1611-4900-9321-da6f49f3c275",
        "cursor": {
          "ref": "abdb1bd8-0089-4fb7-ae1a-7b2732cd79d6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3ef10856-f5ec-4bb6-8d1a-02691ab72486"
        },
        "item": {
          "id": "87f6ca40-1611-4900-9321-da6f49f3c275",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "68318ff1-29df-4784-b74e-3ec8f5ad178d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31190711-9287-4580-8947-e49b2882fa69",
        "cursor": {
          "ref": "fc3ee386-424f-4be7-8d8d-d74270df2a95",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a1b590c8-b771-4a68-8ea8-88acd9a7bfa7"
        },
        "item": {
          "id": "31190711-9287-4580-8947-e49b2882fa69",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d400ea5-c9a6-4e94-894a-9de5857862c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660405a4-e589-4a05-902e-64a63ec43b50",
        "cursor": {
          "ref": "cc6797c3-80f0-4de3-8430-32d24013e668",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2769d558-7aef-47a0-8af7-27ef58dee9d7"
        },
        "item": {
          "id": "660405a4-e589-4a05-902e-64a63ec43b50",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f466d408-3049-42d6-b37b-a476fad10484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37637e3d-ec75-4e00-8d93-6ef97659688b",
        "cursor": {
          "ref": "ace0d550-d5fa-4cd9-8bcb-8f8b0c89ca94",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "73f4eef4-9667-4527-b176-37c14d9684a2"
        },
        "item": {
          "id": "37637e3d-ec75-4e00-8d93-6ef97659688b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "888c1e13-132e-4c2e-ba95-3353bb57c495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44ba1e2-0a56-4509-b24d-d5265d935c76",
        "cursor": {
          "ref": "47c00891-d6cc-4e34-8137-feb563613333",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f1f0201c-fc6b-429c-9af1-8522cb5f6449"
        },
        "item": {
          "id": "e44ba1e2-0a56-4509-b24d-d5265d935c76",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d49a3288-0069-45ee-b292-969e608d4a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd67118b-96d4-433f-9874-3dc7dacbbc4c",
        "cursor": {
          "ref": "8baf9924-e37a-4f64-8be7-a2624a535366",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b220cbd8-a925-4476-9f40-8add1f1fa9f5"
        },
        "item": {
          "id": "dd67118b-96d4-433f-9874-3dc7dacbbc4c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dee40875-5240-46b2-be72-68aebc9f3b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466ea67-7882-4521-951d-e6cf1bdc0a72",
        "cursor": {
          "ref": "2602aed5-2f09-4fcd-854e-b6fed97da978",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "445e6018-be7f-484a-8547-4b0fc5436a12"
        },
        "item": {
          "id": "a466ea67-7882-4521-951d-e6cf1bdc0a72",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fbc75d73-0bf6-4d19-b1ec-2a7e8bbf2f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c21e53-f1d0-487a-aac7-0c9153b2e514",
        "cursor": {
          "ref": "a348d7e0-6c51-41fb-82bd-46f07d18b0d4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0b6712dc-84e7-4bc9-b97e-b5fa50da45e8"
        },
        "item": {
          "id": "a7c21e53-f1d0-487a-aac7-0c9153b2e514",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "23825a6b-a9b0-4b3a-8a0f-23b5547108ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fc24be-c297-4a07-851e-3340c47398de",
        "cursor": {
          "ref": "f6689340-a3fb-4159-9ab9-49cf48439fa5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5af2f0dc-b78e-4ba4-8ef4-013f94252349"
        },
        "item": {
          "id": "84fc24be-c297-4a07-851e-3340c47398de",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "20d18599-f720-47a4-b929-5dee0158ac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0770ca-69e8-4e53-9dfa-883f326999e9",
        "cursor": {
          "ref": "105f1edd-164c-4495-af4f-e8d27e4d4afb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "55701f2d-4776-49e8-b6e6-2d36bc18a761"
        },
        "item": {
          "id": "ce0770ca-69e8-4e53-9dfa-883f326999e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0ba168ec-0bb0-4eeb-9e36-f6a40526ccd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81531436-0605-4f93-a126-b9f18aab80d2",
        "cursor": {
          "ref": "73084590-7d13-41f6-ae48-750519cce36c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "20d4f3d1-d9de-4104-93dd-620635762e3e"
        },
        "item": {
          "id": "81531436-0605-4f93-a126-b9f18aab80d2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "36ddc96e-94b1-456b-8fd0-01b857fc3bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b202b6e-7d84-4cb7-a507-777323489b39",
        "cursor": {
          "ref": "70a648e4-30a2-442d-8036-22b99ae765c5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f40b7561-6768-4dfa-8fbd-fa3255840317"
        },
        "item": {
          "id": "0b202b6e-7d84-4cb7-a507-777323489b39",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3b48a310-aa74-4566-9f8f-d9b76f6e1e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acaad0b-7fa2-49ae-a94a-808b088c7fa7",
        "cursor": {
          "ref": "03882249-5496-4859-b073-b4fd459b202d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5c95253d-da6b-4e75-80b8-35f24792acb1"
        },
        "item": {
          "id": "3acaad0b-7fa2-49ae-a94a-808b088c7fa7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7d3a8bd7-65f0-44c3-8d4d-be6da0fa3917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02149a1-a787-47cc-8ada-305ce3aeb26c",
        "cursor": {
          "ref": "822f3700-e504-45e6-8779-1f2ee15dd004",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b6ba2e11-8b13-4940-8a78-6e177c3fa98e"
        },
        "item": {
          "id": "f02149a1-a787-47cc-8ada-305ce3aeb26c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b7a7cbc1-338f-4554-a9db-b867625f9864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02057873-59a2-4604-8779-4c68afea312b",
        "cursor": {
          "ref": "1365ad61-0beb-40ce-8da4-0834911115b9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3f43d197-669b-4363-8d26-b5862a1e44dd"
        },
        "item": {
          "id": "02057873-59a2-4604-8779-4c68afea312b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "63686dbc-016f-445b-8c75-6f8c78d51597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679bd557-e849-44e3-9881-4412819b65f3",
        "cursor": {
          "ref": "8ab2358e-bd04-410c-b22c-1d2f81e0bc59",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9e33f3ab-ea77-4dde-bc4d-6402d43d5e8c"
        },
        "item": {
          "id": "679bd557-e849-44e3-9881-4412819b65f3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "77153875-a62d-470e-82ea-0b6c343a089a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a27a1d-ea73-41b9-971d-c2dd289d0a3c",
        "cursor": {
          "ref": "00631e46-1cfa-4a7f-ba82-37f2c16ef2ca",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e83591f7-b08f-4b2d-8eb1-752fa2d67edf"
        },
        "item": {
          "id": "81a27a1d-ea73-41b9-971d-c2dd289d0a3c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f28831cf-e731-4a07-ad4d-a037f51af6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b84e6f-a4a3-4a9f-b777-64dd283f1f68",
        "cursor": {
          "ref": "e38e5bd8-aeda-4081-92e6-3bc421e00180",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c1024bd2-ec92-4334-91d6-17aa0d245c40"
        },
        "item": {
          "id": "31b84e6f-a4a3-4a9f-b777-64dd283f1f68",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "78aa7538-9187-42a0-a0dc-88d7ebeed7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e6ca51-9ae1-4a77-8ecb-4b6b41a6402a",
        "cursor": {
          "ref": "94a96f17-63db-4365-8995-a30b4b6c3a59",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e29ddfc4-3982-47cc-a836-e32f8b0faf7b"
        },
        "item": {
          "id": "85e6ca51-9ae1-4a77-8ecb-4b6b41a6402a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "67540bef-d6d1-4625-b7eb-c42ec3aeeb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf7c7db-752c-4e95-a4e6-ef972ec13926",
        "cursor": {
          "ref": "3fd61666-4c5f-49f1-ae81-16438d9d881f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b9d2f526-d8a1-4875-a8a3-9a6e4f074f97"
        },
        "item": {
          "id": "5bf7c7db-752c-4e95-a4e6-ef972ec13926",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "db206eb9-1d04-4476-9bfd-041fb1911701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ac4aed-962c-40b3-9372-78e6c63335ff",
        "cursor": {
          "ref": "400af339-6754-4aed-9ecd-74cad44a8cfb",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ea43e6ab-bf89-438a-85d3-bd2731f3353f"
        },
        "item": {
          "id": "06ac4aed-962c-40b3-9372-78e6c63335ff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "78c30afe-7abe-40f8-8386-640c17cd074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967a0655-33e3-46da-8cdb-bdf1ff067ce4",
        "cursor": {
          "ref": "fb93dafa-4aa0-481b-a1a7-93ea3a11d461",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2b4a83ff-2911-4ca6-b65e-05008d4f0e90"
        },
        "item": {
          "id": "967a0655-33e3-46da-8cdb-bdf1ff067ce4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4f3eaafc-6594-418d-963f-1f064becfe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5451a6-e220-4b0e-ad2f-30b57c142899",
        "cursor": {
          "ref": "2ab22305-903f-44d7-bda6-138f9f13057d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "96c3f429-cc5d-4434-99d6-693009a775f6"
        },
        "item": {
          "id": "2e5451a6-e220-4b0e-ad2f-30b57c142899",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0cba9d38-764d-45c6-bcb7-15479ea18551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da8819f-ee22-4edf-b9b8-df69ee4d6412",
        "cursor": {
          "ref": "aab3dc25-ea71-4da4-a60e-6c323177b5e0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ffa32607-1d3f-48cf-953f-1aef5a2cfe8f"
        },
        "item": {
          "id": "8da8819f-ee22-4edf-b9b8-df69ee4d6412",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e817e5b6-a26c-4fcc-8664-d00d74292800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901dfc5b-c5f4-49c1-8b9f-5ba3b0a12eea",
        "cursor": {
          "ref": "09ef74a4-af20-4087-8dff-9a205d850bad",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "285d6125-0277-4c8a-961b-a0102b8ea314"
        },
        "item": {
          "id": "901dfc5b-c5f4-49c1-8b9f-5ba3b0a12eea",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "521ce578-65d8-4e30-a930-1e66dba08ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3985ce7-90c7-4202-b208-456a72f326c1",
        "cursor": {
          "ref": "3c9fafbc-756c-479d-80ab-0003c39e4a44",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6d33f7b4-ed0c-47df-8980-1c2e9dd1771b"
        },
        "item": {
          "id": "b3985ce7-90c7-4202-b208-456a72f326c1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e8bec20d-a0a7-4f1a-b4a6-e0c2d08acd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d0b82b-7ca8-44d4-9a94-dd25842a91f9",
        "cursor": {
          "ref": "740c9960-306e-4772-97d9-7f536fb005b9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0748dbb7-7a05-4a6c-881a-89c831db00ff"
        },
        "item": {
          "id": "19d0b82b-7ca8-44d4-9a94-dd25842a91f9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8963870a-829a-4727-af9c-d31c5f9bc046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d329428-1a3b-4117-9cc8-f6829ede8216",
        "cursor": {
          "ref": "4e6461f7-5aad-426c-93a6-525181697d39",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dc05f918-aff7-4aa4-9b46-122599950e0a"
        },
        "item": {
          "id": "8d329428-1a3b-4117-9cc8-f6829ede8216",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "23255f66-d009-455f-aad6-928a9f68ef66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f88610-b679-4a67-bafc-6cf01bb8221d",
        "cursor": {
          "ref": "fbd3cac4-39b0-4c49-a731-a2b19484b28a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "306b2919-f569-463a-b952-dd33c9953cd8"
        },
        "item": {
          "id": "33f88610-b679-4a67-bafc-6cf01bb8221d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "484ae8b6-5439-4405-9241-0f89fa4aaf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3a4616-5d2a-4d99-8cf5-4001478a4264",
        "cursor": {
          "ref": "abe4b741-adb6-4889-886e-d99cb1b7d6b2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d8bfbee2-37e8-4b7a-828e-3c87685975a6"
        },
        "item": {
          "id": "ab3a4616-5d2a-4d99-8cf5-4001478a4264",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4e8ced97-ff09-4797-8c38-ab3e3896ce23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcf4961-a502-490b-9bf1-bc0c753dcced",
        "cursor": {
          "ref": "a8f49ace-3c79-45ff-bf6e-3924f32d0aca",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "20efe4e8-fe82-44ea-9d94-5e4a4d8c5a27"
        },
        "item": {
          "id": "1fcf4961-a502-490b-9bf1-bc0c753dcced",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "aeb0ada4-ff34-4d52-8f97-48320e9a077b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc9126-af09-4e16-bb17-090efd138a96",
        "cursor": {
          "ref": "f3f212ea-7cc9-4eb8-b2e9-e3177736485e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "22aecca1-cff0-4c58-928b-2381d6f97fe7"
        },
        "item": {
          "id": "94bc9126-af09-4e16-bb17-090efd138a96",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "44081e7d-7015-40bb-953f-1dbe5a3a95d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9a87dc-f479-4206-88cc-ce1a2aa4ea69",
        "cursor": {
          "ref": "7c053fca-cd26-4a3e-b10a-a5c372cb8742",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0ee4df83-24ae-4091-9a6b-a5b50978ae08"
        },
        "item": {
          "id": "8b9a87dc-f479-4206-88cc-ce1a2aa4ea69",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3a901751-cd5d-4f0a-9283-54e5e5176bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083f788c-221f-4b31-92c5-b27dcd5051b4",
        "cursor": {
          "ref": "ebda1a6e-6fbd-4766-b409-c8160455ddb0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "764debbc-f84f-47fb-807f-4d1f191b1cb8"
        },
        "item": {
          "id": "083f788c-221f-4b31-92c5-b27dcd5051b4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1568b80f-31e3-47aa-a629-f965f4ac0630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712435a8-8e3f-4947-8a47-dd43c1407c89",
        "cursor": {
          "ref": "26067ea1-b0f8-4f4d-93d8-1cd047f54276",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4238b1a3-8a2b-4f9b-b460-142c0d239bf0"
        },
        "item": {
          "id": "712435a8-8e3f-4947-8a47-dd43c1407c89",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9c5a7324-ac59-4c0d-9039-ede7edcbfd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2e201d-0058-416d-a41f-ea90e4c02def",
        "cursor": {
          "ref": "2c7cb320-c933-4865-8bff-78e961958d3b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "739f5d08-d6ba-4789-8553-2b5072334275"
        },
        "item": {
          "id": "af2e201d-0058-416d-a41f-ea90e4c02def",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ec9ce95f-d203-4bff-b350-e1fe950100a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a296d6-0afe-4dc7-9a66-20f659f2b6db",
        "cursor": {
          "ref": "9d2f9a56-e537-46cc-b1c0-ce5a07eb682a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0b9a38b7-93bc-46c3-87cf-d6b17367710e"
        },
        "item": {
          "id": "d0a296d6-0afe-4dc7-9a66-20f659f2b6db",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d2967dcf-c7e4-4afa-82a5-c0c87c48f21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a759ca-e13c-46ae-ace5-1dda96c98e3e",
        "cursor": {
          "ref": "1a12f36f-ab72-49c3-8f35-605cc7f24e2e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d3933895-2e5b-4628-afcc-ab404ff00cec"
        },
        "item": {
          "id": "57a759ca-e13c-46ae-ace5-1dda96c98e3e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f4620d8c-6600-4e8e-9449-9f51ea75e9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d89208-69c0-4c31-9576-9f38f64e8778",
        "cursor": {
          "ref": "14dd49ed-b2ba-480e-8f6d-6240aa638485",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "acb661f8-7d3a-4e2a-944c-88716e6b477a"
        },
        "item": {
          "id": "36d89208-69c0-4c31-9576-9f38f64e8778",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a53d31e0-d63e-4759-a1da-14caed2fbdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5aff67-b005-4e5b-8ed0-38a6184c4c42",
        "cursor": {
          "ref": "bcc95bbe-90cd-48a6-8f9a-f720f89d874e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c27cba77-ff70-44cd-aa0f-c6a2002105b4"
        },
        "item": {
          "id": "1d5aff67-b005-4e5b-8ed0-38a6184c4c42",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c3223113-2edc-4d7a-b787-0682dd134f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6c049c-6490-4aa7-bb9d-afd7be8b4365",
        "cursor": {
          "ref": "dfd99530-9f67-480d-9e6c-4de4413f6c94",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "890c63e4-2dd1-45e0-a38b-c813f7ad9df6"
        },
        "item": {
          "id": "ca6c049c-6490-4aa7-bb9d-afd7be8b4365",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f7604079-d861-421e-9781-4825c920e83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecafdab6-0053-44e5-b944-29321fc6aae7",
        "cursor": {
          "ref": "5381ffbe-b65e-4302-bb06-18e1496aad3a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "524eb23a-ee19-4174-8577-66f27e7a8a39"
        },
        "item": {
          "id": "ecafdab6-0053-44e5-b944-29321fc6aae7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bbfdeeee-f908-41b6-b063-b7aabfaf63c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa58a44-d780-4121-91ba-76ce65a22c51",
        "cursor": {
          "ref": "3970db01-ca23-4dac-8e3c-5f231ac48a64",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f9e3e179-14a7-4e5c-98c9-94c500c568d2"
        },
        "item": {
          "id": "0fa58a44-d780-4121-91ba-76ce65a22c51",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "26d9db08-9160-46d8-8235-e345639a56f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c90f1d-3900-4b26-9ae2-95cefd4d3e27",
        "cursor": {
          "ref": "ef0b13cc-73bd-49f3-88d1-92dc8f2d8f6a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7b359a72-c230-4cac-aa06-71064698bf01"
        },
        "item": {
          "id": "27c90f1d-3900-4b26-9ae2-95cefd4d3e27",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f1572915-2e20-477a-a9c1-49461cd5aa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c72fc4-68db-4891-9c96-3fd64f9bff5f",
        "cursor": {
          "ref": "4e7f42cb-0ef9-41dd-b27c-cc84dc20669a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6fdcb9ac-c0a9-4568-bfc5-a1c90e1741f4"
        },
        "item": {
          "id": "a0c72fc4-68db-4891-9c96-3fd64f9bff5f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "00eb6696-367e-45bc-9ec1-15d5ad2f4332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3721ab0-d9a1-446d-bf9a-42489ffe5af7",
        "cursor": {
          "ref": "f6501a52-fc0d-4546-879a-9b4e80fc2ea3",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fa42270b-7222-4937-ac28-145be398fd97"
        },
        "item": {
          "id": "f3721ab0-d9a1-446d-bf9a-42489ffe5af7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "288ca11d-85d8-477c-bd24-196cd83edfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663806db-bb4f-4e2a-a197-f656c455e13e",
        "cursor": {
          "ref": "ba14a6f1-8f7e-4ff2-a784-c5797ca4ae90",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5b49d5d2-8b43-47f1-95be-3313ab7e3045"
        },
        "item": {
          "id": "663806db-bb4f-4e2a-a197-f656c455e13e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2534c942-9d1d-48c7-961a-2d480eb393ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5c22a1-bba3-4d06-ae4f-1a0f30d897c4",
        "cursor": {
          "ref": "27f3f850-63e5-4bd9-aea9-5ebd60d95a02",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bf17e1ee-b7d0-4627-b8b9-7282dd89b81b"
        },
        "item": {
          "id": "9c5c22a1-bba3-4d06-ae4f-1a0f30d897c4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a9f3b318-5cd4-4514-ab1c-0f6b60913436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d01c22-792b-49ea-b496-77373a79ec27",
        "cursor": {
          "ref": "3a8faa69-3560-49b8-a2af-f1f4b4c9ed4f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e17a09b8-c3d3-4222-b99c-28091422c0a7"
        },
        "item": {
          "id": "65d01c22-792b-49ea-b496-77373a79ec27",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c7d9d3a9-82b7-4657-af02-0b016b5476f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b648527-2d50-4fc9-9e3f-9df671a262e2",
        "cursor": {
          "ref": "a1f16602-bb92-4f36-9440-67b340fb3f23",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b62bc995-4cbe-4e4d-8991-67106fef69ea"
        },
        "item": {
          "id": "8b648527-2d50-4fc9-9e3f-9df671a262e2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e5f69c49-d3c3-4d83-890f-38b828359b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1582b7bd-ebb7-42e8-be2e-474f427e943a",
        "cursor": {
          "ref": "cdc7d759-2cb5-42d3-aa0d-a9fb2b1485de",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2610aa3b-48fe-48d8-9d25-c9e59ea0d995"
        },
        "item": {
          "id": "1582b7bd-ebb7-42e8-be2e-474f427e943a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "179f7a90-da2d-43d4-a791-53e670dc5df6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e2265a-048f-4eb6-aec8-01133a9ceb5f",
        "cursor": {
          "ref": "9917bd17-9bdb-4ac6-b22c-160baf77ee00",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "030196b7-ad0e-44aa-9e07-50183eb5546d"
        },
        "item": {
          "id": "52e2265a-048f-4eb6-aec8-01133a9ceb5f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "5dae818f-0cfc-41ac-a670-df459d0d73da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 345,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a3388b-c3a0-480a-b846-3487ef011932",
        "cursor": {
          "ref": "10045d6f-11d6-4cf3-a188-2d87678800e2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b446be6d-9869-4d4f-af6d-6591b06b3421"
        },
        "item": {
          "id": "88a3388b-c3a0-480a-b846-3487ef011932",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b7eaf8b3-3dd2-4645-837e-3cdbc98b90bc",
          "status": "OK",
          "code": 200,
          "responseTime": 403,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "252c1883-b31c-4006-b242-9413622b571b",
        "cursor": {
          "ref": "dddb473c-15c7-4dec-a4c7-64fa5ce003ff",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c916889e-83b4-4612-8401-0925e60fbb63"
        },
        "item": {
          "id": "252c1883-b31c-4006-b242-9413622b571b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3a101088-4522-4e1e-b651-c4aa36fc225b",
          "status": "OK",
          "code": 200,
          "responseTime": 1834,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c372d16-4aeb-4a10-b302-96b71f7879cb",
        "cursor": {
          "ref": "b76e37d4-df6b-4cbc-a4ba-43c1ae10c285",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "09520ca8-344b-45e0-9640-2ab2a14e7b65"
        },
        "item": {
          "id": "6c372d16-4aeb-4a10-b302-96b71f7879cb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7a367525-8f69-4b79-a424-a0dd5eb8d59e",
          "status": "OK",
          "code": 200,
          "responseTime": 1579,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbc2097-a91d-4647-aca8-e4c61e6f1da2",
        "cursor": {
          "ref": "a26d8643-1f6a-48f4-9237-e7d02333ce15",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4c28d32d-80b1-4e01-a8d1-44ff25638fdb"
        },
        "item": {
          "id": "ecbc2097-a91d-4647-aca8-e4c61e6f1da2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14e45fd4-f91a-4ca8-a3d1-d3eb0e546113",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbc2097-a91d-4647-aca8-e4c61e6f1da2",
        "cursor": {
          "ref": "a26d8643-1f6a-48f4-9237-e7d02333ce15",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4c28d32d-80b1-4e01-a8d1-44ff25638fdb"
        },
        "item": {
          "id": "ecbc2097-a91d-4647-aca8-e4c61e6f1da2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14e45fd4-f91a-4ca8-a3d1-d3eb0e546113",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbc2097-a91d-4647-aca8-e4c61e6f1da2",
        "cursor": {
          "ref": "a26d8643-1f6a-48f4-9237-e7d02333ce15",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4c28d32d-80b1-4e01-a8d1-44ff25638fdb"
        },
        "item": {
          "id": "ecbc2097-a91d-4647-aca8-e4c61e6f1da2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14e45fd4-f91a-4ca8-a3d1-d3eb0e546113",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d953c13f-e0bc-4e04-8996-9bd5ec984f92",
        "cursor": {
          "ref": "173d108c-7e00-4623-8289-3ed6399ce86c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fb5f7592-e002-41d4-9204-2e7eae3ada2b"
        },
        "item": {
          "id": "d953c13f-e0bc-4e04-8996-9bd5ec984f92",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "abbd02d3-9745-4adc-b3f4-25b1115c3e62",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1300,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf77ac3-02b1-48c5-9066-b7f15187ab6b",
        "cursor": {
          "ref": "741e37d8-8ddf-4a61-91d9-80750d865927",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "765ad0a1-520b-4222-9836-1e6886471d45"
        },
        "item": {
          "id": "5bf77ac3-02b1-48c5-9066-b7f15187ab6b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9c31337e-6a1b-4897-a645-d11b7070f0d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf77ac3-02b1-48c5-9066-b7f15187ab6b",
        "cursor": {
          "ref": "741e37d8-8ddf-4a61-91d9-80750d865927",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "765ad0a1-520b-4222-9836-1e6886471d45"
        },
        "item": {
          "id": "5bf77ac3-02b1-48c5-9066-b7f15187ab6b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9c31337e-6a1b-4897-a645-d11b7070f0d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df403987-a8ef-4991-bf6d-04ae2072f08d",
        "cursor": {
          "ref": "015134aa-3a89-4c5a-8920-f29212a5b75d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "631231ec-3194-4069-98d3-ccc6a2af2c7e"
        },
        "item": {
          "id": "df403987-a8ef-4991-bf6d-04ae2072f08d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "18b6a470-bfc3-4010-93e0-bfe775c18d8c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 572,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502acc3d-235f-4c2c-bb60-8e03e4222131",
        "cursor": {
          "ref": "02e6f1de-cda6-405c-81ee-2002ead73e71",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7f393112-7ba9-4cc7-a750-27558130a825"
        },
        "item": {
          "id": "502acc3d-235f-4c2c-bb60-8e03e4222131",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c01e4459-0938-4b8e-8d41-17ba19f0b4ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502acc3d-235f-4c2c-bb60-8e03e4222131",
        "cursor": {
          "ref": "02e6f1de-cda6-405c-81ee-2002ead73e71",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7f393112-7ba9-4cc7-a750-27558130a825"
        },
        "item": {
          "id": "502acc3d-235f-4c2c-bb60-8e03e4222131",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c01e4459-0938-4b8e-8d41-17ba19f0b4ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6f8c28-d191-4c0a-9e3a-31e8921b7d3f",
        "cursor": {
          "ref": "ac7331af-ec85-4e93-83d3-df71217fc6ef",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00e257e7-a2bc-4c50-a531-0afed544bfcf"
        },
        "item": {
          "id": "0a6f8c28-d191-4c0a-9e3a-31e8921b7d3f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6538359b-93f2-44c8-a5be-be9bc28afd41",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 611,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}