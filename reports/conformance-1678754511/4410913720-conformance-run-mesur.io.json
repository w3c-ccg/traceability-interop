{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "01855c6c-6309-4ea6-9d6f-3cdc92d5de7a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d814271b-0ff0-4d6f-96c9-d9f4a55b2591",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ed3ce32-771c-4dca-b45e-304bdbc85f6f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e33e654e-0227-4dc1-91b3-1347765699a7"
                }
              }
            ]
          },
          {
            "id": "e0c3258f-968c-407d-879c-333865d2b8f7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9f572f2-b172-419e-aa01-7cf24eaa277c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f989ca8-d456-4a7f-9c03-c6518278fb7c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ac01af21-1d35-4b0b-99f5-b5ab053e28f5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "76eb9303-f944-458b-b070-9629d04c7cab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e382cc70-b768-4118-a6b4-93d408279af6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b56c244b-bac1-4bbc-8261-085d3632c142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36b5016c-1d49-4108-84a2-a4e4c7d8f837"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c454f0c-463c-4f7b-8fa7-d5fdaa363d01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a526a887-07d6-420e-b473-84194c418bca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f02d9703-a8c4-4f28-9080-073229dbcfe9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea48e58a-cdda-4764-924f-90333d387660"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "779fac93-a7f1-4004-bc35-e0da9e806b16",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8ed9a41a-3cf0-4b41-bb6c-6c6fccfd0dcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6f37b51-91bc-4f11-9eef-ddf1472b6339",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c3e80d4-07f1-42eb-9502-d287f42d19b8"
            }
          }
        ]
      },
      {
        "id": "2522a4a5-50e4-47f8-9d88-5b307de7228a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cb85d27a-8220-4fd3-8732-4a0f2483f52a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60af7276-78f3-4941-bd89-c170bad47104",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "99174a0a-5290-4168-a65a-226f8b695314",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5fe1f5-e92d-4cab-87e3-393209cdd1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d6a2205-a419-48cb-9d4f-09c5dba8c6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9070d946-a7ec-47ca-81c0-71a7333608e4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e51e46c-5d9f-420f-94f1-28028fe98c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22284546-6e1a-4ef0-ad11-c26ebad71e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d931d2-a6bb-4151-a80d-43efdd7912cd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d0141e-eaf1-4cc1-9f01-48fffcad0959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3636d1b-851f-4e21-ac5b-13f22af3690d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c722f814-759b-4300-9f84-dc04f1eaa42e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3a8a8b1-a163-4661-9413-aa132696aab0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd82b34d-14c1-49ef-abd4-291dc978735b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e12c11b0-9d5a-4df0-8ee3-5da6dad07d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378877fa-e8b6-479e-a62f-5bcbc5ab61c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464c6a6e-f6b2-4ce3-9080-0503685440bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919552a4-bab8-489d-91ad-a548267719f2",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac9afac-9d49-49a7-ae41-c0434ffd9a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac135396-9da9-4a8c-8f54-1467f64cc89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac289f-49fd-4a7b-9311-2b9ca51dc9f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "614d15dc-106e-48c0-a09f-1af753656677"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "34c8537d-e602-49a7-a00b-42bbbb22e2bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06555e1b-8612-46b5-b260-8ef267621d3e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83b6a7a9-b1fc-48b2-912b-64c716dd6b5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "db9439b5-2a8d-449d-9b67-ffcf0a14d9be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "224f9597-6afb-4db3-8288-f10ff686f3a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "2c9ae4cb-a5f8-444b-b9f8-cc8b33410045"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd9747e9-b89c-423d-b28b-b7499138121b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23668a67-6559-46d8-90e5-f489842bbc35"
            }
          }
        ]
      },
      {
        "id": "808d881a-87d5-48da-91c8-1886550b7fd3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "191c2cd0-93a9-4965-88e0-9537b2f59ad9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e35f7079-d5db-440e-9e6a-9c0bf2a0a543",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f1f60fc6-0b96-462b-bc5b-5015510ab4eb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e21478e-3670-490e-a4f1-a8fcac3b0609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b457fcd5-028e-4333-a644-db5d22949867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecbbaa3-5549-43f3-bdb4-f986f8dd24f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e59e33f-3cda-4ef8-8a40-aa49bdfa516a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e348be5-66e5-47ee-8afb-03c7db0bcd41",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b355e540-f738-4bdd-9a3b-38569897c881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07306ca-e744-4ea2-b989-d199b65fae8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5265f6f8-6c60-454f-bb12-1e39bfb84854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f2f2cf0-4b81-43c9-b7f1-18af51d9f93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bcbbc6-1164-4810-afdd-96ea3259c669",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12933a84-3ed4-47b7-b2d5-9a897dd82ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681dc66a-1fa5-4e93-863b-170d55836b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bbae2c-0500-4d3c-9d63-4c25b2b1a08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c0407cd-d947-4b66-b07e-89395a88729b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a619cd1b-21cc-483e-b537-7989b8243dd0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30bc295-2a37-49cc-b6e2-54dbc4e29b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cd7ace-9af6-48a4-b02f-73614ca5a70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10195226-9ff2-4a98-8dc2-d98104a343f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6aec4777-58a5-4e58-b79f-cb3904e98191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67089008-03b3-4785-80ea-9cb75df9223d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d711f25-088b-421a-9e67-20929b72debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470036ee-2666-4138-b394-81c5dc8eef5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0c0f13-3bca-4293-a529-4d5d462e63ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50624471-19b4-41e5-96b3-0d79da54523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a48c93c-f4ff-48c9-b180-051e9d555538",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b437cd53-2d2e-4328-9229-1555d2393e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a91b37-5a62-482d-bf6f-a0656ff1230e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3b70be-5254-4a01-9b15-eea04871c7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed19b7ea-29bc-45fc-b71d-011f3c0a8099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384d5627-31b7-40f0-b71a-b939041adbcc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3f9c99-b81b-4ff7-8776-abf8a9bd381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba3e949-21da-4ff9-a3d3-2138ed09cf9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99eb1349-d884-4d0a-bdff-4829e492265e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1eda183-9912-4942-9405-6bf48f1946d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed42012f-2076-4da3-8c34-0d2fd86c84d9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91676f90-2a29-49f6-a0d8-dcdcd65c8fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a56733c-1fed-43be-aa28-f430e0da2bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed16d57-2fff-4362-9b7e-aac086566773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9388f22a-17bb-433a-84b1-7b7733c1ca05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c94f0d-6744-46bf-baaa-92d2119e2346",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134a592f-85e7-4abe-a6c9-d2363cf7945e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a5cb7c-fa5d-48cd-a7ad-3afb37dee73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c932ad-f2c1-49e3-bc51-143b1115fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6695069-9ff5-4593-bcd8-c3b28944bf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cc7cd6-9678-48ab-9020-ce5416bf4c93",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0f0b29-835a-4b16-993b-11c439339ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f367b87f-5f95-4b54-9e17-702b62ff31f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8486b15-2118-4a00-9eb6-b9b340781576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f5444ae-bc80-4820-b989-a05fa4cdb0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd38a03-44fc-404b-821b-72ef8b588f58",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12dab35-28a7-4357-8138-1170c436c47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913f8570-3b0b-41d4-8ae7-ddb38bc6974a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0610650b-f710-407b-8610-edc3c48d09ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5d3dce3-bd79-46fe-8bdb-953880211ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303c1fe7-86e6-4f94-897d-343cae882088",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cb3086-3d00-42e8-9fd9-96cb009fd1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fa4dbd-c24a-454c-b0ae-6df438c4e1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c650ee-b1aa-4e4b-b1c6-3662249ef36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c45bee8-7561-4f78-abe9-0865e8b87113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1f703c-fd3b-4382-813a-afe88c108f92",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fc0785-5a4e-42f6-ac01-5639ff2968bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454aede0-bede-491f-9ab5-270e5ee95dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc433209-15e6-4d30-8d9c-10c88ad176f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a881e00-04cc-449d-a3ae-56ba6246787c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd89561-248c-4ea5-b752-ad6dd8571b5c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83f7be6-b510-4a9c-a2ce-44881daa1653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16d2179-b2cf-4904-9bbf-8d1e93c56241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602b9e8e-48fc-431e-95c0-1a4ddfc0589a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdbe0a21-3aef-4147-86bc-fa7ce01be9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757dce05-d600-4bf1-a42d-2fbfb9c04313",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a732e60c-cabc-4c44-b141-d44a97f781c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4f615f-db9c-467e-b5f2-930a2d5563e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe77528-1dbf-422c-add7-569641d6be34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ab62099-5f26-4886-a300-741ebd62cc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba2e1d9-3290-4090-8493-f4cf5e0e23b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf1218c-0943-4e92-b4f0-3a822aa09c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4763829c-4236-4dad-b994-aea6e1319578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d2d5ec-db98-42be-8a50-ecb9273506f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9538a2df-6291-44db-aa30-e142ae0f41d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb0e063-f3e9-4142-b178-f63c52db7263",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d7106f-d08d-4dc4-8668-5cc7ac7711c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e035e09-bb9b-43f4-b28c-9f6e88413511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d6cd15-204a-4dca-828d-7c133ea53725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d384e3f-ce1e-4088-9397-315e62b2c0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75ea7ac-8233-4564-806b-3f75ea44fe11",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad23555-2105-4023-855f-67ea13a21df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b16f00c-c2e6-4a89-b84e-c6ae3591acda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b0d328-d638-4b6b-b026-d0322fd00faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed7bb68-38af-4d1b-a539-b56eed66a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb3a019-5808-44d3-8588-5c21452f63de",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ce87ae-0db5-4df8-b278-2e45533760d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983d7e6f-bd63-401f-b0d8-a93654403813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5307ec91-0ea0-4b67-9c90-7ffcad504394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f02ca71-51b5-4930-8dbf-2130695a76c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0a7685-8a24-4e10-a379-29736b6b1e8e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7721e093-fa01-4bd6-b626-466f7f9645d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc72ecac-a3df-4133-8fc6-4daf06936c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55093121-3cb5-46fd-a840-b18e834a3333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0032f8-4a47-4733-a8b4-738e14296a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91048088-fd12-46a6-af01-26b0f9e85db8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f41f09-6315-4483-9917-9e67a7ba4dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0b4536-0615-4794-a3e1-b202a65182e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b3bda5-4979-4867-912b-9cb6af73b776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58d5072-167c-4bef-abab-a91777d343d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73dd9f7-3d31-436b-adde-0f35bf9b9c8f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459dd237-87e8-4b61-8302-46827eb2354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbc8bbf-fea9-49e1-a5ba-82e023f3b475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0dd03e-5f1c-4db0-b193-a46c90fbb72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6246281-85f8-4660-865d-71bf6a6b2bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2b78bb-dd55-434c-8f6a-8f14adac48f5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6be5b9b-4cd9-4cd0-8fdc-40950e70b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6ded03-ed2e-4ca5-b139-4f3dd0cee441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2c5120-1007-406e-84b7-7b7773460a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12f6ad57-8645-424f-b976-a9061f741885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6a36b4-b625-4bdd-a21d-eae0d80351d8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea0982e-6b43-4a21-b031-5006ea07a2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7415cd25-1687-42e4-ac0b-723feed1004b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430e6222-a722-4871-9a1b-a95039e0bc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9201f6b0-7953-481e-b91b-2b45b321de15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d81769-8150-429e-98b8-bf15cb397d04",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29afa153-7aa3-47e6-855c-60a7211060af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721b8557-83b4-42f0-a93e-20d59b2cdff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23a8394-8639-44e9-bd3e-1e0f3ed2102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99fb219d-23d8-4532-a8a7-28f3f357e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a99abf-8cef-4e9a-b915-76ab93a69590",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8014c85-bd3c-4885-b71c-0d98df5e5d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5fe830-237e-4af5-ad57-6185925bf1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dc6e49-772c-4c40-ac54-695960469cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad60c611-18c2-477a-b4e6-9ebbc3b16d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5e9e49-ac6e-4235-8321-d39dd37c917a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b271afa-3856-4599-926c-d1ca9d55944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8fc8c2-b438-4603-8cef-764848ae07d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbe2248-7351-4fd2-b529-c4f9e480198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "adef2b68-8bbf-42da-870a-7b54df619b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b784803-4465-40e4-a601-d91d1698255e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22960347-740a-49f5-b79f-35b9aee12cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d62c2a2-f2c7-4b40-bfbb-7a1169651e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537147f4-f913-4f7b-a3e2-163a6955cb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6471509-94df-4ba2-8bfa-5dfebb7f6c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f1cf41-b22b-429f-acec-be9404711bb9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e785af-ec0c-47f7-b461-98d26322eba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383fa585-c218-466d-9237-10d7e405b607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d38d53-6183-45a1-a1b6-8089b8fbd946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ce8521-2b09-406a-87d9-3d53fc38d71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f544fa-1441-4942-a88a-41621a8c5a2b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fdba6b-63ef-49cd-9bf9-60a86a6c968a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3767d24-1b52-41d9-9f32-dafd271cd4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b9ae39-8804-46df-ac25-05ed439644cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d51e90d-a258-468a-aab2-11236b74b034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f116f51-3137-43dc-909c-3693ab8aeae0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98501c09-13fa-4d6d-8862-3531108f57d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb2f03f-96ca-4593-948d-b552f7e90d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407bd1ad-f590-4ad3-b780-ffe86d6493cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4946d0fa-f1d8-4358-8f6b-1ffecf2613fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5b2d8f-9d48-41be-9d4d-70c780ac3211",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75871e5-04fb-4072-8414-301bf7b60800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d400cd90-a0af-46f1-90e2-81f74cb6b3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808a5f0a-9b0b-49ae-b72c-66d7d79f1618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67877a7d-cb2b-41bc-a0e4-2f0381412fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf9bbb8-ed65-4f84-b56d-e8193a46a204",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2296b9a-6b9f-487c-917a-5f409564e69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8207280d-d286-4096-ba58-a236775fc253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee839361-7c6b-4370-9030-b4ed878a7fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3200a209-ff69-466e-a890-19826dbc11f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7465c9-f605-4a5d-91a1-8ffa1e15b383",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91817778-db0c-448c-a88b-0a5f5d1c9a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba4b3e7-1840-43dc-917d-2da5b9176876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc61bb0-a9d2-4257-9fbf-daaa0f552dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83731514-0c84-43f4-8713-e32bf49abd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febd91d8-1ed1-44db-ae5e-44f1b098ff83",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9094c124-f65d-4022-a101-166f25fee578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daa258e-f81b-48bd-a209-9766115c5ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db02425f-3017-43df-9770-86d906a66f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3c4068-b502-4700-82a1-ac5e16b9fdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a869fce-3e40-40d5-9fad-e7de9dc7e3bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e4754b-03b5-4b12-8d3b-4f7f43b30204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c7b047e-7bd9-47a5-ac81-dc1c827f8caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e35d27-7452-4deb-aae0-b3d0bb21d547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b79fbb-b382-430b-ba02-fead7dedcc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342c9951-195a-486e-ba93-c3976336973f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72220f7-fb96-4fd3-ba91-0cf037bbed97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf80c401-82bf-4d52-bf66-5a94db524f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ee911c-1e33-4b2e-b66c-30a0b8983345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dd555d-dc9f-45fe-93f2-7999a5cbde88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5126ef8-fe0f-461e-bd3a-ed42d5fc9326",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f47042e-416d-4981-92fd-18db1400aa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c6c513-d1f5-44ac-a8a7-0b9bd4da65b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee81f81-cea5-4611-befe-55b74edbafd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "abf8924d-b4d9-42fa-aa95-3fd1bb586fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f59312-a627-4f28-b12e-fd07300a03b1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12e9ae7-dcb6-47cb-9694-15b89949eadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0386f66b-df6b-4b78-8418-41379bbd8967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428d39bf-78ee-4752-8b6d-45e28b499feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "255b63f4-12ac-4185-bd38-cc5548ae829c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e347ac89-1285-4a9b-a0ed-645bd0952d83",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3d14fa-4083-44d7-a1e5-d5108b2d22ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2d2b3f-e37e-45ab-8fca-8f5de4361e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ed00b4-a716-40ff-ba0b-92e742bc642e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "74159fbf-0aac-4d0f-9cf5-40e39e4b0f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8aa58e-ed77-42dd-a8a2-2f2413309902",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0106757-6be9-491f-bda5-2cd7a8959dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad9effc-8c37-41d0-8a53-ee3605d32b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2a611c-4b06-4c4b-a466-0288374eba81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7afe41-f247-453a-91f9-867f8c3faeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6742e774-a3fd-464c-91a0-be179add6016",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea82181f-09c9-4b59-b201-919caef92941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049008d5-1ce8-4adc-ac47-03da9f7c391e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3927075-8d1b-4191-82ee-81a0eb598d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a80c1a84-226b-4270-92de-783b5def7a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a426567e-679e-42ef-9a05-bd55bc5789e6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df7786e-1d1a-40f9-9415-c25add1b4301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fd2c9b-11a8-4edf-a062-f28396ab8379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f77d23-15be-4797-b9aa-0d05efd97e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b025002-eccc-4650-8206-a181324b7c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d83e87-36de-4dea-9844-f2708117dfc8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1104a730-c22c-4e1f-9202-2840cb725b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42224135-c9bd-4aa3-ac8c-a58920c3d674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d38f4e-ee6d-4746-8980-834a2102f669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd03eb0-031b-4c28-af58-e8598ca9653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8bef44-d9f3-4dff-bef4-25bfa8777dc1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee2c6ff-ac3b-4de0-bf8a-835f76d62d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d96143-7774-4217-a0ef-25eba64ebd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e556a659-4c19-4b51-bc71-0c16394231b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da4f21d-76c8-4787-a97e-19e3a78ed8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92f44f8-616b-42b0-bf30-d30340c23988",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b97aee8-24cb-4715-9182-164f79e51942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31daf72e-06ad-48ad-8c27-b394821b3655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b7c0d8-9044-4849-bc47-e4b95a7b2d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c489752c-4c21-43a2-93bc-871424a684a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9003fd6-6a5d-4c39-ace7-f4c79db854d5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c203746-7fd4-4602-b239-04e2e2968a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60323b93-1ee4-40ee-8375-6d1ddf3632e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9edc6e3-784e-4269-89bd-19f3b6f844aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac9e1fe-5acc-40fe-b735-726764fcb942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3762d528-41f5-4078-b373-78b5e1b16266",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2e3622-180e-438c-96ff-7d380706ed74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355bf3bc-da69-40d5-bc46-62f130dc5e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84b6504-130b-4a33-a779-e8cac7259c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba926095-a286-4d29-8fd9-9bc18e8265b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393b2c2f-f8ad-4750-b0ef-7d8b33b224c6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e032d5-3e3b-4fab-b2a5-0458eff78954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff2fd17-6d98-411b-a2d8-af4e26abf982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac37442-31e9-4c03-9298-b78a1de4a5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "673df21f-a05e-483c-a9bc-d15ce29af54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5d3134-9209-42e8-8151-32a71cf646ac",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233033f5-264e-4f13-adca-24445ae37fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed236c25-8266-47bc-a8bc-19366a1aea9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89ace74-746e-4ffe-88c6-abad602a97c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a549729-b424-46af-a9ca-d2ccbad25317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f97d18-e191-4b71-b7f3-5756282b2011",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b9a669-11e8-4ecb-9319-39b13964dd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308a217a-1b5d-4892-be8f-7b95d9f86c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937ace57-ffef-4662-85e8-a687f6a93525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fc8aee-597b-4d29-9773-e9c3dfd547fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c91aef-5ccd-4846-b300-836bee95e789",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1673db-0758-4260-823f-de22e5731de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140b80cb-00bc-4753-9cc8-df7e4769adb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f82af33-704e-40fb-a345-e7ed760561a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f01c2d-8029-4698-adc5-b10ee419da9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d571593-0a27-4a33-bebf-839d5b4e1946",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf59fec-febb-4480-baae-65ab3064cb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc57c7a4-274f-4ba3-8963-1bef31711974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a35aecc-42bb-4d16-a662-800049fb9be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc171b76-26ba-4250-ba50-0f018ffedb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deebc67-4a43-4831-be25-81cb2ff363b6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c79bd1a-23fe-4479-8232-2f59312c0a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347281c3-18fa-4a62-b988-ce2479ebfeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3cf46d-6078-4cb5-90c3-9e3609c93ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0698dd18-e024-443d-add3-5d900289ee82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7e0e51-590a-42ec-aa17-556aefc8080d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639a9055-5270-4a72-b681-8318081ca438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ea8bac-c1f2-4d5a-bf32-b02bd5d92aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decd5579-0ebd-46eb-a503-f80320ecc821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b902aa-fd7e-431a-a939-68a99fb33430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336d8ab6-90f9-49ff-bdc6-79f4287ade23",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36288c98-23ce-4fac-a1d3-5ac6a491af34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec047fa-4443-4afd-854e-1a088aaa80b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a078238-3366-429f-92c1-ad2309515809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f914de99-6cd2-455b-9ceb-190acb386916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e409600-2d5c-4548-9032-bd5a503fa72e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46b9744-ea5a-4bf0-9804-799eab869871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76def6b-5324-46c7-a34d-187da0ff8550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7add2c3-037e-4ca0-9b47-a553d3755b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f11d2a9-dafc-4773-8841-dde8213f6049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6e11b9-01a9-4a8d-8a49-212d2cee16f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e530fdb-6362-4c73-bcf2-05b298e4ca68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69dc8140-b91c-4c61-b207-db7959adfb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399ebd02-388a-4f5e-a5bf-4a66aa3faf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "344b9694-8caa-41de-afa5-fa850fe15d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2083f3f6-3f90-4002-920a-a958439d47ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4b20c8-5dcf-4f1d-8523-6e3a277dd00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577755c3-bee6-4195-844d-fe50b861707f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b45c4a-1e6a-4585-a28c-04a3525a0c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b278ea9b-209f-4373-8e90-1f00592f63d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bf4ee9-8f47-47f6-adff-a5d33beb6c82",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2160dc3-b0b9-40a9-9e98-b91ec3b6ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb456aa-126a-4ac0-a54d-3dd1ce07dd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a35aab8-be93-46f9-ab8a-04ffb17f4f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb8acf6-d2b3-4b25-a67c-895043fc1528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6b3f29-941e-4b36-a757-3fa54d640fc2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7897c827-4327-470c-9e1e-ad969138c085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678e6b4b-23a6-443c-be4e-4c857956a3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a271d73-6154-4317-85b5-671f48655abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "883a0fe7-a65e-492d-b32d-affd75d7a0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad6b8b5-7baa-4eaf-afaa-4e98d8c74fe1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2007bbbb-5e6a-459d-bbf0-1935dfe449f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f416752f-cd37-485f-a45e-3d29af09b245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434d3f39-9efc-4c40-9192-f97d9fff1ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e812e6-2059-420f-933c-82f8a55da354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859281fd-abb3-463c-89c0-cd5cb463ae16",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7e1550-4cdd-46b8-817f-eec253a80a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da9273c-c2d9-463d-81db-b0990027c396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9857afab-2963-4e39-beb1-943a12e6a9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9febff01-2600-4ecc-a709-61690a89bacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171d78e0-df95-41b0-9c3d-aeeb45cd235c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a0c40e-6da5-48b6-9f56-e85d6da409f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b70b6e-b54d-4633-b643-bde69fc7583f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71a7f7a-aafc-4f70-828a-b75d074dcd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bee9205-a519-492c-8a19-729fdfde5015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a7dffe-ccab-41f9-a95a-244cacfd7037",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d049e3-577e-451c-ab9d-479b50733f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ad3141-eac2-4320-b91f-259138939e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb9d7f6-834d-479d-ae15-ca4d69b462a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6984dfe9-8df7-450b-b23d-ec1ce911baba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0d95ff-d94e-4327-8e5b-1a881ce34f0d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb174ba4-4b14-4e17-bd3f-109f8d620070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfce0e04-a47c-4385-a6b9-38f4deb0bd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6495e235-8d11-440b-8c91-383415aa04d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e834925e-4a2c-4372-b8d0-0bc935849f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d259de-aa8c-4f08-a238-a749cc563f4d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8338c3f-4555-48e5-a562-e0bf0537b5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9274f7-921f-4d92-9095-674d65149dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717cd4b0-4a83-455b-a7e5-63080988c207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42708c27-9dda-4288-9436-90e5e882aeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e14abc-fd21-46b0-bb8e-01b77d1f96c2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447ef73a-6e56-4aa7-a7dd-c8990f1f775c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a42603c-224f-47f7-b31c-45731aa47312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8c0e6f-651c-4ba0-878c-b324343d8119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "df94f32f-c4d7-4c66-a243-2f1eb58b3002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1707e25a-d056-49d5-8f6e-5e5cb9d1bb65",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be279ff6-5605-418a-bc20-c1b7f5bdb73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada1df0b-fc54-4b03-be2c-6581d222c888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b02928a-93ac-4c31-8088-a3a077dccf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e8a7db-8a72-402f-8ed5-e03ef55d813e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb796594-4f68-4ebb-844b-29853861945d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a91ebeb-b24b-4bc4-af6a-f49b673ea445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea61eae8-f5fd-4e00-901a-31273d89a1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e766382-b94c-4520-a4ba-ca5b17dc8f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a5b353-f700-4920-81b1-c23c8abd1e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b53fe9-4559-4846-a5ec-e8ea03c41c44",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62d2efc-002a-4f8d-b870-9af5bd874e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5fdecc-23de-4b62-b3f7-28973d64ad50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e3d383-5b1c-44ff-af34-25153c3c2bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7025270-7706-4fc5-9f55-4807b9e743b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79289005-5d59-405b-b607-00f86eb190e5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f645c493-e839-446c-a9c2-60dba60c2690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90999dd-20b0-4116-8f5e-800fbb8f3881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd2cf58-b5ab-45ad-9402-741c9fcb20f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93a3afa1-0d85-4b09-a0f5-42e8239ad4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432ee63b-00f4-4550-ac4c-5870ca34b9db",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93ee108-ac58-447f-a629-322bff8b787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e1affc-b61b-4826-92c6-f8429d3feb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a67043c-7ede-4d96-afae-83a0cac8bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5225d15-ca05-4330-842a-1bb38aa77dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45a998a-f90d-4652-a0ed-7ec9b043456b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437ec639-6637-4c07-a778-cbce5e89d90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c723cf4f-5187-49f8-abd7-007a1139a88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155c3c4e-bf12-40c8-9132-61bdffe8fe31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb084e34-330b-4dcf-bd4f-ad887242f4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b53cb58-ec5e-4e32-8add-0ce6f89cb628",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052e0dc0-af2a-4d21-bb56-1a9143eea81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1611e964-e69b-4a9b-8f74-7efd4e514a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117265de-f312-4b43-90b3-1207930381b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62894564-be9f-4ebf-967d-dd109aa25158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9c7d9c-b649-47b7-94ab-6324afab614e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231d07cb-dc0c-4eff-8d91-e7978da0366b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1792676-b8dc-4d0e-bf7e-b7e5d6122f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3949e1b-f4f5-428d-9b15-c41490367baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae2ee92-c106-4430-b5fc-b963a42b9671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ead8c-0926-4040-9a46-a062cefa93de",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e499817a-a80e-46be-995e-dcab45570d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f8e770-ac1e-49e6-bf09-e2acb951a54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4e6e54-d39a-432e-815a-c6662ac8eef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74204be-2f7c-4977-9fcd-ab409ee02949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f441f17-b67f-44d3-b8ec-0541914fd668",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31f4725-be99-4278-85fa-54db7d9dee83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf227b17-938c-47e3-bbed-fff856a11d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ee4813-5abe-4bae-8ac0-ff2b3cb0d67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd00366c-0e39-421c-93e0-11c95000ced2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8402b081-2bf0-4fd5-892a-414e3111cf83",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fddd56d-0a80-4bf2-9205-30f357e3462b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0593d702-8c3b-4609-8314-1697cc1dfe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527a605a-0c39-433e-8e1a-ceccb80470b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "072ef885-abc1-4348-8d0e-a7ba76d40d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a550851-224b-4c1c-bd12-2ae3d3bd4a2a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3570956c-a092-4bb3-a2a8-d4a2fedd2063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4800b116-378f-4fdd-85cb-d8911daf66bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3908c33-2109-49d3-8dce-cf2c52fe1e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c096a19f-f11d-4de7-ac4e-b09ab44e9f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357fec5e-4631-4d64-9dd3-962a772788d2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644a1835-c9a3-473a-aced-b53f52953811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e94b283-3188-4946-a4a9-e68a09bc216e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41fee80-190c-467d-bab0-2df97534d04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f57dcd-cb47-430c-9ca7-9849fc421191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266d2e50-0ba3-44a1-946c-b06de8dc7cd5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9631ae6b-258e-4262-ad35-735a76161abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f162014d-3157-4312-be1a-b38451bacaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13d15b2-c9b2-46df-a64f-0bd90204d6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e09d1741-a33d-447e-8afe-6503abe6e5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b938e6-f240-486c-837d-63df1a2aa0f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9874c51-1987-4960-94b4-259a495ab8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627c7fba-e206-42a3-83ee-af8e86500735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d06168-c5a6-44f7-a87c-89b9fb9869fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2ded63-1f1e-4555-8bcd-aacfd988669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a086b43a-1782-46d1-a9a3-0962bd164808",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498b65a2-663e-415f-ac4b-7e0d81e2f33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1c7300-05a7-4be5-98dd-43630a3a8e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5de6d91-3b84-4274-abce-4d647d5cc64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "812f73cd-613e-42d0-a85a-cd214bb1d347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2678eb0f-25e0-4ec1-ba86-c7db02e5aff4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d4b2c7-0571-4323-8c73-2d6b2cc666d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07328e7-1f53-4dd6-aea9-69aaa913adba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37b3f93-bb40-4de5-bcff-4ab00b6d9e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11135dca-e6f4-4057-9861-f59ca436d7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ecb84a-a138-4458-a0bd-98094ca57b4d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e3aa47-e41b-4dfe-84a7-2381144428c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad69600f-f0c2-405b-9db6-247a7e394a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da3d5a9-e6cb-418d-b340-165cb4dd15b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c73d15-9941-485f-a4ab-81645e798714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f820629-4e01-4d71-9236-35e9d55b0e6b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c926d4e8-1964-4a78-a174-9d821e67cc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19aa7899-4ff0-4cdf-9598-f85ac5debce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0eea86-fe4f-4713-a750-7dffa18c1644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa97e2a2-6d21-4e33-8f72-1b16f8cf0315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8848aaf8-6be8-4799-8703-d14a8238638f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728d0328-f887-4489-ba07-e21547eb35b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf4ce5f-7131-4a46-8470-f45e2a586306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9bfbc5-2f52-4e5a-9cbb-0e96fc006d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f6cc6e-5942-4168-932f-07ba23cc2522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce697ed-02e6-4397-901f-d3459608a203",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32c5d45-3ab8-4244-bdb4-3e3aaeb83d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686f6552-3073-4a14-9a95-f540db48f773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98849284-24a4-421d-ae27-dd95a8c0ef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4fa060-c7c8-4ea3-9fb0-d011239f6b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef721f5-e914-4318-8f25-dfc45f3c5e59",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ea1118-ed81-47b1-8b4f-4086297f645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801ccec7-32b6-4bcd-b7d7-5598f1ef43d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958e38c9-747f-4d6d-9736-9c0bee9f5873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93899d36-96cc-4476-adc4-0e8ec218879b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8473ab-3e3b-452f-873a-fbe19a7fba96",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cc1ba1-7751-4782-9b86-91da928e2dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d81ade-f27e-4848-82d2-cfee654eeb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f430d397-877b-42d2-925c-dc7bf783705c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9f116b-779d-48cc-922b-9fbd79ca45b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24d8832-ec7c-4938-88ff-b1557d76d6bb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db55899-345c-4aac-b482-bffe5aa33391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c04d699a-aa03-4e6a-85a0-019d1a96b7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37de907-3fab-418d-b3a6-a7ce989c0436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8e25ba-b017-4260-b700-3741348507ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12a7248e-4fef-4735-9c33-d5c4e3eae9e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58370106-9821-46e4-b95f-04dcdb8eb7b4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c296ae7-1a07-4dfb-b146-929091f80370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c49a500-8f42-455a-9ca6-510e9d237f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448b13e9-a83e-48b7-a48a-c1bbd7fb96ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19bb974d-3ef6-4af3-8159-cef84d4bff3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6e0201-5ee1-4f4e-816c-943b357b0e8d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4f6ef3-b715-430d-b8ef-3c33085fd6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b282b5ea-3464-4960-8959-1a4a7a3fa56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baab4d1-7b6f-4dea-8cc6-d33353381f15",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79faa38b-a016-4444-8e37-ae78c6e7e926"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3d13a39-9b8c-40a2-a374-76fea8419117",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9a82264-87e6-4df7-8c45-32a15fe18114"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e18fd199-b66a-43ce-b6a7-7699baa47b1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15628b93-92da-4cb1-bef3-6a932c03f223"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4af31b50-a496-4894-98f5-c96e130609af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f459273c-4ce1-437e-bc4b-10b73c2bc3aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ae9a3f2-3da3-4980-9f6e-2899361e5c14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4e1a7a9-db3b-4f6d-9bcf-8ceb2005b662"
                }
              }
            ]
          },
          {
            "id": "7ff01f19-6863-4b63-a0d5-07ede422538e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ebd8eed9-c5ed-4b4d-94ee-ed8e91774fe7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "164a81f3-8a97-4528-b545-50cd25f81319",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78c2ad74-3e17-476a-8390-62d91b212433"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8740701-0173-4d24-bb0b-772ec4c08ceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66ae7793-5549-4fb6-a476-18a43f8b5a16"
                    }
                  }
                ]
              },
              {
                "id": "ff4d7585-a644-44dc-98d2-879c640c4c83",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d249f2a-3d0f-4e3c-bcfd-75ad11bedfb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8113c99b-fa83-4549-8e80-22964ee5a14d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a89fa02d-40b8-4cc8-b949-cb5271fecc5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7f948ec-e9da-4159-920c-3320bdc0066b"
                    }
                  }
                ]
              },
              {
                "id": "f2367441-25c9-4a04-82b0-85b3c5ba26c3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1166e97b-8acf-4862-a309-45af29191890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53e90312-008c-4021-ad2b-f99df00078e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "808f0521-48bf-4d5b-b0f2-1ec01a25b1ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e433b14-7781-41d9-9009-1f2447168dd0"
                    }
                  }
                ]
              },
              {
                "id": "bc99390a-f48d-49d2-afbc-907b0184e653",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a5e76d9-a4b8-432f-92d3-d863a2f6b47a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bab10030-6553-4ff4-affa-5acaa40b1a95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "733706a4-5468-4924-9eaa-430add8321da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "01c273f3-f689-432d-8e0a-277f49242777"
                    }
                  }
                ]
              },
              {
                "id": "8fb65e5a-f5c3-425d-ad54-b59e07379cfe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88d47de8-b378-4d33-a5cc-81d31efa03d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd115bab-bd8d-4849-b22c-850cff3ae0e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68a8977e-8860-48d4-9951-64dda4d12ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01efe730-50e8-4ab5-84a1-2405baa9624d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "464a1f94-9c2b-4756-af08-afe3ac992b7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d53824b1-1edd-4621-9e59-1bece6b6dd95"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0aa93542-375a-4ff9-820a-9ef1508b4b05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0aa5f32-7a1c-4371-8fb6-3af85a0a6723"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72273fcc-28f8-4b6b-bf16-7d72b88918d6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "25af793e-13ec-4bf8-bde6-a31205d6d43b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5782bc50-6b14-4470-a8f7-36efe7bdd1f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11190386-55bb-4092-aac2-0e36f2b93621"
            }
          }
        ]
      },
      {
        "id": "5374185c-76af-457a-b0b2-7c5287a77e38",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c6ecd618-0e9b-4269-8951-5fd76421ed9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ced5229-41fc-436e-aac2-b37e05e687b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c33f90b2-2d3d-46cd-99e6-df46c823953d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bca232-c9b7-4fa2-99ff-c580e43ad52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413ab8c5-1dce-45b9-8544-d6856574f0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a815504b-1963-4f8e-812b-1976642bec6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1684138-8a87-4a2f-a128-9309eaa4ee7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb81b6e-fb07-4ed3-9da5-1b445a47e105",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f31b0c6-cb0c-482c-bb6a-43da9bc46f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb97765-daee-4c4a-b3c4-ca9574ebbd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f8901e-fe36-418b-9b4b-4fd7171f4852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c46a058-79c7-43f6-b5ae-2aaac5f7f561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a6451e-eaf9-454f-a810-6d957fd35375",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e61fef-26ac-417a-b2ce-f49570c2c430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbefe4f0-717b-4054-a16e-9cac8ceef382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1eb7ae-47fa-45b0-8ff4-5b30ce46a664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7f3931-0ccf-4303-864c-ea16b7a66b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb56c1e3-94bb-430a-894b-f064ce543764",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5448609-23e7-44a2-a7d7-0fe009bf7165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b2ab2a-0cdd-4ed7-8798-b46c02baabc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ab7411-4c80-412f-9e64-90d1986bf29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "507253ba-5ef9-42a1-9a47-3aea3aaeb092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1348bd38-24d0-479e-bd39-7d6ac08d6ab8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5782f21b-91d5-4af4-9d5d-71792d91c81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7a3be0-fff8-49e0-a4b7-5f80136d557e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28fc944-86b8-4110-afd5-978deeef4403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8612c746-e803-4a6f-957b-8a7cdc7475ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dadf40e-1441-4c9d-a858-0246384c13a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0db872-de3b-4b87-b68b-f04e29b094e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9f6f80-0021-4d22-823f-0507ece5ecf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1b8f07-cf42-4fa6-b938-a6cc2847ad9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c88ed04d-f45b-4c16-802a-0a5bcd19c080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288f066c-1227-4a75-8997-d74b96c70035",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c881a609-5c96-4feb-bfe7-fd0dbc23bcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f974f6-9fb7-43b6-b51c-e8ccccce029c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af866da1-0027-45ec-afc1-d4e684e3c07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7c07c1-c8f3-4ad1-8c74-5d8f5effd314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a590dd69-3e4f-4a2b-80df-ebe54db12763",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fcd1b0-e6fe-4b48-9bde-bb205346c123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e6fa39-5a82-4ccc-97f5-ddcc3ca5f0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba8bd59-3cf7-411c-b5d3-a82deb5012e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e5a61e-2ec0-492b-8ffc-78e1f394aa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6f18a2-6794-432c-9687-dcd751eb6058",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21955915-2b0e-4792-970e-672ad90de943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60d69f1-587e-44b4-a4b8-d1dcee8f476a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e748097-c9cb-4002-b761-e39fa3e9481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1ee202-c021-439b-aaa1-45531f2f6dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb7125d-a9b7-4be7-9b4f-38b13041cd5e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b498f55-51c4-4933-bc79-5b93ce4537a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8962938b-4101-407a-98a7-bf7dc613aa6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fede3284-87af-47a8-9942-153d625865ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b0ba40-df8c-4e61-a007-372e4a8e0fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a0d411-a214-44e5-96f4-2586b7c7eab2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73175f3-7235-4aa0-948e-a3054de6f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805ea049-d5be-42cf-8496-760643b06309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02905a3-6214-4f1b-bd57-fb1b49e6f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bb342bab-d6f1-4374-bcba-652e80b99b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2e2d9e-7d29-41b5-b72e-d0452003fea2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332838c5-a2ed-45f5-bc8f-550753c3bc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60b5268-0932-44e3-b4fa-93602ebbf25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26ccb94-19bf-4f6f-be31-a0d6965d8c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6866004-a3b2-4a1d-b507-699568ca779b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceef65e8-fe0a-46f1-bdd2-ae4a88c8202c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54f68e2-c4a5-490e-969b-47302b304567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05af9c4e-7f0e-431d-89a4-e409d72870a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de24138-17c0-40fc-b7cb-484e757cdfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba4862e-52f7-451d-8822-9b7645ab1778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1848a081-5763-4265-89a2-a8b12b8bde45",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d599e3d5-0627-4faf-9397-1c3165722e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7fa649-41ba-4b78-a149-8f3723432358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9edf75d-a998-45c4-af91-65a1ae293e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a13057-5bf4-4cad-95cc-3c358623fad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c672d8-b45d-4a9a-861e-c9c4f6e2e5e7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee0e970-f326-4006-9d21-df5c3bcd6fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf613e0-7678-4d0a-8fdd-06db65d68cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d025a0ab-7844-4862-852b-d898c42eacef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbebcfe-0352-41a2-bce5-7ecf142545e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51349288-4e99-4d40-a770-b1cbe676b4e8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a137454-8dad-4fb7-9e3b-275ba703892e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adecab4-1f66-4581-b812-547edad4eb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cffeac2-5c97-4517-ad7d-c7c39552e2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8edbb8f5-50b7-4166-987b-79f7f26b0a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7e142d-33ab-45f7-81af-2a95d14d42a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d54696-aa36-4cd5-bde9-1e31914a4396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662fbaea-30a4-46c3-80b9-1686add1c8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844b945d-7f77-4d18-a3af-44a61b3e9cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a2ba9f-d35f-47e5-8f2e-909c8e7cfe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1e5b13-269e-4c40-96c9-d948b9e9e07f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550b366f-9a49-48a5-b393-64bb5ad7ca6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4220f37a-8802-4564-bc47-f7df162079c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a23e0df-ee0c-45cc-82b9-6b866dd5397b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c46cbf-b4dc-4214-bcf7-e3295d7e4d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666135b4-bafc-4407-b21c-37dc5fac2cb3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7ff068-b1f6-485a-9f67-4306a7f962d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc2dba7-4b39-486d-b127-6d8277f8265e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45947cd-657d-4879-b55c-3d7d2a87f741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4011862-d7be-46fb-abb1-80971cf8896f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6d6933-5d0d-4658-b125-8b2f629af573",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf50d7e-2ded-4a5e-ab8f-9a268410d861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881cf60b-1c00-456a-b606-2759a903941b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff6f833-7b35-4ee6-94b8-f43ef2bfa8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc30b8f8-ad3d-4e0b-875f-c8daa4a27c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac0691c-46c4-4d63-b59c-676bafe98055",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c628a8ba-1b1f-49ac-a8d3-2fa8517f6422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c7b93d-4d93-4f4e-9939-909b946109d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0c65ac-bf56-49bc-a7cb-7338bcd0205b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d50346f-05f5-41ba-9074-cbc0fcdd4f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2d906f-e9e0-4d9e-a43a-d682417cdf1c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62940a95-80d4-48b1-961f-3535cc1b3d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a78c4c-909a-4f38-bb44-7439bf3aba82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84008858-6866-4a93-9110-339c113522c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0990553-6943-4d2b-808a-3a012e71db1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923307a3-c895-4d24-a930-4c42cbae2e2a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee52abb-42d7-4607-8f55-19d09b74a2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a522b46d-5f99-40ac-a374-8b88565f3e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23e65c0-3ae9-40d8-a4d1-eda33014b68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aadcdabb-8e55-49a7-bcea-2031af50937a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e3ad94-f44d-4dfe-83d4-7db7088320e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039af555-4579-42ec-8dcb-782b81418dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c5a797-9330-4f97-8ec0-1cc7bb5ec8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fac652-7bcb-41da-9eb4-6cea438f642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45edd200-1abe-4e1a-b141-3ba3d821e7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff43c40-8fa3-4a33-88d5-a8046413c229",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05df55f-e566-4198-b9e4-9767a24924df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33917b40-b963-4aba-80e3-8cf92ff183d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5c3a49-169c-4c48-8fb7-f66d4a252847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce47f8e2-f547-4dbd-aba4-a98971193e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d12df1d-afc3-4a73-9d6b-3e4b2858f0cf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630282d3-08a6-4038-9231-aa25c26fa593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3e5b63-c353-480f-9714-d3499e6755a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3cd9c1-6e6d-43d6-ba62-dd2d03a80e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa063e8f-bea4-4aeb-ad88-7564dbacfe2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc2675e-65fa-46e9-a906-2fba086fc245",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c03c50-6f8e-4e5f-a87c-be9437210adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea9800a-36d8-48e6-aa05-41b0c01ad803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306c85a8-efc5-4822-9952-00ef0874803e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "251f551b-6869-4efc-ac61-77add9d286c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bb4cde-c68c-4c25-be65-830a8c9c58a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b28e13-dcbe-4dd9-bf8e-8d031575a11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c645c15-b66f-45fd-b725-1036008897ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80caa3e-528a-4917-b19f-461d3ec21ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d0cfc0-4789-479d-a3e2-7c50ed90f244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1db7ea6-3512-44ab-b8b7-c4b16aa75f70",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49c71a2-0540-47ac-8970-b2372b595e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e9242b-3e68-4799-ba6c-a6935465b2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50268ec0-a35f-4e4b-ac56-76c58a0159a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60afdeb7-3c80-44a2-9da2-d359c077198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201b238e-1ec0-4fcd-8788-0b892ad10848",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7fed22-e7af-4ec8-999d-4d6562c34236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef687033-6eee-4e68-bb51-549385d1b3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01cb9c5-6d55-4625-ad7f-a1b1d7f789f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85176b86-7c46-4709-8ff9-e2c2a7c007e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bed4eb-79ca-48be-9d8c-13973d1a2f09",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24735b4d-6bfc-4a7d-b16e-efc0d8ace4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a7511e-189b-4ec6-b19b-fc58573b8be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112d4e81-face-480b-9333-3a844f89da7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "242b1fe6-ec8d-4476-8b07-c07989fd7afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c21de-a019-4945-b848-8408d906cca2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4457b36-626e-4ea7-9e34-d3e99a5456e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c63e849-559f-4542-83ff-29886f0dd5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806d6318-dfb7-4025-b582-d48acb98d4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "888804e7-7745-4590-b339-8907276edd49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51162688-71d3-4f12-9ed8-fea789790277",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3d5f73a-22ac-4ed8-b8c8-d2193ab7fbd4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9281cb71-53c4-4c46-8462-62817702ec87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a2b699-316c-4e0c-93e1-7e68a8dd72a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455dc3da-c495-4ed9-85e9-347f487d1de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8c470fb-258d-4277-a69e-b25f475507d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14be13b-6d47-4475-a4e5-af3b8ca8acb4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bddea8b-d9a3-4912-b68a-5f7eb2324a73",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5a11f142-f0b7-416e-8f39-042890abbcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b175e55d-e7d4-4d08-90da-c00b878326a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f39c2704-1b44-43cb-8c04-83a8a5c8475c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e90ff44-0abe-47c6-b68f-115e50fb4683",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a1a1962-223f-47e9-8c8d-efdf3e12ee79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e059a517-cba6-49ab-85fd-6022bcc63cc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cec23b89-c6b4-41d4-ad1a-78b6f697431c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adc6e05f-1e11-4ae8-a145-16629b157292",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "673c95bb-c452-4de3-937e-f04e6a72c4c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fde55287-9620-4b63-80e8-b30189c98593",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28cef4a5-1b92-4c81-b559-382196d2be22"
            }
          }
        ]
      },
      {
        "id": "5735f3c8-dd7c-4370-ab18-8af9bfc4ce0a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e56748fd-b791-408a-a6d6-46c1e3a8a25b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73f1e584-f128-4f4a-85b6-79dcc0b3b786",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ed69ec4-036d-4247-b4f7-3a29e7966aeb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa512160-0aac-494b-9ba6-ac97f4682aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3efa69e-b01b-42d9-b5cb-c613a546d9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4261e5-4096-4acd-aa98-ab16fa2b86e1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5b8f20-6ea9-4f9d-8124-8a21b72b3d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af56a12-fbc0-45f2-a085-dcd558a339fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3b563b-7a0d-4d51-bd9c-acdb28142c49",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd874897-ad3d-492b-886f-9e6bc5ae36c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71221ff2-7a3c-4a3a-a9d4-0c0f4e9b587b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe082d24-68f3-4c79-9b5f-c2b3087355d9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25741dab-49eb-4e65-b42c-8c3e76d4e7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76cf4ff-5a5c-4584-bce3-b96f86e0d50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8f3ef3-3e4e-47bd-a094-49280813dcbe",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee5c592-7e79-4dd3-9d82-903728150309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f852d5c4-935e-4b53-8369-6fea37eafb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e937c856-d83e-4d79-ad61-7a7cacad5c3c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad28302-318c-4c20-9373-9925ffe95bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b47079f-f5c3-4f0a-9ad6-79fd74bce0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba4b7ea-e494-493a-8090-b12b05fc89ec",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfd8784-0b59-46ba-a350-81b84eac8e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5586fc-6468-49ac-bf45-7a3132ca15d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc158de-4df1-496d-90f8-2485e0344fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70601be0-87f9-494c-9b73-fdb0039fb0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbebac1-4068-435b-9219-908401995add",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34c2b73-eeb7-4e4d-8d63-aaddf7ddf3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a7fe5b-eae2-4829-aced-bf51deb74ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b453a2-7cd5-4bca-a6f9-28e3d5372985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8c3d67-1f08-4814-b6fa-0946c7a0fbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eff6d8-cd56-4386-abe0-3c85b1d82a70",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986dc2a7-3c97-45c8-af14-d77bb50a76ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dfe6fdd-5be5-4e42-81bc-9bc15adefeb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d850ed-acce-43dc-b61f-4484c08fcd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fd5ee6-6c22-47aa-b620-b294f4678ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5e0ce2-82ed-44ce-8473-ad8e6f7b7fa8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9f471c-7892-4819-b5b0-afa7c5da8e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d5c4ca-500a-4748-a5b9-3e58a753c542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999d9893-afe1-42dd-808d-391f7f0dd98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b1f6ea-c9e6-4c7e-a49f-183fecd7a784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5df8d06-6379-4712-814f-1bc216338dfe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f23671-76c9-4ab4-a7b3-d90f28ca3d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d9275b-da39-477b-b0f0-f54256a0afa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec57a86-0462-4ac1-a590-92820f0f6b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6d9c06-0361-48b9-ac32-86f1362878be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fbd451-b575-49ca-9e89-10ab9f9a1019",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfdbabe-6bbf-4f99-8bf3-21019aa6f969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a08c10-cc5c-423b-8637-79cc1bd93ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f713974-a6a9-4bee-a6e4-1d05670b0d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8af057-bb18-4719-be94-90a58882743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d737e72-3dd4-4a10-a229-7ce625b89cae",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7770d7d-f961-4512-887d-3d0adb6e77a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c84e652-5451-40b6-b727-f2e7459f2a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69305a11-69e3-4ed7-99ae-c087a34d724d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d595e0bf-0a8d-48a3-bbda-19cb842d2510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dbcd02-c153-429b-9162-364a6ab93033",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf67d97c-5c11-40d0-9c61-a86f181398c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbbdddc-e4a8-438b-b4c0-ee853d5c2b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec9e6c9-7486-4d1d-b5c8-2da1791cef68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ed2b85-74f5-4ed2-8416-064cc3229afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d21281d-e31d-48ec-a250-167717b58383",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d534700-94eb-404c-8db6-933c618900c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fefd2ad-776e-4fef-a298-89a8c6a74fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cef748-d884-401f-acf7-a7c212bb5b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7b38d1-50e1-407d-9ecb-6fe0305d86dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c344c542-20d1-48bf-88e8-c08b3d2bccfd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a417d7d0-d0b5-4c71-9280-1fc2fc361e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6935bae5-9f8b-4c51-96b7-33b6db870403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9143b493-01cb-4276-8802-1084531ad888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd99d169-dbfc-4c99-a90f-1d8fe5b2b210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86fc22e-6be9-487e-b8ee-d526e0636110",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f683b29-38c2-4bea-9aab-644ce23ef4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6fb892-a16b-498e-897e-980afaab2e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d98696-f256-45b3-aef7-d4661e4859e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3711147e-aa7d-4c42-b9e1-a97b557477c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421aab92-2868-4405-9471-f35187876146",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0708965e-cf3e-457d-84ae-fa3b8458a945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53395b78-7f14-491f-a5bc-3a1b83c6b778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98c27e5-93ac-436f-b24a-668000cc0bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8aea73f-b544-4e88-bcb5-8d353710fcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114da1f2-501a-466e-b97c-4201b567ec4f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110c8c66-a697-4bb3-a15b-aec41290e8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0570a493-2db3-4460-99ab-c510ec94e7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774a1c10-7a96-4a75-8fc8-d7bcbdd0146a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a31535-0932-4143-bafd-bee23f14df5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38493fa1-b60a-4fcc-976c-5947a8a4588a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39f8c89-56bb-46f8-98e3-f2a51c4d0ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de48f3a-bca4-4a4f-bd64-288d5df22bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44bd458-44da-41bb-a05f-7c227cc83800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b084e60-eabf-4ed9-9d08-20fcec459034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ba27b7-3905-42a8-b861-4fac06877e6a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1944678b-f367-4cdb-a1d6-f0917e5c8871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b917120e-5b1f-450a-a910-61659ead45d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156924d8-8454-4047-8be8-6d192ed4b706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581ed9e5-30b1-4c32-89b5-36ba8b675200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbf2f2b-4b54-4f59-83c4-5ed3801991b3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b295f485-1e92-40d2-96d3-509a98f49c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58422200-006e-4b49-83d5-1710bba0b057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3979355b-e651-4cd5-8ed7-edb7d3615cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99dc97c-5d05-4d1b-abfc-498964b2148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1762b731-8cc2-4f64-82b1-7e0969696fc3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987743ea-7e1c-4eeb-a768-f30ee6f2aa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9cacd1-b209-4bb7-a3b5-bc54d2a07f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0414e0f-2212-4632-b020-020ad97f7ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836038e3-5cd4-497a-9b8c-c40d74220322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc1a88c-63aa-4fc9-ae6e-e36919228509",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db62409e-6960-4323-a9c3-076cae0e7d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce3887a-102a-49a7-86ca-453f96277637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51da597b-3b4c-4fb7-87ca-27d6a889dff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86770203-a68b-4f75-b8f3-a150e3f3d411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a617c06-6dbc-4c22-a652-92d9844e45ff",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be647d0d-0052-48f5-acdb-af8c3d84cd15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6f7f85a-4490-4df4-bfe0-7dfcdd30e80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de009c15-2de0-4b8c-b062-4f935bb069d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9650b749-206f-4f0a-95f3-232ed963c959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18c8d74-fd6a-4326-b088-7cafb6efb22b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5ced77-8348-488d-a66e-440d15c3e453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f75c1e6c-b92a-44e6-af1a-cf739551322d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa68588e-edd3-48e8-8ba4-bc5e62ed1f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4013af66-c5e2-4936-9eb8-8be4bbaec6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca7d455-4fd9-4acc-901a-4d516a98ffb5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e362534-cf77-4294-b05e-923f8f00ee26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e2d4ef-64bc-46e0-aed4-214ed141b1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c405d0a3-4a27-4674-bd4f-fd89f973b12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2177d9aa-bf17-4d37-bad5-f73305e722c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ca0254-1ae5-467f-8453-cd115c7b34a8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f41ab29-105a-4ef9-b77e-d188937d806f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47689fe-ee30-4614-9ea0-ea8fa1d60af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730a4008-cf58-4f5c-b85f-8aff80fda11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23d0d61-e2bb-4cc3-8363-5c4670d8e006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c7e000-7fce-4032-a84d-f74e7ed6464c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b68d81c-9712-4116-aef8-ac0d65e0bd9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "164029db-b672-4b88-b3e4-74c55e0ecd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c7c415-6c0f-4285-a3a9-e1a46333c8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d463de-f1cd-40d2-8d93-ec23c129e17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87952d2c-372f-4132-87c1-046feb963457",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98c33ca-1389-4298-93b2-606d1a2fc69a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a0ed31-12c5-42f5-ab10-c0c5ed478c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1819f9a0-ba29-4e23-9257-e871bd3f0dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbf7e52-ce37-45cf-8a4c-ac96aaf4cf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf0d7d9-2573-44fa-831d-11767ac9daae",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c44054-c2e2-49c8-a645-ab8979730e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b7c532-ebe1-4719-a828-f91b46569f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b89354f-454f-4082-b558-0d8d0eb66208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c07c71-8f8c-451e-9958-03565ccc17d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afef8b8-b10b-451f-8135-317709acf12e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0daf4a-a509-400f-afe0-db06eca434a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2edb1d19-02d2-4eb0-a520-bd411edacd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6753fe-e351-4e43-9a0f-335f69f7b76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f378df9-7601-4da1-a6c1-572a79605451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a04f0a8-0c8e-4e7f-a87a-0913a820d467",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc8a248-a629-4fb8-8226-55d4c87f4faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a90cda-3276-478b-ae8c-bf0f029aff84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f82fff-d702-4940-b830-e2409a1ffc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd2ad40-4c90-4985-9c87-a1c1b7283636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c6604f-807b-41f8-9c18-198ebe8f3378",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8fcdce-6594-4745-acfc-75c61f2e51a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ec035b-b63d-4244-8595-702d2974f179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b50948-669a-4a77-902b-a6d05b6f584e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29884577-9e4c-466c-9ec7-e52b36d694c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa019b5-58f8-44c1-8c9a-948a97f5c827",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87281cbf-5592-428a-8368-0241b85047da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553ddbdc-d51e-4a32-9fa9-a826f90bc625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66468cf8-cbbf-4600-8b8f-806b8c1d19b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0d8dd1-f822-4d9d-be41-419684c7915f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20441a4-cc94-4d61-ad8b-7867b80aa3db",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1c1de6-42b4-4055-bd32-e87a79b80216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c703160d-b8c3-49ed-a94b-373264d8dfc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd66c244-fa43-440e-8444-fadd9ffee7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69da36e6-65a9-40f3-b755-38a24e48a2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d87ab14-d186-497c-a08f-32fbc79884a6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c4d604-68b5-4936-9b0d-613a3923a3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7452fdd-3fd9-4976-aed7-6c6a89a930a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79e302c-f707-4c5a-89e5-3ae2628df827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3ddfe3-6336-4e95-af3d-9501b4540fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3fad41-d13c-4d0a-afa0-78e2a4d3a10c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82da7f3-d385-4eef-a781-4f257c841103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04bc036-a98f-4c50-8944-82fd4e245ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bb2771-88c4-449c-b04c-f4757dc2587b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4d8207-5008-4203-92d9-8133d1485c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd571622-cb37-4981-a472-41cef9444e94",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d86ae38-f52f-4f30-a96d-21db39f931e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f7c29f-bff3-476a-8617-aca8b97095b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a306a3-cd59-4fdc-8195-f38c53b2ba2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c616a8e5-55d3-4471-b329-c1ac38464687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc2241d-7b38-4ce8-9e26-6a7fb64ae2a3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16074b3-dc93-421b-9d2c-882886afed23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52f4b87-f8d9-45de-9d52-42dd8a77312f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aac733d-6187-4687-8573-6966061ed263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2100949-0eb8-46f4-815e-b61a66cdfde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aaaf88e-92d0-49d3-b5dc-2f9ebae1160c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaa3785-1f01-4ce8-b8bd-656f314fb1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c44bef3-ab1e-4901-80b1-0651d86d646f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c389646b-9e9b-4c16-87f4-3092dd45992d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b735a7-7658-4831-ae22-8bfb4bef54c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f9eac9-7e8b-452f-866a-f252e1c81478",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e9efb0-7b38-410e-b932-6ada6a2e7b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cf258c-b5e9-44ff-a93f-73600a789a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40cd9a4-7f2e-4337-a60a-8f8ee8188ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecab11d-bb42-4159-ae79-cfa41d1d6cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf6ca5-7353-4077-b8e3-7f694a7dcc4d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9976133-c5e1-45ab-883e-c350806f8180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683f4da1-b6a7-46c6-8d1f-356c94c2633b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a198a6d-99f6-4d50-a764-7b9c9f7449ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f391203-c1de-4e01-aabf-3969b12e62cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df097dfe-7bae-4c35-a258-d1f7a4299a22",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111ae6ca-2f22-4098-8536-7fc2bb0c19f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0712c346-4788-460d-a80a-0367cc4ecf3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277011d0-c3da-4584-81bb-db4ea86b3b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0997268b-9c6d-4276-9507-00bba296e67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b567c99-8673-44ec-ba9d-088ea97af31c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0debbf08-fe4d-44f2-bc0e-d69829a5ff79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fae5902-9d8d-4005-8091-134bc09603d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85b2205-27fd-468f-aef2-ead7bed2f62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f776e6d5-c307-4d84-bcd3-32dd9f461ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23a4b62-9c42-4a7a-a964-f79da3afa34e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4963e1c6-0451-4c41-9c68-6c336fe86440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8249809a-ec9d-42dc-8844-5c98f4fab77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c84049-e8ac-4fab-ba3a-4a8371648840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975a4fef-8da7-437c-8d47-9729acf5f409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3ad6ac-59d6-440b-b2f0-b869ffbb86ad",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c35013-ca0d-4e96-b794-5b6d1a4dff1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc20fcf8-7c8b-4e8c-bb1b-9d7bae96a779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a2280c-2971-4fd9-8f0a-8507021782fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beba455d-d1af-4e99-97a6-3e23dbd42611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99413028-86cf-44bf-8eba-712bbf10330e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d525d009-adab-4f8c-8b6a-aa1b3f3fa333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8b97da-3685-4984-a5a2-fa6c18a15c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad232f9-9f82-42bc-8fd3-fb9380c5ecf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13fe981-6ae1-4f55-8663-0b41491466b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f469769-466c-44c8-a43e-8f617096323a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379abe49-6f6f-46c9-b27a-10c16279afa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73d2ed5-497a-4e18-bb40-3aa6b40cb8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17195b2d-d009-49d9-884c-8414a8b35f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922ad003-1e21-44f9-9db8-25881af24d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96aca7bc-aac8-4952-a4a9-c7c86d90645c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f08e88-4b09-44e2-9fd8-f66e3537de12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac76d6c7-674f-47f0-9c87-cfdfee7628b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d166798-c668-4f9f-848a-ba0a109eda34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5439a24-d521-41ed-a951-e5cf18685602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1e0434-28dc-4ecb-8064-6b856cdfcc28",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db41735-c944-4905-8a81-a8940165a7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5f995e-6486-40ae-9592-7576e845ca0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b704919b-928e-4197-8090-8647d420bb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268a8f1d-758e-40ef-b0fb-4a67204822b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da44835e-64ae-4bea-9a40-435c0b7ccc3e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f7cd7a-d2c7-4518-a53e-73df95d3a4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56e602a-8a78-4446-bc4d-b34e75623a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aeefa7-f518-4345-a380-0b35332b9f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387d91ec-372a-4d46-a778-5c9940411e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b34ffc-2131-44da-972f-69755073cac3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2163042-2777-4a80-a583-875b4c6cc282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518f807b-27fa-4c10-b282-2d2ba5ea0d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59dffc0-1452-475e-8a1f-589fb39abe6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a79800-506e-49df-851b-f10b78258e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51995214-d77e-41b2-b487-459424dd0caf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151c5919-4324-4248-a481-313ff2c53835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f60aec2-ac4d-4973-a948-5e7a96aa4ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0252b9a7-29cc-42e1-aa7e-ec02d557406a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc5c70f-ab39-4169-a5c4-20bdd0c3bb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc737da-db69-4785-a919-efeaaae410b1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55007b1-68d0-472d-a1ee-1201e8b2d373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a21708d-ab91-440e-87b1-70714e310ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f11326-6523-4ac0-bcbd-db930c07bd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd289e9d-838c-4cd3-84ab-d957d5b2767c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eb1567-db75-49df-b168-d99c238cf88f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9254f105-e2cc-4238-a13a-359e82d1dbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12dcd37-8ff8-4c84-b7ad-c3bd8c9f8cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f13a706-8729-4e91-856b-0f2be313b387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4f6729-a122-4c79-86f7-514ab63aea3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e27f48b-16f6-4b43-bfa6-a6ad18a689f6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783d997d-b9b3-4798-9870-ce99f8c1eae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90aa105d-ad30-4196-a739-958775731457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6de7d5-954b-4b39-b3af-1de196ad534e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c92968-3f63-4216-8477-3acae21608f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d747c20c-4562-4729-8292-4886303fce39",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1180e74-e19d-4d60-8057-e9524c07c0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e31849-a892-4583-8e82-7a7abeec394f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8e74b6-2e8e-46a2-af5e-09b8c73d5def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed6dae5-2668-4d84-9ea5-d9dc97937d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0662c707-0326-4774-b659-ee2967ed9f9e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fafcc29-7b74-447b-947b-23337d8bf944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a709a9-788d-49b3-9065-6aa48d254552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6055be-2ff8-45e2-b9f3-02d65c4c7a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bdbfeb-c9d6-4255-8997-aab6608c8d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e85dc86-d34f-4266-8a81-30d155a6047c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7446e0-95b0-44af-870d-a3d64ea05aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a660cab-0e02-4886-9326-a7271a2a0389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804874ff-e28c-4e04-ad88-504c63e10d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479491a7-515c-4e0a-ba8c-96a3ed244366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d9ddbb-844b-40c1-a063-b17ef9044a88",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55298416-1758-466d-ae7e-9586778b392a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15e5d5b-fb8a-43c8-af47-c119680bfdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6fa2f1-cc91-4755-8ce6-c9b2ae4795da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b275bbb-fc40-4c7f-8f0a-c120a3cbd467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d130f0ba-2c2b-44ae-a89c-aaf59e14cecc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af657d5c-7eec-4b7f-8981-691dd5bbe678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9140c1d-30d9-4756-b8f1-76d67c26b40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe0c2d-9f18-4d57-8e7f-6e39e4d57ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1a757d-c8a7-4341-b116-aa5ad758439a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a507a8-a6c7-440a-bad2-479553f8de0d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae1a026-97eb-4e7a-b998-cf3e05d1d78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f2512f-d3e9-4b9e-a2e3-a99fe5d08bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13f269c-6fca-4103-8fba-99e630a33766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59e1933-705d-4706-8337-11f2ff0df918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59db9919-138c-456b-aac7-8a85b9e13d27",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f93a9a-b3ae-4904-902d-e8fe15712fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23115203-ee86-4394-8956-69e91bac7f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbb9d66-be63-4208-99e1-8e790c145777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a06c68-2f88-4441-8867-a5aa37f71194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4997944-9bf2-4a93-96df-e84e5e5e19b0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37533e49-3dc9-4dff-8467-55224c06245d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f3456f1-e218-46d2-b62f-439296fd0e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9a9261-13d2-41bf-97aa-130605cce578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f0063e-885d-4ea6-a58e-eeed8e4151c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a37c03e-0444-49e7-924b-b9d105cb4a1d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c682abc-283c-4742-b3ad-0d7722c3e92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61dcf61-b468-41dd-b01f-771bdd4d6453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3358cf2e-2d24-444a-80f5-f3e8a94508dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f71d75-d81d-4a55-8e4c-649f6755e99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3eabb9-50e9-4ad2-a5a8-c7e2e61be712",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f9bdc8-46e1-4142-a00c-9f744bd74c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78098d80-5d84-4523-9ed3-9a464ea12708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda46d4f-2d24-4372-98c2-54b01e377104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a8a2e2-4768-4949-a79d-6aa8ed15a832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3c7eb8-4ad1-4cd6-b60c-ecfdb206f386",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b104144c-5c8f-43db-a036-6d080fac40c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e57ba77-c918-486a-b7dc-523facd5fee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1194c61-1fed-46dd-9768-a48867165def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a2d209-8d7d-4b61-bcc3-1e0a9b41789c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa6cadf-e1f6-47bc-9bb3-a571f954e40d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13783b42-e3ef-449a-a6b6-1bbaefa71e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66c38d8-e736-4aec-bfe5-a65f140eab37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47708110-d7ef-450a-a53c-9f6fcdfc0692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6c48c7-50a0-4518-9b08-c6f07668d6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ccbd6d-eae2-4d5e-84ca-f00ce42d2b07",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1556a2-bd10-422b-ad42-dbc5a1689b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d7605b-11f5-41fe-b473-472d4c595195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8503f998-fb6b-4866-8543-6f3c63b1eea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16004a09-b702-4b52-8f92-28c56d56aefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24ef864-0afa-4a3a-9214-747ccf5c43c2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34a83c1-74b3-4144-a3be-380df41fb06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505b0c94-fa89-4ca3-9280-2e6a3365c580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93ae953-2023-4210-90db-6b23a2b649da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2096254e-cd43-4c43-a882-e1aee8382363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2067d9-4446-4f04-9ad7-fc3975435fe2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a667e55e-ac01-4c4b-8295-84df84d52cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5ed2d3-c381-42a6-97ca-778be3926e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98912ab0-779d-4c30-b96f-2fe88f643a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53636ade-30e0-4746-bdf2-4d8db1fd4fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c262abc-5c5a-4a04-8e31-c0b064c8b05f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad01fd19-d974-43e6-a0c4-700b8adb1813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b01612-b3ab-4fdc-b572-ee337857a0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d91c364-e2ba-4c4f-bc35-b44582f6cefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8574a840-e4f2-4f2c-87b3-71f1c28c26d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d2be97-20f4-4265-8bf9-e43f91581aae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697224d9-d690-4f8b-9ad8-f9559aad8ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18bb98d8-22e9-403b-888a-80b762c3fc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6b51c5-962b-43ac-b83c-559c22ef4399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12db2ab9-2ee6-480c-b69f-de4bcaa3e52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43086b0-df7c-4ace-991b-ef3477022e43",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3120576-5991-46da-baef-21a8df2bd3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb6b3d6-9d77-4916-993c-e3bc741d0b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b13dd10-17ed-4aa2-8efe-bba6bb6117eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536d9afe-c51b-48ba-a0c0-d8f57182c1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e531a5b9-3ed8-4838-a4e3-5341c5677275",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc50fc7-cebe-4d97-87b8-186ea8ec28c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27d0bc5-b1ce-42a3-a4fe-0ec5b024dc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6affa8fe-fde2-405d-bea5-7caf61ccab15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fcc085-7bca-42b2-81bc-54218cf85470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6ab0e1-8dd3-41e8-a0dd-45a161264472",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308150d7-df5c-4546-8932-9f7d1f4f4b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e38f3800-3f76-4a00-a0f4-adad49f35b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d63136-4448-4f48-bc5b-0fe2bf2ff9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db200c98-e7a9-44ff-8c9e-37b42d43158f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b6f94f-4ae3-4722-9bc0-04a8f1031d0c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c55f16-e566-4972-89c6-4d6b4a7aae39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b388be-f954-4e06-84ef-717e9838bd54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5555940f-7fc5-4aca-b550-487c98dda145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa1f67f-c234-44f2-8fa2-1d7b2d50c338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476df6d2-fc11-48f0-a5df-0e2b4f2300ec",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b58f14-9456-43a3-af0a-a7cebebd4d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b4aa21-e048-4df9-b40a-75206d47529f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fd1589-06e5-495d-908e-0a362721f945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafeda44-bda3-4820-980a-859aff639f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f878bc2-0dc5-4199-81f0-52be2a7187e8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1456028b-4321-4173-b270-785838ea862e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff62fd8d-de94-4e76-b71b-d6ea5c2b953d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6966c605-1e39-49e6-9f74-eea072e3f064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11de5741-1717-4537-833d-ca92ed9b6e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1777eca4-ca98-492d-aaf7-516e9da75c21",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461ae9a0-3ea8-44d8-ae48-500ee7405570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df848d9-b2d3-410e-a995-64411c0ac906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861200b2-faba-4382-b796-1b07a4320eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821fa1d6-ae2c-4fa4-90e6-a1890f4bd2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53ca7f9-931e-4342-85c1-c6687f6380f2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc27ebb-6a61-453a-b852-e9cb22348bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60285582-d541-4ff4-b5a6-8c5e32fcf34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fac365d-f73d-47f1-831c-b766d98d21a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b240e2b-1606-4f29-bbb7-863a60f7ea8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87f9803-106c-4590-84e9-34ce3dd6a65b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17863d55-e357-4773-ba64-ebc38f3c2c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe9ca38-d87d-4b34-8a63-0d2575aac5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2783c1b8-b72b-4c1d-9ee9-23a8ba35cd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d457778e-2bf8-4502-aeba-c1adf0966374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba3874c-80d1-4901-b580-ac6ecffc251c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b64ddc2-4664-44f3-9dc7-ae29434bb887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d0a001-b788-4107-af0c-91e39b903fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a2b460-fcaa-413e-a71d-17fe40e7dfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45822baf-21d0-4a63-ae0c-fccee4880fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268b57f3-7be4-4ce1-a27c-dee2e33703a9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2de03ff-8a8e-4df9-81c5-ef7183451189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9990742-3416-4ac5-a3c6-58fbc8964e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bc8a49-b1d9-4952-9b41-43f3618ae97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd75175-158e-48ee-9cd8-1111850bf6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55366878-50cf-42f3-a35e-3c8d9907c8b2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b86b4ee-88bc-47fd-aaa0-9bb5ea363334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f986dd2c-3c86-4248-b396-7f21039a3196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee36feb2-63da-4799-9cbf-59ba177a9424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535d9f45-588d-4903-9617-257ba33a509a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72217edb-bd1f-4915-a698-badc8bc503a9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0068f08-a014-4904-93b3-6d915635dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "576c5d60-3cd2-4c68-ba5d-83e6ab21ade7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43185378-5437-4025-aeba-1e339a42100d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04804e48-3ee3-4ae0-a474-7f0f1612443a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded2a5a5-4b20-4de1-b9b1-e6d969317d7d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3e3a3c-f288-4e35-a8ff-e72a55b48b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a7e712-bc61-4c3c-92e3-3879b13d70ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3299b1-f82b-40c1-975b-ff461fa0578a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49877f8e-575c-4899-a15e-db7ad8744212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aecc578-08c9-4f10-92c2-214e5607d813",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0b8db2-ac37-42b9-b51a-c86b893e4ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f241d9-d070-49df-a833-28cbd9982a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c3be58-9083-4cb2-b46b-2d88bf28f1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc41ac5-8f33-4cff-972c-3690f72dec90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdd9982-52bf-4b76-9e3e-9ab938ab7947",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4329ee39-6c8c-48ac-a37a-2ef383ea466d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6af1af6-a0fc-4b36-bf2f-a8567a31a232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690cd166-e3fb-4052-97f7-f8e1aeddabf7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a5e38e-3cc7-4aeb-9a0d-dbde82edbc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce2904c-ffc8-4811-ac16-1ede1a2732d0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473d79be-f566-44b7-b763-75bc81f6a8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072546ec-9d93-4e2a-910b-f313a30fb44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d95f229-028a-4dcb-8487-bdc3e06203f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe2af09-ea89-473d-a59c-df4d8d1b5cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708e8638-5ae9-41c3-8138-f5d26d7deea7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95033bc-af0f-4ee6-b4df-5ae2cdde8332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04b18ea-f34f-4f31-9ef4-dab26b390d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a4591c-83d3-46d6-9f3f-648310fb4e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b352a1c-c54c-4028-835e-bb4315f3bbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c88d695-57d9-4957-86ba-ce816f60ab81",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182a3f32-df56-4c27-aa05-7ba7c8e6264b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0506b217-a1d4-4336-8771-de6d62e1783b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4690f4-bdb0-4d76-8479-3444b8bb3753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9114f7b0-c92e-4db9-93bb-5a03b3f3dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a018c16d-2805-495c-89d5-da18acf128c1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae955f1-6b5e-4152-97ed-fbee24e2e3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fdbb404-1682-452b-b9e6-be636d26cd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9519e375-7b4c-4223-bc1e-d5ed2274f84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a048bc-7ff4-40fc-98ec-56851fcaf040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec843e3-e139-4364-a8bc-83808f7625d4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54981837-5c08-4712-97af-2cce9ec088d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7053cb-54db-4399-bfae-ae58f445f267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a5d820-907d-4333-9d40-4e9ff4b56d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df59b0d-2b85-4e98-ad0d-a4fa8a575eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c319f753-fe77-4b58-b417-70646f60073f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eb8744-c831-423a-ba7b-d9062cb5d0ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c64d8b0-312b-41ab-8e10-49d3f255459c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35837f34-4e03-4ad0-84de-e9024281bb29",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163fa12f-23fe-46b2-bda4-2259d8568600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3101a6-bf91-44af-b4b9-f682a6067189",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e3d988-c036-4d6a-9bc0-6bc8a7304dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fc276b-af4f-4e4d-a9b5-4dfb0d4ae8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61cd1ec-3bde-4ae6-b6aa-745ede61d5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd673612-c16d-47a0-9fe6-d8aa22c713c8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13743b9d-cca3-4e90-a674-ed461d8e15fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3360bd0a-d951-49c2-bf24-839f0296f0de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e094d42a-af42-46bd-ae7c-8d1712c98da3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be2c4ca3-e811-483a-86b0-e33745c59b8f"
                    }
                  }
                ]
              },
              {
                "id": "6cb34cc7-3f29-463c-976e-ed9e02ada2ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6cf1bb7-73fe-4d2b-a31a-2d4a0513111e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dcf9b1-5156-4559-91e1-ecb7784984ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f35fb06c-2938-4cdc-95af-c3cdcc16187e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a719e7-6b80-45a3-b42d-8f693beb7aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36dd339d-6442-4339-aab4-e69a63a06d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8804248c-8047-4f80-8412-ea0ae2922232",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf57c565-47ba-44c6-957f-ff8b347792c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e920ef63-4348-406a-b874-3b3b57494995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3dd07c-8940-4fe3-8c3c-1bb6da10b04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b22220c-cce4-453c-a992-4f60bf88525d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cee070d3-f799-4452-a1c9-31e7af27a738",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36ff1224-75d2-4863-bf44-8f4e7feb9615"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a3457e4-6f6d-4a77-b091-dfd3915a9619",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c52f581-2f35-42af-958d-cdd250a5ca4d"
                    }
                  }
                ]
              },
              {
                "id": "14ba04c6-b626-4a44-9b18-852631d2c3b7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4e2c7f56-6111-4288-b17d-8c58bafdf5ed",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d52c94-24cf-40ce-99e2-7ae6d9cade98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "84b80174-90d3-4d7d-9d9f-08cb055d4bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f63e62-1f85-4690-be8b-cbf854d5102a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295aceb5-9522-4afe-a4fc-aa32decc09bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49d8cd76-3fae-4f24-8e70-058c528ae6d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f657b5cc-e38f-4c2b-9d84-255b7a12eaad",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c51ed226-36bd-425c-88ec-2bf65275b081",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e3eae0e-aaeb-4e51-9e5e-2193147bef0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebc20b42-a05d-45fe-88f1-a6fbea7031f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7294c44-103a-4f98-a0e8-e7d18ed57668"
                    }
                  }
                ]
              },
              {
                "id": "99450441-ca0f-465f-8e84-40ab07ec6a4d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e70431-6863-437a-bcb8-ff6667360983",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "99f91017-114d-44bd-8bb6-7ff9c708c6a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b1051e1-b6a2-46e7-9873-6ce5081e05fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c2d7416-264b-4580-8ad4-8260897ceb68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccfab9bc-5c45-401a-869d-8ef78844762f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "57218521-2713-4a5d-9fd9-de03454ba2c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74a2127a-3294-408e-be37-b477578aade0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a48cbba-3b92-4110-a8cb-8577ac0439d8"
            }
          }
        ]
      },
      {
        "id": "07f3a7cb-a873-40bd-90a9-b115034a4bfd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "87a93d8c-0100-4362-850d-ad3ea3a9f37a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56a3c792-3440-4d15-8378-f2ccef53b954",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16414ed7-728e-4ddb-b4e1-8d891a5ad2b5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dac229-4a43-47ae-8675-ca3ff9448ef9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28b9f141-d65a-46d2-9588-ff3d44a24d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6096b212-c150-4338-9c26-e2091a6d85e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4c4caa9-1c94-4377-8d6e-247b10d1556a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8732d43-e517-4650-b2e7-5d67c07e0476",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ae2520-14c9-4ed8-b408-a6bef01b22a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7d419782-2359-4b6e-ab27-22204f2d868d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d526aafa-686f-4539-95d3-fb68e5822d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83ad55d7-ff89-42eb-9fe0-012a34929844"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78f658e9-8c38-45d4-b42e-48be2722cb1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36f31740-ae90-40b1-b216-48fa1aaa2782"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f40aa3d-e46e-43eb-89f5-462965e7e0c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b87f4475-b799-4913-b7b8-2208a6b61d2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a80e9763-eae0-42b9-a6dd-0e5cde5c2d95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4c7ba58f-7990-4bfb-908c-120e08d65738"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b87f139-12df-49d5-aa57-1e81ef7c5d7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43e922f9-de1a-4569-b7fb-7b3d0f698963"
            }
          }
        ]
      },
      {
        "id": "e3668635-4265-46bc-8692-92d92bdbe456",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3fdf2383-a453-44aa-a66d-168bbbdd90bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbc28077-4f61-4860-be69-75cd65cb41f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ecb7dc9-f9ba-4bff-a431-a18a578f6437",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0bf9c5-1540-425c-8be2-2a22b5230d61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14e4bf45-7e73-441f-b38c-38cb3a84b37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a91215-e8cf-4baf-ae16-b55f0c7561e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3eae5a0-d57d-44f4-8bf9-d89076e8e3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d3ce39-c15e-4295-8ccc-2513c4dfa1a3",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75eaa9b8-f747-4195-89ec-133ee9cac9fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "21a6951d-9710-4324-bff0-fa1c13decf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a74e355-40e3-42c2-8c52-94abf7c46713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd4fa203-94ca-4ce3-a98c-e461d6078b3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5756248-e24a-4c2a-a4e9-7941b4119aa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d9c9783-67a5-4c6d-98a9-5a55f3dadb6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccfbf95d-8e06-4179-a66b-328a10637ff1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78f89f3e-ac96-4030-955f-788d3a084e06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb760f78-d09a-491e-b100-fd9c2f44335a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e0135d3-d287-4556-bc1c-ec58daebecc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a760716-bfb4-4473-9a4e-4c716ed813c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46dc4afb-6f3b-4053-94de-652403a98ae4"
            }
          }
        ]
      },
      {
        "id": "e1c9323a-4fc7-4f14-833e-5cb69f895d06",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d4829396-07b0-4c02-a5e1-86a9db7611e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1536c7b-1a56-44b2-9088-a1908cf90212",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a34c5b91-2635-47ac-a55b-abd3fc786515",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33761225-0ba0-4fd1-8dd9-863d157932b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bc7da03-7fd3-40a8-bd9a-178273def57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1acc68-f82a-48c5-b411-063e930ddf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feb485fc-061e-4da5-a950-d7a825439d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79029c60-827c-4613-a631-5c605b0c5ba6",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4832bf-c0f2-451f-8dfe-38424e35c1df",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdef11a-8976-4db1-88ce-163296a2f30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af87a15-6dbd-4a17-b2fd-8c3645149c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "755ad517-9d65-41da-afcc-f5fba6f34a9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31af244d-3c65-432b-b19f-276af24ee50b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a80efc90-305f-4157-8a0c-b95ff591f99b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7771cf95-4df9-4690-a5d5-261328662562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdf81e6e-0b39-4455-9139-1b3528b1f67f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a0a83c7-4761-4034-b066-51642ce8571a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "324a32ba-8937-4de8-8110-894537f3d1b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97112694-8407-48b7-a9ec-76641f2e4cc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "576c4639-9c59-4264-8a9f-68c48d7bc6cf"
            }
          }
        ]
      },
      {
        "id": "d3476f02-ffc3-4a70-873f-1f3ce650c16e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "470ca73a-e7df-4b44-b664-40f0af4f5c2d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a2e7ca5-4010-4c36-ad55-d8c56af865bb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c00f9039-3141-48c5-88af-0751cf2cfe5e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ee017d1-8982-473e-9731-1d27e88dc2aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af73092e-e973-4a2a-9751-1ef888dd39c3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 42.13513513513515,
      "responseMin": 14,
      "responseMax": 506,
      "responseSd": 55.752011244440965,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678754144722,
      "completed": 1678754167131
    },
    "executions": [
      {
        "id": "d814271b-0ff0-4d6f-96c9-d9f4a55b2591",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c89ef0eb-d243-46f1-8d6e-21971dcd0cce",
          "httpRequestId": "d71f189f-2863-4199-95a5-94763ab1a929"
        },
        "item": {
          "id": "d814271b-0ff0-4d6f-96c9-d9f4a55b2591",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5371a416-d4d8-4f13-ae70-955525120922",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 0
        }
      },
      {
        "id": "e0c3258f-968c-407d-879c-333865d2b8f7",
        "cursor": {
          "ref": "a47ad8ca-1fc6-4849-9cc1-01608df777c4",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bbcbcfab-6b30-4747-afb3-a3590ff00317"
        },
        "item": {
          "id": "e0c3258f-968c-407d-879c-333865d2b8f7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ef7a4387-ee5f-4a25-8a57-939b7591762c",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "e382cc70-b768-4118-a6b4-93d408279af6",
        "cursor": {
          "ref": "9dcb52df-869c-49c1-8159-9d603ac4fdea",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d2867b76-a74b-4377-b1ab-e16e6963f6ed"
        },
        "item": {
          "id": "e382cc70-b768-4118-a6b4-93d408279af6",
          "name": "did_json"
        },
        "response": {
          "id": "008115a3-3425-421f-9e61-d08a1af9e2dd",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99174a0a-5290-4168-a65a-226f8b695314",
        "cursor": {
          "ref": "6dc67357-bd60-4ffe-96be-7108a9e4eaef",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a458aca1-cacf-4cab-a09a-f225fc791702"
        },
        "item": {
          "id": "99174a0a-5290-4168-a65a-226f8b695314",
          "name": "did:invalid"
        },
        "response": {
          "id": "23f2691a-4e10-410b-a181-c8a7f182b2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99174a0a-5290-4168-a65a-226f8b695314",
        "cursor": {
          "ref": "6dc67357-bd60-4ffe-96be-7108a9e4eaef",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a458aca1-cacf-4cab-a09a-f225fc791702"
        },
        "item": {
          "id": "99174a0a-5290-4168-a65a-226f8b695314",
          "name": "did:invalid"
        },
        "response": {
          "id": "23f2691a-4e10-410b-a181-c8a7f182b2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9070d946-a7ec-47ca-81c0-71a7333608e4",
        "cursor": {
          "ref": "32607831-b1fe-4154-8484-33eda09c1644",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e0d2d513-942e-4205-8138-583fe05ba653"
        },
        "item": {
          "id": "9070d946-a7ec-47ca-81c0-71a7333608e4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6c4a2a67-755f-45ca-b1da-cb75baf116ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d931d2-a6bb-4151-a80d-43efdd7912cd",
        "cursor": {
          "ref": "7241d57b-11e6-4a44-9cb2-464c43bf1898",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0bd74d80-c47e-439f-aff3-8aded2a4b52b"
        },
        "item": {
          "id": "83d931d2-a6bb-4151-a80d-43efdd7912cd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "06c4f70b-ae6d-429e-8fdd-6f0638bcc4be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a8a8b1-a163-4661-9413-aa132696aab0",
        "cursor": {
          "ref": "3b4fb810-bd4d-4d53-af6c-0b979b798aad",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "540cd8f4-666b-430c-bd7d-55c26bda4075"
        },
        "item": {
          "id": "d3a8a8b1-a163-4661-9413-aa132696aab0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e7648ac7-f019-4e7e-ac70-ffe65817d0d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919552a4-bab8-489d-91ad-a548267719f2",
        "cursor": {
          "ref": "b2ee7274-e86c-4d0c-b7d2-7e7999c370a7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6437bbbb-d01f-4f1e-9157-d1c5504040b7"
        },
        "item": {
          "id": "919552a4-bab8-489d-91ad-a548267719f2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "235a72d5-c98a-49cf-9472-9701ffac05e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919552a4-bab8-489d-91ad-a548267719f2",
        "cursor": {
          "ref": "b2ee7274-e86c-4d0c-b7d2-7e7999c370a7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6437bbbb-d01f-4f1e-9157-d1c5504040b7"
        },
        "item": {
          "id": "919552a4-bab8-489d-91ad-a548267719f2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "235a72d5-c98a-49cf-9472-9701ffac05e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06555e1b-8612-46b5-b260-8ef267621d3e",
        "cursor": {
          "ref": "a806d0d9-9caf-46cd-a1bd-1e9fda192e3f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "faf5b822-9f40-4287-b80b-369dccb059f0"
        },
        "item": {
          "id": "06555e1b-8612-46b5-b260-8ef267621d3e",
          "name": "identifiers"
        },
        "response": {
          "id": "76237c4c-8fc5-4fec-bdd1-e6a96bca5747",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f60fc6-0b96-462b-bc5b-5015510ab4eb",
        "cursor": {
          "ref": "0005550b-9da2-4597-b9ba-a34f1b300fac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3b679c9a-08ac-4725-90fa-6d008162b16e"
        },
        "item": {
          "id": "f1f60fc6-0b96-462b-bc5b-5015510ab4eb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "901d1c4f-abf2-4a98-a1cc-f5d669d244a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f60fc6-0b96-462b-bc5b-5015510ab4eb",
        "cursor": {
          "ref": "0005550b-9da2-4597-b9ba-a34f1b300fac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3b679c9a-08ac-4725-90fa-6d008162b16e"
        },
        "item": {
          "id": "f1f60fc6-0b96-462b-bc5b-5015510ab4eb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "901d1c4f-abf2-4a98-a1cc-f5d669d244a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e348be5-66e5-47ee-8afb-03c7db0bcd41",
        "cursor": {
          "ref": "6b3290d3-41e1-437a-b703-2bd9052cc187",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d97b48ee-c194-4de7-9b76-9e384b9aa8f0"
        },
        "item": {
          "id": "0e348be5-66e5-47ee-8afb-03c7db0bcd41",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "87b6021e-05e2-4195-b535-57a514f55593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bcbbc6-1164-4810-afdd-96ea3259c669",
        "cursor": {
          "ref": "7ad8ca8b-bd31-4c8a-8648-cffadb791fa0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "70e62cce-10e0-4f1c-81a6-742f16cc9f3f"
        },
        "item": {
          "id": "c3bcbbc6-1164-4810-afdd-96ea3259c669",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "788ff8a5-c29f-44e8-8d32-494d375d83e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a619cd1b-21cc-483e-b537-7989b8243dd0",
        "cursor": {
          "ref": "a35eb6b9-b6a0-402e-865c-35f6ed84e047",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f9bcc534-8150-4d47-bfa3-42f4516bb908"
        },
        "item": {
          "id": "a619cd1b-21cc-483e-b537-7989b8243dd0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "26275128-e403-4d95-a519-20a019408f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67089008-03b3-4785-80ea-9cb75df9223d",
        "cursor": {
          "ref": "f8f6a030-4fa2-4581-a688-1a75f37e8a2b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "080370ea-979b-44aa-9407-02f3a250524a"
        },
        "item": {
          "id": "67089008-03b3-4785-80ea-9cb75df9223d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "75d1c3dc-c009-4d28-b7fe-1992fe8f8762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a48c93c-f4ff-48c9-b180-051e9d555538",
        "cursor": {
          "ref": "999a21ed-cc10-4a27-95b7-1da9f0960011",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b138e30c-2d85-4e6c-b0a8-bd3b682ae02d"
        },
        "item": {
          "id": "2a48c93c-f4ff-48c9-b180-051e9d555538",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e74fb788-bb45-42b9-8f3f-8fd595f4fe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384d5627-31b7-40f0-b71a-b939041adbcc",
        "cursor": {
          "ref": "f31d1138-1cbe-41bc-9158-c8087b145c38",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "305d4f79-c27a-4292-9fcb-ae80f7536e85"
        },
        "item": {
          "id": "384d5627-31b7-40f0-b71a-b939041adbcc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "326ac5fe-4579-42d1-a205-903f7379454c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed42012f-2076-4da3-8c34-0d2fd86c84d9",
        "cursor": {
          "ref": "c03a96b6-497c-4550-84b1-aff62b2570a4",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1f09e76c-f2e0-4c12-a611-e82fc9f30b9f"
        },
        "item": {
          "id": "ed42012f-2076-4da3-8c34-0d2fd86c84d9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0cb3595c-5e1c-4950-a4c4-e1c08a9b3a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c94f0d-6744-46bf-baaa-92d2119e2346",
        "cursor": {
          "ref": "a10dadf1-6855-488f-88be-f6f2d012170e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cbe81043-924c-4cd9-9b20-712eb5b81b5c"
        },
        "item": {
          "id": "b0c94f0d-6744-46bf-baaa-92d2119e2346",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fa4f93fe-5fcb-411c-8422-80612ac939cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cc7cd6-9678-48ab-9020-ce5416bf4c93",
        "cursor": {
          "ref": "f1809fb1-6e58-4fc2-8229-586d5ceef515",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "727f0e11-dc6c-4395-a372-1fb47f48615f"
        },
        "item": {
          "id": "65cc7cd6-9678-48ab-9020-ce5416bf4c93",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a0e79fee-6bef-4525-bb35-05a1f7b2ad85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd38a03-44fc-404b-821b-72ef8b588f58",
        "cursor": {
          "ref": "e7d7f1ea-13b5-4b3e-96c4-4f54ae749638",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "45775a12-82c3-4f8c-9b54-fe10adc195f5"
        },
        "item": {
          "id": "0dd38a03-44fc-404b-821b-72ef8b588f58",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bfe4da2c-fae5-4ffc-84cb-cbed42aa15c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303c1fe7-86e6-4f94-897d-343cae882088",
        "cursor": {
          "ref": "cdd6b4cb-b102-4f85-8c2e-80eef02188a8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e2c83f1b-33f5-4d19-a83d-aa5117f6d75f"
        },
        "item": {
          "id": "303c1fe7-86e6-4f94-897d-343cae882088",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e9b961e2-88b3-446e-86cc-35b8a7c936da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1f703c-fd3b-4382-813a-afe88c108f92",
        "cursor": {
          "ref": "9c632f6b-3328-4b66-845a-cf170f2b4dd8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aba4f879-d6d2-4144-ab3b-d41143fdda4e"
        },
        "item": {
          "id": "0f1f703c-fd3b-4382-813a-afe88c108f92",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "597cbea7-18fb-4103-85bd-0abf348afee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd89561-248c-4ea5-b752-ad6dd8571b5c",
        "cursor": {
          "ref": "b695d4ab-a507-408d-bb0d-63eae5ae2904",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "21a1ef88-eac3-47bc-8f0b-b6cf51febe64"
        },
        "item": {
          "id": "0bd89561-248c-4ea5-b752-ad6dd8571b5c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2018430e-04bd-4231-9f03-5e901579a5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757dce05-d600-4bf1-a42d-2fbfb9c04313",
        "cursor": {
          "ref": "90941219-e6b6-4a28-b391-c105ce608a4a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b8900256-a4c1-478b-af75-2fca617074f5"
        },
        "item": {
          "id": "757dce05-d600-4bf1-a42d-2fbfb9c04313",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ef40c99c-ceb7-4a3e-8c4a-1ee4ad9f85ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba2e1d9-3290-4090-8493-f4cf5e0e23b3",
        "cursor": {
          "ref": "05861d0e-dfed-45aa-bea2-dc127174ce12",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0bf1c7c4-7f38-4376-bf52-509a482ba757"
        },
        "item": {
          "id": "8ba2e1d9-3290-4090-8493-f4cf5e0e23b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "56c03e25-95cc-4b3b-9162-a65d252467e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb0e063-f3e9-4142-b178-f63c52db7263",
        "cursor": {
          "ref": "5e90d876-6da4-4129-9180-c10fac5ffd58",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "03dfd8d4-3f62-4359-90be-fc56111e5591"
        },
        "item": {
          "id": "4bb0e063-f3e9-4142-b178-f63c52db7263",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2a97714-7201-4e3d-895e-b2ea8de94b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75ea7ac-8233-4564-806b-3f75ea44fe11",
        "cursor": {
          "ref": "a5d20a3e-4b35-4f2a-9345-df9a77075c6a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "74cd814e-362e-4358-b2d9-9abb3aa4b4a0"
        },
        "item": {
          "id": "a75ea7ac-8233-4564-806b-3f75ea44fe11",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3822459f-7946-4f1e-be9c-7eef16ee2b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb3a019-5808-44d3-8588-5c21452f63de",
        "cursor": {
          "ref": "86965c08-3fa3-43bd-8926-9137df16ef44",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f8c4f094-405a-43ea-bd87-f36d3609327b"
        },
        "item": {
          "id": "1fb3a019-5808-44d3-8588-5c21452f63de",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "713c61c6-5b9c-46e5-b73b-0f50ff5bedbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0a7685-8a24-4e10-a379-29736b6b1e8e",
        "cursor": {
          "ref": "561093f6-2580-40de-bb1b-805ee09e0355",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "72e86ef7-25fa-4d8d-a572-4a7f6d74a71f"
        },
        "item": {
          "id": "3b0a7685-8a24-4e10-a379-29736b6b1e8e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9446886e-d019-4358-a791-3838b1a5b0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91048088-fd12-46a6-af01-26b0f9e85db8",
        "cursor": {
          "ref": "e86d0681-fc73-41e3-8d91-2678a14e9a1a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "38c4e646-b1ee-4352-a5a8-b44715f3fa2d"
        },
        "item": {
          "id": "91048088-fd12-46a6-af01-26b0f9e85db8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4aeb0857-8903-4454-8463-315f7b747cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73dd9f7-3d31-436b-adde-0f35bf9b9c8f",
        "cursor": {
          "ref": "deef5e44-8c92-4990-91e1-03595dd387c5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c60aeedd-46bd-4473-96b9-fad58484b503"
        },
        "item": {
          "id": "a73dd9f7-3d31-436b-adde-0f35bf9b9c8f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ffafa1ac-d2d7-4755-91c8-0884bc784db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2b78bb-dd55-434c-8f6a-8f14adac48f5",
        "cursor": {
          "ref": "a5c904e1-a782-49d9-9b65-d0df7e1fd83a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7d29472a-59ab-4be8-a841-2855f39ee6b2"
        },
        "item": {
          "id": "3f2b78bb-dd55-434c-8f6a-8f14adac48f5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1129db83-ad37-4a11-a9a6-c77abb525286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6a36b4-b625-4bdd-a21d-eae0d80351d8",
        "cursor": {
          "ref": "d9b51ea9-a83e-4f0f-b384-05c47fa3fb63",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d30face9-7638-48e7-b29d-05d9107d869f"
        },
        "item": {
          "id": "fa6a36b4-b625-4bdd-a21d-eae0d80351d8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8767e2d9-a184-4995-bf9d-153855a63e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d81769-8150-429e-98b8-bf15cb397d04",
        "cursor": {
          "ref": "a2a0f369-937d-4d99-9b67-d9feb60acf74",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b5e95baf-3f45-4aeb-baff-bbeb0f039033"
        },
        "item": {
          "id": "f3d81769-8150-429e-98b8-bf15cb397d04",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b82f69be-d8ed-400c-84ae-ad0d9e605995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a99abf-8cef-4e9a-b915-76ab93a69590",
        "cursor": {
          "ref": "d14b10c4-6c65-4129-9160-d215fcb85d48",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a532afe9-492f-4ffa-9898-5dd6cbbb650c"
        },
        "item": {
          "id": "96a99abf-8cef-4e9a-b915-76ab93a69590",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b4e39a88-b03e-4aff-98d8-3a910dbfa28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5e9e49-ac6e-4235-8321-d39dd37c917a",
        "cursor": {
          "ref": "a3c4e844-b2af-461a-9ced-8bd412da4368",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2f63137a-0262-4ea1-976b-78ed388544f3"
        },
        "item": {
          "id": "8e5e9e49-ac6e-4235-8321-d39dd37c917a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3a1e1877-27b6-4176-ac9a-37cb22bd2d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b784803-4465-40e4-a601-d91d1698255e",
        "cursor": {
          "ref": "127511e6-d26f-4c2f-84f9-7a5fde606f92",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9fd3cac0-d2da-461b-88c1-ccf5202ba22c"
        },
        "item": {
          "id": "1b784803-4465-40e4-a601-d91d1698255e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ecee0b94-02a0-4d12-944e-7b19318d8670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f1cf41-b22b-429f-acec-be9404711bb9",
        "cursor": {
          "ref": "db5a4cac-ce3a-4fa4-82a7-838c79ce4a70",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9514e250-35d6-4f53-b547-ee7029743018"
        },
        "item": {
          "id": "83f1cf41-b22b-429f-acec-be9404711bb9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7935356e-7e23-46bf-a688-cbe803274900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f544fa-1441-4942-a88a-41621a8c5a2b",
        "cursor": {
          "ref": "e047a5ef-97c0-4d98-8309-86079ab0ad7f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7deb4044-2d40-4fde-9416-806ba4ada9d6"
        },
        "item": {
          "id": "79f544fa-1441-4942-a88a-41621a8c5a2b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d0b9afb3-109b-44c4-ae50-29230e48bb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f116f51-3137-43dc-909c-3693ab8aeae0",
        "cursor": {
          "ref": "03d415dc-4090-42f6-83fa-1c14d5ad460e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "83da9d15-5881-40c3-9b0a-01738fdb24e9"
        },
        "item": {
          "id": "3f116f51-3137-43dc-909c-3693ab8aeae0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fbd1602d-c930-4c7a-a07a-fae08c60ca26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5b2d8f-9d48-41be-9d4d-70c780ac3211",
        "cursor": {
          "ref": "ea095df1-8d04-4bd8-b0e9-1bf70a34a16b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9c181530-941d-43fa-baac-798129de1fc4"
        },
        "item": {
          "id": "dc5b2d8f-9d48-41be-9d4d-70c780ac3211",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "13d5774e-635b-471c-a61e-cf844a7e915c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf9bbb8-ed65-4f84-b56d-e8193a46a204",
        "cursor": {
          "ref": "6abe703c-0aa3-447d-ba3f-4da2d1d556d5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c9920327-46fe-46c5-b46f-7d7a1dd0e527"
        },
        "item": {
          "id": "edf9bbb8-ed65-4f84-b56d-e8193a46a204",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cbd97c27-e13e-4f27-a290-1a7e48bdfbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7465c9-f605-4a5d-91a1-8ffa1e15b383",
        "cursor": {
          "ref": "812a7e7a-5883-4af6-a69f-3510ed9c15af",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7d3f396e-9fd7-46eb-96e1-2f65b94b47df"
        },
        "item": {
          "id": "9c7465c9-f605-4a5d-91a1-8ffa1e15b383",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "56cf47b2-8b25-461f-8ff0-dc0141093d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febd91d8-1ed1-44db-ae5e-44f1b098ff83",
        "cursor": {
          "ref": "984e1657-942e-4662-a1e5-46782019e46c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b1a12c33-02c8-4da0-beb3-f1c2051024ac"
        },
        "item": {
          "id": "febd91d8-1ed1-44db-ae5e-44f1b098ff83",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0e169339-0b1a-43c8-abe8-eaf167d7f886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a869fce-3e40-40d5-9fad-e7de9dc7e3bc",
        "cursor": {
          "ref": "d83a712f-3411-44e3-b7e7-b6599533700d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aa063171-eaf7-4540-a4d3-a72ea5356d71"
        },
        "item": {
          "id": "8a869fce-3e40-40d5-9fad-e7de9dc7e3bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9e216252-b6c3-425d-ad0e-cdf776fa0167",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342c9951-195a-486e-ba93-c3976336973f",
        "cursor": {
          "ref": "86e4df4a-21e5-4a7c-ac93-f64735d62541",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0707b6c3-8e88-4a4d-9cf4-cc3e00187c39"
        },
        "item": {
          "id": "342c9951-195a-486e-ba93-c3976336973f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d94cb778-128a-43be-8f8f-79d1ca32b7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5126ef8-fe0f-461e-bd3a-ed42d5fc9326",
        "cursor": {
          "ref": "9e6c3003-844c-4a20-a1c0-d4b22efeabf7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2fa11ab1-3a00-4ec4-9379-7a786b44461d"
        },
        "item": {
          "id": "c5126ef8-fe0f-461e-bd3a-ed42d5fc9326",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5265df84-41d1-474c-b783-71879ff76a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f59312-a627-4f28-b12e-fd07300a03b1",
        "cursor": {
          "ref": "355c029e-3bc4-47d1-b416-77650a91612d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7ec3af5c-94d8-408e-b737-487335d9407c"
        },
        "item": {
          "id": "09f59312-a627-4f28-b12e-fd07300a03b1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3d9ce3ee-ff4b-43e2-96ce-fc1abc1b19f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e347ac89-1285-4a9b-a0ed-645bd0952d83",
        "cursor": {
          "ref": "da01fc42-f917-499d-82e8-ccd1a318d5fb",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0633699b-9dc7-4278-8faf-d96340c17714"
        },
        "item": {
          "id": "e347ac89-1285-4a9b-a0ed-645bd0952d83",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "87a43cae-e5fd-4a81-ac84-fd771b87e3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8aa58e-ed77-42dd-a8a2-2f2413309902",
        "cursor": {
          "ref": "43f1b7b1-6bfd-448a-bc79-f5d55bebed0d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d7f5461d-beb5-42e8-ac7a-2c87035c4520"
        },
        "item": {
          "id": "5b8aa58e-ed77-42dd-a8a2-2f2413309902",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c973ec3b-12c1-423e-8bb7-720304275cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6742e774-a3fd-464c-91a0-be179add6016",
        "cursor": {
          "ref": "ed32a084-24f8-416f-9bf2-ba0501561bee",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a8ae40a0-ce6f-4965-89b0-d2938a2cf511"
        },
        "item": {
          "id": "6742e774-a3fd-464c-91a0-be179add6016",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7952af65-9d0f-45e7-884f-e13b65279a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a426567e-679e-42ef-9a05-bd55bc5789e6",
        "cursor": {
          "ref": "6971cd3a-dece-42c3-8846-b860bfcc64dd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "509ef769-10eb-4a75-bdc8-9848902f149c"
        },
        "item": {
          "id": "a426567e-679e-42ef-9a05-bd55bc5789e6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "44a35e14-f410-4ff0-9620-a2fa2038c34f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d83e87-36de-4dea-9844-f2708117dfc8",
        "cursor": {
          "ref": "3d4bcb23-ec4e-4be4-ab4f-32217753031c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c5dc23b9-70bf-4070-915c-d617b419dcb6"
        },
        "item": {
          "id": "c6d83e87-36de-4dea-9844-f2708117dfc8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6dfd3c19-af8f-42ab-9956-b0c0351ef10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8bef44-d9f3-4dff-bef4-25bfa8777dc1",
        "cursor": {
          "ref": "f1156d11-cb83-4f69-a9e3-7a4438669e93",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ec41a302-bb29-4357-b4b6-3643e9cf78e4"
        },
        "item": {
          "id": "fa8bef44-d9f3-4dff-bef4-25bfa8777dc1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "496e9a52-165a-4808-8b90-9531a46098e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92f44f8-616b-42b0-bf30-d30340c23988",
        "cursor": {
          "ref": "2d3a735e-0ac7-4937-b06e-40c3e933d119",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4b8fa13a-e478-4bf6-8868-3971067593bc"
        },
        "item": {
          "id": "d92f44f8-616b-42b0-bf30-d30340c23988",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1c6f18fc-fe84-4e24-8203-e8f43c137921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9003fd6-6a5d-4c39-ace7-f4c79db854d5",
        "cursor": {
          "ref": "87dee237-b621-48d9-8dd2-af9a4d46092c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "44096a19-c7a7-4518-9af9-e571d2b1c0fe"
        },
        "item": {
          "id": "e9003fd6-6a5d-4c39-ace7-f4c79db854d5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c2899f79-e52c-4084-8d65-5f9186ccef82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3762d528-41f5-4078-b373-78b5e1b16266",
        "cursor": {
          "ref": "9124369b-7e4f-47d1-97d9-f5f9bfe2656f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "302fd52d-df59-4a7f-93bc-64dadb80d56f"
        },
        "item": {
          "id": "3762d528-41f5-4078-b373-78b5e1b16266",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a1ea1fb3-bcd6-4ca0-a668-03c834453b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393b2c2f-f8ad-4750-b0ef-7d8b33b224c6",
        "cursor": {
          "ref": "c5b1f43d-0877-4bad-aa65-9cc5e9989593",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eac5c377-899f-40b8-a140-69ea25c10578"
        },
        "item": {
          "id": "393b2c2f-f8ad-4750-b0ef-7d8b33b224c6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c4af8c5d-b9a5-4f6c-8024-b69c62c1341d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5d3134-9209-42e8-8151-32a71cf646ac",
        "cursor": {
          "ref": "c873c05f-251a-4813-8c5c-09f04bca48be",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a5c4fcdd-0d80-457a-8c91-8947da2bc858"
        },
        "item": {
          "id": "1e5d3134-9209-42e8-8151-32a71cf646ac",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5049e955-ed33-432e-8400-978bf948b09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f97d18-e191-4b71-b7f3-5756282b2011",
        "cursor": {
          "ref": "2c59e1b1-6467-4785-811d-3fd36c00c4f7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d9886d15-32db-4f73-a69c-01f0a433192b"
        },
        "item": {
          "id": "59f97d18-e191-4b71-b7f3-5756282b2011",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "293e372d-ecd8-4981-a18d-f39a917b78fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c91aef-5ccd-4846-b300-836bee95e789",
        "cursor": {
          "ref": "daa11d71-4976-4ec5-8545-5d977a5c7def",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e7e7710-d691-48af-b7c5-3886b4f4a8d5"
        },
        "item": {
          "id": "f6c91aef-5ccd-4846-b300-836bee95e789",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "637c1f0c-aed9-40c7-b371-1c401af0991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d571593-0a27-4a33-bebf-839d5b4e1946",
        "cursor": {
          "ref": "5504c42c-194e-4b31-bc46-8342100fe90c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "878d7eee-6ce1-4e36-ac67-2bff88c84500"
        },
        "item": {
          "id": "2d571593-0a27-4a33-bebf-839d5b4e1946",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "08711a96-9539-483b-85e1-dc4107385730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deebc67-4a43-4831-be25-81cb2ff363b6",
        "cursor": {
          "ref": "a74de93b-7e7b-49ae-976b-9e21c1ae269d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "921292e4-3a0b-4b9e-9616-aa6a2f4eb06b"
        },
        "item": {
          "id": "0deebc67-4a43-4831-be25-81cb2ff363b6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7a898fea-0d62-4d75-aa95-3bdebb281044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7e0e51-590a-42ec-aa17-556aefc8080d",
        "cursor": {
          "ref": "ab1b4542-15e4-4aed-96ac-8946bd447fdf",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "66ab2016-433a-419d-abab-3243ca43b586"
        },
        "item": {
          "id": "2d7e0e51-590a-42ec-aa17-556aefc8080d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ea474c60-06eb-49e3-8a38-44dc2ab9f250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336d8ab6-90f9-49ff-bdc6-79f4287ade23",
        "cursor": {
          "ref": "310b6d65-ddaa-4bb0-829d-df7ace0a8cef",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0618882e-0d57-4870-b846-c6ef464606f1"
        },
        "item": {
          "id": "336d8ab6-90f9-49ff-bdc6-79f4287ade23",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1f7fe25d-86d9-4f60-a4be-4ebf1de7acaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e409600-2d5c-4548-9032-bd5a503fa72e",
        "cursor": {
          "ref": "7db5e93e-f23e-4ad7-bdc2-c1ff84b5869f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c26d1ddb-b191-4084-ba75-a351fcbf9131"
        },
        "item": {
          "id": "0e409600-2d5c-4548-9032-bd5a503fa72e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e4de2835-efbd-4ee0-a1be-1a2d4daa70ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6e11b9-01a9-4a8d-8a49-212d2cee16f7",
        "cursor": {
          "ref": "063d86a6-a5ac-4544-860a-ac4376af9037",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bfcdc5f3-7014-4986-bfa5-c5bfe007e85e"
        },
        "item": {
          "id": "5c6e11b9-01a9-4a8d-8a49-212d2cee16f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8d9f2698-32d5-4eac-9433-123e6fe2e3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2083f3f6-3f90-4002-920a-a958439d47ea",
        "cursor": {
          "ref": "6f6574b0-5332-4bad-87b2-e6af3103c57c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "95daae42-f210-4ca0-a339-775b2f0c5dc2"
        },
        "item": {
          "id": "2083f3f6-3f90-4002-920a-a958439d47ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d377fc8d-cbb1-4c23-9a0b-b71a16bbdd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bf4ee9-8f47-47f6-adff-a5d33beb6c82",
        "cursor": {
          "ref": "42b8ea2a-97d3-431b-bed2-b6ba905335cd",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "877bbabb-12ee-4638-a24f-be07767389c1"
        },
        "item": {
          "id": "92bf4ee9-8f47-47f6-adff-a5d33beb6c82",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f6b77994-0a86-4505-ac1e-89f6ca86a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6b3f29-941e-4b36-a757-3fa54d640fc2",
        "cursor": {
          "ref": "f72eb246-0ef1-49b1-bbbf-6cc5ec786a7e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8f052ab2-2ee3-4323-ac74-b3c9fcc46b1f"
        },
        "item": {
          "id": "ad6b3f29-941e-4b36-a757-3fa54d640fc2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1146e3f4-d0b7-4c20-a684-91632cb463db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad6b8b5-7baa-4eaf-afaa-4e98d8c74fe1",
        "cursor": {
          "ref": "4634f00a-7abb-4a06-bbda-37fb52d0dc95",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a8df4b64-0d8b-4a8b-a7bf-37ab01d9ddc3"
        },
        "item": {
          "id": "6ad6b8b5-7baa-4eaf-afaa-4e98d8c74fe1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e0409473-953f-43c2-b43f-02451dc62d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859281fd-abb3-463c-89c0-cd5cb463ae16",
        "cursor": {
          "ref": "c0c52755-774d-4659-b023-3ba36b2b5b4c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8b7efce9-fdc8-4a6a-81d0-5da43d84d23e"
        },
        "item": {
          "id": "859281fd-abb3-463c-89c0-cd5cb463ae16",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7201d28b-49fb-4ee8-9b63-0d92a296f656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171d78e0-df95-41b0-9c3d-aeeb45cd235c",
        "cursor": {
          "ref": "f2a039e2-a658-41ef-96b3-e4272e7ab71d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0dfa5bf7-06b8-46ea-98e9-fc80b706593c"
        },
        "item": {
          "id": "171d78e0-df95-41b0-9c3d-aeeb45cd235c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fb0c8e4a-242b-45ac-8ae6-27d44fc35a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a7dffe-ccab-41f9-a95a-244cacfd7037",
        "cursor": {
          "ref": "596b3ec9-daee-4ed0-93ba-e4b02f820063",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a123e40a-9d20-4af8-be94-26a385c9dec9"
        },
        "item": {
          "id": "78a7dffe-ccab-41f9-a95a-244cacfd7037",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "666abab4-ae0c-40c2-ac33-54fa3268b704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0d95ff-d94e-4327-8e5b-1a881ce34f0d",
        "cursor": {
          "ref": "c6ddfeb7-b53d-4f88-bf3c-858de1e1647f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8ea72088-d0be-410b-85a0-b257472e7031"
        },
        "item": {
          "id": "ad0d95ff-d94e-4327-8e5b-1a881ce34f0d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d25d2548-707f-4e18-90f7-23c99638b182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d259de-aa8c-4f08-a238-a749cc563f4d",
        "cursor": {
          "ref": "19ec0190-55ab-4941-98a4-84206e985765",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c9bcbd26-f74d-4816-b931-7b34c217d02f"
        },
        "item": {
          "id": "f2d259de-aa8c-4f08-a238-a749cc563f4d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1d462b29-16ec-455d-9ab5-04fb33cb2b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e14abc-fd21-46b0-bb8e-01b77d1f96c2",
        "cursor": {
          "ref": "73719fdc-2399-43f3-a5fb-3c86cc158b0f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f7109649-5b30-4b43-bcc3-e290a36eed28"
        },
        "item": {
          "id": "06e14abc-fd21-46b0-bb8e-01b77d1f96c2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b16720c4-8b89-4fe1-a3d3-952f9596bf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1707e25a-d056-49d5-8f6e-5e5cb9d1bb65",
        "cursor": {
          "ref": "d579c85b-adb0-4706-9873-f4ff134f2a2c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eeef6953-8ace-441e-9730-b000de6cf7fc"
        },
        "item": {
          "id": "1707e25a-d056-49d5-8f6e-5e5cb9d1bb65",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "845958e7-93d4-43ff-a1d2-e47db653e44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb796594-4f68-4ebb-844b-29853861945d",
        "cursor": {
          "ref": "427e823d-4f95-41c6-ad70-bd0182b81c43",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5ca397b8-2569-4fc1-b816-b8b6b7da4c84"
        },
        "item": {
          "id": "eb796594-4f68-4ebb-844b-29853861945d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "34a89d95-9372-4ce4-adc6-676be368c27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b53fe9-4559-4846-a5ec-e8ea03c41c44",
        "cursor": {
          "ref": "1e1aec95-78e1-4ff4-9f09-4b2469517414",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bf836436-26f4-4fdb-9c44-c14e78517c3e"
        },
        "item": {
          "id": "a4b53fe9-4559-4846-a5ec-e8ea03c41c44",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "12d31288-c754-4035-af57-c65795cb474a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79289005-5d59-405b-b607-00f86eb190e5",
        "cursor": {
          "ref": "48b1b5b0-1dbc-41f7-86a0-885d6785b1f8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e663ec8d-c231-4ddf-84d6-1c8efc57cfab"
        },
        "item": {
          "id": "79289005-5d59-405b-b607-00f86eb190e5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1390c199-0302-48af-a69d-2e9224f51b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432ee63b-00f4-4550-ac4c-5870ca34b9db",
        "cursor": {
          "ref": "3a2acf23-a33f-48f2-8ec9-14d5786c3bae",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6f45dc3b-4817-4b54-8731-7bae6dcbbb80"
        },
        "item": {
          "id": "432ee63b-00f4-4550-ac4c-5870ca34b9db",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b784588e-1e60-43db-b463-bda4944a733b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45a998a-f90d-4652-a0ed-7ec9b043456b",
        "cursor": {
          "ref": "eec33948-dedd-4516-abaa-c759ea0966a9",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "79c0be09-ca6f-4e85-ae2d-1e3ab4e3a94b"
        },
        "item": {
          "id": "a45a998a-f90d-4652-a0ed-7ec9b043456b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d1877a9d-687a-40da-8263-49be3f89b4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b53cb58-ec5e-4e32-8add-0ce6f89cb628",
        "cursor": {
          "ref": "75e808c0-db10-4891-8eb3-e1af50c04c88",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "037c3f35-1dae-4a4e-8204-3617eae2674e"
        },
        "item": {
          "id": "6b53cb58-ec5e-4e32-8add-0ce6f89cb628",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0ec99999-c90a-4077-900a-3a2c47d75eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9c7d9c-b649-47b7-94ab-6324afab614e",
        "cursor": {
          "ref": "b0f6281f-cfb8-45f0-82a5-126808642304",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bf39d27f-0910-4be4-ae9f-406b042607ac"
        },
        "item": {
          "id": "ab9c7d9c-b649-47b7-94ab-6324afab614e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8a6ac5d-5c2f-47e1-a3d0-f5f0ac5f9d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ead8c-0926-4040-9a46-a062cefa93de",
        "cursor": {
          "ref": "2e22cfbc-d222-4507-a36b-03cd613e97fb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f035e0d9-9393-4f2a-a2a3-08e0fbdabdba"
        },
        "item": {
          "id": "198ead8c-0926-4040-9a46-a062cefa93de",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bd4a7be2-f15b-493e-bfe4-b19d1efea147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f441f17-b67f-44d3-b8ec-0541914fd668",
        "cursor": {
          "ref": "84b34312-6446-499e-a919-875aa6977923",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "45a5b508-9127-45b0-a1aa-fa6677f1f9eb"
        },
        "item": {
          "id": "7f441f17-b67f-44d3-b8ec-0541914fd668",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b3b0c5d4-a41c-4e18-ac68-4e47c23234e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8402b081-2bf0-4fd5-892a-414e3111cf83",
        "cursor": {
          "ref": "6fc50255-2d7a-4feb-b098-7d2e3e6e70cf",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "11c594c3-1720-4f7a-9dd0-c699711aa051"
        },
        "item": {
          "id": "8402b081-2bf0-4fd5-892a-414e3111cf83",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "64a34eb7-2c49-4d61-93dc-643d917daf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a550851-224b-4c1c-bd12-2ae3d3bd4a2a",
        "cursor": {
          "ref": "000c4723-ada3-471c-a8bb-4126a581a73a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b107bdc4-f42e-4e50-8e56-7b3b0c3950bb"
        },
        "item": {
          "id": "0a550851-224b-4c1c-bd12-2ae3d3bd4a2a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d151950d-00af-4f95-9ef8-0a4ca3d71938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357fec5e-4631-4d64-9dd3-962a772788d2",
        "cursor": {
          "ref": "12c8d2d4-dba6-42e4-a299-dce69db59181",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e6560dc4-847f-46f4-88a5-651c427b7bb6"
        },
        "item": {
          "id": "357fec5e-4631-4d64-9dd3-962a772788d2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f9fd1e5b-9fef-4983-92b5-dda7b3caeb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266d2e50-0ba3-44a1-946c-b06de8dc7cd5",
        "cursor": {
          "ref": "901f975d-4004-45dc-87ff-7712d5e4200c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "25ea59ab-2b34-41f4-b72e-0d10958359c0"
        },
        "item": {
          "id": "266d2e50-0ba3-44a1-946c-b06de8dc7cd5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ee6adae4-76ea-406b-8ea7-475c47d9aeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b938e6-f240-486c-837d-63df1a2aa0f2",
        "cursor": {
          "ref": "1ae27c51-982b-4050-9dae-d0638a259086",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2ffbe372-5810-494a-bf79-56ac07813b76"
        },
        "item": {
          "id": "c6b938e6-f240-486c-837d-63df1a2aa0f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "829ce3b2-52b4-495d-a58f-bd0462e3d68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a086b43a-1782-46d1-a9a3-0962bd164808",
        "cursor": {
          "ref": "da5becdb-e0cd-40ee-83e7-9f513579c60b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fbde6f5a-39c2-49f9-b442-43fa4bd17997"
        },
        "item": {
          "id": "a086b43a-1782-46d1-a9a3-0962bd164808",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3febc1e7-5ce0-4322-9523-b5482d80af5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2678eb0f-25e0-4ec1-ba86-c7db02e5aff4",
        "cursor": {
          "ref": "ec211cf4-af3b-4788-8416-a3678a786581",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8580f1ed-49bc-447a-bc13-d60fadb60488"
        },
        "item": {
          "id": "2678eb0f-25e0-4ec1-ba86-c7db02e5aff4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3e6fb2d8-17e1-48b8-8986-7a6d5675c55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ecb84a-a138-4458-a0bd-98094ca57b4d",
        "cursor": {
          "ref": "4bc78245-d884-43f0-b851-0f9cc455ac24",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8e956a49-12e5-4880-9821-d1543d3c75ff"
        },
        "item": {
          "id": "96ecb84a-a138-4458-a0bd-98094ca57b4d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7ffeeaf3-4bed-4dbc-bfec-88358c5ded42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f820629-4e01-4d71-9236-35e9d55b0e6b",
        "cursor": {
          "ref": "6942420b-3950-4e81-92b3-f2a58f6d4c82",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "556409af-88e0-4c36-8b19-61abebfa0bc1"
        },
        "item": {
          "id": "4f820629-4e01-4d71-9236-35e9d55b0e6b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bcdf9c39-1807-4013-a66e-79f6066bfe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8848aaf8-6be8-4799-8703-d14a8238638f",
        "cursor": {
          "ref": "e47ebe79-3218-4d17-9b88-0b2d8357ffe7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bec51df2-b8de-480f-ae86-bb21be1fb48e"
        },
        "item": {
          "id": "8848aaf8-6be8-4799-8703-d14a8238638f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0af10ed3-039c-4253-bae1-7d5430886bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce697ed-02e6-4397-901f-d3459608a203",
        "cursor": {
          "ref": "4598bc15-b6b0-4226-9700-f9e294ba9822",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1127b02f-e8db-41e4-89a7-20b17e73c09d"
        },
        "item": {
          "id": "2ce697ed-02e6-4397-901f-d3459608a203",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "99a9063a-4393-419f-be00-60050f4f50ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef721f5-e914-4318-8f25-dfc45f3c5e59",
        "cursor": {
          "ref": "f8365808-ce58-4e68-8c54-71bfc359cedc",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "15ac33ed-993f-4c44-a0a4-fb41ec87f07e"
        },
        "item": {
          "id": "bef721f5-e914-4318-8f25-dfc45f3c5e59",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7e7ae8ea-b376-4e2b-915f-fbde2711a9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8473ab-3e3b-452f-873a-fbe19a7fba96",
        "cursor": {
          "ref": "7d83bd4a-3e04-461c-aeaf-b7246f35feda",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "59763dfc-87e6-4373-9918-d35d2549423b"
        },
        "item": {
          "id": "ad8473ab-3e3b-452f-873a-fbe19a7fba96",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b6fe802f-8531-4e30-9f23-a3283cd28baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24d8832-ec7c-4938-88ff-b1557d76d6bb",
        "cursor": {
          "ref": "60a9476f-5946-492b-a933-ef76760c0000",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b78afb7a-42d1-48f6-b206-57ec3d0b19d8"
        },
        "item": {
          "id": "f24d8832-ec7c-4938-88ff-b1557d76d6bb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "06cadb40-3e2b-40dc-9d77-2ec1419a5f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58370106-9821-46e4-b95f-04dcdb8eb7b4",
        "cursor": {
          "ref": "0516c926-4b3b-4ff7-b154-6b5cc00a7370",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5244a9fe-de71-4c20-81c5-a3ea3a499569"
        },
        "item": {
          "id": "58370106-9821-46e4-b95f-04dcdb8eb7b4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9363aa0c-0350-4912-938e-6f2927a19077",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6e0201-5ee1-4f4e-816c-943b357b0e8d",
        "cursor": {
          "ref": "db2b12fa-d0e7-420f-9491-17dbe344cafc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "57638628-ea11-4ea6-b9dc-14638e819cac"
        },
        "item": {
          "id": "ea6e0201-5ee1-4f4e-816c-943b357b0e8d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e4a13ee6-4697-4321-aec7-55bd13ac3e90",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 154,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd8eed9-c5ed-4b4d-94ee-ed8e91774fe7",
        "cursor": {
          "ref": "330d991d-0793-466e-afb7-64f4d519088d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7d4237c0-98f0-4b70-a145-15454971f864"
        },
        "item": {
          "id": "ebd8eed9-c5ed-4b4d-94ee-ed8e91774fe7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "62d63e79-7fa4-4341-9b41-644077c5ec5b",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4d7585-a644-44dc-98d2-879c640c4c83",
        "cursor": {
          "ref": "ceed08ad-9a89-4c91-95c3-586f5ffdbd89",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2cce2c65-3daa-44a4-9c79-7ab901f97b24"
        },
        "item": {
          "id": "ff4d7585-a644-44dc-98d2-879c640c4c83",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fed60274-ea10-4d56-8ade-55a10e9baa9e",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2367441-25c9-4a04-82b0-85b3c5ba26c3",
        "cursor": {
          "ref": "b08983c5-575e-4054-852e-7dfce7b621e3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aaee3d56-505a-4a83-a846-b2cdeb55c5b1"
        },
        "item": {
          "id": "f2367441-25c9-4a04-82b0-85b3c5ba26c3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "53fc44c4-2822-4ca7-b892-80a182f9c7c0",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc99390a-f48d-49d2-afbc-907b0184e653",
        "cursor": {
          "ref": "eb38654b-8530-41e2-95d0-54e4509fad48",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e3c7791a-7681-4e95-a323-80b1136e094e"
        },
        "item": {
          "id": "bc99390a-f48d-49d2-afbc-907b0184e653",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eb63d74a-1ca5-4dab-b19a-c024a9e445f4",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb65e5a-f5c3-425d-ad54-b59e07379cfe",
        "cursor": {
          "ref": "172696d7-e7b7-498d-9c96-10f48cbcdc01",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c7d9668e-7a32-4a73-96f6-5d1d6fd1bec3"
        },
        "item": {
          "id": "8fb65e5a-f5c3-425d-ad54-b59e07379cfe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a40c8d36-6fbc-4664-9bb5-6336b1888c12",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33f90b2-2d3d-46cd-99e6-df46c823953d",
        "cursor": {
          "ref": "7d8ab51c-e083-4ec5-975f-6969e56e0f78",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6505c474-4c99-4bf4-8488-392985a764ef"
        },
        "item": {
          "id": "c33f90b2-2d3d-46cd-99e6-df46c823953d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98e3d575-7233-4a6e-b740-2090a728338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33f90b2-2d3d-46cd-99e6-df46c823953d",
        "cursor": {
          "ref": "7d8ab51c-e083-4ec5-975f-6969e56e0f78",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6505c474-4c99-4bf4-8488-392985a764ef"
        },
        "item": {
          "id": "c33f90b2-2d3d-46cd-99e6-df46c823953d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98e3d575-7233-4a6e-b740-2090a728338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb81b6e-fb07-4ed3-9da5-1b445a47e105",
        "cursor": {
          "ref": "1cffa5af-72d6-4923-ada2-90ebcde4a39d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5622f058-d925-42c6-90e6-188a71c23260"
        },
        "item": {
          "id": "bdb81b6e-fb07-4ed3-9da5-1b445a47e105",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b3126e16-4bac-48d4-a306-ee49d3865ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a6451e-eaf9-454f-a810-6d957fd35375",
        "cursor": {
          "ref": "8bc47ffc-9112-4894-ab3f-f91c3c726ea7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f700ad0f-c96f-4f18-b6ac-11208029eee1"
        },
        "item": {
          "id": "b0a6451e-eaf9-454f-a810-6d957fd35375",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6b96f49f-ad86-45ea-b846-eedbb213deb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb56c1e3-94bb-430a-894b-f064ce543764",
        "cursor": {
          "ref": "badbb241-b9a4-40c8-be59-d26e336da0cd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "19b1a00a-9741-4d1b-a796-52c7f945d204"
        },
        "item": {
          "id": "eb56c1e3-94bb-430a-894b-f064ce543764",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9ae4e64c-ff0f-4cb6-871a-ec98b4e176bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1348bd38-24d0-479e-bd39-7d6ac08d6ab8",
        "cursor": {
          "ref": "6927e7b6-b724-48c0-9012-0536c28ff94e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "529e2a04-b8ee-43b1-9915-9662f392c277"
        },
        "item": {
          "id": "1348bd38-24d0-479e-bd39-7d6ac08d6ab8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "37205285-959d-47f2-bdcf-d067a316eb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dadf40e-1441-4c9d-a858-0246384c13a2",
        "cursor": {
          "ref": "6c34cd84-2405-423d-ad0f-131781d38fbc",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6a5127d5-6489-4dc1-8527-7ebb6a7eea4e"
        },
        "item": {
          "id": "5dadf40e-1441-4c9d-a858-0246384c13a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a20a92ae-b29c-452c-9966-548f4df2cb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288f066c-1227-4a75-8997-d74b96c70035",
        "cursor": {
          "ref": "f55a3363-9d61-4e2d-b2ea-7f87b28d9153",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5d6cd713-f2f2-42cf-bed7-645eed6a7449"
        },
        "item": {
          "id": "288f066c-1227-4a75-8997-d74b96c70035",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e6529424-1887-469c-8422-f65d8a17a3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a590dd69-3e4f-4a2b-80df-ebe54db12763",
        "cursor": {
          "ref": "fbc6bf84-7323-4d62-97d0-a760ec457e5f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7a9ceacb-c3a3-4baf-b610-ae3c9e31c16f"
        },
        "item": {
          "id": "a590dd69-3e4f-4a2b-80df-ebe54db12763",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a97575b3-b0a9-4ab1-ae50-47834d20d5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6f18a2-6794-432c-9687-dcd751eb6058",
        "cursor": {
          "ref": "ee6c6b2c-39f1-4d04-8b06-5906f0dc507e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "59e424ed-4daf-40fb-bb0c-ce731eab610b"
        },
        "item": {
          "id": "8c6f18a2-6794-432c-9687-dcd751eb6058",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f717e0c6-838f-4425-b742-63433abdd417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb7125d-a9b7-4be7-9b4f-38b13041cd5e",
        "cursor": {
          "ref": "9b0767af-99e7-4754-9726-05cc0f737954",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f50199aa-901c-4eb7-b3df-10347124d167"
        },
        "item": {
          "id": "7cb7125d-a9b7-4be7-9b4f-38b13041cd5e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "035e6c7a-4fd7-4c53-bda7-554dd4973eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a0d411-a214-44e5-96f4-2586b7c7eab2",
        "cursor": {
          "ref": "3120a8b2-2097-4677-8877-9e252c20781a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "59ccbe71-00e3-4999-afaf-98a843073473"
        },
        "item": {
          "id": "a3a0d411-a214-44e5-96f4-2586b7c7eab2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b649ec0c-a4e5-43cb-9ebe-78a24d0c0349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2e2d9e-7d29-41b5-b72e-d0452003fea2",
        "cursor": {
          "ref": "bcefc3d2-4be0-48eb-9365-0ce02d6f6159",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "46c37d04-b88f-407f-851c-35d0feb9ad57"
        },
        "item": {
          "id": "6f2e2d9e-7d29-41b5-b72e-d0452003fea2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "51fae07a-cd56-4556-abcc-23b6506ad666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceef65e8-fe0a-46f1-bdd2-ae4a88c8202c",
        "cursor": {
          "ref": "08186b92-b30d-4d30-8901-ee8f8e2c9d90",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "995031ef-a37d-4ced-8064-be18f82e31d6"
        },
        "item": {
          "id": "ceef65e8-fe0a-46f1-bdd2-ae4a88c8202c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cb78ac7f-1f49-45e2-bcfa-d7ac33ee0596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1848a081-5763-4265-89a2-a8b12b8bde45",
        "cursor": {
          "ref": "ceef76fc-de38-46cc-bb17-d08618ad655d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1ed8e99e-62e0-43c7-a961-45f561d95764"
        },
        "item": {
          "id": "1848a081-5763-4265-89a2-a8b12b8bde45",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "49a5880f-0f64-418a-ab1a-b0e731bf6018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c672d8-b45d-4a9a-861e-c9c4f6e2e5e7",
        "cursor": {
          "ref": "daba2f3b-bd87-4154-9f04-89f113ca09df",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0d285ef8-fda8-484c-9168-6ad4dbd9066e"
        },
        "item": {
          "id": "44c672d8-b45d-4a9a-861e-c9c4f6e2e5e7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8b740fc1-bb7a-4849-8775-793e9a903f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51349288-4e99-4d40-a770-b1cbe676b4e8",
        "cursor": {
          "ref": "66607c96-0ef9-4498-bcdf-1b0a12bedff7",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "41a59026-3190-4a16-ab97-8f14c82b72dd"
        },
        "item": {
          "id": "51349288-4e99-4d40-a770-b1cbe676b4e8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3047947b-9916-4c3b-b47c-07c6b07f520b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7e142d-33ab-45f7-81af-2a95d14d42a9",
        "cursor": {
          "ref": "c1da7fd3-9902-4cf5-bdd3-e3b4e7400302",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0e32360a-932d-43b9-b891-c291eac6bf3b"
        },
        "item": {
          "id": "2a7e142d-33ab-45f7-81af-2a95d14d42a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f5ffa0b-8c7e-416b-acb3-46b20b48e488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1e5b13-269e-4c40-96c9-d948b9e9e07f",
        "cursor": {
          "ref": "d0945612-5eb9-4028-b2e2-643bf959beb8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2892887b-3c60-42ae-a9dc-3f9f955071a2"
        },
        "item": {
          "id": "2f1e5b13-269e-4c40-96c9-d948b9e9e07f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9b3da696-c5b1-448a-9a14-845b6ae5dc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666135b4-bafc-4407-b21c-37dc5fac2cb3",
        "cursor": {
          "ref": "32a96ce0-5d9f-4e7f-be06-31fa9a5db9d8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f7dde3a2-755e-4f49-8230-5bd96bae60a7"
        },
        "item": {
          "id": "666135b4-bafc-4407-b21c-37dc5fac2cb3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fc68af7d-f0e4-4151-9562-dfa9fb20a592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6d6933-5d0d-4658-b125-8b2f629af573",
        "cursor": {
          "ref": "9daf934d-349d-45df-ac59-9ea0368bbb29",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e3b8de90-d819-4869-be3e-72f03e970865"
        },
        "item": {
          "id": "3a6d6933-5d0d-4658-b125-8b2f629af573",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "88e2a074-8a4c-4c08-8191-993d1d9931c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac0691c-46c4-4d63-b59c-676bafe98055",
        "cursor": {
          "ref": "90e3f4ca-5517-4a78-919d-e0114ee499fc",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3096973e-43fc-4b17-ba4b-ffcdae5d64a6"
        },
        "item": {
          "id": "9ac0691c-46c4-4d63-b59c-676bafe98055",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "95593d24-713f-491c-91cd-aa6474c4b3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2d906f-e9e0-4d9e-a43a-d682417cdf1c",
        "cursor": {
          "ref": "b40bc392-05be-42ac-bff8-78cb18fdc5df",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "11fb1236-feeb-4e40-bf38-18126d1d9900"
        },
        "item": {
          "id": "8b2d906f-e9e0-4d9e-a43a-d682417cdf1c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "089b395f-60a1-4f17-a358-a0ee4c3e9f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923307a3-c895-4d24-a930-4c42cbae2e2a",
        "cursor": {
          "ref": "1c9982ce-d604-46b7-b502-eb9e0af35dc3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "769318c3-09c1-49c0-ae87-600e6203ef79"
        },
        "item": {
          "id": "923307a3-c895-4d24-a930-4c42cbae2e2a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bb38adb2-6470-49b7-9db5-db521aea1e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e3ad94-f44d-4dfe-83d4-7db7088320e5",
        "cursor": {
          "ref": "701df3c7-6dd8-44e6-9dce-98efbc7ff347",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f48c7c21-924b-490b-a95f-d356037de377"
        },
        "item": {
          "id": "b4e3ad94-f44d-4dfe-83d4-7db7088320e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "65bbd4fe-1d02-44bc-8a25-18b571b8fd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff43c40-8fa3-4a33-88d5-a8046413c229",
        "cursor": {
          "ref": "dfbecb34-12c5-4209-819b-5f69787bfc38",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a0bf5d39-636b-4d32-a23e-7e6d41d31484"
        },
        "item": {
          "id": "0ff43c40-8fa3-4a33-88d5-a8046413c229",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eb2e283c-1d25-445a-9157-49752d3bb94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d12df1d-afc3-4a73-9d6b-3e4b2858f0cf",
        "cursor": {
          "ref": "e6666178-32fe-42fa-b9ce-cec2e6d5a05c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d36695cc-a7ef-4aae-be3f-75833c49edc6"
        },
        "item": {
          "id": "5d12df1d-afc3-4a73-9d6b-3e4b2858f0cf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "961b0279-10c2-4530-a463-6f2e0bf3a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc2675e-65fa-46e9-a906-2fba086fc245",
        "cursor": {
          "ref": "c7602861-f8df-40e4-aafd-0615ce93e8d8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d2e77e4c-3046-4eaa-8b22-d8b815ffe3cd"
        },
        "item": {
          "id": "2bc2675e-65fa-46e9-a906-2fba086fc245",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2427ea33-538c-4b57-8035-8e34220f8a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bb4cde-c68c-4c25-be65-830a8c9c58a8",
        "cursor": {
          "ref": "7107a930-2832-4c18-8fdb-7837e5e9b18b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2edd532b-047c-4616-8f63-6db4ce480a65"
        },
        "item": {
          "id": "c9bb4cde-c68c-4c25-be65-830a8c9c58a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d1140880-75b8-470a-968a-a7e614698f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1db7ea6-3512-44ab-b8b7-c4b16aa75f70",
        "cursor": {
          "ref": "b0327273-4dd4-4f68-ba9f-60ad6ce9a3fe",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "26bcf8b5-ce75-4e88-a758-6094fecdafeb"
        },
        "item": {
          "id": "e1db7ea6-3512-44ab-b8b7-c4b16aa75f70",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8040f085-b428-4281-8551-90e413a305cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201b238e-1ec0-4fcd-8788-0b892ad10848",
        "cursor": {
          "ref": "3c834dfc-fd5b-4d19-8785-55020f914635",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7148e6ff-f00c-405a-ba55-0148130f3084"
        },
        "item": {
          "id": "201b238e-1ec0-4fcd-8788-0b892ad10848",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "25ddcb19-a9e9-4adf-86c3-4bbe1990e4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bed4eb-79ca-48be-9d8c-13973d1a2f09",
        "cursor": {
          "ref": "cc2baf05-b67b-4cff-91f9-5887122299a5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b52e007b-8844-423e-8b7c-f998c08f29e3"
        },
        "item": {
          "id": "20bed4eb-79ca-48be-9d8c-13973d1a2f09",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68cc07b5-3d52-4aed-8f41-bca09582d141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c21de-a019-4945-b848-8408d906cca2",
        "cursor": {
          "ref": "290e75fa-d57d-4aaf-bb71-d2ac0b4bbbcd",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9093f9b9-96be-4ac4-ac71-51dfcf37928c"
        },
        "item": {
          "id": "0e3c21de-a019-4945-b848-8408d906cca2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "01081904-31fd-486b-a87b-5f4616d1e185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d5f73a-22ac-4ed8-b8c8-d2193ab7fbd4",
        "cursor": {
          "ref": "a4242375-8d26-47b6-836c-75950fd716da",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "868a7378-f2be-479d-a863-9f417f334541"
        },
        "item": {
          "id": "b3d5f73a-22ac-4ed8-b8c8-d2193ab7fbd4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7331ca5b-94a6-4b7c-afb5-a9a4af25a1db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14be13b-6d47-4475-a4e5-af3b8ca8acb4",
        "cursor": {
          "ref": "04e807ee-4b69-4648-951e-61c3bb24eb34",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f0696429-996a-42a1-9374-825d495d3268"
        },
        "item": {
          "id": "c14be13b-6d47-4475-a4e5-af3b8ca8acb4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "90f3e028-6335-42ca-8852-765e17a7b121",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed69ec4-036d-4247-b4f7-3a29e7966aeb",
        "cursor": {
          "ref": "e8118772-e336-4888-bc21-56c0fbbb59f9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "44307a21-518c-455c-8d27-fe3b794af31c"
        },
        "item": {
          "id": "6ed69ec4-036d-4247-b4f7-3a29e7966aeb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ca1cdd77-0d61-430c-b35d-c1921696774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed69ec4-036d-4247-b4f7-3a29e7966aeb",
        "cursor": {
          "ref": "e8118772-e336-4888-bc21-56c0fbbb59f9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "44307a21-518c-455c-8d27-fe3b794af31c"
        },
        "item": {
          "id": "6ed69ec4-036d-4247-b4f7-3a29e7966aeb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ca1cdd77-0d61-430c-b35d-c1921696774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4261e5-4096-4acd-aa98-ab16fa2b86e1",
        "cursor": {
          "ref": "f6032cee-33f8-4381-be25-d5397cf9455d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d2f8bc72-a779-4caf-9fb6-6df204580b91"
        },
        "item": {
          "id": "2d4261e5-4096-4acd-aa98-ab16fa2b86e1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "04b8a00e-8f6e-4d82-9ca7-eb28ffffcf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3b563b-7a0d-4d51-bd9c-acdb28142c49",
        "cursor": {
          "ref": "29135c9d-7fab-4afb-9572-3efc9ac776bf",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0287be82-7161-439e-acfb-bb3668d088e2"
        },
        "item": {
          "id": "5c3b563b-7a0d-4d51-bd9c-acdb28142c49",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8b4765e8-f52e-4fd1-ad69-e6d68e11b0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe082d24-68f3-4c79-9b5f-c2b3087355d9",
        "cursor": {
          "ref": "bb916b45-8a47-4343-9579-88cb2e6d8729",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ed76388a-6b62-4cfa-8a4a-b3fe159c8960"
        },
        "item": {
          "id": "fe082d24-68f3-4c79-9b5f-c2b3087355d9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2b529db8-d209-4293-a588-0fd37157296c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8f3ef3-3e4e-47bd-a094-49280813dcbe",
        "cursor": {
          "ref": "c0994f61-20a9-4263-b51a-208a1ae3a525",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "01143f36-f579-424d-a12f-fe67c32d70f2"
        },
        "item": {
          "id": "fb8f3ef3-3e4e-47bd-a094-49280813dcbe",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f98f0b4a-089d-42a0-88b7-25fb9d01651b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e937c856-d83e-4d79-ad61-7a7cacad5c3c",
        "cursor": {
          "ref": "aa71cba7-ef0b-423a-ab1d-4dbb5f8076ca",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d2af0baa-52c9-4477-a829-cfdea3b85c79"
        },
        "item": {
          "id": "e937c856-d83e-4d79-ad61-7a7cacad5c3c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f6eda4bf-49c2-4933-8c60-f6de56fdfd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba4b7ea-e494-493a-8090-b12b05fc89ec",
        "cursor": {
          "ref": "ff97220f-7dfe-4e1c-bf4d-a1d565d6557f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e4f88531-7312-412c-afce-e4b86f0f2ed7"
        },
        "item": {
          "id": "cba4b7ea-e494-493a-8090-b12b05fc89ec",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49a8bfc3-d6aa-4686-8249-7873df5e70ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbebac1-4068-435b-9219-908401995add",
        "cursor": {
          "ref": "9fdd97f8-df78-4edc-82dd-504940f3a30a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "811062ac-e906-453b-9f94-6b88f799f353"
        },
        "item": {
          "id": "fcbebac1-4068-435b-9219-908401995add",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "40f99071-3c5b-46af-842a-548d061d25ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eff6d8-cd56-4386-abe0-3c85b1d82a70",
        "cursor": {
          "ref": "3724f48e-7702-47bf-949b-7a3a6384f8c0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "129b5b18-d21c-4af7-8256-b8e29d64583a"
        },
        "item": {
          "id": "17eff6d8-cd56-4386-abe0-3c85b1d82a70",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a5873ab3-9129-49ec-88c6-7e20132627c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5e0ce2-82ed-44ce-8473-ad8e6f7b7fa8",
        "cursor": {
          "ref": "07d8669f-59c6-46b4-8558-82bd0d9eca57",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e52f9c10-55d2-40fe-8c0c-beaa7f16ebd8"
        },
        "item": {
          "id": "0c5e0ce2-82ed-44ce-8473-ad8e6f7b7fa8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2c9eab8c-9ff8-4a9c-9f1a-fedb4bbac696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5df8d06-6379-4712-814f-1bc216338dfe",
        "cursor": {
          "ref": "0ad1442e-cf44-4957-8106-e0b8bca6f2ef",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "37a9d07f-5df1-4dae-bf60-115a8fc2c9a4"
        },
        "item": {
          "id": "e5df8d06-6379-4712-814f-1bc216338dfe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b5edbbb3-b79d-439b-b700-8f626e14a36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fbd451-b575-49ca-9e89-10ab9f9a1019",
        "cursor": {
          "ref": "b9501025-e694-42cb-a66d-2ee8bf96cd2d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cadd0293-f6e6-43ef-96c5-2657286c4ded"
        },
        "item": {
          "id": "69fbd451-b575-49ca-9e89-10ab9f9a1019",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a5bfb978-5836-4253-a421-b158997fd23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d737e72-3dd4-4a10-a229-7ce625b89cae",
        "cursor": {
          "ref": "fc77d11a-14f9-4831-8b55-911a2fd54271",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f5a44ebd-5437-41d2-a030-03988dc508fb"
        },
        "item": {
          "id": "0d737e72-3dd4-4a10-a229-7ce625b89cae",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "30136d14-9864-46c1-b51d-7096f077e2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dbcd02-c153-429b-9162-364a6ab93033",
        "cursor": {
          "ref": "031036f4-6600-4c3a-9cde-e35fbbaf9846",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f865d3b0-1d7b-4385-b08b-bdf8f253f02d"
        },
        "item": {
          "id": "f7dbcd02-c153-429b-9162-364a6ab93033",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6dd9bf77-8e2f-4f32-97a5-218a4477cf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d21281d-e31d-48ec-a250-167717b58383",
        "cursor": {
          "ref": "5b4b0fb8-50d2-4780-bc12-0ed3d78184a8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3a29096a-7982-444b-95c9-7f0cc9233218"
        },
        "item": {
          "id": "7d21281d-e31d-48ec-a250-167717b58383",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e4412e7e-ceb0-4a41-9ea8-1e181cf8d021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c344c542-20d1-48bf-88e8-c08b3d2bccfd",
        "cursor": {
          "ref": "2b5ab70d-8346-46bd-82ea-35ed94ead94b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "626c38cb-561e-493d-bc18-711bc4e056f0"
        },
        "item": {
          "id": "c344c542-20d1-48bf-88e8-c08b3d2bccfd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6b084da5-dde2-469d-8d6a-9683be18edc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86fc22e-6be9-487e-b8ee-d526e0636110",
        "cursor": {
          "ref": "f83a66f2-a245-4883-ab50-b1130df3c5ab",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "56538140-d6d7-40a0-93de-555e75340cc1"
        },
        "item": {
          "id": "a86fc22e-6be9-487e-b8ee-d526e0636110",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9abd6070-1530-4cd7-9050-c19b4d3665fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421aab92-2868-4405-9471-f35187876146",
        "cursor": {
          "ref": "92da9aa0-1f71-49a3-9b9e-5907e867cb8a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "096a16b3-3742-45aa-8373-f602d3fc2d15"
        },
        "item": {
          "id": "421aab92-2868-4405-9471-f35187876146",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a0c7c8ae-c33a-4aac-adf2-5469cc165193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114da1f2-501a-466e-b97c-4201b567ec4f",
        "cursor": {
          "ref": "3cf3a82c-6799-453b-8529-899809f135fb",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "652b0174-459a-40a3-ba08-c2248e14c975"
        },
        "item": {
          "id": "114da1f2-501a-466e-b97c-4201b567ec4f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c557e7e1-3acb-47a6-9b92-d93a75edc5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38493fa1-b60a-4fcc-976c-5947a8a4588a",
        "cursor": {
          "ref": "00459eb0-be6d-4e51-891c-d0718699e0ab",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "06f41245-304e-49ea-a29e-4207937a6e85"
        },
        "item": {
          "id": "38493fa1-b60a-4fcc-976c-5947a8a4588a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3e4a0f2c-29c8-4628-ba72-31f017cd92e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ba27b7-3905-42a8-b861-4fac06877e6a",
        "cursor": {
          "ref": "775e1589-f9cb-4f8d-8b6d-43ec63f723ad",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "30284d1b-c5c2-4d44-80bc-ecb14ff53af1"
        },
        "item": {
          "id": "72ba27b7-3905-42a8-b861-4fac06877e6a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5b8f808b-39a5-4300-946e-2ac638ac8b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbf2f2b-4b54-4f59-83c4-5ed3801991b3",
        "cursor": {
          "ref": "b3395e27-f40f-408e-9eb6-c6b7c85d6086",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "139c280a-0160-421b-a62a-a4e46e78c4ee"
        },
        "item": {
          "id": "0bbf2f2b-4b54-4f59-83c4-5ed3801991b3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e01bb73a-3f6d-4c5d-b290-53bcd546282d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1762b731-8cc2-4f64-82b1-7e0969696fc3",
        "cursor": {
          "ref": "7b9f45ae-f14c-489b-8a49-db964e00c632",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cb9a0d21-e364-4fab-a098-b8fada47cdbe"
        },
        "item": {
          "id": "1762b731-8cc2-4f64-82b1-7e0969696fc3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d0a40eb6-e638-476b-aaf9-b55c5422cf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc1a88c-63aa-4fc9-ae6e-e36919228509",
        "cursor": {
          "ref": "a8414946-c3c4-4581-b6ef-c14dc46e464d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f58ace42-68ce-4d9c-a320-2c3b73304105"
        },
        "item": {
          "id": "1cc1a88c-63aa-4fc9-ae6e-e36919228509",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6003c159-8f6f-4a4c-9676-cf5777be1a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a617c06-6dbc-4c22-a652-92d9844e45ff",
        "cursor": {
          "ref": "16dcb6e4-8a14-4ab8-83e0-2231ee41b611",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a16049bd-1f73-4b20-806f-44eeadfb1cc9"
        },
        "item": {
          "id": "1a617c06-6dbc-4c22-a652-92d9844e45ff",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "510e1232-08f1-4d43-8694-d20bab36372c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18c8d74-fd6a-4326-b088-7cafb6efb22b",
        "cursor": {
          "ref": "44f7f797-e86e-4a02-8232-5b1692b87752",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aafcd196-2f79-4222-99d4-dc936b866088"
        },
        "item": {
          "id": "d18c8d74-fd6a-4326-b088-7cafb6efb22b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d61dc6e3-e4e3-4486-9d71-a6a735051a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca7d455-4fd9-4acc-901a-4d516a98ffb5",
        "cursor": {
          "ref": "5404b4ae-7e20-46ac-b588-e222c43ee9fe",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c8f1c517-d6b4-4f6a-b73e-02489e42dc5d"
        },
        "item": {
          "id": "bca7d455-4fd9-4acc-901a-4d516a98ffb5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5738b0e3-fd0c-43ae-97b8-7ed2aac88c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ca0254-1ae5-467f-8453-cd115c7b34a8",
        "cursor": {
          "ref": "15dc591d-c468-43ba-a015-90da0af15811",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d8fe36d5-8323-4382-ae3e-0e5231fa569c"
        },
        "item": {
          "id": "d9ca0254-1ae5-467f-8453-cd115c7b34a8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "64e3a554-6d42-4bf4-9400-de7e38e20eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c7e000-7fce-4032-a84d-f74e7ed6464c",
        "cursor": {
          "ref": "45b5b790-49c9-4d9b-835f-6bf67bd95e3b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f798ec49-e767-4e35-9485-00f4e5ee07c5"
        },
        "item": {
          "id": "c5c7e000-7fce-4032-a84d-f74e7ed6464c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8491e33b-a4e7-480f-b9c9-6eea6df08577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87952d2c-372f-4132-87c1-046feb963457",
        "cursor": {
          "ref": "959aaa04-ae4d-4803-be27-79bf029da0dd",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6546c934-b8a5-4628-b396-6a5463cd8222"
        },
        "item": {
          "id": "87952d2c-372f-4132-87c1-046feb963457",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d184ad9a-a95f-4dc5-be18-9d9df0306e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf0d7d9-2573-44fa-831d-11767ac9daae",
        "cursor": {
          "ref": "90279204-4a7e-45de-8e11-91e9e9fab620",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "be1ff260-cec4-44d6-bf72-bd7b96cd3e58"
        },
        "item": {
          "id": "fcf0d7d9-2573-44fa-831d-11767ac9daae",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4e22a19f-df04-4fd4-9e5e-9606a5e4062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afef8b8-b10b-451f-8135-317709acf12e",
        "cursor": {
          "ref": "958f9c1d-f254-48b5-a79d-07a8ea871bbe",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b5f80a0a-fb1a-44f6-8d12-b3b54eea3a77"
        },
        "item": {
          "id": "0afef8b8-b10b-451f-8135-317709acf12e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e18bc890-1093-4ab4-8cba-0394970449c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a04f0a8-0c8e-4e7f-a87a-0913a820d467",
        "cursor": {
          "ref": "5f582748-d454-494f-bab2-5faba621a6e5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "227939d6-18ad-4310-bd11-c75ed4984599"
        },
        "item": {
          "id": "8a04f0a8-0c8e-4e7f-a87a-0913a820d467",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d2ca03fe-7960-4f72-822a-d8c80bf51217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c6604f-807b-41f8-9c18-198ebe8f3378",
        "cursor": {
          "ref": "a4fff6e9-82f2-4112-bbeb-9afacafd2c67",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b08cbd2a-f7c1-4255-95f2-1f0090c5002e"
        },
        "item": {
          "id": "c6c6604f-807b-41f8-9c18-198ebe8f3378",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eeb8a14e-2c29-45ae-8bf8-d63ec1b7eb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa019b5-58f8-44c1-8c9a-948a97f5c827",
        "cursor": {
          "ref": "499af254-d616-482e-8b18-702f8e0fea86",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3e893e71-b4ff-4d9c-a3c6-9c3ae6b4a81b"
        },
        "item": {
          "id": "4fa019b5-58f8-44c1-8c9a-948a97f5c827",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a72e8661-cfeb-4fbc-89bc-16af31366a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20441a4-cc94-4d61-ad8b-7867b80aa3db",
        "cursor": {
          "ref": "fedbcbf8-a94a-445e-9718-7cdb2d47375a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d8c768c7-f6be-45ff-b250-a16fd2e6e741"
        },
        "item": {
          "id": "d20441a4-cc94-4d61-ad8b-7867b80aa3db",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "04d27cdd-5a4f-49f7-99a4-ee33f3ba8b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d87ab14-d186-497c-a08f-32fbc79884a6",
        "cursor": {
          "ref": "721a0ef0-b273-4c5b-a183-0f3ee948d3f2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "77ab1598-95e9-41af-9684-cb9ee1717869"
        },
        "item": {
          "id": "0d87ab14-d186-497c-a08f-32fbc79884a6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ad5d8a36-6ea0-41d7-9039-7663818dfe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3fad41-d13c-4d0a-afa0-78e2a4d3a10c",
        "cursor": {
          "ref": "f73a5e76-16b4-493d-b31f-6083582c883d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c2e36c07-95c0-4d4f-b8f5-5ee7ddd60482"
        },
        "item": {
          "id": "9c3fad41-d13c-4d0a-afa0-78e2a4d3a10c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d7a2c4aa-039c-472d-aecc-bdcd789416a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd571622-cb37-4981-a472-41cef9444e94",
        "cursor": {
          "ref": "35b6b4aa-4dc8-472b-a9e9-418ddaadf4a3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "acad645c-39c7-4abc-981e-08fef817c088"
        },
        "item": {
          "id": "dd571622-cb37-4981-a472-41cef9444e94",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a95c669d-7830-47ea-9be6-dc440f6e20d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc2241d-7b38-4ce8-9e26-6a7fb64ae2a3",
        "cursor": {
          "ref": "d7f41d02-fe85-4033-bc94-2c8484e602f2",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "49e1eb6e-9651-4bda-941c-f9799672f4b8"
        },
        "item": {
          "id": "0dc2241d-7b38-4ce8-9e26-6a7fb64ae2a3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2e396594-8c07-41a2-810c-986c2ac93596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaaf88e-92d0-49d3-b5dc-2f9ebae1160c",
        "cursor": {
          "ref": "43e9ee01-d190-488b-964b-4171a7dbaae6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3d7c9071-df8f-48ba-83f3-d31f6ce286af"
        },
        "item": {
          "id": "0aaaf88e-92d0-49d3-b5dc-2f9ebae1160c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d4b98249-e8f1-4661-8ab2-6cd1f828206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f9eac9-7e8b-452f-866a-f252e1c81478",
        "cursor": {
          "ref": "c02fdacf-97fe-46e1-9b5f-f6d257f8d8d4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fa6a5b20-8fa6-450a-b9a3-b9ef860c6832"
        },
        "item": {
          "id": "a1f9eac9-7e8b-452f-866a-f252e1c81478",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "acd042a1-fd8e-4c60-9e06-20d0e29f70d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf6ca5-7353-4077-b8e3-7f694a7dcc4d",
        "cursor": {
          "ref": "995cb782-33fa-4faf-80a1-736de252c8ad",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bea23d27-6c5d-427a-bfd6-5fe2c540104a"
        },
        "item": {
          "id": "acbf6ca5-7353-4077-b8e3-7f694a7dcc4d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cd859afe-d5ec-4d06-9d59-f1749bd9046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df097dfe-7bae-4c35-a258-d1f7a4299a22",
        "cursor": {
          "ref": "e14d3bc5-b02e-4617-af6e-1bf61908f9b9",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e0fad037-15c2-4f0c-928a-352d8ce431cf"
        },
        "item": {
          "id": "df097dfe-7bae-4c35-a258-d1f7a4299a22",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "421b7484-924e-468e-9aff-010e7e892054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b567c99-8673-44ec-ba9d-088ea97af31c",
        "cursor": {
          "ref": "b469e924-f6a7-42a4-a3b2-e09677a2442c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "52020a18-26c3-46da-b725-4fc4ece92641"
        },
        "item": {
          "id": "6b567c99-8673-44ec-ba9d-088ea97af31c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a49e8a51-8b3d-4161-8b4d-2da805645834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23a4b62-9c42-4a7a-a964-f79da3afa34e",
        "cursor": {
          "ref": "4f9eae1e-25bf-4885-9b6a-9013c5ebb621",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e4eaec9-f340-4128-ae9c-75b91af2bed7"
        },
        "item": {
          "id": "e23a4b62-9c42-4a7a-a964-f79da3afa34e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e445d338-e0d0-4147-a396-491707d1c56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3ad6ac-59d6-440b-b2f0-b869ffbb86ad",
        "cursor": {
          "ref": "54f21070-bb5b-4448-96e8-326c43010684",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d2b6d114-6028-44e2-9cb5-7a0fa2fd8089"
        },
        "item": {
          "id": "ce3ad6ac-59d6-440b-b2f0-b869ffbb86ad",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a2fcb65-770e-4fb3-8f3d-d7d970b9d96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99413028-86cf-44bf-8eba-712bbf10330e",
        "cursor": {
          "ref": "b7e36e5b-dc82-49d2-8476-c7535c4fd92f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c57e1c88-2b43-481c-a7df-6178cba652fb"
        },
        "item": {
          "id": "99413028-86cf-44bf-8eba-712bbf10330e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2b43c78a-4d74-47b2-834e-5b3725e2b1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f469769-466c-44c8-a43e-8f617096323a",
        "cursor": {
          "ref": "c9a69689-5126-4782-b57e-e7cb4502d8b3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f4c47e02-6248-4748-9523-740d64db1c70"
        },
        "item": {
          "id": "0f469769-466c-44c8-a43e-8f617096323a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "673b2d11-2f07-411e-b8b4-c23d7d00e613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aca7bc-aac8-4952-a4a9-c7c86d90645c",
        "cursor": {
          "ref": "537fd574-ec90-44a4-8616-232545038076",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9eb2ec62-34bb-48bd-a0a9-21c3cadc110a"
        },
        "item": {
          "id": "96aca7bc-aac8-4952-a4a9-c7c86d90645c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a4b03b43-88be-4fc8-9022-8b061ed06af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1e0434-28dc-4ecb-8064-6b856cdfcc28",
        "cursor": {
          "ref": "d8c27a12-b1a4-4b30-a303-634e8982ab60",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6a838663-927d-4618-bd59-fbde8890af45"
        },
        "item": {
          "id": "1a1e0434-28dc-4ecb-8064-6b856cdfcc28",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e88a8431-7948-4dc7-af64-f5e76d7cb0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da44835e-64ae-4bea-9a40-435c0b7ccc3e",
        "cursor": {
          "ref": "a15770f2-f59d-4193-9433-84927338c80a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "68eeee8e-6ef8-4a47-a429-bca6b8b7ee55"
        },
        "item": {
          "id": "da44835e-64ae-4bea-9a40-435c0b7ccc3e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e7351f98-a80b-4f6b-9789-e3b4e029a2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b34ffc-2131-44da-972f-69755073cac3",
        "cursor": {
          "ref": "fb536f8e-5ae2-4770-b6c0-128ba873e070",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ec93a90-a857-4fca-a8cc-3a45095533c1"
        },
        "item": {
          "id": "b7b34ffc-2131-44da-972f-69755073cac3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f38c51ec-2421-4e13-90bb-e5f20e3bedf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51995214-d77e-41b2-b487-459424dd0caf",
        "cursor": {
          "ref": "798b40b2-df98-4098-8cbd-98aa5f7c5cda",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "82d699c2-dbb0-494e-b204-22aef727dd6e"
        },
        "item": {
          "id": "51995214-d77e-41b2-b487-459424dd0caf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "62a079f3-8a99-4769-8593-fc349af008e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc737da-db69-4785-a919-efeaaae410b1",
        "cursor": {
          "ref": "39b1b8bf-c4d4-40c8-9f45-2504adc31a5b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "882d8a0a-3bef-4bff-a5ff-8062a7cc8041"
        },
        "item": {
          "id": "2fc737da-db69-4785-a919-efeaaae410b1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "42be1cab-a142-4d64-961b-cdb29337a548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04eb1567-db75-49df-b168-d99c238cf88f",
        "cursor": {
          "ref": "059181b6-2478-4e2b-96d6-2e84d32e97f8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "61a750df-81d9-4343-a14f-92295728b02e"
        },
        "item": {
          "id": "04eb1567-db75-49df-b168-d99c238cf88f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b791e509-2148-40f2-aaee-a6ab5eab105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e27f48b-16f6-4b43-bfa6-a6ad18a689f6",
        "cursor": {
          "ref": "5a5e98cf-ba60-46dd-a40e-c49f03236626",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "49ab2ef8-e607-4318-8663-760af5c04586"
        },
        "item": {
          "id": "9e27f48b-16f6-4b43-bfa6-a6ad18a689f6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "271cd587-c3f4-4bd4-a0d3-c0f36671093b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d747c20c-4562-4729-8292-4886303fce39",
        "cursor": {
          "ref": "43716352-14ac-44d8-b372-c9bd87d3f8fa",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e73bc184-cf4b-4a3d-be49-c6c1309c7bf7"
        },
        "item": {
          "id": "d747c20c-4562-4729-8292-4886303fce39",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7f862d0f-3ede-465a-9340-9f62988b418c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0662c707-0326-4774-b659-ee2967ed9f9e",
        "cursor": {
          "ref": "26d3528b-b48e-47db-9f52-c46ed1d5399d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e5eefb84-aa3c-40e2-abbb-7d2756fa83cc"
        },
        "item": {
          "id": "0662c707-0326-4774-b659-ee2967ed9f9e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bea772c9-2dee-45f9-90e4-a78a4137ee45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e85dc86-d34f-4266-8a81-30d155a6047c",
        "cursor": {
          "ref": "6e624341-bddb-4234-addd-290129351886",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "66001d68-7415-4f69-9f09-ed378d06f348"
        },
        "item": {
          "id": "1e85dc86-d34f-4266-8a81-30d155a6047c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "16aa078c-0677-4216-86d7-9e7253b6b777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d9ddbb-844b-40c1-a063-b17ef9044a88",
        "cursor": {
          "ref": "c2f375ba-1d92-42be-b3a1-d95ed46135ae",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "09bc3809-7e5e-4831-b755-2fac55226c07"
        },
        "item": {
          "id": "f2d9ddbb-844b-40c1-a063-b17ef9044a88",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a2cf2014-53df-43f9-9c5b-1572e9351411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d130f0ba-2c2b-44ae-a89c-aaf59e14cecc",
        "cursor": {
          "ref": "f2548682-ed5a-49e9-a243-a8b627f726b3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d3b71706-a60c-4804-b2f8-bb0ef2852257"
        },
        "item": {
          "id": "d130f0ba-2c2b-44ae-a89c-aaf59e14cecc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e7b748a9-2827-4e0c-9842-71e811998dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a507a8-a6c7-440a-bad2-479553f8de0d",
        "cursor": {
          "ref": "bdee5ae3-4f76-402a-aa41-b3a3934b3ff4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c02b93c3-b4a7-4bae-ab2f-aabd8b999b23"
        },
        "item": {
          "id": "b1a507a8-a6c7-440a-bad2-479553f8de0d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8155a129-4df8-4a2c-adde-3792c894732b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59db9919-138c-456b-aac7-8a85b9e13d27",
        "cursor": {
          "ref": "26cf9f56-4d12-4e85-87b7-2c6c54521c02",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "22f44342-5495-473d-99e9-02f6c66e0e5a"
        },
        "item": {
          "id": "59db9919-138c-456b-aac7-8a85b9e13d27",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "176f5816-0126-48ab-ae48-906f7c1d841b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4997944-9bf2-4a93-96df-e84e5e5e19b0",
        "cursor": {
          "ref": "6c306bf8-0081-4572-8ea3-10d3c227d540",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4a7ab3b9-4cef-4727-aac5-8172c19f43c0"
        },
        "item": {
          "id": "b4997944-9bf2-4a93-96df-e84e5e5e19b0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f9ad5bb5-5b4c-42b4-8df7-82f7ebe98030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a37c03e-0444-49e7-924b-b9d105cb4a1d",
        "cursor": {
          "ref": "e3bd89a0-36fd-47a5-9c60-3ec3bdaa88b3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cd545e75-cad5-4e38-999a-89d261268a38"
        },
        "item": {
          "id": "0a37c03e-0444-49e7-924b-b9d105cb4a1d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f2cfad1b-49ac-4bcf-9dfe-82f51ff30a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3eabb9-50e9-4ad2-a5a8-c7e2e61be712",
        "cursor": {
          "ref": "99d86444-bf45-4219-b0cb-7c4ba50478ca",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e71707db-be48-49c7-b980-f15c3a14f6df"
        },
        "item": {
          "id": "5c3eabb9-50e9-4ad2-a5a8-c7e2e61be712",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ddc47be5-69a6-439b-ac22-45b4cc84d055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3c7eb8-4ad1-4cd6-b60c-ecfdb206f386",
        "cursor": {
          "ref": "9d0e03f1-9137-42d0-886b-8befc279bb21",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c848b617-102e-4373-bd26-6077d91cb679"
        },
        "item": {
          "id": "cf3c7eb8-4ad1-4cd6-b60c-ecfdb206f386",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "65400dc3-2deb-42ce-b7c2-1fdd9e28e2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa6cadf-e1f6-47bc-9bb3-a571f954e40d",
        "cursor": {
          "ref": "c8aaf7a3-21d3-47f2-928c-9bbebb8e0153",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "77a25c2e-7273-4acc-9f44-d67a9c4bffb0"
        },
        "item": {
          "id": "5fa6cadf-e1f6-47bc-9bb3-a571f954e40d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "53b1e442-87ca-48df-9aa7-d3a0a2a2b4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ccbd6d-eae2-4d5e-84ca-f00ce42d2b07",
        "cursor": {
          "ref": "a7b6ec56-737a-4b42-8708-b07dc076c4cf",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "89b42f41-9148-4132-80d7-965ad450b543"
        },
        "item": {
          "id": "45ccbd6d-eae2-4d5e-84ca-f00ce42d2b07",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1b65401e-47b6-47d0-9b78-1ea6696853a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24ef864-0afa-4a3a-9214-747ccf5c43c2",
        "cursor": {
          "ref": "7b760da9-22ff-435f-bc21-525be06394ed",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8d315455-705c-4d5d-bd13-60b2ebf43b6a"
        },
        "item": {
          "id": "b24ef864-0afa-4a3a-9214-747ccf5c43c2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d8308af1-3ce6-4dcc-b390-517966284c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2067d9-4446-4f04-9ad7-fc3975435fe2",
        "cursor": {
          "ref": "fcee8c00-52d2-49f2-88fd-93026fc84b17",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4e90cfde-299e-4cf0-b05b-4e873ce5916a"
        },
        "item": {
          "id": "9d2067d9-4446-4f04-9ad7-fc3975435fe2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "647d47f1-2298-4c3a-8c8e-894e9cb69ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c262abc-5c5a-4a04-8e31-c0b064c8b05f",
        "cursor": {
          "ref": "379e9d73-f07c-4483-b292-bd47cd51431d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cbd33b38-5d5a-45cd-b4da-9b304fff2ac7"
        },
        "item": {
          "id": "4c262abc-5c5a-4a04-8e31-c0b064c8b05f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4217a9d7-ff61-4644-a2fc-48828b3e2754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d2be97-20f4-4265-8bf9-e43f91581aae",
        "cursor": {
          "ref": "ea5bb03b-faaa-4d16-9e15-a31860dbbfaa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "78b3bc9c-41d2-4cad-910e-1322a1e1c044"
        },
        "item": {
          "id": "18d2be97-20f4-4265-8bf9-e43f91581aae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7afb1556-ea2b-4c50-927d-5080b35fce1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43086b0-df7c-4ace-991b-ef3477022e43",
        "cursor": {
          "ref": "7fc0d856-cfc4-490b-b447-1e6aeb652493",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0ea620ff-7248-46ee-a2a8-e8aad344a639"
        },
        "item": {
          "id": "a43086b0-df7c-4ace-991b-ef3477022e43",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3a719bff-6a75-4a16-aae8-bbda7a724c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e531a5b9-3ed8-4838-a4e3-5341c5677275",
        "cursor": {
          "ref": "1b9c8df5-f138-4509-8597-68253afbcad4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c10fb047-51dc-40d5-badc-92a13cd04515"
        },
        "item": {
          "id": "e531a5b9-3ed8-4838-a4e3-5341c5677275",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "12131459-8e2c-4cf4-a3d1-979d4dda1061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6ab0e1-8dd3-41e8-a0dd-45a161264472",
        "cursor": {
          "ref": "3214c69e-5f73-495a-b092-eb511e4d1d2d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "63682b74-6850-4f76-8368-4b5310b287f6"
        },
        "item": {
          "id": "cf6ab0e1-8dd3-41e8-a0dd-45a161264472",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c5c41ef0-57de-46c2-a306-eec8c54a4b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b6f94f-4ae3-4722-9bc0-04a8f1031d0c",
        "cursor": {
          "ref": "a1d165ce-6a47-4c25-bdb1-6cd8cf823e68",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "be0d0bbf-a8a4-4c80-bc4d-afa6d9d34bef"
        },
        "item": {
          "id": "96b6f94f-4ae3-4722-9bc0-04a8f1031d0c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d54f6d3c-d5bf-4bc2-a622-224056831d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476df6d2-fc11-48f0-a5df-0e2b4f2300ec",
        "cursor": {
          "ref": "68581f61-7751-4987-b919-1ed10d0f0052",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e9a87f0b-2049-4cf2-9dd4-a00919e28861"
        },
        "item": {
          "id": "476df6d2-fc11-48f0-a5df-0e2b4f2300ec",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "547197d4-a5e8-4a0e-a841-7818a3c00eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f878bc2-0dc5-4199-81f0-52be2a7187e8",
        "cursor": {
          "ref": "11ae8b81-0c2b-4374-966a-72e60d71e756",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dc7d2955-accf-45d6-83bc-0786e25b8c3e"
        },
        "item": {
          "id": "5f878bc2-0dc5-4199-81f0-52be2a7187e8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4ba7d253-7f12-4cf7-8741-1aa11bda01a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1777eca4-ca98-492d-aaf7-516e9da75c21",
        "cursor": {
          "ref": "beeee791-c2b1-4caf-b8dc-eaeac17565a5",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "420cb58a-22de-4cd3-80c3-26c84e101d42"
        },
        "item": {
          "id": "1777eca4-ca98-492d-aaf7-516e9da75c21",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "20523e64-b7f7-4db8-82cf-ab2eb2850672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53ca7f9-931e-4342-85c1-c6687f6380f2",
        "cursor": {
          "ref": "6d1c3c88-bfe5-4f98-b8dc-e1b550c98736",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a19802af-01b9-406e-88e1-83b8eb4fa3d2"
        },
        "item": {
          "id": "b53ca7f9-931e-4342-85c1-c6687f6380f2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "672d3f9d-524a-44b9-bff9-0f14aa241589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87f9803-106c-4590-84e9-34ce3dd6a65b",
        "cursor": {
          "ref": "b5b2bbd3-3dfc-416c-aff2-8933c9987384",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "849c2da0-9a7f-4bdb-b7a8-207ff6073a92"
        },
        "item": {
          "id": "f87f9803-106c-4590-84e9-34ce3dd6a65b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dd9355da-7cb7-4ce3-9077-975654fecd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba3874c-80d1-4901-b580-ac6ecffc251c",
        "cursor": {
          "ref": "8ef4e002-f6a4-4af9-8833-9a21efceed0f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ec22d4be-4103-439d-a9eb-48d9c5a830ea"
        },
        "item": {
          "id": "6ba3874c-80d1-4901-b580-ac6ecffc251c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f55c0d35-2dd5-4099-a3a6-4de5ce4c6b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268b57f3-7be4-4ce1-a27c-dee2e33703a9",
        "cursor": {
          "ref": "a0d9b53b-0995-407f-9e39-d43467d8dd32",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bad82a2e-29ba-4961-bb02-41f5859063e1"
        },
        "item": {
          "id": "268b57f3-7be4-4ce1-a27c-dee2e33703a9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fb517fcd-c12b-4c96-bd7d-a5f689807f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55366878-50cf-42f3-a35e-3c8d9907c8b2",
        "cursor": {
          "ref": "3a2ecaee-19e4-471d-b774-81f9324a36a1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8218af17-b589-47c0-8d5d-6d99e4936906"
        },
        "item": {
          "id": "55366878-50cf-42f3-a35e-3c8d9907c8b2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4f125a75-0f8e-410a-b8f1-d723309b5b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72217edb-bd1f-4915-a698-badc8bc503a9",
        "cursor": {
          "ref": "a6248071-ba5f-4e23-90b2-c5817c47ca2a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "839db80e-fbe6-4b00-9800-c6077257c01d"
        },
        "item": {
          "id": "72217edb-bd1f-4915-a698-badc8bc503a9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "05b6f9c4-b1c4-4a6e-ac8f-3514a1068e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded2a5a5-4b20-4de1-b9b1-e6d969317d7d",
        "cursor": {
          "ref": "2df1efab-80e3-4417-bb01-1807149c2d83",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3a8c5cd4-35c5-46c0-acfd-aa24d709eeb4"
        },
        "item": {
          "id": "ded2a5a5-4b20-4de1-b9b1-e6d969317d7d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0ddeff06-22b8-4c78-829d-76bedfd64a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aecc578-08c9-4f10-92c2-214e5607d813",
        "cursor": {
          "ref": "adf64957-69e0-4343-9555-754bb5018773",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "86631f1a-8964-4e6b-b68a-55bbaefa2025"
        },
        "item": {
          "id": "4aecc578-08c9-4f10-92c2-214e5607d813",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "35c58ed5-81c7-4024-a626-0a9aeafa1661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdd9982-52bf-4b76-9e3e-9ab938ab7947",
        "cursor": {
          "ref": "861b0f9f-dfa6-4e04-9614-bc68bcc35e34",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d717feba-a645-45a8-b59b-28d0d12f85e7"
        },
        "item": {
          "id": "efdd9982-52bf-4b76-9e3e-9ab938ab7947",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "287550d0-f240-4887-b252-bfac4dceee69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce2904c-ffc8-4811-ac16-1ede1a2732d0",
        "cursor": {
          "ref": "1e703acb-45fb-467e-b970-523491ac1137",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b2b473c7-0f1a-4788-a1f2-fdc6f13dad8e"
        },
        "item": {
          "id": "4ce2904c-ffc8-4811-ac16-1ede1a2732d0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0eb7506f-81cb-45a9-ac88-ec78a8b9e022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708e8638-5ae9-41c3-8138-f5d26d7deea7",
        "cursor": {
          "ref": "de258302-639d-4db4-a4c2-edad66a2fb33",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5e008191-a0c4-4f4a-8924-3dff269ebc81"
        },
        "item": {
          "id": "708e8638-5ae9-41c3-8138-f5d26d7deea7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dd406279-33ad-49c3-8ad2-66e5a5734967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c88d695-57d9-4957-86ba-ce816f60ab81",
        "cursor": {
          "ref": "8ce8ba96-aa18-4ecc-91a9-eb2c1ac9b943",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "33ec793d-4c67-4804-ba83-997323b06db1"
        },
        "item": {
          "id": "5c88d695-57d9-4957-86ba-ce816f60ab81",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "182d7fa4-eea2-4548-ba71-ebd3807b1539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a018c16d-2805-495c-89d5-da18acf128c1",
        "cursor": {
          "ref": "89282502-b41a-4891-8f12-ca2314d03f93",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f4b7abb8-f80a-451a-969e-b786f6039a8a"
        },
        "item": {
          "id": "a018c16d-2805-495c-89d5-da18acf128c1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4870ac5d-d9ef-4eda-bba7-3de989ed9159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec843e3-e139-4364-a8bc-83808f7625d4",
        "cursor": {
          "ref": "8c37ef61-961b-4112-81b5-ad3f330f5380",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c4e9fafa-213e-4012-be91-edada3b4420e"
        },
        "item": {
          "id": "8ec843e3-e139-4364-a8bc-83808f7625d4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "16acd3fd-72b7-4a5f-b058-ec9c3a2febb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c319f753-fe77-4b58-b417-70646f60073f",
        "cursor": {
          "ref": "961023e9-eb6d-4bc6-97d3-3ee1964431d2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "36428f09-f1d9-475b-86f1-04d4827b848e"
        },
        "item": {
          "id": "c319f753-fe77-4b58-b417-70646f60073f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "60946fdd-55d1-485c-9908-db521c24abca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3101a6-bf91-44af-b4b9-f682a6067189",
        "cursor": {
          "ref": "e82f0dfb-7ee0-42f6-9ff7-2a10c4bcf9da",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "571f5361-161b-4207-986f-7d34679aa657"
        },
        "item": {
          "id": "ce3101a6-bf91-44af-b4b9-f682a6067189",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "376a9709-716c-48e3-8b45-0a666ee18e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cf1bb7-73fe-4d2b-a31a-2d4a0513111e",
        "cursor": {
          "ref": "ddf8183c-f962-4c79-9bab-0cf78fa3817b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c63b1538-0f99-451e-8d42-7b823eef8417"
        },
        "item": {
          "id": "d6cf1bb7-73fe-4d2b-a31a-2d4a0513111e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eb4268cc-bd34-41f2-897b-5c4257b82dab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8804248c-8047-4f80-8412-ea0ae2922232",
        "cursor": {
          "ref": "d42111f3-ee2d-4db7-8ad4-7eba5e0a2958",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0aa92470-cd4d-4457-a0a8-9676ff582db3"
        },
        "item": {
          "id": "8804248c-8047-4f80-8412-ea0ae2922232",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f71183b3-7494-458c-9deb-7b026a511055",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2c7f56-6111-4288-b17d-8c58bafdf5ed",
        "cursor": {
          "ref": "1f0688bf-2284-46c8-adaf-a88bd62d0037",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d00d541b-af87-4e53-9f0b-f54b437e23c1"
        },
        "item": {
          "id": "4e2c7f56-6111-4288-b17d-8c58bafdf5ed",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "46bfe264-7687-413f-b0c6-11b4a5e7d4a1",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f657b5cc-e38f-4c2b-9d84-255b7a12eaad",
        "cursor": {
          "ref": "99db3958-1eba-46fa-a8bc-20d177268d3c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "40b67b44-2252-47e6-8c8d-e85bf31d3cb6"
        },
        "item": {
          "id": "f657b5cc-e38f-4c2b-9d84-255b7a12eaad",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cf4a3ed8-9752-458d-87ee-5816cb28cdbe",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99450441-ca0f-465f-8e84-40ab07ec6a4d",
        "cursor": {
          "ref": "5dd6a051-1fed-47ab-ab6c-95513e46c51e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8877086e-a7b2-4293-ac93-4fa5ede11288"
        },
        "item": {
          "id": "99450441-ca0f-465f-8e84-40ab07ec6a4d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "06a1cbad-cc64-4d77-a471-bcd80a94e60c",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "16414ed7-728e-4ddb-b4e1-8d891a5ad2b5",
        "cursor": {
          "ref": "6c81738f-98fc-4c77-b6ac-1a5a359062ef",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fec66911-0ec9-46ac-94e0-8d1382fc5179"
        },
        "item": {
          "id": "16414ed7-728e-4ddb-b4e1-8d891a5ad2b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b27a95e1-512d-44f2-9d8d-14e2c5d4140a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16414ed7-728e-4ddb-b4e1-8d891a5ad2b5",
        "cursor": {
          "ref": "6c81738f-98fc-4c77-b6ac-1a5a359062ef",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fec66911-0ec9-46ac-94e0-8d1382fc5179"
        },
        "item": {
          "id": "16414ed7-728e-4ddb-b4e1-8d891a5ad2b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b27a95e1-512d-44f2-9d8d-14e2c5d4140a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16414ed7-728e-4ddb-b4e1-8d891a5ad2b5",
        "cursor": {
          "ref": "6c81738f-98fc-4c77-b6ac-1a5a359062ef",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fec66911-0ec9-46ac-94e0-8d1382fc5179"
        },
        "item": {
          "id": "16414ed7-728e-4ddb-b4e1-8d891a5ad2b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b27a95e1-512d-44f2-9d8d-14e2c5d4140a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8732d43-e517-4650-b2e7-5d67c07e0476",
        "cursor": {
          "ref": "963eae31-2a36-470a-8e9d-009f1cf3ddaf",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9725f1b0-8b02-49b9-8324-515e78655c2e"
        },
        "item": {
          "id": "f8732d43-e517-4650-b2e7-5d67c07e0476",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "68e3c4d4-1f87-4be7-b400-bf14e36abd48",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecb7dc9-f9ba-4bff-a431-a18a578f6437",
        "cursor": {
          "ref": "59b67271-f26d-4700-8b98-dbd09ceb71ed",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "93126c92-8a90-4bbe-86ea-f38a4f58872a"
        },
        "item": {
          "id": "3ecb7dc9-f9ba-4bff-a431-a18a578f6437",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8f61321e-2f0e-40b2-87a3-a95786fc1443",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecb7dc9-f9ba-4bff-a431-a18a578f6437",
        "cursor": {
          "ref": "59b67271-f26d-4700-8b98-dbd09ceb71ed",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "93126c92-8a90-4bbe-86ea-f38a4f58872a"
        },
        "item": {
          "id": "3ecb7dc9-f9ba-4bff-a431-a18a578f6437",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8f61321e-2f0e-40b2-87a3-a95786fc1443",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d3ce39-c15e-4295-8ccc-2513c4dfa1a3",
        "cursor": {
          "ref": "96f21ea0-b504-483e-aa75-16421f667ba1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3e69b5fe-99f5-41eb-9939-007f541b5719"
        },
        "item": {
          "id": "b5d3ce39-c15e-4295-8ccc-2513c4dfa1a3",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a4a20d8e-7d7e-41e2-846c-226b618b715d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34c5b91-2635-47ac-a55b-abd3fc786515",
        "cursor": {
          "ref": "85e722b2-e1f5-4f50-9b33-e4216ff1665e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "af606738-54b7-4767-97ef-a68c8892adb2"
        },
        "item": {
          "id": "a34c5b91-2635-47ac-a55b-abd3fc786515",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "42f3283e-b9e5-4647-a58e-f4daa06770f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34c5b91-2635-47ac-a55b-abd3fc786515",
        "cursor": {
          "ref": "85e722b2-e1f5-4f50-9b33-e4216ff1665e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "af606738-54b7-4767-97ef-a68c8892adb2"
        },
        "item": {
          "id": "a34c5b91-2635-47ac-a55b-abd3fc786515",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "42f3283e-b9e5-4647-a58e-f4daa06770f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79029c60-827c-4613-a631-5c605b0c5ba6",
        "cursor": {
          "ref": "5a6cd7e9-1741-4a00-a6a0-36084c3e00d8",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c6586cdf-efd5-4e40-83c4-2622a482f8ed"
        },
        "item": {
          "id": "79029c60-827c-4613-a631-5c605b0c5ba6",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "07248a16-a19b-4148-b6de-8c43f8c41517",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}