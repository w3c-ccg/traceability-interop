{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9ee30c14-f1c3-411f-aa40-ac2c5ff37343",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3fa49595-2a5d-451c-a864-74c6c3bf92d2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "111ae38f-1dfd-46ae-99d8-016d016747b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47a1974c-28e5-4e24-be1a-ceaa8110031a"
                }
              }
            ]
          },
          {
            "id": "e8826673-3fbc-4449-91b6-1d0a19804db1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cfe9f5f-d28d-4c18-bd2e-69222d964ad2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fb82a193-78f4-4fd8-b227-8826be908aa5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7bab7618-194c-41c0-ae60-0235a5e09ac5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "91dfbf6d-51fb-446b-b176-21feb9bc45c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1dc4cf84-c547-4dab-96b4-0af65e262fa3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ece6ca23-5d69-437c-ab97-ff5b06e16d9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "707051f4-9a22-46fb-ab2e-f701fadbbb6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15d05008-ad24-4b12-a642-86d50363cfee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c34d45af-8a88-4f9f-94df-d647c0fb8281"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "290bdb83-606f-4354-9dd0-1cd0b3408aaf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89d752a7-84f2-4618-8527-f99fa01b01c5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a266d67-1f5a-4648-8ca6-8d03f1e68a7a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d0379523-fd80-4165-9299-bd6b71ce2224"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6da1d72-668c-4651-8b17-0df4e295ee7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cefa556-706c-4967-b114-5314b53988f6"
            }
          }
        ]
      },
      {
        "id": "2315bec6-bfa4-4de0-83e6-2df6fc321c45",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c7c132e6-b8bc-47f0-9e7d-3385953f8381",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8f1b6ac-c830-4694-857f-9c94bbd34cd7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f55fd612-3bae-4f53-9594-69cf95d38f4e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef0c62d-98a4-4668-910a-66fd4ec75857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46c32c88-6fb5-446a-9f7a-86af11d4c498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2823ba76-0fe0-4638-baa8-023d2e17bc2c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d4cf72-10f6-4c1b-8826-d6bd66eb5286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d43a9ef6-29ec-4673-93a2-a99f61c0c62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf5e310-7d43-4b9f-9569-17737107cb83",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3ffedb-f9b0-43c9-907a-2f7bd0cb1734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd5c4904-8c66-4fd4-9333-26d5f5664461"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2517896-7b4c-453f-b5b3-36cabf89f344",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fef9a6ad-6915-4c68-a2ed-41d6a6594c19",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bacde15-922f-4984-b3c4-5db99c43d743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1757e1fa-b32d-4cc4-ab08-d023cef1564e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e624d4-2f04-4ba9-b21e-3f59e41777a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb351e1-41a2-45e5-a58a-5bbc019f5ef7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bbbe5891-678a-48bd-9361-1783e670dabc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f92e294c-4ea8-4ba2-be1c-909b8b6fb155",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c844576-2ab5-4538-b724-0cd26e7d7560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5488c8fc-0abb-4824-82e5-a70e15b07fe6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee3175ee-79e9-48a9-bfb0-98ee2b83757e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7d0b3747-6ded-475c-a0a7-4353ff595cb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04bd6890-ba73-4095-8175-69d6d78a4803",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8358557d-d7ad-46fc-8452-f41558844c0a"
            }
          }
        ]
      },
      {
        "id": "013d9182-780b-47c8-aa29-f8448efdba61",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "560236d7-c433-4687-9b89-5e8d02ba39e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61ade938-e0c3-440b-abc9-462851057c7a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3547d16b-c34b-4e79-b8cb-95ad78e0b7c9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e881d2c-c149-4dd4-892b-ea43daaa5841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82b4f78-e185-467c-beec-f9a07cc89901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b911424a-4a4b-496d-8552-26e2bdb748cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98edd1e7-98d1-4871-88be-13b140ec1f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4f7176-664b-47b3-ac6d-035292ecb7b1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84802027-7297-4cf6-bbc6-0d4dc56f1ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed09eb3a-fbf0-4f83-95a7-2db8d4a7e794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edabb1ca-ff6f-4f79-aaf9-d48d80b32e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62d68342-9d8d-461e-8792-3888bea520de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a042878-5f52-468b-8091-7efa93a7568e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e595a680-d47f-43ad-949b-b9966b32de55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e19b35-43b5-4577-b7f9-79d2e264a2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28e343c-fb16-48fe-b7c8-a3149fa41856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "392becfa-91c7-4d92-bff8-820d286a4651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a347377a-39b3-40d8-affc-14fcd28a0669",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd0111b-65dc-44ce-8541-f4325f7967ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd1c863-b1af-4563-a1d3-b91ad0e7cdde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cf6d87-6ceb-4677-a489-8984cc9ec64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33486d3b-57a1-43a0-88cf-4771d54abcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f531cb-01e2-41be-b425-7106fb45c482",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f3fb00-915a-4e74-84bc-5db17d1c4c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd3fc32-3cfb-4ef2-93c4-715952b78022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f023fa6-8380-4091-83d4-4513fa5a06f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "442e5a31-400b-4662-a62f-cfe6dd7e30fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c140a586-61de-4d20-afda-cdad56913e4f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413c1a95-cc78-4e0c-9808-5c3d063dca10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b954e44a-dede-4479-90a5-0e85e220b8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae44471-2899-41b3-ac72-c9dfe736543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f5f503e-4e3c-4eaa-8b2d-53045f449350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0efa09d-175f-4229-b87c-f795c9701751",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecbfeaa-6e44-41c8-8056-9aba99a0aafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a93516-cca7-4ac3-8f32-3b6b73534a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4871dd2-8685-4c0e-8589-b7e3dbdc349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d669f8-e82e-4495-854d-77744f9e8609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fc0fe3-7219-4b2c-ba6e-caa3591a3f1f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728fddc7-b1e3-455a-b74a-535e6b3b79dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d6d6bb-2c15-4289-8011-a319927fe1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4458da92-8a3f-4f88-ba6d-6914fa413c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c9afa11-d8a5-4bdd-a182-df2bb62c368b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcbfcf4-ec68-437a-b987-2683a1ca033d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb0b728-c704-400d-a30d-86442407754e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a69585-77c0-4c22-9e3a-759b309ce0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d77cbf-25e4-46d7-b3f9-8a14f8546827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5140e359-51b6-49a2-a464-bab7873ff83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1a19a3-993d-4b8d-af59-ec0d8f654502",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa6ebbb-8076-43f6-9ad3-37c156e4b9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e873f2d-d30e-4981-8132-e201a5747a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf96f58-69e9-4f9b-bd64-8b09d9eca136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6302ed85-23e7-4aff-98e2-903f7c74b312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0495e75-4c16-40a7-a8ec-b316a6f8888f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc746d3f-f4d8-4fc5-8c02-0f46c570584d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fb5040-2f98-4a00-a11c-777a6f1e5b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef25cac-767e-43f1-a0d0-2c28b6982a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f19abbf2-3ffb-4965-9ab7-d53974ca2164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cec98fc-b3f5-4bf7-9bb5-57b1580c8745",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7f0b90-281a-4a0a-a50a-ec51ab3fb42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74b1e34-d91e-4e86-86ff-f39723e0a532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb85c67-ec9e-4874-b82a-3d455b8f3518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa1a9914-fa7a-4906-ba3d-7bbb914d4213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebe28d9-5486-44f5-8428-69edcdafba92",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de15926-fd50-48de-a255-572ea1b4749d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1261ede-ae4c-4602-8d0a-4902c1b3bb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22c10c4-ab5c-4b4c-8ecf-85f7e74f727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a49510e9-6062-4723-9ad2-d1af4aa8cfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd918727-559b-47a1-b43c-bdf5570c903a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887a9ab6-ed3d-47f8-9b38-63582efbef4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f57887-bc48-4d55-95e8-0b5c538b2e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47959cd-f6e8-4d07-92ce-bf42f2cc1c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af03521f-c3f6-4002-8de4-e76e1ac15886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c204fc-7fcb-4847-bb3e-a17a638ad3bb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb085e9-7b65-4002-82e8-786ac81ff556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b9c22b-296a-47d0-bcf8-eaa8fa72ff09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d8325f-d4c9-4936-9ec9-ed3d3f89eaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cb09061-f87e-4a6a-ae39-a4c00694b10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f791b954-4134-48e2-81ce-c40a60c72fc1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1be0ba-d58f-4503-85ad-be7e6708a0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ddee4c-3473-44e7-ad45-7d315e0aeb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cae3c38-41a6-45d3-bc6c-12186029cce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8db1564-f0f8-411c-bac9-0588133ffca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc9ef3a-3264-476b-ba8a-4e7c8aa9660d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234edc57-8513-4bc4-b287-e3ab00b354bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789b4444-4682-4d65-9785-aa8b328b4022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8853d9-6a63-4866-9719-aa389ffa2780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3904e110-e912-4e2e-abc6-4c4e7b5c4151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c83bc1-e69d-435c-909b-c5b0140a2e49",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709981d7-d190-4520-93ac-c38e2df89bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28132aa8-7659-4c90-8128-3a95660b3396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7073cece-93da-4e30-b415-89bed0f4a432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2f4112-2e78-4e6b-9ea8-23a60c1aeab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed33898-f4b9-4021-becc-a4a040db9ccb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d39fb0-a014-423d-a4e6-92b166974623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a4ea94-388a-4c89-a4b7-e7439dbc35c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee12f90-cb86-4010-9650-745d5331cd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09ff4567-5abb-4005-bf2c-f752b25101c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b254ed18-1c8d-46ad-b608-014fef0963b2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92654747-4553-44d2-8ad9-751388d4bd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9ee65b-1c8a-4e40-a39b-f6daa5607506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5193f0a-8057-419a-84b2-998ff9baa89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1580763-3d0d-4cdf-bc04-ef2918cfd5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb3278a-cbb1-4ee8-b364-33b6b940d317",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435a79ed-0180-4c02-8afc-b1fab990670a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26922c82-9744-4e91-a51a-d1d5738e6cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad805fa-eef0-4999-9494-d8d4df54066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bff5e5ac-db43-40e6-8639-09ca4d16f458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc1c8bf-5942-445b-bcff-0892148af104",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fb4103-050e-4284-b11c-45165d91edba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202e60c1-7379-4c18-ae86-177281b65eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ab16a0-34f6-41f5-91e3-6b0375f0d357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe320f7-7fb5-41ea-afee-b99e9b9699dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950df6d4-296b-495d-9ba5-398921487d6c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3101385f-0918-4a30-baab-eb220bc8cbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043b22ca-1148-4dc8-a9bc-548885203914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8211a338-2697-4089-b5f6-30b256f0bbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7203b061-6c8b-4ba5-859e-2da1f5eef67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349fd9ea-261d-4e42-85f9-65317d4d19ec",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab8e5a0-880a-4dde-b124-6479bdc348cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d98821-a844-4041-870f-9f1b57e7946c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15c6b3e-2848-4cc4-8b92-cf86fb3c52c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c00f81c-5abb-499a-b3ac-39b96395bcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc27fd6-e17d-493e-8411-2a1f439c7795",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32610c83-d626-4255-a261-07ae705733ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9556f5-7da6-4017-b295-0ba5c6f3c2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c899f33-5c25-45e1-8d0d-9e41781fe9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17689f24-89e3-471a-9f05-bb18c80a9314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2266cc-0f6b-40f7-9fc5-9dd5feb1b6b2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1405702-0993-4b18-a260-c73759c3cecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce628827-b832-47c8-a340-ce398be73f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5e678c-d9b1-4768-9c76-9c72f6bdedc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb91c2a3-da39-4044-98fa-5c2697e07e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccc7ac2-129b-4798-9e44-93ada25745a4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10af3a14-016b-4925-9cdb-7f86373274c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5d9631-1302-40fa-8449-78b2171fe30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3da97c-1464-4885-af4d-45d92d17902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ee51a2-58d8-4dec-97e7-5c90c39c569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdbd643-6ff8-4e22-b9e8-c5c74ca19097",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c86de6-3147-4a66-b1f0-cb4c9c79a6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7405af32-3f38-44ce-8d5f-d7038bfdc9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfa95c6-c9d0-4089-b93a-3a8294d80462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee4bac1-b80d-4cea-9e34-ca532edd8e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad52783-3fda-46ae-a99e-a27439c3f502",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b73277-708a-4acc-b5f1-02bb8cde1eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ff3ea0-7720-400d-a430-6ab2cabe6d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e66dcc-c31d-41b6-8b57-63b2ae97cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb10138-10b3-41e8-8e41-79e2ebd982c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37be5f43-7d09-4874-b169-4b083267b93d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a688a00-101d-4a29-9753-ed2504a262c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd84477-47a4-4837-8a00-d29e7cb85b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6308e580-8848-4530-8ea1-e6d610617c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef66ee7-7773-4828-a609-0bd819909525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a23113b-0f33-4734-81ad-ecefad4abaa5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f82c5f3-1824-4e98-8cb5-cf6f273759c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4583f12c-6865-4b33-8e9c-5634679c74fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e82b7ef-79e0-47e4-9de7-5e3d10f4c626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6668272-e438-480a-9694-10d4c4432134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f743fa6-5f5e-4c66-9f1c-363cf024d658",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255ab345-dcdd-46dd-b0ea-fb1994e1352c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcc8c2c-0552-4906-8212-5770dcd59961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e46ba2-c329-4bdc-87fc-5d86350f528b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "781268f4-ca3a-4f43-9c83-83e0ee5c4e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc429192-59d3-4b73-9c31-8f4643de172e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c7fbd5-4629-4e2b-ad4e-1e9125298453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b067d3e-9d2d-474c-9c51-bfab97aa0447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4268e2-461d-4a48-9f3a-93b8f4d47ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fa1332-9f93-4b57-876b-191a055faaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e283b68-9a30-4bfc-b18d-5aaa82f68d11",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b6aff7-9bf3-4028-96a0-b1466fc0aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c85664-adf9-4a18-a9b1-751f303fa516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ed2a1a-9d95-4dd2-b214-4bb0bf1c324f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e70dc7b9-b7c6-4eb7-9775-2f13a8580bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b0d1c5-3f1c-44f3-b3ca-82595f8718df",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378d1623-6336-4e1d-ab3d-b3644377f133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fd2f26-e152-4701-82fa-954738cde5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf514076-bbec-4923-97e5-eb94da5fa18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7e87b300-91a9-4139-8c88-0c4c016d0680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091b32e7-e209-42bc-8323-54e2ab5d58cc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca95edf-d780-4a63-b9ee-1f6bc1184469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bb09970-bbe9-4f55-81df-e8f4eb8de5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830d2cdd-8adb-46cd-afc8-91000cb36b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54c98964-28f8-4ee8-8e3f-13565518f8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79aa875c-3bab-4bdd-bd53-a0e36da7cbd5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65144c40-79eb-4dc6-a8b0-960794add52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9b7123-95e4-4186-ad33-382f1ebb30af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5d5a9d-9259-42f3-b329-9f6dfede79ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3ceaa1-cc67-490f-a406-08966a5554a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6041b5-22df-4063-addb-423d61d5a240",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4cae4f-a804-4153-aaa3-5dfed6cbaa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc66ca9-4107-423b-b8ac-21bb53525c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee80ee6a-7bcd-43d5-8434-9b3ad87f70ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c308157-2390-4362-9977-93e7985c5ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89ef112-a453-47a4-8d5e-312380fbc1cd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff31c23-52b4-4590-b79d-16034dd5cc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf11cfb-e911-40c1-ad54-5d4740f94c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb924947-42e0-4636-b58c-802df90d4a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4f30b6-bd18-4404-b1bb-5de4611b879c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351ca719-0301-491c-97e5-4a3e236b9015",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb44f40-8c67-4140-87f3-409cc56276b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a58692-9b36-471f-b9d4-f111ff175285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5aef440-7bd3-493b-b1c4-df9c83d16b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a32ea2-9a97-4b74-92aa-665dcb8539d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbd58f8-4069-49df-9b60-eba4a4aeb2cc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9b2791-11b0-417d-b1af-4d65fb64cce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a944acdd-ebd7-4bf9-ad2d-38b4e3557178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f725bf18-a8c6-461e-9f97-1b34a2770ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de24410f-7195-48c8-a535-40cdc3c0fd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52820339-5eaa-448c-a526-01e531e320e9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77730737-9bc9-4a91-9bcf-430339a161ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1622db2b-5305-435a-82e2-1ed9ef07032e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d761798d-36e6-41a4-aa03-b4d985321ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "210e5a5d-ab8b-4609-8fde-d3e117cc8a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc171b47-7c27-4c47-80fc-5e2868dee8ec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cff0a43-810b-43d2-8af5-fcab81cf33b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1233f698-32a3-4e8c-9378-5543b61ac902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7500f15e-1e36-4a1d-87e7-f315cf2ef898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca64975-5d36-45c3-a495-e2284f76db67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce58ca61-328c-402a-baf5-b7ca71aaf58b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8f05ed-705b-447d-9c7f-d60d4158d706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8120e6-6944-4852-983e-cf412fd946ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319cf56c-1531-4b12-9650-2ae480d2b9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f785ed50-7ab4-4c7e-8ee8-2f57dbd6aa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1926d5-dc2e-48f8-bf36-ce72dc0bc34e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3af4dc-547d-4678-9dba-a174053ed20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7239f5cd-fc5f-4d02-9b1a-fdb5c00f6af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ef5616-e755-422f-b9cd-4c4c8a9835e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b6d4ee-f486-4d9e-ac04-6f2f65c42d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe4b07e-fd63-4d8d-b971-677912dd556f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed37ee6-85b0-4797-8774-3fc0ceff0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309f15c1-1e72-4c5a-86b5-734d37cb8dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79553012-50a5-4fa6-aa42-cdd44f4a8980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd17a270-5a5b-4425-a95d-0f694ed8bafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450c680c-66be-4a80-9965-8a48705b58db",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b3c77f-0f6d-4ec1-885d-5fdc76caee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b6a66a-5f5d-48cc-8fea-43a8918b0936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fb80b5-5621-420d-8e64-4b8128775309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab70594c-8870-4512-9245-4d39e3fbd391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521a4965-3e85-40a2-97aa-bd27167ff298",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e45bd1-84f0-4b6b-9fae-a33a61273ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735085a0-379f-4767-806b-ef80abc82675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899166a3-6984-4b4f-a80a-f3dd56eb45b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a76d919-51bf-4300-9ea2-39f3eb26b0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7537181-fa30-4d4e-863b-98afa80c622b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bc2fff-f785-48c0-843f-a2c9d0743e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4310742-0160-445e-b124-eb4f7775a44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7378b1-10d7-426c-9950-527d745fca68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eefd8524-d0f6-479a-a55f-df74cbeadcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb4d89b-2116-4487-a6ed-41664075094e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd89a5ac-7eb6-4ae3-a593-4dfc50e8878f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418ee64e-cd83-473f-8c37-53453337c890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed34e58-ebdb-47b7-a593-263585cdda56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe37e925-9433-4f75-97bb-eec45e02b2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f4681d-7aba-4fd7-8d04-d30d386a8474",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d2a1f8-6939-443e-b571-a6fa2e306006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2484fe-b80e-48da-ac1d-16b59cfaf240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a2c2d3-02f6-4e50-9fea-bdbeef909ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "97303fb5-c4d4-49f7-84b8-4c79d74285df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3547e297-2c20-4aeb-a64a-39de43772ea3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b378cf41-8e24-4363-99dc-b821aa3b6138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87b87ff-3c25-4425-aa21-252ba9c81166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671a376a-191e-41b0-ae91-46bfd0ba500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2b9fb3-de09-4c66-b087-4a5d28d180b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b2665b-6e1b-4882-b9b6-705d8e522796",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc909d0d-2fd7-4097-87c9-a76ce830fd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131bbdc0-ca15-4f0b-a716-711ad44ae573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba879ff8-a624-4cae-9d3f-950d681b5b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adab2f5b-cf40-4935-973f-ecb9557897e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56adedab-c452-4d13-a883-0f49acc5f745",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4fc7d3-f10e-4e6f-b6c2-ee5b1c6703a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee29410-dadb-4a1f-b867-31567646aa43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe413ee3-776e-43f7-b967-f1eb5a25e069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b214341-644a-4cf9-8c0d-fb2aaae8d28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413ad703-15ec-4f32-813c-1d9bca34dbc1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51781a2f-7594-4c8a-a379-78fad1dc8228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092774cf-4117-45ec-a493-4c3ccedcc60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5137c7ac-50e1-45b3-a9ab-c8527debda37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc6b234-6670-4ef7-b728-84f939947eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ba622b-ac73-4e74-999f-4e729c43d651",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd8d27b-62e6-4c0e-a6ec-e3ca3d87e84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c93b68-065e-4ac2-9981-26f95e6cc867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a9a58a-fda0-42f2-a4c9-a6ec5b757b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa17be6-5891-4e9a-b7ec-0a947793a657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46663c51-a3f2-4f19-8793-d70784ed1456",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b7f424-265c-4109-84e0-893b412fe01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e6ea94-6f71-42c7-887e-f8a75152e35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebbbea3-3d29-47f1-b234-3871dda3e65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd4bbe8-8311-4c70-9586-67d33c255fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71a7801-07f4-404b-99d3-696ddf92d56d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33333ee2-c2ff-4da2-b822-1bf7d34a765e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7c2993-6a60-44fe-9302-ccb8ff1e1a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba18926-dd60-4270-8cc1-babd760c3ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98d0af00-355a-4293-9c12-ea82f634ffb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba869262-4517-4159-b993-2b6c447aafdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65006c2e-ca12-42d7-9ed6-0fd585c1dc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb83e152-5475-4d6e-8b23-5cdf3bb4f586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3c3045-0809-4712-a131-3e83e6341612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1013df97-e633-422f-b44d-709ea0eaeb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c2a69c-0f89-4aa7-adcd-9b27add0276e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb2029a-d8f6-41d7-9f00-2a0f61fd0b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbce0bfd-6c5b-4bc4-9301-f4fc102d61d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab7bc9e-0434-4f92-8e58-d027201f99f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d60bebe-8cdb-4e63-8bb1-c4964a32dc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bba6f62-ba3b-4951-8d74-908b0940dd53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34975d20-426a-4926-9b38-1033a275c20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43835344-ac8a-4a30-93f0-f577df9e2d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98523225-a462-44a7-be10-e29b4b44571b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8c0dd1-44a1-42f7-a8a7-5398f01d415d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aad543f-69bd-4ed6-8afd-9201d7074123",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcc1a02-1802-410d-8f58-c67e2b002aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7901ca24-dd3c-47c9-acc7-337f48f610bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197f9fc0-2059-4918-8bb1-b3db3c6642b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "924e0c00-b70e-49bb-8a04-72b2cc0b6cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7377566b-8aef-46ff-bed9-57533b485a0e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1d73a0-df9d-47a1-b0a7-aa93c8e7f2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a822cc29-e52d-4150-9ae7-8b91e83d2890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b30478e-945d-4051-b80d-4d5eab408750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4fa38b-b4e6-4227-ac9c-56cba535524d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214e792f-9cef-45cb-ad48-2920a2c9afae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0184a7-251b-4c47-8604-3668d727c8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8127b455-b150-4426-b448-2c649dbba67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e812983-c661-4e2e-bd20-94f8ab4b4afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b107b59-14e5-4257-aa35-fc0095cbbf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2412175-b0c3-4358-85e3-8800e25e9534",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a2cf2c-d30b-4311-ad86-60c37566569b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8d2b2d-9a24-4119-b5b9-6c34cbae32f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af631496-a635-4867-9ab8-f99a9fd666f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "047f6ef4-70a3-4116-bd9f-559a6a87c350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c97c83-54d2-4606-81b1-a62c93c149e7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4bdd1d-9cc8-46a6-8df9-f7658a192596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91b0166-cc97-40ed-bfd1-12741141f46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0858e76-0356-49a8-b5d3-0b239ba665e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4218921-1758-485a-983c-490e112cadf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03704f20-110c-42d5-8d7e-a80c4a55cd06",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3305504-5be9-46bb-be4f-13220d36a042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f4f002-6c8e-4f2e-b5a5-1af3149e63e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a49e857-4c07-446a-a4ad-2a2a5e6fd043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed914f4-50bc-4ec7-a43b-a74b92d4561a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e644fa1-5514-46b6-a0ca-9642ad3e1ef2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af532d1-2b1e-4706-b9aa-125829bbe5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943fd9ae-05bd-4485-8ba6-ce5ecf95bcef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fa76eb-3e71-4d04-b02c-523971e11b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e3893e-5e72-4124-b94f-03cb429cf1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c13d7c8-9bef-4c25-a93f-1e74b0a55888",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11f42c1-0a1d-4323-9b3d-9cc8b1cfc5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c763248f-2534-4bf6-b2c5-ac337eae12c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0180d300-b7d8-49e9-bef9-82075200a0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ee0ca3-8fbd-4c10-a62a-5d1f36b6c7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5622036a-f194-43b0-bb8c-7e761548436b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c0c4a9-a0fa-4466-b2e9-8fff1f742349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aae0f71-6ea3-4e8f-8a3a-a12612969172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688bada0-9c09-4fad-bdc9-d3df2781c521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c54a6bc9-523a-4557-b01e-2f10062ef40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fb1415-d8f7-43a6-b00c-9ed0d145b62a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeec3bc-0efa-4962-923b-60f7857aded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fba03c-e58c-4fd6-b3d6-3e13a66e4b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb7758e-6787-4766-9c90-8f71c40281eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf28314-6f25-49e5-816e-639519ddf904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297bc7ff-fc20-40ce-a2cd-584eb3e962ee",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c012a904-677d-40e7-9194-6b41a36e1378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ae0a3c-89fc-4fd0-ba70-42790937004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67afd805-eeb4-419d-a177-bfeacf5dc0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "031b1e2b-bac7-42af-9984-8e5a4d7c7239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7953c4bb-f562-4c92-8a24-2b310277e574",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25db6241-d19e-4d7c-8d51-a94c69794ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a365f5-5f1e-4ae8-99e6-fc5f495e3b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c905f1-0ccc-4532-bda4-6c5d270a5b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e90ceb6-35c3-44f8-9ddf-d4ac77300598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beeab33f-1bd1-4554-86cb-835278a059e8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6f08e1-6b69-4862-92a7-b54fd54427d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554f4ca8-3792-4324-b66a-98ad7408c12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad45889-6370-43de-91a6-34d4c487a08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c50a444b-39f8-40c8-a245-028cdcfede24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd1f11b-988d-4072-a2ba-6731d75978ce",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36ab7cc-f7fa-4f55-8e26-e31a99232406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f210e8a-6380-4226-b2a0-5b4dcf24b173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2320fb2c-131c-4c7d-868d-d8aaaa514b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcbcead7-45f1-47f3-9f2a-4c2377701171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7503df8-0fe3-4adc-ac19-a5ef3128b15d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02534037-f04f-42c2-bbaa-4cc90525b530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75295809-6592-4150-af96-f42dea93f313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad4a983-9c39-411e-89ff-ed1f197deed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a66170d4-e500-4ac6-890b-5f877472fe0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05379a03-679a-411a-905a-e5c7869b1807",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7355df52-59a3-4db9-82e0-fe3133ac7d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7080a4-a235-4f2b-9ebf-acf244a501a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542e98f4-d9ab-41bc-ae23-9d247a0b1200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebe9dab-d1b0-46eb-a236-f117abd4d0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6d71e1-11e5-4464-b438-a3793c1878c5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f7b659-7cc0-472a-a6ee-06e407862c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84a5f75-581d-4d00-8cfa-b44e3af0f783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ff888e-aded-4385-930e-ae6f4c74bde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c84816-9ce0-4c2d-b969-8141def6a382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6347937-e6ed-4dca-bb0a-98fc5cb403a5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d586517-243c-438d-91ad-e77c62f31eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49883384-e635-46e0-a834-52d8b71e6df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ed5e6c-8edb-4bb5-bb9a-1aba4f0d67a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cecb4d90-c888-474c-b856-b7af43f27ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0289bb5-8c2c-4dce-83f8-216da06ee4f5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947a8970-14c6-43ce-b3c6-5de199fef9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b62679-3dcc-470e-ae49-993b3f124bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927236f0-8afb-4a50-aba0-d5a254b350aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b69293f5-901a-4d31-b65b-462843095e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdb4572-8cb5-4acf-9b57-cccf82b53c8a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19402c1f-ed72-46de-9fab-f46efc4e07b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05676fc3-d6ea-4368-bc02-95ad1096455f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb0e9e6-61ac-4221-99ce-73f55ca5fc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00bd13ed-7eb5-4c91-9f79-ebc8ef187d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e694a8c1-ef73-4ae4-8db7-d7622ec2d00f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f123eb-207c-4230-a486-b6d4487a81a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39245c42-e434-4778-bc52-bba38f1210ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a87f88-164e-49d6-8d17-e62b9d22c227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e5b303-d496-4faa-a6e0-2968f9d30eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41122bd5-6cdd-4a03-bfc4-12f8172bc431",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54743b92-3c40-4a73-bc1b-ef5d87bdc3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af248b5-b815-43ea-9608-5f2c74202fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a6ccac-0840-425e-9195-8f57312894ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "758e6e36-1f29-4f87-9be7-3a4b0205378b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a08220-1c89-4330-8b98-a02e021f9294",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f510f80-b288-4c5b-a7c8-b02a91a9306d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98014cc2-9342-4ba4-bf2b-ca21bbe1e1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbe10ce-21b0-426f-b50a-0813c04505ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bd5194-5e0c-4780-8f33-82eda9af19ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb9d87a-7245-4b59-bf2d-3281ef6cd9f9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c553237e-96a1-4d2a-9461-42497c49d46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0e2d9e-aadb-4ecc-b6fe-b6cc6af4f5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d414a2e2-bca5-435d-a378-af723ab201d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48caf0ac-f256-4f58-9849-3afed5911c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff62f0-ba93-4bb2-8351-af27d955c7a6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307e5308-b33d-431a-81d9-45145b123e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64343418-87ae-4d59-8b1a-115c1c2a95de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e158f249-5455-4e64-a347-5a06ad04e3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35725583-3e6b-4444-8183-9f59b7c7e780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78017a1f-6ecc-42a8-8ade-74e7928c4d37",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f73d0b8-6cdd-4e73-9729-e3a9029d7481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c20caeb-013d-4681-bab2-f9fd737d8fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebe52b9-99e8-4481-a6bc-dc2d91b3ba0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e63820-e8d4-4c86-8fb4-f24052221fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509d8e6a-d302-4ec8-892b-802eae398d81",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17ee3c6-5149-4bd1-bde0-abefeb7c0801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2804284-145a-4e96-80d9-8ce4c2f87d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c667bdf-3648-4172-99de-ea19b259d399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0642c3f3-52d6-44ee-93ed-b58db88fc0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af5b1a-c880-4186-a9d8-b2643fb54043",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69bac4b-bdcd-4c07-b721-3bafa45297d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556b97bb-6022-4c1d-a2a9-780b33c53bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06177be1-8c83-4bd0-805b-7870e438571c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "30461719-eb10-49f3-935d-0c60cf7ef7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7eee30-e7d9-47c9-b3ea-a66371a7db93",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c0b523-0304-45fe-b048-69db735b4d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b44382f-48a8-4e93-a234-bf3abde85a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4775c6-4776-48f8-abfb-7f46091d9b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2c3939-b879-4789-aae9-d45ddfcd2f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304727e5-20d8-44e9-8f58-15a2bdfd775b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a194b6c1-04de-44e3-b6e0-c9a898c9efb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5d487b-d2b6-4080-883c-62fec749efa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177366d3-685a-437b-a39d-71253598f20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b36d29-f887-4a95-86e5-40cc947c7dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42da7193-6c26-4df9-b228-6c5aa0b2739d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7c36e6-2eab-4ce8-9883-4cfc7df9d119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d4a1415-60fc-4e19-94a1-88d31ae1f17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc21a607-b1ee-4437-a361-258584ae589d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1543af3-bd5e-4f39-9aab-20f86448ff44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbf42c2b-7b22-43eb-ba25-c3d52da619a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0e9eb60-40d9-4db9-896c-bd0680fa7802",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5df0be-ceaa-4949-9b4e-141bf734636d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4329992f-a60c-4d5e-b1ce-97b4fe2407ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86505c5c-370c-4ab2-ae96-f83073c28469",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d36d2da5-92b6-429d-8757-8bead4908c9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c6fc995-2336-4834-a858-9672bfef6c30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abc381c7-71d1-4d2c-a067-1255a7ae8027"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "842fc3d8-4d56-48d5-bc58-53cf2cd65956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d72a7c10-f57e-4fbf-b3ad-5f36db9c1b5b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd33febe-475f-45e5-a8e3-d22e32610332",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5edd3ca-bb18-4b07-892a-a8ba64942d3b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "677df241-8c11-4ea8-acd7-90d8fed008a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "142dfc43-a674-4a5b-861b-92be890302bb"
                }
              }
            ]
          },
          {
            "id": "679124f3-66fe-4921-8456-3b5e4565f813",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfb5b6e6-6b54-44bc-bc5e-96fefd99fb48",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9e13aa17-bb66-435d-a5f3-e596b6280bf8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffeffcb-6850-433c-99dc-a9614814b98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0e092bb6-4338-4641-9667-3fe4b47113a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39460be-0288-4f06-95b8-2eaf5f7b9213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe1d17e-f68f-4b9a-bef3-fa51d0df9bb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e7474d3-486c-40c3-a7b4-ee526365afbb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "340cdaf0-f997-48d3-b032-5154189faed0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11397941-86c8-4104-a605-c9a7f748835e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40077c09-a04d-4ab4-9fcb-e42450baa790",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b57e7c19-8590-4c3b-bb76-d4ef06249ee0"
                    }
                  }
                ]
              },
              {
                "id": "a9b0dd77-c64b-4fe8-96a5-fc7f2c73b645",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d906e22-5317-427c-9b3c-52277b880e27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "971a4a51-34c7-41d1-97e4-72fc912f637a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5332c40c-a336-4ca4-ba8b-7361b8f792b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36d240fb-8ac5-462b-94e9-c0249f5f3241"
                    }
                  }
                ]
              },
              {
                "id": "397008ae-c4e5-4641-87c2-33d9d5b5438a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4dd47e1-ab0c-4831-8749-f52e0b7829fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cfc54c5-f483-481e-8856-762287b397d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec883e73-fe99-446f-be93-c914905dff75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "542ed042-a98b-4e39-93b2-b0f7510c366a"
                    }
                  }
                ]
              },
              {
                "id": "ca0569dc-4ae2-4f9c-921d-8083d070f5fa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "decb3910-199c-41b8-9f3c-203dad9da24a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40f3cece-7044-4276-b9d1-acda9b447590"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d852f0c-1875-40cc-8490-8d83be13b0fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9a2f0acf-04ea-42d9-be57-83394ee0fcc3"
                    }
                  }
                ]
              },
              {
                "id": "67376218-06f9-47c7-97a9-8c5f1dbc393c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ca2e8a1-5c22-4151-9223-f428bee1ef0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af044b7f-940b-490f-9725-9164a0097910"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5883f9f5-0ec2-4473-9dd1-c722baa37fcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ee2ba530-9076-4932-8b4c-67a4abcfe691"
                    }
                  }
                ]
              },
              {
                "id": "854a1c42-75a0-42ea-b5b6-f7180a8ee1dc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3b224e8-1895-4984-89e5-f7300fdcd851",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63f71de9-2aab-4729-8f96-af1d5018f00c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b670c40-9c75-435c-9a74-cb3884d8dce6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "076866db-be96-496a-95fa-70a046256a19"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad7f8597-595d-43df-accc-5b2a89c3de74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3de300db-33f9-4ef0-9da2-bfa62522047a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a41a12c0-f481-4399-b936-f82129d7959f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ede48636-e579-4d78-a574-2eebde43895a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cb45098-69ff-4426-84bb-0f7150478d31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b9fac49b-44ae-4e48-b05d-284c8c9f45fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1969ee53-01cc-45ec-94a6-5b9eae8e3e98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21cc8e40-2005-4d24-a3fa-07ea73ae38e8"
            }
          }
        ]
      },
      {
        "id": "7fc2d6f0-6f8c-47a5-84b7-05edf4faa409",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "39984431-4250-4a42-95ec-5e037d979e09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "913d916e-acd4-4b1e-92ef-570dcb75ccf6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11d7d847-2147-46f3-aa80-8af1b61020a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8da7a5-6ceb-4a9e-9507-123c28018587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56996c6-04f1-4cc5-a234-42391e9be886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5e04b7-0b2c-473a-a36c-41d01aee70df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3c51b8-e665-474a-ba42-c65e2ac5724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b93954-c9ed-4bab-b7a6-c3fe69d890cc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3540f0c0-1f1a-41ca-ba31-6e00718c8a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819b16b7-703e-480c-b2dd-ace4887a91a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5bde8a-b8a8-40e3-a74a-4301c42c98a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5690de06-858e-40c3-8d17-69c092ff76a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0bcb3e-316c-4e8d-b2dc-3b42f52fface",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f623deb-31c1-4605-8bef-9cc3ac293cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad147cf-cf8b-4cda-8f5d-2a5b98f3880e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c31173-7389-485c-83ea-94c0b5e33485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "face9e9f-6a7d-408c-88d0-f6f99446ade2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33562993-1702-48c0-978d-05a8e8d2cef0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f5ecf5-b5e3-4a04-9930-a7ff4639bdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba6623a-06c7-4e03-b307-e09897193dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edb1fd7-62d2-432c-a8a0-be25b6f6f862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f70ca650-1fba-4891-9029-351a28fa81ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83842330-4853-418d-ba01-86f5195bca3a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90619d16-bd5a-425c-8250-9e3a7608bff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6296f3f-77b8-4d3f-9f1b-cfd5e2880ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d0a09b-50ba-4c69-8c9d-a100961c5785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b583456-16e8-441e-b9c7-daaa22b031e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9282fd6-68f5-44f9-9258-cfbf23746963",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8702fb93-b269-4b29-a8f3-0cda4583a7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743f4e5f-d5df-496f-a358-ac45eebc0193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c86b2b4-818f-49f7-818e-133ccc2a1b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2097f150-b122-4af5-9e52-1c44d9109794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2750c47-4d15-4025-9033-eb14b5dfb19a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226d037d-bc7a-4124-9279-3e1a0ecb9243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5df671-a914-47e5-9a49-8bbfbd1a6463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f94ac61-00aa-4d4c-a4bb-036b8444a99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d36780-9d10-4001-8d20-d88a1bb54a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a479c328-d129-4eee-8dcd-69e7cf759f1c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132f8323-357b-4471-9c7e-0973d884a0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f3eeb9-8b1a-4092-9eb6-5af0df8cec37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0bdb73-efec-42aa-86db-9065b77436fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a88287-c470-446b-b937-21184bd064c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6cddc0-329b-4ec0-af58-878ebfdc6b2b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c264e5a2-ddfc-4d45-a6d6-153d9902b314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65adf91-a77a-43e0-943b-24aa0e13deb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560cb512-98c7-41e0-b54a-1afae9a9fde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93d6e7d-10c2-4385-ba70-7de0e44fb9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d88482f-dcc6-45e9-85f3-e766908fbac9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a66be6-ecd6-43ab-b846-3ce758a74bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341544f8-5626-40f9-a8dc-ef0a61ef8cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98c5fc8-d7e2-4cb6-a36d-a3b896c37170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "622ac286-1e1b-46bd-b9c7-ffed9699942f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd746e1e-579a-4e6d-a181-8ba59c8ca573",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e4f035-2e3a-45b0-aaf0-c17e0eb812cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b488584-a6f7-49e7-828d-36fa93aa2dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90757408-390c-4e85-8434-fdef65a8bdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7febbb-4607-491e-ba9f-60ed0d9d2701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e72818-7f51-4342-9ba1-5c466cc0d64b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0263741c-1529-4b8e-b8bc-658a4dd149fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a81de72-d549-443d-8c8a-7105a98635e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b64323-c1cf-465b-818a-b79d87414bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a515d7b-6739-46b4-bccf-8221ca50098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87bc2c8-f1fb-46ea-8420-566b956063e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678444e8-c857-4d06-93bf-d38d1f7c9131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acbeb3c-bb13-40c1-ab52-c6adbf29e648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58947d0c-af1e-497d-a063-234bdce2f437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcca74f-21db-4f37-8510-df19d6ef67b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707a0e7d-9e52-4dd5-9b4a-686277e2ee74",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f6499a-3795-487c-8a2c-68012c08c48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f712970-a579-4bf7-998a-085f033811c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c443ab51-d119-4980-a1d4-a5c55f4c2fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab892961-fb2f-4559-a1fe-1eca35cb2eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbeb31d-5c58-49fd-8a82-eab303a9b6b7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8457e815-9b24-45b4-a8c0-4ba7172455c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13767a86-f880-4bd4-b1b1-4bbb3cd7d116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d41ba5-26cf-4b83-bb7a-0cf52d53098d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "992fa877-fb19-4964-8e50-3bb811de0374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe46e737-7af5-4445-8316-13050f61eb49",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2927b0c7-8d05-4c42-a718-1f4025219e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92087cbe-2025-4035-8f7a-8d667649f4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50151c74-19dc-478f-9a7f-ddc1d704b843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "572e0c2a-957e-48c0-af6e-a987bb9761cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc374b1-9ef4-4f77-a21a-bef313032337",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8d1d14-93c2-4351-8ed5-9cc4bf7e9ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9ac214-b6e2-4319-9596-9ac11ffa414b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219331d5-4d7e-4ffd-a892-ffa88037830b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e179e9-97d4-4936-a14d-333f5efdafcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e875b46d-b3f8-49a6-b2b3-60f96eca5062",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8617456-6cb4-4868-a54c-648a7133f270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a660945c-34dc-4bfc-a3fc-fcff444b125c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014d0c6c-4ec6-4fb8-beb9-3947419e601f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8fe746-a78d-412a-9b5f-7ad1c9844f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fe589a-ae1f-4424-9529-8ae3b7f23d0b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a0ab8d-7e09-4776-98fb-f961e0c8b6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c018d00-37e9-476c-8f39-5defb7c23a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afe340f-9699-4b39-99c0-751247e325a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca526c7a-477c-4f77-8027-7ceef0db4092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a06256e-7fdd-4e69-955e-3e19d1f80eed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28e8c68-2257-488d-88bb-568b971f9ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20afb6e1-ccbb-475c-9421-40466cbce10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fc9da5-717f-49a3-9bd3-1f81edbae090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e70076-1409-474a-b9b3-19a964099bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df0fcdf-74d6-472c-8ee4-5454a7a6bc10",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95692ac-c7d3-45ae-a3ee-1da2bbc0af40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc98bf64-f1d5-4df7-a79a-802507617cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f75bc89-5149-4360-95a1-42bde2a40fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be65e658-7831-43d9-9119-00ab30347faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5c5de6-45ef-4b70-9753-db2fc017181c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122517a7-f667-48ad-a7a5-f1d662bbb165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21d3f99-90de-42df-9210-a093976ca725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a8ac31-d045-48e4-affb-a6753f958095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4653075c-6341-4820-bafb-ff8902092dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f7cdc2-7b9e-422a-913f-04b55f53b802",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4890bb0-8c14-4f63-a85b-647f7020eac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7453d5a-6a34-44a5-9a4e-175c53a44377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd2d239-06a0-4e90-b9f7-b6c5b6e98132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdfc3fe-fcc0-437e-92fc-1d1217105f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf651ee-858a-407e-8947-65d3581900d6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615bf712-434c-4ff8-943e-34ab93d62514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f78eb94-a80c-4a97-a566-20f23a9c522d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff09df4-79a8-490b-9ab2-d098d3075d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63accc8f-50e3-4783-b8fb-817b0ffadfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c433d1d-6a2e-4bce-9339-385904271283",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e55d13f-0599-40b8-a6c2-fb9541c66a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f0188b-456d-4c01-a86d-41ca3e0b8937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc468eeb-6f4b-4a4f-bb6e-edca42705884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f618d653-7d92-45f3-8f63-29b55fdef3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e17608-a48b-49ff-b8fa-5580127d85b3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f33412-b1bc-4638-9049-5836d424838f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f17a8bb-1ed8-44f1-8705-37cce86f37cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a18079-5527-479a-a638-7760ac7613b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06969e55-8b73-4674-8f5a-c96b819ca0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b233ca0d-9b31-44ad-b5d8-60cc1a59994e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a56a62-21e6-4bbb-a6d5-6167b508dc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf79594-12c8-4edc-83d6-0ff54af7da40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff142e4-4d9b-44bc-b6e5-0d9849bdf68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d999c6c6-db90-4f24-af55-5ba36addff80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0393919c-a152-45b2-95cb-64d337e65953",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c656e2ad-1623-4d26-a68b-91cfed1d9ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63588973-5980-4fe5-bf70-72a790cae097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a2b483-96b3-4ef4-a05f-8ab21acb36ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb4de1d-cecb-4670-93a4-c88450e40097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca131e03-cca0-44c5-a408-f7270b7dc81c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79f7b4b-e402-4b20-aff3-dc1dddd34988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250b1871-3511-41a9-8961-a948add3872a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13357246-9922-4a08-b045-3b0fe3ea041f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd980a5-16b8-42c8-bd7e-87281e264881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee43685-323f-4b1e-a35d-adcb8157acb5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db755baa-d562-479d-974b-fb832bdbd2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7b734b-4577-4bb6-b9a6-eccb9eade83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f9df61-21da-46fb-8ba8-56699e09c1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da2e538a-8935-4f2b-9f81-60c7f8b0d9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5edcd8-45cb-4466-97dc-4847964a480a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c0f910-be8a-46c9-916f-8f146fddc226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85daabd0-fdc4-4bc9-a91f-d6cba1a3a30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cc7128-bf24-4515-910e-f18213dbc772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b60c01a-b972-4869-b83e-d6c738803adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8941c4-672d-4c53-88d9-e5709bab6961",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733c0996-f60b-4e19-928c-96830a6b8ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b28483-4c4d-4954-9399-033841ffd9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967a3386-9943-472a-bfd1-dd603d3a8c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23850a68-ab1d-467d-84d4-35c6c4528d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a75f8ba-a436-4990-8657-b165e76f702f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbec315f-c76d-4b09-8f0c-6950dcc715aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265007d2-7d7b-4ed9-bfe4-0c517d0979e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99ecc66-7dad-4f91-aced-a31329ea59c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "898e404f-221b-4ef9-870d-70a88967582a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d4b9c7-756c-49d3-b189-f88cdc84b69f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fc43e1-1935-4ef4-8b98-56a4cc1ec4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518f85cb-2188-45f1-b1a6-034ecbb70cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff36fd0a-dc76-466f-90d4-39e06d35ea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6217e81f-65b1-4626-b329-e749ceb353ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f1872d-f1a6-438c-959f-66a7914a66c4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218b57a6-bc53-4dcf-8414-8538db36a58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba77952-cbbc-46ee-8b29-f9a9d1c4012d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a70a520-fe4b-4acb-99ca-0c968be03d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4519f100-60ab-4e91-a2bf-2f1abfa64d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61db968b-a708-433e-8b9d-fe48c1324019",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2635eb5b-f9c5-47f5-a379-327e8ba08d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e601e5c-8a1c-4fe3-9c1d-a89ad9efbfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c8387f-10c6-49ed-9915-5c7c896df4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "811f2a24-003c-442d-92f5-1e83d0f66822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1afc033-5bce-4dc7-a7c5-62cb971656b8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f2d352-680d-485f-ae5d-c75662daaf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddabf4bf-d408-4a88-9368-7f9b3abdcd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13c30e8-6000-460c-8494-36686caa7669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca8c6ab-47c4-46b7-bfe9-287fc05cbd46"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2519e02-b2d1-4cb0-b7c0-83092154c04f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b6c4dcb-18aa-42c8-9fb9-890e338d4d0b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f71a70-ec58-41f6-9362-a4609d387887",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "95262953-d0e4-436c-84f3-4b78706a8f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdc68d9-3297-4002-9366-055108c4073e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d614e822-6234-48a8-bbb2-8c16759b977d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a73459d3-03a8-4df6-babc-2e1a23625657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37499cb3-6e71-4c65-8fcc-f3525c23fe6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc4d97e6-6627-4cac-812a-d4646481c8ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c916bb4b-521d-4e02-8780-0e970c45bc55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39df7fa0-d301-4a3c-be4c-cc22148d1ddc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c696b48b-a72d-4672-bdb6-49708ce2b0cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7526ee5c-e9a3-4be7-a403-a6fd923f32e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68faa168-c333-4565-bbc7-b9749dd6ea40"
            }
          }
        ]
      },
      {
        "id": "b3a202eb-09f9-4f48-ac6a-442f4b955132",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f1ccac63-bdb1-4bf8-9138-094a55d39ef7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99f13bd3-d876-4eef-9586-faa7c0a71a0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7cfd474b-8319-4028-8ea7-e6af21796eab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13db8456-e05a-44d7-b5ef-961a094c1540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de3c901-9acf-4a5f-8029-553db96bcba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5337c46-aa55-4a55-8247-7208bc6b8b54",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7427fde-c509-4cee-a634-b8147979b9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c16f29f-7e7b-4991-8465-2f8d0640bce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e7dbf7-0a7a-4573-bb02-97fb78a17131",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad1f302-8ca5-43c3-9dc0-0cd5afc89fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd3ae7e-546f-44ad-a237-f31c79b9094d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0521018d-4d59-4ce3-94be-19591fdc801f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a32ee9-187a-42b3-a31d-d4ee0d720bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879e31a9-565f-4797-8289-3a87b49fbd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dc92e5-dd7d-4f66-a534-68f189c166e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b55892-5cc0-4c8c-96fe-6462f9bdd41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88748fcd-decc-45a4-9f8e-659c305daad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeb25c2-9b0a-4926-98c2-86c4db0cad6b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88f1388-ea46-4acf-99e1-ee6b8dc7e3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa625c2f-c4eb-4b67-afb8-0d6737778a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfe752f-75ba-4e93-b89a-42db179fcdc2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007f7f91-3279-4b5d-993e-beebb046277c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4c918d-dc0d-42e4-a7d4-c8fbed7c934a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d111f9-2f04-42c7-8026-e6a8d7ac8cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5ef30e-f777-4630-b21a-243642dacc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8474682b-3f61-44da-b5ff-6fbe5a5fda46",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832c2d66-a879-4f82-ad3f-3219ccf15417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc02ca6-9f75-4b41-8275-806c53bfcdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcf2836-b90c-4f19-87f2-285262114d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48598e02-af4a-4cbf-98a4-666c906dae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eb4690-cd3f-4e90-8887-d79f3599330e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725481e0-461c-4f30-afef-5e6011329f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7f2da6-d997-44e9-a310-aeedcc771db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf1190c-12a1-469e-af06-9e6d09c56e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0499c2d-418e-465c-9ffe-8a994a04e6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeba38ec-9ebf-4bef-a7da-f458a38d3c50",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2bc3cd-5462-4a57-91d4-0ac19dd8d296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ab654a-93ef-41ba-b4a7-f6374090e74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7888bc75-98ae-4132-8a95-4c0100223e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ca0df5-d6ea-4bf7-9a77-8b965d58414a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32358ea0-8877-460c-a34a-485f2b9dfde0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eae5f4f-4e36-4e96-82f9-055bc7eba900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab535a68-3107-4c1f-9043-1670b2ccc23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa218c9-7708-4f14-81b3-1db1c5071348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3463c6da-ed56-4990-975b-927eafa7c19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94297b57-792f-4e63-9eb1-117868df49e0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2ca19f-dccd-4b13-9b6d-0bdb0ead6048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f7281a-b853-44f2-b237-c993b6df622c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d441124-974a-4ad2-8397-ea9191e28ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c2cad2-8045-4a45-9d68-334847931c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ddb0df-31bc-4f0f-919d-9ef460c7a547",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b332f0-bdc1-42fd-8d72-51c957307701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68f8fb4-ddea-418f-8d9c-498e14e2e250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afae25e2-206e-4bc2-8758-c287c78e398d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf6bc5d-50de-4089-a4d8-184211d31476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41357810-a2d7-46af-bdc1-45e7a9fd1b59",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40413be4-f988-4ad8-81e0-b474033a74ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e2ae146-4029-4b52-991e-f9b5bc02d1eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e022f295-ccb3-4899-bd18-604431677d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ffda93-67ed-48fc-8cc4-3545db0141a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ccc7a8-5908-4a74-b693-fa8c0750fff6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc758470-0c4a-4989-a51e-a60ae62116cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64803247-5e5d-4c52-ab76-ef4e3e5df4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62267fb1-3bde-4574-8efd-4c3a3b81a7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060a0962-833b-4c14-8e2e-1835bbb7fd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47533100-4a13-41f3-93f0-1f043309fea3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c940e1-efb8-48e3-83fb-d4383ea94bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73d32722-750b-4b7a-80db-c479e133f46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a525b7-5af1-4536-b4ea-936168b4fc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760836c7-2d00-432f-b205-1ddd2e68400d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b679d657-9bb6-45d3-b0d1-f87e4e3be8ac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c80aadc-eb98-4461-abfa-cee6845db914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78767fcd-9c51-43d5-93cb-66371f80c156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c685ee-9b33-42ee-8cbe-9abe7b80e15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72d78b2-065c-4463-a23e-68c40b62421c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f05e4e-6f2a-4278-9994-99591775ebfe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3fd927-cd6d-4e40-8700-2d4ebffe0ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622eefe4-4ad6-410e-83a7-5bebf5efd815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717c0f16-196a-445a-8838-041b6ad6ada2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd3620a-2ac3-4ef1-8aa9-da160f1dcac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91065dff-cd12-4e41-a564-eb00cf683483",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f57b795-a443-4588-85ae-a909b5d56e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55566072-d221-44ee-914c-086f1bf2ae19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a704f42e-62ca-4f6b-9cfd-834a9c472c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60efba8-5fc8-488c-9424-636f346d4c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7459d3c6-e660-4d9a-874c-9e156c7c39af",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d25eff3-59c1-4029-bd2f-a268c87e5ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e7186b-4342-4ae5-b6b8-2fdf541eccf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613259ce-1cb2-4ab6-8b10-adb802f29364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0036b266-5fdf-4e4f-af77-2384073dd975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41c8db5-0208-41d1-baf3-3b1b2c394c90",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f4768e-fdb9-4017-844f-2be27a20ef8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70523ded-6960-4dc7-9b10-8a1619b1c3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc0bdcd-6fa3-43c7-a9c9-70ee77c312ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2fed75-b423-4ef9-b76f-b7047f3180d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31408e64-bc18-46dc-b1e8-dd93c738767d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817cebd8-3341-4104-ace4-cd74d548e527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb552c5-7307-4d8c-af90-73fb4d1fa9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4215733-bc55-4984-92cc-7abcc66b031f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab77dac-a172-4ea8-bc93-8045080bae60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0767dfb-2e4e-481f-80f5-23f4e9fd7ce7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc63d574-2a7b-4b63-9691-c93ee5d491e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db00a6b-94d4-4760-a739-2d8b0a42140c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa5c5ec-a4c9-4a79-a17a-d191e0172d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59abb185-3c0f-40a4-8a9b-537f496def69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19df136f-7bce-4239-9bae-b4ea7ff059e6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def0d232-9360-4cdc-b8a0-a4b68fe13076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d62d561-df76-49d0-8cc4-baf3742b2c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f522dc26-41d2-43a5-8c4f-9fb8dcc6b152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60b1450-8160-47f1-8945-09bf356c9c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ca3558-b321-444b-8f34-09e158eae8a4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3b1225-402d-478e-80be-ae55458aae37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c384793f-f249-4207-b0fe-a0207695963d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eda027-11ba-4f31-9e6d-67f6d55e4c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9c533d-05dd-44cf-9221-76136fea9f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b56b6c6-af7b-430f-aea1-2fb97fe456ba",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327d94b9-648a-4262-a9c3-0184fdb8041e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc6ef33-9b04-45ab-b6b9-ed9047d0ab51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1de0565-a111-4ad3-9933-59618453ca7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03864459-5483-4e4e-98d7-39bdb2a58109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa313d97-01a4-4e9d-9c41-901e62dfd072",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c94b42-c756-4ae8-aae3-3eab8705849a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdddca20-6ab5-44b4-bed5-0684bdf45c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d40675a-d92a-4910-992e-6901e70cdaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a694addc-352f-4839-8faa-e5621dc0b6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de27f86-de5a-47fb-8d95-3b6996cbe6a9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb690d6d-4f27-445c-b8bc-cdc61be4dd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12eb935-ab44-48e1-9a7d-e90687605374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6694cf9-209c-4708-87cb-08f50355b83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8410c9ac-fd54-40e2-8c6b-d994edf1bc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fa97b4-5a74-4535-b93d-76dbd2728dce",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b080e7-ab51-4e1f-af55-202ee8b04946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "113149ed-1215-433a-aceb-72c52d493666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53846575-277b-46c2-8cc1-a258eef8cf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caddd725-1763-4cba-8381-175d85b7c405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aad478-7e1a-4a0d-b1d3-49069128a612",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b732c66-68f8-4098-929d-f9e947585879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932ae21b-481f-48b6-a1b9-070c299994c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b1e9c-f08b-4048-bc7e-35edf6d2aafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8d706f-067d-4753-b393-bd3aa89ceee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df580399-e0be-401e-92fe-fe1f817d2ad0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a14fe0-a46a-4185-af4e-a780de2483ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a95bb27-7b24-4bee-bb27-de0931a23fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2658195-7674-4e7e-bb04-c4d6ac3f4d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f1c7f7-7920-46b8-bf7e-e5a72b3405d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b060a455-4fe5-45b8-96ec-4fa60c1f5da2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1d9b48-b765-480f-a937-507ff370f2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f792dc4-3533-40d6-b763-a954754de3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84397a8b-2dfc-45ec-abea-2482e899fc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df36fef9-31dd-4a2c-9677-e9cd2077da0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbde5b4a-8da8-4c09-bc5d-5014e4b9d168",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61134f2-5b66-4622-acfb-089ed102f3b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28c42a8-5684-48c3-865c-84bab20afe03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9b2312-1be7-4c79-8beb-f2bbe00b343f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf73e64-1d57-465a-8083-daead8598c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03196f90-86b4-42ab-a878-65577d7bd209",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca121810-6a25-49d9-8075-08f781d6cf70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a078e9-79fd-4da6-b73d-d1325157e1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9e6a20-e6c6-40e4-a3a6-072e85d84d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32cd00b-a1c9-4234-b711-50f2b8c50418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ec5fa2-5335-4f12-9908-49e20ff2fd5f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef1cd22-457d-4984-b2c3-67c61be6adeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864dacf9-a3a1-4af8-8f55-36503ebfa40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e571b691-9193-42e3-ad1d-dd5c0a2b4622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1df098-b748-4f52-a332-740ac4529fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71937f0d-20f7-4d41-9380-a45246adca11",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e51805-59c1-4f2f-9fe8-84e0bb27ca8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfc7df3-1ee8-4957-b55d-d1ed25b9c795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61816bea-a330-4a0a-965a-ec680c8f1a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4673fdac-7c4a-4655-b0c6-0fcd919f7599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a1e441-161e-4a95-b38c-3b21884f21b6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643e8dbe-7910-4693-9c4f-744756fb4ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d4999e-1f74-4881-86dd-bbd0ef350b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb94793e-3a02-4d9e-ac35-18839ee73da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f01f55e-0c4c-4cd0-8b21-9098431f3ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a33395-0374-4a00-b8f8-1866b5f423d3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae955457-ed67-4c0b-9d89-e6de8e1c18aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccea4d0a-34df-436f-abdb-6b3fa4e75d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b253ca-f11e-441f-a609-b58557b42843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2004c42f-3c12-4b51-989f-487c42a97520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c0e90a-8bd3-4d9a-9270-7744b0d43afc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc65b002-d52a-47de-81cf-2a9bf90f04b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b41765-0913-4eaa-9dd3-b4b21cb7c9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd26822-6d45-4897-89b4-39fe0899be18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d248dc-3319-4a9c-9dce-ec93dd66b07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476ee021-7e63-4b78-8044-cb73f9cf1265",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab80732-95e0-406b-adfe-ccc0daa73ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d473cf-2b62-40cf-af94-325cedb731d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7f4210-fa43-430f-9e5a-adfa21932b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f053039-6c4f-4a06-849c-1321031c15ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece77f35-0f27-4adb-956e-b164366b524d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd4b91f-1ff4-4725-89de-e8637e11e005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076cc1aa-b914-484a-9906-3956fbfd92ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b41307-5887-479d-ac93-a9b362d27a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9e865a-a45d-4bb7-9600-15a69474236f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77112904-cde8-4bc2-98ee-e79a30f06436",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af354497-5d77-4d11-aa97-d1154da08911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f74d2ec-b935-4f3e-a4e1-44270eb36de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2456524d-3c4e-47d8-8822-617c39fdac3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8ae905-3420-44bb-8652-70b8040dfdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc7b780-add9-48ba-83fc-aa108f606953",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaac8b4-bd1b-4731-8619-95190304b709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7eacf1-4eaa-47be-83c1-64e39b90f6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f486d75-6a70-4213-90af-c68da9e395a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2508300-28de-41e1-aac6-dad579e63cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069cbf84-450e-4bff-a2d2-c9eb845cad04",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18752ccd-7bae-4959-88cd-2c936d9fd827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b403738e-180d-4b14-9f2a-00540ef57ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf3dea6-1d76-4a39-9472-43d711bf018d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e81351-3f92-4393-8eff-e6635bb9caba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef79276-b872-4e33-8a02-fd9312059e84",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40cb0a5-8bbe-4874-a63b-62ddb44c4065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da94b50-b7e6-4c9c-8e8c-39026f392761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8ead7d-c7c8-4925-ad0a-a9d7d291783f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972eb413-a57e-4205-b895-c4e8384e6a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76617f81-46a0-4a65-a66a-449aad55a1a3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a78d5d-89ad-4879-9367-a9ee76501e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533c1c6c-715b-4114-951f-44ba5c65c0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1756c731-de99-492f-b153-ae145ceb2aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5151c059-9fba-4d3b-a047-4491a60fb269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c66f8f-94d8-4248-a7be-94cb53c557d0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d147c55c-6f20-419d-9fec-d6800aca7744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd56cb2-168a-4b04-85e3-4f0db225f7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73dea15-168f-45a1-9083-988572b71ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51be94c-0615-4397-b9e0-3567e579dbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ffac08-537e-4038-a671-e885c2989cbc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9477ad38-5003-435e-96d3-352b26daa3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664049e2-9c57-4aa3-877d-1237a3f0e650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d3e782-79b4-43e4-9ce2-926f562d3b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7feec00e-0943-4c9b-8c17-e9c5dd047f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e96c2fa-8a37-4009-9dc6-c36d1e50bbd2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb23d065-53b3-4f8d-b5da-c5471c3a4b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a24b31-f781-45c9-b6e6-d3515ea1e2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b3081c-6f0b-4d1d-b848-c6be03fd5b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8d4cf4-e0ee-431b-931c-29395670e822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5e601b-ccd7-44ba-9c5d-72baba6530f7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9472686-fa25-48f4-b6cc-ce70ef39a2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00e0a05-3f3b-44df-9701-f34f449b0029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4920322-d5c2-4d97-ab20-997f86b62c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807e651d-ec0a-4010-9959-45dfe7a038d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51a8c06-b355-4adb-aebb-4611499abcc1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b1240f-fc61-4927-94cc-82b508e75a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51490949-9f28-4283-9295-9483e1396baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e78303-b2ae-4fbe-b3f6-b88e02861977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a32094-0a36-489d-84c1-ff509744ec8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1618df91-616d-4dd8-be9d-0326476c60e4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7f06fd-65a7-42c6-879c-110100b193fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6d2094-8540-4d08-b8d2-d12eaacc6459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a86179-c789-4fe4-b2e6-0609c8e6b5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03b7b1b-f77c-43cf-8843-f80e179325f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6da44a-f0a9-4014-a449-73fc56d4c90a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f52cfea-de95-4292-8c33-7d36c5942e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b81ad0-c8fe-4382-9342-55c08c734bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a85cbb-ef9c-48cc-80d6-0fee4416c49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67ee7ee-546e-4120-9f46-22ecc98fdbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e9b1c8-2d00-477d-bf2d-8f53c474493e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff8030d-5868-4319-b712-fd737e5b5630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00224f9f-2829-48cc-957c-53294afa6e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6583e211-ea86-4268-bb74-be08984c7253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479fa89a-6a92-464b-aa82-22df95dbaf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1c9ade-9a1d-4e67-9b28-77e96c256815",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c79b3d6-b5a6-4777-9b2d-703e6e8679ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbfdb08-8e01-4acf-8d3a-93a0a218e0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc94170-48fd-4e6b-a409-7603f69541fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab22f9de-4d28-4b85-b84f-435957b1aee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffe9474-b367-4c17-8787-6c3f02e607fe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab954621-e54a-48fe-b356-babfafe5d96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88019d1b-cef7-4629-aba2-8c285c678900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fd9b2e-3048-4710-9305-244612ddc8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc451dab-6d5c-4658-a517-bce090ca2dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b516a6f-461a-42e5-866a-468c699e5b51",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30ec5aa-5756-498f-8950-40a3bf0007c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbbb125-7754-447c-98c8-67318ff08c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dda479b-d90c-49de-b183-469296df8cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfacd996-3777-4be6-8671-0bd452148f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7c9119-9478-462c-8c2d-a0009c8f3df9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb765918-c14d-40ae-80b4-cc5b27bad308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410190d1-abae-4608-abca-85cebb77df76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62c78b2-e8ed-4e7a-bf69-c44c9c434987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31313687-abb9-43f7-a119-a2b33cca7022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d3cd0f-3e5b-4a0d-8c56-1914adcceb1d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f354bba-3b66-41c7-82b1-01dc545dadc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30bb05d-0245-42d0-b102-efbfd3729b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab84c17-b68d-4a71-b301-31c9fd97d0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871b3431-6a5c-4a64-b4f0-30c13e8720ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276475ab-177f-4db6-a4f2-437df44f5273",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7c81dc-df94-4046-aeba-635b84bee0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617e1405-625b-4282-95aa-a9dffae7dfd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d4f9ff-2493-411e-91e8-2b88e038dcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6332ea10-ad47-41bc-8f47-e8a74a786c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cb718e-0077-4a3e-9ef3-728d720180ee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76b83c3-97cb-4aaf-a9cd-9f910156202e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c115b1-cd47-462d-8e2d-8887462173e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778b4a84-590f-4812-ad63-6a5f2c58e2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94102551-7510-4e39-838c-2e5a1685aad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55292e89-5a22-4cc9-8275-f03d8bff2654",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5a7c65-29bd-4e87-a1e0-4e61b31afd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce89a8b-4606-4151-97fe-4795c9e9579b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aaae10-75e2-4806-a584-d2a563c3d5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9306ec4-d0b7-4e14-b555-2a864cb7a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f01ccb-635e-4703-99a3-6c4db38705b7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3846e599-507a-4c98-a506-0967b721607a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035de0f3-65d9-4de1-b2cb-24069d0da5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaa43d3-1a34-4232-99e4-8fa69154a6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ee6bc2-11ff-4c04-9e65-b8996ae1f214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823354e7-10f3-49bb-86a7-c8247fcc15ef",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f78aa0c-4b87-46f0-901a-dbdb1e939238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541f5d3e-bf76-4f62-8669-f6bfd948a978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3493f4d9-7bea-4ed1-a269-089e9da3dcc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dffe7e1-cb58-4b88-980f-ec78071dd95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcda4c20-3e9f-427b-86f8-e024e51c9805",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a72a31-cc3c-45bf-a8db-29d10ddcc7f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e527f06-64f1-4f2a-9fe3-0fc80fcf2469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49e629b-1b0b-49d1-a42e-855a13610652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf0f8c4-580e-44f9-8da6-59c7001e73e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3847c0c9-dc4c-4efa-a440-f3cc3b75436f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47965815-65f0-4924-872d-aa98b8fd5402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8892f95-4378-4ffa-a049-517d6386d305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544cb277-1277-4353-b504-b2da50d33748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ff687d-8b39-483f-9581-55e534b40f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c00319f-cbce-437e-a161-a094891bb480",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33da7965-68e4-40c1-ac8b-4b94f20cbbea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db9258f-3b53-4553-b93f-b9730ddc75ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0313f3-5240-4fe5-9e9c-7ad71eb028d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738f532f-cb10-4e63-b1a2-00bd504965c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc5358b-cff3-476e-b9cc-d8d33bcff424",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fbc878-7a93-49e2-aa3a-e21e01318c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c8afb2e-9692-4b25-ae85-14d9d4817b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42ea838-ffb9-45a8-8a9c-a0930a55e035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08516801-8289-4187-a655-df9777c548cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2c799c-d92c-4a5e-9cb5-55bbf15ebef2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712741a9-3af3-4271-8ea2-5c05af2e812d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "706d3b8d-8eed-41b2-aa53-ed0f8bffee49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d428e797-f56e-4f81-9192-6943e45a3c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be094ac1-3739-4e24-9024-508fd31f2696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afe43db-b761-4e23-b401-8dd006d82245",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d21dec-58e9-47e2-980d-c9b3812fcda6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ad4305-a9e8-44a1-a5d9-870b28fc2853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a256b7b-41a9-4fba-8f62-0460578aa50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3023927b-9f59-4971-ab45-e5eb31ce1827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e9df24-f0cc-4eec-9a23-fb1d95962a18",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d0222b-aed5-488d-947d-0a14a01ca17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe6d236-420c-48bf-bb0c-826e13a4329b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec92444-07ab-49e0-b33b-955c92202d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65219c41-6ba9-4e07-8906-4d5cc48bad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276ca692-2f10-4a23-8824-92b55665688c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd682ee2-7e77-42ab-8073-4425bafeb95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22660d61-6567-4a93-ad9e-3dfcf0f01ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b24b1c-e38d-464d-959c-2f221275b1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5702fc7-8fff-494a-94e0-2845db342bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020fb5b8-3e83-48e0-a6cf-d0ecc927d39b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787ef18c-3702-43f6-bea5-cc3ce6e4ab5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bed6d08-f2f7-467e-a2b8-90aacdacc422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c9ed85-6715-49de-a013-ff8ce9b7d765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb31c58-b8f3-40f2-81bc-d8a2cb89ac5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafbf1a2-4350-402b-8d17-d9a6407ca59a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed60a56-17c3-4a54-adb8-7225f28a339d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23bcbe61-9a19-4316-8d51-c51a3c6b4a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad6267d-7582-46cf-8257-9006b627e4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c8448e-dab2-419a-95bd-71458926dc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93a5960-a988-47b9-a29f-813df20dc0eb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c917abba-f148-49f3-a9d8-ba66e341b618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5335cfec-8828-4786-9bb4-0982e2e17c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7319fb39-33d2-4390-88f9-eb0f7656faab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8f65db-b201-4655-a303-a4c919d951b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1e2653-8cde-4106-bd69-0b7c573460e2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c87d4e-ee82-4176-87b7-1a53c0f316a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a0c2c0-6950-4ee4-a760-ea084d902b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5bef3a-790d-4538-98d1-c2f1a64dccf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508f3c3d-8886-433d-8b66-9d321be6ea40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f792f43c-1d31-4d2d-8573-a430c22f5486",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fc1215-305d-4042-9175-7712bf845d15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f7ef75-c914-4dcb-bd8f-7fbe38daa4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f8766d-c4d7-4094-820a-620927d7d1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf48090-9792-4865-a6a0-35e90a155e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3625724c-3b84-4785-b14a-2f4398f79ff8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa0b6d4-9462-4233-b0c1-98c6c3acbfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7add0b27-32b8-4e9c-a844-e4a04be7b715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b8cb93-9a60-4472-ba97-2230e99915fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb3bf1f-133d-4479-a08c-6ff27601a909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b5760-cadb-4498-8008-14bbf08ab5b4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ddd217-0c03-40e7-87d8-f285a8809930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a02f70c-cf03-4e51-874a-8d321f7bc5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90502797-c009-4132-b829-415dd9b30f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f2b7a6-1f13-4dc2-9cc6-e13cf21619fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48646a5c-9c2f-4bca-93e0-8aa1afc052ea",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907cfb5e-9001-4acf-8da3-b48cdc840502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550ec76a-39f2-4386-bb1d-f35064d70b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e09b0bb-703c-49a1-9014-8e943e8ee214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5a1167-9c25-4838-a022-9678713de5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b1a466-5476-4fe7-a497-58f0402521d9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2344df-0947-41b9-8cc4-1a8af2742786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f81877-65ef-49d3-9546-f292f0e87eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f201cfed-b1a9-4b81-8a41-54f61567562c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7519f70-4a50-4ebc-8412-611ffd382fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1c24bb-4aeb-4df4-b3e0-3e9d6d0722f3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623425d4-65a9-4419-a5c6-2952c1594926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260a47f4-b452-4d45-a766-9b6ae89b8dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f193d04-cd7d-47af-9944-be673c6e4c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b39716e-ebe3-4b49-b04c-50671b22af9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2357a1e7-fb54-468b-b7eb-e6bf92156a3e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7b2c65-ed9a-4668-9e9e-5eb0a76ad8c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0174d747-5f67-48a4-b84d-15a51f480193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aacbbe-3bf7-4506-95d9-02a33dec51e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e37dab-13e8-43cb-b77f-f18696fafb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bae0fd-e0dc-42a1-bbf5-5d450c14d9b8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5f7ddc-09e2-4141-bff2-f65c10fe479e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f13240d-997a-4346-9ab5-d2f80604972d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46c044d-39b2-4641-b5be-94ab2c5b2f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72356a3-515f-4808-b369-58e5526764ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71da00a7-1692-4373-831f-674c6fadb48c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df18847-bce7-4bc5-b19a-7318f7ce3d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24f29b0-81a7-4f48-ac1e-3fd16ad54ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794dfc98-f879-4f74-a91e-1b096491d1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deddf789-19a5-487a-baf2-c7df3ba41719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbde94be-dba5-4bfb-8ee7-12a444e1eb9a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc91bad8-f248-43e4-ae63-42fa815b1556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d071bbaa-1cad-4a28-9cd7-64c5259cba44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487646fa-5b1a-4c28-aa37-d0af76c63831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc291b8-407b-4ebe-b51d-c70f308c61d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1542b23c-7f31-4cf4-b7d3-ce82691c8f8f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52110d5b-3030-4448-92ae-45ed738dc8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "634a19a4-da60-41ce-968e-e188502a92c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5f9c20-6dd0-44e7-9974-489acdc19c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b4f8f6-58d5-401a-86d3-88008517a01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d6cdf0-83cc-4cb8-b67f-a1a549549ea9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164f1f3e-c0b7-499c-b096-123a5c246dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995878f6-ea33-46b0-a1c3-780459fd5c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4548baf2-7fa9-4bfc-8ebf-c228447052a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448423c3-78d4-468a-b15e-395cc06fa367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa627ac1-f456-4817-b45f-a4d14b8a8e08",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafe7b41-e7c2-473b-bfb4-d04ae1726e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2325624a-b63a-4d99-b127-d2e6db7e6e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c588654b-b7f0-4a23-b6a3-4724cf01e5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085ef025-4992-4fee-9e2a-a41877f1be76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb08be18-bd03-4db3-9ae0-f6341070fa07",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a83c37-a878-4f96-ba53-4c4b9248e3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec4c9d5b-99e5-4e70-b57c-e61eff3c0106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fe362a-9296-40f4-a40e-7951022c9ec8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e9e653-3bff-4d25-a679-a38cf610d4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a761ecd4-788e-4696-b4b1-4d51d863b037",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af60b22-6881-44d9-8f1b-97dd47ca720a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7fa0f49-8e7e-45e4-901a-c3ad6a9483c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2085b5f9-4de0-4fd0-981d-8af2a1000172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe42ebc-8ee7-47b0-86cb-84a63850a1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a39404-68a1-420d-ab6b-4275ee899b69",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b616ed5-995c-4f90-8451-1155d69e20cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98bb1962-7c6a-4185-ba2d-314359e9dd92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753fa904-2a6d-4043-98c7-2d3867649764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144b7402-a156-4272-8f78-6ce891785665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac70bb1-a7df-418d-beda-1d8c0ff40c3f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad85eb5-83aa-42f6-80ed-52a0ebe4b1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "047ef83a-2566-44a4-a0e6-7ca664ba3fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c071eb-5746-4345-ab43-a1c0c8b5c6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc0a1a5-10f9-4010-8bb2-d947a7dd8ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abf65c6-a379-4197-9057-6d6f87fe7dba",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cef9bc7-c9d6-4f85-a560-9bb0cb5a745b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d9ebfdf-48f0-40d7-bb24-c65530754c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fbbf62-aae8-4d8d-9f59-9e5eb517ddd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0046012-0a3f-4f30-b054-d52cbf81476f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a70666a-e923-448f-910f-a6870262086a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebd50b0-abc9-472e-8c4c-2baae2db62e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9024e57-fd67-4d4d-a69f-875e6d0cf496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ffd469-ccc6-492c-998a-f3aff91557f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e986cd5-5271-4185-b30a-0862bba7c587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa753e10-16cc-4a48-8462-be4bbf279603",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b567af0-0181-42f2-a0b3-a8f4e2ad9261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95560c28-8127-400b-bd5b-c29d9c75cbfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfaa83c-beaa-4edf-bbdc-e20273f3579b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a65e2d-1fef-4584-adcf-201ffcfdf6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03792050-597d-4b2a-afd5-c77f1b926279",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3f399c-0243-48c1-b5c8-7b0f48dc604a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab542205-d77e-49e7-9936-10bc55b05eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5237d0-3a4f-4191-8371-4f67a48631ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafd4ee6-2fe6-4a7c-bc7f-7440bf91f5ce"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8835aec-3f4b-49f4-ac44-a7bc7ee2f573",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62a6d3f0-eaff-4db0-93c6-6e75bebb749b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ce9de2b-1759-460c-b5e7-d0fb54e960b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba2bc964-3172-4d7f-b277-22d1da649de5"
                    }
                  }
                ]
              },
              {
                "id": "875478e5-3376-42ee-8084-67b81696c7a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a52f319-ad04-4428-a687-34dcd45dc5ff",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9373c407-26b5-4a72-bd32-b713eb6596a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cd10a5c1-17d0-4636-82f9-ee5ebb5d7527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfc723b-e8fe-4f3a-8e99-ebca29229073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f448b04-4c84-457c-a2fb-b19ff070d2e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5895f486-6283-47d7-a02c-1753fc6f171a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "499ba76f-9be5-49e1-85f5-9cb382a6cb5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5020842f-2584-4471-9970-d4b117dc866c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e29841e1-96d7-48fb-b60d-569515895a88"
                    }
                  }
                ]
              },
              {
                "id": "c9fa897f-876a-451d-9845-c5f6df7d695f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7f0e86c6-b34d-4c5e-a5f3-f0fb1edbc3e3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffa08d6-de0f-4ed1-875a-69bf40bedffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6b8e86d6-b280-4120-b4e8-0c16cc878379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057f6bcc-9089-428d-8b5a-5d85a2134bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0680d98-4384-4f93-b311-36e796d40931"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "811444da-2811-4585-ab4d-459ebb939e22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c09fe92-7602-4aa4-8886-8bb8e8b500f1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5746dce4-c70f-42e5-87ef-74250f05c582",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e649605b-2596-43ee-938c-8da28ec9b4fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a553431-eb28-4894-bfcf-88b6d18f2c45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3b5b5c5-93a6-43d2-bc33-1d80c5a84500"
                    }
                  }
                ]
              },
              {
                "id": "71282cbc-5952-4f71-9c82-6e13e83029ba",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f17fe27-fb79-4eb6-8429-25b6a0aa1617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a2be7079-e7c8-44ee-9387-28968c8fa852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a9b6018-199f-4378-9fbd-12dfa37b3f27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd05197b-1979-4911-bc5a-07d872dc73cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c2f2d51-c137-402b-8657-b95e29ee28f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f49fa39f-1726-401b-ae62-2b3084c360af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9067a6d-1661-433a-8696-ed0f42c851bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5e07013-2e2d-428c-b75b-0767e03d048a"
            }
          }
        ]
      },
      {
        "id": "89f03484-e02a-4de6-8647-75ed3466b4f6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9e9f76ec-f46f-4994-ac59-ca7fa715672c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bb6e68d-7106-4633-bfce-95b4a89be2bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e051eb8-826b-47e7-814c-5848724ecd0b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42315c97-d28d-4a2b-853b-a786209b3c0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "584517a0-cf69-41e6-b1ea-f3938a981b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d189186-87e2-4cc0-9253-f0172112eacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "554648ab-4555-4565-944d-f4aa277ea1ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62b25aaf-f27c-4950-a476-3eba57351a1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a31a0524-4bb9-4b9f-b1d9-898eb6c4b4c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a321a78f-0a50-4ab2-a99f-73ccb57b5c2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dc24635-957a-4d1c-a097-4944fe1280a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2de35b48-64ea-4c81-afdc-41eaa756f269",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "70a8ce7d-11a7-4696-bc8e-77bc239d7054"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c021037-2fe5-4dee-987d-0a0a42be766f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69fdf238-6c6d-43e7-9735-be678d781221"
            }
          }
        ]
      },
      {
        "id": "e9f0e583-2aa1-41de-9c55-5e83daf831dd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6e7f2660-085e-485f-9ad1-de371240f2f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "491e25aa-2cf0-4373-bbbf-845bb93cb80e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2aa29d39-6bca-4d04-b97b-3f4caca7faed",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d448641-010b-4f52-a4db-2d7c7455529e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77252888-ad2a-454f-b743-3aaea8ff9e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213197ef-62fc-4bce-9fe8-e21392707d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14fb9f8d-591d-46eb-ada1-2c7aa29449b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b298b15a-f129-410c-9247-e7566c2b0420",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b843a19-3abc-4b9a-b107-71fa4a3d1e5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eadab0f-e14a-470d-96a1-d014db5258c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2423664d-85ab-4bfa-b75f-8abe661aa038"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edae7881-5431-4e60-9da8-83c237b846b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee907eb4-6d39-48bc-a879-a760c3007db4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "336f5da4-3846-4334-8009-d05f60e9319b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d80dea13-1aeb-4fc1-a7a7-1ae7278f91b3"
            }
          }
        ]
      },
      {
        "id": "57a25192-772c-4196-b0ab-0eab7ddcfa8f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c38aa048-d033-42a6-ae89-05877276c666",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c834bbd-e82f-4acc-9442-6e009b5169ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e19ccb37-1605-4183-b54b-b9bc0038fe72",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f489ba-1586-4034-9022-89b2289b03cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0f796fa-8741-49cb-b5e0-428b2eccb9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3466a9d-f0c0-4c3f-94b1-97c167ac4839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d38fb56e-03a1-4572-85c7-e7491ba0be5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "175a1144-bd82-4f99-8a55-9b4a68eec2ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2307ebd7-46e7-47e9-81ed-f7f23a435645"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8a8b26e-2835-49b3-a40e-94f3d020e0f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40c3baf9-9c19-4592-bf5a-e81650101f42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6525a9b3-faed-4f44-93df-ac4b94e9f30e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "081c7890-ece9-4237-8b68-81b0ee49636f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d36cc40-35eb-408b-8653-4ac0c76c5573",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "732010aa-5017-4691-bd79-99712cab945c"
            }
          }
        ]
      },
      {
        "id": "ea1e90c5-5c7d-4442-9cbb-00cf69cc6d7a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edb6123b-2274-4ba2-919b-8b227eeacc0f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f326ce8-0431-4844-a9dc-1fc50079fb5f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "513c8c5e-6bd0-4475-be37-8e9ebc3e48d2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4a8a22a-671e-4989-b12b-e5f38a309ccd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7feb481e-a717-487b-a840-1f10fdc4ade8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.7619047619048,
      "responseMin": 4,
      "responseMax": 9630,
      "responseSd": 653.729228066268,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714696667513,
      "completed": 1714696698257
    },
    "executions": [
      {
        "id": "3fa49595-2a5d-451c-a864-74c6c3bf92d2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4867da2a-d628-47aa-8488-94c938baaa26",
          "httpRequestId": "8a62ea2f-a729-4809-97b0-1a47df361adb"
        },
        "item": {
          "id": "3fa49595-2a5d-451c-a864-74c6c3bf92d2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3c94b7ac-a954-4ce5-aeae-02ac478d5f3c",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "e8826673-3fbc-4449-91b6-1d0a19804db1",
        "cursor": {
          "ref": "5feb49e1-5eb9-4467-afbd-4d2ace867cf8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4087e0b0-6a66-4b95-b0f7-b152087a996f"
        },
        "item": {
          "id": "e8826673-3fbc-4449-91b6-1d0a19804db1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8d786d75-6577-4ac9-ad91-642682dc8b1e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "1dc4cf84-c547-4dab-96b4-0af65e262fa3",
        "cursor": {
          "ref": "b2071932-e807-4f02-b6ba-ac558e0078a6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3b270291-67f3-4752-a705-5bf6f379d6d4"
        },
        "item": {
          "id": "1dc4cf84-c547-4dab-96b4-0af65e262fa3",
          "name": "did_json"
        },
        "response": {
          "id": "64a02be4-55e6-4b95-9c26-e0bbd9e093d5",
          "status": "OK",
          "code": 200,
          "responseTime": 191,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55fd612-3bae-4f53-9594-69cf95d38f4e",
        "cursor": {
          "ref": "b2da80f0-a443-43a5-8fa1-a8514df75ef9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d3904b0-0afd-41cf-ab1d-d214ed5c531c"
        },
        "item": {
          "id": "f55fd612-3bae-4f53-9594-69cf95d38f4e",
          "name": "did:invalid"
        },
        "response": {
          "id": "d7e16013-bb2d-4a9f-b23b-28b2e0fc2692",
          "status": "Not Found",
          "code": 404,
          "responseTime": 343,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55fd612-3bae-4f53-9594-69cf95d38f4e",
        "cursor": {
          "ref": "b2da80f0-a443-43a5-8fa1-a8514df75ef9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d3904b0-0afd-41cf-ab1d-d214ed5c531c"
        },
        "item": {
          "id": "f55fd612-3bae-4f53-9594-69cf95d38f4e",
          "name": "did:invalid"
        },
        "response": {
          "id": "d7e16013-bb2d-4a9f-b23b-28b2e0fc2692",
          "status": "Not Found",
          "code": 404,
          "responseTime": 343,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2823ba76-0fe0-4638-baa8-023d2e17bc2c",
        "cursor": {
          "ref": "09dc2a5e-17b1-4c4c-94dd-92839cdddf00",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d6e2353a-369e-4030-a6f7-7f3f1ce24813"
        },
        "item": {
          "id": "2823ba76-0fe0-4638-baa8-023d2e17bc2c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "08e5e816-3498-4fcc-ba63-7d75130eeb09",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf5e310-7d43-4b9f-9569-17737107cb83",
        "cursor": {
          "ref": "32d6d4e5-99c3-4065-b5d4-cbb5f720f708",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c582804c-9ea6-481b-8757-b1bb5be7828e"
        },
        "item": {
          "id": "edf5e310-7d43-4b9f-9569-17737107cb83",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e0026a27-ec81-49c2-94a5-6043cb5ee90f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef9a6ad-6915-4c68-a2ed-41d6a6594c19",
        "cursor": {
          "ref": "e12576df-f298-4688-bbe1-12f1e42ac5de",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2d29aec5-ac77-4e90-bf2b-91cf79023cb1"
        },
        "item": {
          "id": "fef9a6ad-6915-4c68-a2ed-41d6a6594c19",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "81130580-c0e1-43e1-99fb-79e5220e27f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e294c-4ea8-4ba2-be1c-909b8b6fb155",
        "cursor": {
          "ref": "26fd027b-2883-40cb-a9cb-5a1c44f6e574",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2f8804b0-21cc-4bc0-9643-d9867fdb43b4"
        },
        "item": {
          "id": "f92e294c-4ea8-4ba2-be1c-909b8b6fb155",
          "name": "identifiers"
        },
        "response": {
          "id": "a36b1c74-b2a0-47a6-aab8-d92f9f37e41f",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3547d16b-c34b-4e79-b8cb-95ad78e0b7c9",
        "cursor": {
          "ref": "a4c00f41-f618-4a97-bd47-019e534adbe8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f9038c00-a9ba-4af3-ad5c-f06293a3c3bf"
        },
        "item": {
          "id": "3547d16b-c34b-4e79-b8cb-95ad78e0b7c9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1fbb706b-5dde-4982-99a1-dcd21d595f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4f7176-664b-47b3-ac6d-035292ecb7b1",
        "cursor": {
          "ref": "aeff62c1-52a9-4661-b0e7-157974859a0a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dd82728e-eb7e-4d3e-8f51-93d4a1689c52"
        },
        "item": {
          "id": "bf4f7176-664b-47b3-ac6d-035292ecb7b1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c99bdc98-f8f1-41fa-b4ff-69baa308a2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a042878-5f52-468b-8091-7efa93a7568e",
        "cursor": {
          "ref": "88335798-09b6-44fa-a02f-c41e7c28a6c4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "60f72d26-8d60-4c51-8ed6-dc507a95042c"
        },
        "item": {
          "id": "0a042878-5f52-468b-8091-7efa93a7568e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1880a4cd-ef60-4d8d-93c7-c57e14d5184c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a347377a-39b3-40d8-affc-14fcd28a0669",
        "cursor": {
          "ref": "6eac47bb-53d5-420f-87b0-4db47d7634be",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a75f7439-6902-496b-a69b-4195bbac34e7"
        },
        "item": {
          "id": "a347377a-39b3-40d8-affc-14fcd28a0669",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c011f97b-ae00-4881-aa69-ddeb8d510359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f531cb-01e2-41be-b425-7106fb45c482",
        "cursor": {
          "ref": "26d4ad5e-c4fe-42bf-ba4a-e8afe3562987",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c5754f88-5962-4775-8ac2-b5e4f73f6220"
        },
        "item": {
          "id": "c1f531cb-01e2-41be-b425-7106fb45c482",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3e4fe383-af8a-4a06-b67a-2f4b830293a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c140a586-61de-4d20-afda-cdad56913e4f",
        "cursor": {
          "ref": "a1906a9b-53e8-4d57-ab20-eb10e78ce1b3",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "771ba549-9ec6-4677-a599-dad3f378376f"
        },
        "item": {
          "id": "c140a586-61de-4d20-afda-cdad56913e4f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e807eb97-2a0f-4381-a330-507d794f45e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0efa09d-175f-4229-b87c-f795c9701751",
        "cursor": {
          "ref": "b0aa8e26-ccf5-4e8b-8dac-3ee2dfd42f84",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "693f7c86-7b95-4897-9ac4-9f3e6b2f1516"
        },
        "item": {
          "id": "f0efa09d-175f-4229-b87c-f795c9701751",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "941018d6-77a4-493e-883f-3eb3b9d1a3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fc0fe3-7219-4b2c-ba6e-caa3591a3f1f",
        "cursor": {
          "ref": "7c6c43c8-fe69-4852-8fbf-93ae227ed963",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4815af5f-38c2-408d-b590-a82a466e46a4"
        },
        "item": {
          "id": "c9fc0fe3-7219-4b2c-ba6e-caa3591a3f1f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5d725aec-dd04-4bd3-bffe-fafe03cf25e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcbfcf4-ec68-437a-b987-2683a1ca033d",
        "cursor": {
          "ref": "9e8523aa-fc77-40a5-988d-66e943361515",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "83a04aeb-69b8-41b6-84ee-d54260292070"
        },
        "item": {
          "id": "2fcbfcf4-ec68-437a-b987-2683a1ca033d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "94801c4f-2569-4679-8d03-2dc3a3d258f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1a19a3-993d-4b8d-af59-ec0d8f654502",
        "cursor": {
          "ref": "860ab543-4b66-4dbb-bfdb-006056fc62f7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "91768f8e-863a-4487-8373-7b24cbedff0f"
        },
        "item": {
          "id": "4d1a19a3-993d-4b8d-af59-ec0d8f654502",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c0439797-5b25-489c-a494-4d0546ba472f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0495e75-4c16-40a7-a8ec-b316a6f8888f",
        "cursor": {
          "ref": "e81d9f48-acc8-46d7-89d1-a5b5e9dd6f03",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ff5621cc-97ee-40f9-a83a-b7bba952f92b"
        },
        "item": {
          "id": "c0495e75-4c16-40a7-a8ec-b316a6f8888f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d23a28d7-5201-43f1-9601-c47ee4a6a5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cec98fc-b3f5-4bf7-9bb5-57b1580c8745",
        "cursor": {
          "ref": "5b3fecd3-85c7-4129-a071-63939f66e350",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "821b4801-9c9f-480f-af7c-3c055787d11d"
        },
        "item": {
          "id": "4cec98fc-b3f5-4bf7-9bb5-57b1580c8745",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "20be0ce0-dbda-484d-9c56-8983db4a271d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebe28d9-5486-44f5-8428-69edcdafba92",
        "cursor": {
          "ref": "0e2cda60-62ec-476a-9f05-5ac4dd1504b4",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b941aa4a-1a5d-4bc7-8a5c-0abee156f677"
        },
        "item": {
          "id": "9ebe28d9-5486-44f5-8428-69edcdafba92",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "394cd71f-a4be-4a02-9e7f-d815e294eedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd918727-559b-47a1-b43c-bdf5570c903a",
        "cursor": {
          "ref": "5970012c-8448-4313-8ff1-a4bf73161e45",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "336023e2-67e6-4d4b-af2c-37b7aa168e16"
        },
        "item": {
          "id": "dd918727-559b-47a1-b43c-bdf5570c903a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a109a7dd-5666-4a78-a66c-cc9a588cfada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c204fc-7fcb-4847-bb3e-a17a638ad3bb",
        "cursor": {
          "ref": "fb1728a9-1840-447f-b38a-6563f5d70519",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6f985298-4b9d-4d96-ae6a-92c3cb6fbba7"
        },
        "item": {
          "id": "e4c204fc-7fcb-4847-bb3e-a17a638ad3bb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "625fff48-11ec-47f1-a56e-f68a18b02a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f791b954-4134-48e2-81ce-c40a60c72fc1",
        "cursor": {
          "ref": "14dbb126-763d-42b1-b79b-229bacfbbe27",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4c1c624e-ba1b-48d1-b1a9-3fedaf6b4362"
        },
        "item": {
          "id": "f791b954-4134-48e2-81ce-c40a60c72fc1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "27e3d1a1-b285-4197-82e7-41d797565f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc9ef3a-3264-476b-ba8a-4e7c8aa9660d",
        "cursor": {
          "ref": "7204e660-4092-4794-a1da-6ce68481c9f4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9441a6d7-2d41-4ab7-9f8f-5271f1925026"
        },
        "item": {
          "id": "dcc9ef3a-3264-476b-ba8a-4e7c8aa9660d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "28d13df9-4de4-4064-9d86-944dcc7ca0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c83bc1-e69d-435c-909b-c5b0140a2e49",
        "cursor": {
          "ref": "4b100e01-115d-4558-93f6-045797eb8883",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2b51d0b2-ba0d-4ed0-a66c-fa12d8e3be7c"
        },
        "item": {
          "id": "00c83bc1-e69d-435c-909b-c5b0140a2e49",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "562b6b56-033f-4221-b4cb-7bd16ef9c54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed33898-f4b9-4021-becc-a4a040db9ccb",
        "cursor": {
          "ref": "7b5c4f3b-dec5-4097-af6d-51f102ac4475",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9371acb7-735c-4b60-a0d4-5c7c74ec6ce6"
        },
        "item": {
          "id": "fed33898-f4b9-4021-becc-a4a040db9ccb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1753fe53-c548-441f-8a43-651bc85e4e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b254ed18-1c8d-46ad-b608-014fef0963b2",
        "cursor": {
          "ref": "593928a2-7c79-4bb0-b32f-4308bf855354",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4e5457de-fc32-4f16-8856-93c25b300aa4"
        },
        "item": {
          "id": "b254ed18-1c8d-46ad-b608-014fef0963b2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b0d71032-f49a-4886-949d-4de3ae82aa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb3278a-cbb1-4ee8-b364-33b6b940d317",
        "cursor": {
          "ref": "08ec445a-bdc8-4567-a294-c3e1a1bfa671",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05c17a09-a49b-4dea-bca7-0aa1c457d98f"
        },
        "item": {
          "id": "acb3278a-cbb1-4ee8-b364-33b6b940d317",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6fdff868-3862-43fc-b812-f8605886e16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc1c8bf-5942-445b-bcff-0892148af104",
        "cursor": {
          "ref": "972990d7-cfc1-4b03-95d2-80baf75570a4",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c8150c82-fccf-4f14-830b-b0b5c44058b1"
        },
        "item": {
          "id": "bcc1c8bf-5942-445b-bcff-0892148af104",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ec494261-83a7-4a27-8485-d7664f16abdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950df6d4-296b-495d-9ba5-398921487d6c",
        "cursor": {
          "ref": "56f02743-81da-42e8-b903-83e8d941a972",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "152f3594-542a-4cda-9275-d9816ceed2a3"
        },
        "item": {
          "id": "950df6d4-296b-495d-9ba5-398921487d6c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c9c4fb2c-1a24-40a5-a1b1-acea59a50485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349fd9ea-261d-4e42-85f9-65317d4d19ec",
        "cursor": {
          "ref": "cbdfa906-0667-49f5-bfd3-b53d7e71a8d9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9b909080-d660-471f-bcfc-c3a8c02ef8fe"
        },
        "item": {
          "id": "349fd9ea-261d-4e42-85f9-65317d4d19ec",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "13e73127-9175-4619-9d69-b92d1cabe972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc27fd6-e17d-493e-8411-2a1f439c7795",
        "cursor": {
          "ref": "0bb96454-cb07-48f1-99a7-c88931cb15ee",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7bef1382-83d4-42cd-aeb7-f984fa70ab84"
        },
        "item": {
          "id": "fdc27fd6-e17d-493e-8411-2a1f439c7795",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c6ed2436-b6ae-4a68-bc59-e5005dac3554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2266cc-0f6b-40f7-9fc5-9dd5feb1b6b2",
        "cursor": {
          "ref": "f5ebd18a-4486-4462-bd95-17bc2e889c62",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c2a93f29-2677-4e4c-964d-6bce95a2ac52"
        },
        "item": {
          "id": "4a2266cc-0f6b-40f7-9fc5-9dd5feb1b6b2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "99d801c2-faf0-4895-9a8e-7c59017ada5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccc7ac2-129b-4798-9e44-93ada25745a4",
        "cursor": {
          "ref": "12512ef4-9e49-4e46-8953-b5aae59db401",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "db9d22e7-045b-4c1c-a6fd-c5fd313b3835"
        },
        "item": {
          "id": "9ccc7ac2-129b-4798-9e44-93ada25745a4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "095959f2-b206-4fea-b4da-2fb2b1b9a62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdbd643-6ff8-4e22-b9e8-c5c74ca19097",
        "cursor": {
          "ref": "9ab9a6a7-0051-4ee3-9eb4-2dd4dcd5590a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2d1c8951-13c8-42da-bf2d-38cb2d7e7754"
        },
        "item": {
          "id": "5fdbd643-6ff8-4e22-b9e8-c5c74ca19097",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f9729a0d-d130-4378-9758-0e7239355c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad52783-3fda-46ae-a99e-a27439c3f502",
        "cursor": {
          "ref": "246f9630-555b-44df-9568-d8c61f15c64f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1525d692-2979-4065-b8d1-90b35bb60f1d"
        },
        "item": {
          "id": "6ad52783-3fda-46ae-a99e-a27439c3f502",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a662ea4c-5500-4a1c-ab39-2ca1c0db58ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37be5f43-7d09-4874-b169-4b083267b93d",
        "cursor": {
          "ref": "99e535b1-74af-4fb7-bd02-b59099e14517",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "01e17635-59a7-4cc3-af12-c7a7519bfb56"
        },
        "item": {
          "id": "37be5f43-7d09-4874-b169-4b083267b93d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "571efb1d-b6d8-437c-b2b7-24561cff5adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a23113b-0f33-4734-81ad-ecefad4abaa5",
        "cursor": {
          "ref": "f8de2525-0d7c-41ca-b8b6-fc6a7c62c22d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4d483a25-002c-47c4-bbbc-9b8151a03341"
        },
        "item": {
          "id": "2a23113b-0f33-4734-81ad-ecefad4abaa5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "46a061db-3607-43ee-9ac3-30890f640a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f743fa6-5f5e-4c66-9f1c-363cf024d658",
        "cursor": {
          "ref": "82054d51-6ca9-4811-b70f-ed79cbb8b622",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c8b18dcd-ded2-48c1-be42-8b421db05413"
        },
        "item": {
          "id": "3f743fa6-5f5e-4c66-9f1c-363cf024d658",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8ba5590a-b0e3-499b-883a-66d9faeffb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc429192-59d3-4b73-9c31-8f4643de172e",
        "cursor": {
          "ref": "6bb89f2a-f760-4bc8-b012-56e60ca8328c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c28696fe-5e39-4d9d-92e1-bdfaa43fb133"
        },
        "item": {
          "id": "bc429192-59d3-4b73-9c31-8f4643de172e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c023c065-0a96-45e6-82bc-d20bede53e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e283b68-9a30-4bfc-b18d-5aaa82f68d11",
        "cursor": {
          "ref": "895508da-89fc-44ec-a507-d2b281a3db02",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bacdd537-cf28-4e19-8ae4-e4a68fe29c22"
        },
        "item": {
          "id": "9e283b68-9a30-4bfc-b18d-5aaa82f68d11",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cec48fad-f2b7-48b7-936a-2d712b32a754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b0d1c5-3f1c-44f3-b3ca-82595f8718df",
        "cursor": {
          "ref": "8b4c476c-467e-4df5-b339-a97b4b03423f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eadfc316-e260-4dda-bd8d-83e806b9b040"
        },
        "item": {
          "id": "c0b0d1c5-3f1c-44f3-b3ca-82595f8718df",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "47a86f96-98f1-4197-8a8f-2f381fbf6f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091b32e7-e209-42bc-8323-54e2ab5d58cc",
        "cursor": {
          "ref": "d88dbaad-5073-4c02-a578-e1c70c44fc7f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ecd60c64-9d7e-47f0-91b1-437d5e08f5ab"
        },
        "item": {
          "id": "091b32e7-e209-42bc-8323-54e2ab5d58cc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3fd43c47-bda7-4e39-a7f5-8777302da49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79aa875c-3bab-4bdd-bd53-a0e36da7cbd5",
        "cursor": {
          "ref": "b80b1059-2c32-48b9-813a-c0e4d4926083",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7f62a83b-0c9b-4488-a9a1-4e320225344c"
        },
        "item": {
          "id": "79aa875c-3bab-4bdd-bd53-a0e36da7cbd5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "31a250cd-6e10-49e5-8801-efd4f6cf60df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6041b5-22df-4063-addb-423d61d5a240",
        "cursor": {
          "ref": "fa866307-91d8-47c4-bd3b-84f90741a36a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5bdc8d95-9717-4e3a-a0f9-dfe65485148b"
        },
        "item": {
          "id": "7c6041b5-22df-4063-addb-423d61d5a240",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f55baff6-ba37-42fb-9ee3-20c3a2aeedfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89ef112-a453-47a4-8d5e-312380fbc1cd",
        "cursor": {
          "ref": "ac321d25-2d6c-4143-8d50-12b278fcc20a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d70d085f-2e0e-4cef-93d1-8c2ad73d0e4d"
        },
        "item": {
          "id": "d89ef112-a453-47a4-8d5e-312380fbc1cd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "44063dc0-a09f-43dd-aa53-2036de453143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351ca719-0301-491c-97e5-4a3e236b9015",
        "cursor": {
          "ref": "14fd569b-cd81-4eaa-92c3-7befa39e8bcd",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0a2bf1dc-d45f-4165-af0b-44ff5a53be8d"
        },
        "item": {
          "id": "351ca719-0301-491c-97e5-4a3e236b9015",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b0c7cd74-7696-4a52-8f0e-dd5b7d80b035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbd58f8-4069-49df-9b60-eba4a4aeb2cc",
        "cursor": {
          "ref": "c30f9672-c551-4cd4-857f-9b0c93f66ace",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ed428044-47d0-4aee-8891-d9373e83ed0a"
        },
        "item": {
          "id": "3dbd58f8-4069-49df-9b60-eba4a4aeb2cc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7f34dcff-73d9-4f6e-bac1-f8c386cdc8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52820339-5eaa-448c-a526-01e531e320e9",
        "cursor": {
          "ref": "5af80da0-3271-48f6-9bfd-c63aed7f3ca8",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "badfa91e-456d-4c5d-8435-de8541504cd0"
        },
        "item": {
          "id": "52820339-5eaa-448c-a526-01e531e320e9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "09780e13-3ba9-4566-b897-635caf72f78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc171b47-7c27-4c47-80fc-5e2868dee8ec",
        "cursor": {
          "ref": "96455921-051c-4fe9-9543-311dc647ac85",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "22a0319a-5f9d-4088-931b-8aff5d03bd2f"
        },
        "item": {
          "id": "bc171b47-7c27-4c47-80fc-5e2868dee8ec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5a602c25-e778-485f-843a-6c5ddecb985d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce58ca61-328c-402a-baf5-b7ca71aaf58b",
        "cursor": {
          "ref": "1021c712-1ea0-4d02-ad1e-c9236cb87793",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "536561e8-52fe-458e-adae-28061a32ca2f"
        },
        "item": {
          "id": "ce58ca61-328c-402a-baf5-b7ca71aaf58b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1d1aef23-ae8d-4c38-acc8-f43c002b5577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1926d5-dc2e-48f8-bf36-ce72dc0bc34e",
        "cursor": {
          "ref": "2408dc6c-0ef1-4a2a-906c-59039ce900cb",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c98e9a69-4983-4de9-8db2-a75e64b137d7"
        },
        "item": {
          "id": "0c1926d5-dc2e-48f8-bf36-ce72dc0bc34e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "16c188e0-fbda-4b94-804a-f2eeaabc23ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe4b07e-fd63-4d8d-b971-677912dd556f",
        "cursor": {
          "ref": "f5225dbd-c78d-4b4f-9327-d4f7b8963ea1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8f5da759-1409-49f8-a558-8e673a7eb8f9"
        },
        "item": {
          "id": "cfe4b07e-fd63-4d8d-b971-677912dd556f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "26dc2d77-fb54-4afc-a7bb-2554b6d849cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450c680c-66be-4a80-9965-8a48705b58db",
        "cursor": {
          "ref": "66c635f9-374e-4553-9893-8719d14851d4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "10be8a9a-a3fb-4ad1-8392-32855a7750ff"
        },
        "item": {
          "id": "450c680c-66be-4a80-9965-8a48705b58db",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2f55840d-b89c-4f1a-92d9-cf9842868c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521a4965-3e85-40a2-97aa-bd27167ff298",
        "cursor": {
          "ref": "88db88e8-645f-43c0-adc2-d0501ed121ae",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "568131f8-b57d-4b54-a768-310c98b16efe"
        },
        "item": {
          "id": "521a4965-3e85-40a2-97aa-bd27167ff298",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "080a5d8c-1a24-4929-bf84-176b5b56ad6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7537181-fa30-4d4e-863b-98afa80c622b",
        "cursor": {
          "ref": "07fca9f2-d6d7-449d-9235-deaeec41f0be",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f9df06f8-d060-4a50-90ab-fc2ceb5a58aa"
        },
        "item": {
          "id": "f7537181-fa30-4d4e-863b-98afa80c622b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f8f6dea2-c814-42b2-86bc-1dde5c955685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb4d89b-2116-4487-a6ed-41664075094e",
        "cursor": {
          "ref": "bb2efd5e-0972-453e-9732-19b3e0bcec4c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1c832bc3-5be9-4d3c-9037-b8c3f783df4d"
        },
        "item": {
          "id": "cbb4d89b-2116-4487-a6ed-41664075094e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "84bd6362-a841-4737-a718-3c94d25fa941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f4681d-7aba-4fd7-8d04-d30d386a8474",
        "cursor": {
          "ref": "084b22b4-91ac-4eae-900b-572302e1ebc8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2c00d133-2eed-4dcc-af23-b3ca9421aa0b"
        },
        "item": {
          "id": "48f4681d-7aba-4fd7-8d04-d30d386a8474",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6e33335c-0cdd-4a0b-8661-a990a0f062a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3547e297-2c20-4aeb-a64a-39de43772ea3",
        "cursor": {
          "ref": "ee065943-4d86-4cf2-a5e6-7af1822bbaa4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08fcf599-cac0-474e-bfd2-4b3e67cf56cf"
        },
        "item": {
          "id": "3547e297-2c20-4aeb-a64a-39de43772ea3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "929a626a-8e93-4e5d-89c2-414576707d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b2665b-6e1b-4882-b9b6-705d8e522796",
        "cursor": {
          "ref": "c30fc3a6-0e70-4df5-b256-bad82890ae93",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a7997120-0d9f-49b2-9eed-45f661e2563d"
        },
        "item": {
          "id": "99b2665b-6e1b-4882-b9b6-705d8e522796",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f43fabed-6715-4a6b-b545-39e32bed4f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56adedab-c452-4d13-a883-0f49acc5f745",
        "cursor": {
          "ref": "ec0b4614-446d-41db-bace-9c091e2c9d9f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bdca3e9c-dd1f-427f-85e9-3174bb4112cd"
        },
        "item": {
          "id": "56adedab-c452-4d13-a883-0f49acc5f745",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "053a4d18-22f6-45b6-ad58-d3fd36cf7a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ad703-15ec-4f32-813c-1d9bca34dbc1",
        "cursor": {
          "ref": "4fecd75a-596d-4fee-9434-157a475b13c0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a7855fef-6457-4cec-990d-711a52dbba44"
        },
        "item": {
          "id": "413ad703-15ec-4f32-813c-1d9bca34dbc1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1eae4689-552a-498c-9d21-26bc7e2c097d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ba622b-ac73-4e74-999f-4e729c43d651",
        "cursor": {
          "ref": "cd67bd91-43ff-4f6e-8f20-1691422f09f2",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c41d9013-15ca-42a0-a4d9-7f52a92e1e9d"
        },
        "item": {
          "id": "74ba622b-ac73-4e74-999f-4e729c43d651",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "04949656-7e45-4cd9-b03b-2305fe3bd276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46663c51-a3f2-4f19-8793-d70784ed1456",
        "cursor": {
          "ref": "3cf155b5-8c25-446c-a471-e69a7ea08aee",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b824b2b1-0de4-42bd-9876-03e37646a763"
        },
        "item": {
          "id": "46663c51-a3f2-4f19-8793-d70784ed1456",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ab863b6-8b8b-4fd9-976e-b5afad891250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71a7801-07f4-404b-99d3-696ddf92d56d",
        "cursor": {
          "ref": "2ee3ced3-77a2-4adf-a410-cbca54cd3dcb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8976e1fd-90aa-4145-83e4-540d3e700a3c"
        },
        "item": {
          "id": "f71a7801-07f4-404b-99d3-696ddf92d56d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6189b3cb-9e79-49e6-b6dc-406654fc7eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba869262-4517-4159-b993-2b6c447aafdf",
        "cursor": {
          "ref": "844baef8-1102-4235-a0e6-60a60744efd4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5264f73b-794e-43b1-8a01-ebeeddd7f2b0"
        },
        "item": {
          "id": "ba869262-4517-4159-b993-2b6c447aafdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e53dfa38-b041-4a97-9a55-7470c757ded0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c2a69c-0f89-4aa7-adcd-9b27add0276e",
        "cursor": {
          "ref": "d9690618-fc6d-43f3-b2b7-5615c78e11e3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9e7cb741-1b3e-424b-8af3-13f950a3f946"
        },
        "item": {
          "id": "a2c2a69c-0f89-4aa7-adcd-9b27add0276e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "68e1d1cc-65a7-4e4b-84ad-c5abc28a6684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bba6f62-ba3b-4951-8d74-908b0940dd53",
        "cursor": {
          "ref": "13cf6da4-ed3d-4150-aa66-dcc0c0386e8c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "acdaf9bb-2cd5-4abd-8412-45a613cf9310"
        },
        "item": {
          "id": "4bba6f62-ba3b-4951-8d74-908b0940dd53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fcb3eac5-32c9-4daf-a5dd-ea60290097d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aad543f-69bd-4ed6-8afd-9201d7074123",
        "cursor": {
          "ref": "fd309455-eb37-4aeb-9031-9e9aa3660f22",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4f6b1bc7-469c-4ba4-ba67-ca38abe6f69a"
        },
        "item": {
          "id": "4aad543f-69bd-4ed6-8afd-9201d7074123",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "85c7e930-630e-461b-9320-5e2017696223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7377566b-8aef-46ff-bed9-57533b485a0e",
        "cursor": {
          "ref": "12c335f3-1629-4388-a9d5-1ec09b09e12c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "277ce078-1f2a-4b55-a990-e1effea979ac"
        },
        "item": {
          "id": "7377566b-8aef-46ff-bed9-57533b485a0e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f93067a8-9932-4b1c-b034-0fb6efa24959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214e792f-9cef-45cb-ad48-2920a2c9afae",
        "cursor": {
          "ref": "1b1dac33-f914-43f7-a8e4-9e33d1e2c0d0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3918419c-37ef-46f3-8c7e-6bfb9d66816a"
        },
        "item": {
          "id": "214e792f-9cef-45cb-ad48-2920a2c9afae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fbe71cb6-fca4-4224-9352-cf0caf113e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2412175-b0c3-4358-85e3-8800e25e9534",
        "cursor": {
          "ref": "1ada860a-d48f-4a76-8011-4d5189e09343",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "814653cf-4101-4434-bc7b-7ff643900eb0"
        },
        "item": {
          "id": "e2412175-b0c3-4358-85e3-8800e25e9534",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "218fa7fb-5722-4a09-ab5c-ac320bfdc98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c97c83-54d2-4606-81b1-a62c93c149e7",
        "cursor": {
          "ref": "62ef4f90-8cc9-4c90-b50d-6d701cbb5a08",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d1720635-9cbe-4d1e-b8a8-97949a5b3556"
        },
        "item": {
          "id": "12c97c83-54d2-4606-81b1-a62c93c149e7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4971814c-31be-46c3-b741-2e42a2618c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03704f20-110c-42d5-8d7e-a80c4a55cd06",
        "cursor": {
          "ref": "7905f1a1-4c0b-46a2-9468-fcb0b4757072",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6100575f-1af9-4fd5-8578-7280ec74340d"
        },
        "item": {
          "id": "03704f20-110c-42d5-8d7e-a80c4a55cd06",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "21c515a3-57e5-44b6-85b9-ceafc34f901a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e644fa1-5514-46b6-a0ca-9642ad3e1ef2",
        "cursor": {
          "ref": "2d3cdd93-714b-4af4-80b9-a6886c88f688",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7c6a999a-195a-4fdd-9197-bb9f34a23c0c"
        },
        "item": {
          "id": "0e644fa1-5514-46b6-a0ca-9642ad3e1ef2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "91fc4081-8edb-4174-82ab-1aaaafb02625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c13d7c8-9bef-4c25-a93f-1e74b0a55888",
        "cursor": {
          "ref": "5d416452-fed7-4693-bd6a-89698e6aab0d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6dbc566c-23e7-44d2-a1cb-0079480415a3"
        },
        "item": {
          "id": "4c13d7c8-9bef-4c25-a93f-1e74b0a55888",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "53914aa9-70d8-4725-8d65-c6f776b7ac01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5622036a-f194-43b0-bb8c-7e761548436b",
        "cursor": {
          "ref": "ca4fdf42-bfa5-4daa-b43a-3699849bed99",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dcbf4649-a91f-4949-ab42-9e6bc8bdd2e5"
        },
        "item": {
          "id": "5622036a-f194-43b0-bb8c-7e761548436b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "89aa5334-498d-43e9-9cf1-12dd421d45fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fb1415-d8f7-43a6-b00c-9ed0d145b62a",
        "cursor": {
          "ref": "109d55fc-f91b-4d59-a2e1-1e79ae233f0d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e1e894bb-f66b-44a1-af2d-52af5ba9a6cf"
        },
        "item": {
          "id": "75fb1415-d8f7-43a6-b00c-9ed0d145b62a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "35c09947-7466-47ef-abeb-78aa5227d92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297bc7ff-fc20-40ce-a2cd-584eb3e962ee",
        "cursor": {
          "ref": "556424e2-af65-446d-967d-b88cb4e4126c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "76a83def-52c2-458a-9595-aade9063241a"
        },
        "item": {
          "id": "297bc7ff-fc20-40ce-a2cd-584eb3e962ee",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5cbebcf4-8a99-45fa-8ca3-d053c6a29eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7953c4bb-f562-4c92-8a24-2b310277e574",
        "cursor": {
          "ref": "8413e77b-3230-462a-85ec-149de299fae2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e13d61f2-2f27-42ab-8990-73a62a373820"
        },
        "item": {
          "id": "7953c4bb-f562-4c92-8a24-2b310277e574",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4e2ad3ca-05eb-4c6e-93d3-c160256a1221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beeab33f-1bd1-4554-86cb-835278a059e8",
        "cursor": {
          "ref": "b13012c7-bccf-4dcd-ac31-0871f85d1c0c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "26fc2080-633f-4633-970e-88df831d9741"
        },
        "item": {
          "id": "beeab33f-1bd1-4554-86cb-835278a059e8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a692740c-a564-4f2f-95f9-45282b85d1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd1f11b-988d-4072-a2ba-6731d75978ce",
        "cursor": {
          "ref": "0a6ae95f-46e9-47f4-8691-d3c1214fbd5d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ec34dfff-9256-43b6-8984-31ca35a5dc88"
        },
        "item": {
          "id": "cbd1f11b-988d-4072-a2ba-6731d75978ce",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "31f4d279-b8c6-4da4-9a78-8b854d5d2756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7503df8-0fe3-4adc-ac19-a5ef3128b15d",
        "cursor": {
          "ref": "b9e39acb-31d6-45a5-b4dd-c4c33e089b9a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4c540069-b667-41da-9eb7-add4db5b8607"
        },
        "item": {
          "id": "f7503df8-0fe3-4adc-ac19-a5ef3128b15d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1ca1b240-5c45-4f2b-8a95-c1d860b78d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05379a03-679a-411a-905a-e5c7869b1807",
        "cursor": {
          "ref": "61f4dcd1-6cf1-4837-aae7-cb6c6238162a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cc625230-490c-44cd-a1cf-3f055f3eee4b"
        },
        "item": {
          "id": "05379a03-679a-411a-905a-e5c7869b1807",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9a9863bf-a54e-438a-b088-cc170ce2a800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6d71e1-11e5-4464-b438-a3793c1878c5",
        "cursor": {
          "ref": "35c8b452-ee23-4fe6-8f6b-470d5492196b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "28db4da6-9952-419a-8071-fd506799b75f"
        },
        "item": {
          "id": "ff6d71e1-11e5-4464-b438-a3793c1878c5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9d4c894e-963e-4dd9-ae17-7c7dbef5acdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6347937-e6ed-4dca-bb0a-98fc5cb403a5",
        "cursor": {
          "ref": "d59c3a8d-e0d6-4d32-a3eb-792faac45ee5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c9e9dff3-b373-4ec9-b930-ff17f534c7c2"
        },
        "item": {
          "id": "a6347937-e6ed-4dca-bb0a-98fc5cb403a5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fc9e5e96-2bdf-40eb-978e-5bf582e3a246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0289bb5-8c2c-4dce-83f8-216da06ee4f5",
        "cursor": {
          "ref": "54e276c1-baea-4ad9-b76a-bd660c4b3114",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "501f70e4-89e0-4856-a596-a592c1e6d7eb"
        },
        "item": {
          "id": "e0289bb5-8c2c-4dce-83f8-216da06ee4f5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a2079b90-b508-450c-b8a8-7a7adbcec63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdb4572-8cb5-4acf-9b57-cccf82b53c8a",
        "cursor": {
          "ref": "a430fc64-2938-42f7-a644-598e185531ec",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bbf8a080-0200-462f-acd3-411163a405d5"
        },
        "item": {
          "id": "1fdb4572-8cb5-4acf-9b57-cccf82b53c8a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "be3d19c1-6b64-4377-ac97-1dde15f1c56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e694a8c1-ef73-4ae4-8db7-d7622ec2d00f",
        "cursor": {
          "ref": "4de96649-9032-49e8-a7ef-37ee85eedcd7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "90ee13ea-5298-4ea0-a0f3-c822cfce319c"
        },
        "item": {
          "id": "e694a8c1-ef73-4ae4-8db7-d7622ec2d00f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d84c5fe5-7774-4ee6-8310-45479cf97126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41122bd5-6cdd-4a03-bfc4-12f8172bc431",
        "cursor": {
          "ref": "77124380-0e1c-4e6e-bfdb-4704fa266788",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f10e563b-8b58-4413-84f6-c5d28445723f"
        },
        "item": {
          "id": "41122bd5-6cdd-4a03-bfc4-12f8172bc431",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dcbc8252-dca1-40f4-957d-a13826bbd7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a08220-1c89-4330-8b98-a02e021f9294",
        "cursor": {
          "ref": "3da3b6ac-2278-406b-9b36-69b2e8b7d217",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d9ab0468-4ff1-4aa1-9ae1-3c4bc21338c1"
        },
        "item": {
          "id": "56a08220-1c89-4330-8b98-a02e021f9294",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "73f90b1b-cc95-45e3-9478-baaa985b6fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb9d87a-7245-4b59-bf2d-3281ef6cd9f9",
        "cursor": {
          "ref": "643e85f2-1cb0-4c7c-9b16-425f4203cfcb",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "adbe4736-f8fd-4cd6-b634-51f45d4fa8c0"
        },
        "item": {
          "id": "0cb9d87a-7245-4b59-bf2d-3281ef6cd9f9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d1039877-96ce-4e15-9ed4-eb6ac3dd13f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff62f0-ba93-4bb2-8351-af27d955c7a6",
        "cursor": {
          "ref": "81e9430f-bd71-4a66-aece-0c4b0de399cb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d02578da-b765-45e7-9067-6cf3bf219d11"
        },
        "item": {
          "id": "8cff62f0-ba93-4bb2-8351-af27d955c7a6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9a492b09-b5cd-405e-877a-cf5d13d864bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78017a1f-6ecc-42a8-8ade-74e7928c4d37",
        "cursor": {
          "ref": "48101cc1-7de5-4d61-9d0b-3d08f41b4bd1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ab35d120-7c99-4ee1-b2a3-34500baee104"
        },
        "item": {
          "id": "78017a1f-6ecc-42a8-8ade-74e7928c4d37",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a75e498c-ee30-4bc6-bf3d-28c70791248d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509d8e6a-d302-4ec8-892b-802eae398d81",
        "cursor": {
          "ref": "708d4365-1161-4db2-8091-ff962f31f0be",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "765b12a7-8b04-48ca-bdba-5ff839c1fbde"
        },
        "item": {
          "id": "509d8e6a-d302-4ec8-892b-802eae398d81",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "12c1ed7e-7eb4-4549-b647-0cc92284995c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af5b1a-c880-4186-a9d8-b2643fb54043",
        "cursor": {
          "ref": "2e4f7c47-e347-455e-b866-d680b7d60a5f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d20a55e3-8989-4c10-87c6-24d051d7445d"
        },
        "item": {
          "id": "21af5b1a-c880-4186-a9d8-b2643fb54043",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "be763e5d-e440-46fd-aa22-eea5aa80b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7eee30-e7d9-47c9-b3ea-a66371a7db93",
        "cursor": {
          "ref": "885b182b-ab19-4a20-81ec-d9e5d99b25cf",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "929e95fb-26a4-4ecf-8fc6-4237c849cf2d"
        },
        "item": {
          "id": "6d7eee30-e7d9-47c9-b3ea-a66371a7db93",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a4041945-d178-4463-87de-ccddcee314af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304727e5-20d8-44e9-8f58-15a2bdfd775b",
        "cursor": {
          "ref": "75f76723-7327-4ed0-8a22-1c0130c7940b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "66972b29-af38-40b6-8fde-1d01489373b0"
        },
        "item": {
          "id": "304727e5-20d8-44e9-8f58-15a2bdfd775b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "931c8338-20c2-4bcd-acc5-cad69edadcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42da7193-6c26-4df9-b228-6c5aa0b2739d",
        "cursor": {
          "ref": "265a93d2-2b3d-4363-a9fb-506680d389e0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "020ff076-48c6-459c-833f-2ec127e4b6b7"
        },
        "item": {
          "id": "42da7193-6c26-4df9-b228-6c5aa0b2739d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "44a94502-897b-4bf1-a747-6f3704142106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e9eb60-40d9-4db9-896c-bd0680fa7802",
        "cursor": {
          "ref": "15e4d14e-f5e9-46da-8607-e453d36be510",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d3f9d23f-4e76-4172-873f-1b78cb0c1964"
        },
        "item": {
          "id": "f0e9eb60-40d9-4db9-896c-bd0680fa7802",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c0cfd639-334c-457f-b2e6-522f3a49283d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e13aa17-bb66-435d-a5f3-e596b6280bf8",
        "cursor": {
          "ref": "11f48af7-28ce-469f-b2e6-c4655de21c72",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0f112bf9-8705-4f27-9c2f-0e9f90d42105"
        },
        "item": {
          "id": "9e13aa17-bb66-435d-a5f3-e596b6280bf8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6c9db538-e3c1-455f-b51a-49c53b6a1df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6e7474d3-486c-40c3-a7b4-ee526365afbb",
        "cursor": {
          "ref": "a43e1922-0a8a-47b1-8305-8e21c11f9898",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "95cac9a9-ff2c-45f0-8f85-6682d680e846"
        },
        "item": {
          "id": "6e7474d3-486c-40c3-a7b4-ee526365afbb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6e701f49-984b-4fa4-8dcf-f31e5eeea572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a9b0dd77-c64b-4fe8-96a5-fc7f2c73b645",
        "cursor": {
          "ref": "f9bcfd8e-7530-4069-a1b4-14c5837e9a0b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4e0d5cf1-b5c9-4281-989d-e8d89f43fde8"
        },
        "item": {
          "id": "a9b0dd77-c64b-4fe8-96a5-fc7f2c73b645",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5c4c5d64-eb02-4aa0-83ff-a5b351062f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "397008ae-c4e5-4641-87c2-33d9d5b5438a",
        "cursor": {
          "ref": "924e9443-b522-40a1-9ce8-894e1a298805",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3cd57933-de8c-4d16-89fd-f7f0fdabfbef"
        },
        "item": {
          "id": "397008ae-c4e5-4641-87c2-33d9d5b5438a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "93cb66b4-c222-4151-8a67-d11c3ae5c711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ca0569dc-4ae2-4f9c-921d-8083d070f5fa",
        "cursor": {
          "ref": "7c1ce3ff-a7c9-4129-88e3-228919f110a0",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d9f0835f-8a59-4eb2-8d6c-28ad1eea31f0"
        },
        "item": {
          "id": "ca0569dc-4ae2-4f9c-921d-8083d070f5fa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "603c9f6d-12c0-4cc6-b471-0cc68c5184a8",
          "status": "Created",
          "code": 201,
          "responseTime": 9630,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67376218-06f9-47c7-97a9-8c5f1dbc393c",
        "cursor": {
          "ref": "7dc5cb04-d1eb-4eec-9c1f-5f16973d04b5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a0e86e21-55c4-4008-b1c4-c14ae2b7dcfb"
        },
        "item": {
          "id": "67376218-06f9-47c7-97a9-8c5f1dbc393c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "338e4546-ff4e-461c-a47c-81d3a32695f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "854a1c42-75a0-42ea-b5b6-f7180a8ee1dc",
        "cursor": {
          "ref": "82531f88-efa6-4683-a906-cfaabfee34b0",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c174276e-8e8d-48a8-9a8f-75d7f2c950ba"
        },
        "item": {
          "id": "854a1c42-75a0-42ea-b5b6-f7180a8ee1dc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bdb79b16-0d9a-4aa0-9dc3-b50078d893a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "11d7d847-2147-46f3-aa80-8af1b61020a3",
        "cursor": {
          "ref": "88f5ce34-6160-42c3-93b7-da6272119bd3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a33e732c-1393-4615-a026-4dc68d705b70"
        },
        "item": {
          "id": "11d7d847-2147-46f3-aa80-8af1b61020a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9845c5ed-1e49-4abd-b6a0-3e27ae325950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b93954-c9ed-4bab-b7a6-c3fe69d890cc",
        "cursor": {
          "ref": "c45a3a6b-ca89-4f5b-8933-7bb69e0689c2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "347e0bef-ef24-474e-a701-3467218e88b0"
        },
        "item": {
          "id": "c3b93954-c9ed-4bab-b7a6-c3fe69d890cc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8792600f-9381-413d-b1f8-c9f76f6c59ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0bcb3e-316c-4e8d-b2dc-3b42f52fface",
        "cursor": {
          "ref": "d9db69e5-1fc3-4bcd-9a61-9c83fc9bc505",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bb7dc76c-eddf-41bd-bbd6-54f4f7fcb6d0"
        },
        "item": {
          "id": "5e0bcb3e-316c-4e8d-b2dc-3b42f52fface",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c91b9af6-4217-4ddf-8770-d3a3e6fcea89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33562993-1702-48c0-978d-05a8e8d2cef0",
        "cursor": {
          "ref": "4602f728-bc9b-411f-a75f-99f64e956c3f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b4848045-5f19-40e5-859a-9b2e1d236d19"
        },
        "item": {
          "id": "33562993-1702-48c0-978d-05a8e8d2cef0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "195b36af-8860-46fa-8d6c-b44c080b62ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83842330-4853-418d-ba01-86f5195bca3a",
        "cursor": {
          "ref": "8abb1ecf-e450-4d5f-bfdd-881fd964ad06",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7b0189b9-6a13-4943-be55-e21161c4751a"
        },
        "item": {
          "id": "83842330-4853-418d-ba01-86f5195bca3a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a6ed9338-284e-4e91-b39e-383e05103cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9282fd6-68f5-44f9-9258-cfbf23746963",
        "cursor": {
          "ref": "21d788bc-5970-4f17-9556-a88e826460ea",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4f8527ca-14d7-426b-be9b-ed834c866d1f"
        },
        "item": {
          "id": "b9282fd6-68f5-44f9-9258-cfbf23746963",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f0862807-f523-447a-9951-ff1393fd741d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2750c47-4d15-4025-9033-eb14b5dfb19a",
        "cursor": {
          "ref": "79e0a4c2-486f-4036-8223-3862c30d1fc3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d7575641-8144-40af-89d4-69c532b4b8a1"
        },
        "item": {
          "id": "c2750c47-4d15-4025-9033-eb14b5dfb19a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2869a146-2f49-418b-a42b-2727fe6dced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a479c328-d129-4eee-8dcd-69e7cf759f1c",
        "cursor": {
          "ref": "c70d0345-8d90-469d-8598-4cd6fdcb6964",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9f67d25d-dda2-474d-8bba-b1e136a73de5"
        },
        "item": {
          "id": "a479c328-d129-4eee-8dcd-69e7cf759f1c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "97afaa32-2332-49c9-adb0-3c2c0c29ad1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6cddc0-329b-4ec0-af58-878ebfdc6b2b",
        "cursor": {
          "ref": "47f831bc-db3f-4974-9f6d-d0def370e969",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d17946d3-8415-42e9-9e77-90e8199a848a"
        },
        "item": {
          "id": "7f6cddc0-329b-4ec0-af58-878ebfdc6b2b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f7519c1c-cfa2-4dc5-8dd1-f4f8bf05605a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d88482f-dcc6-45e9-85f3-e766908fbac9",
        "cursor": {
          "ref": "38556a95-62c3-4db6-8280-03a1009cc68f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "796806e1-5c48-4dd5-b18a-fed6beb9cecf"
        },
        "item": {
          "id": "6d88482f-dcc6-45e9-85f3-e766908fbac9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9f070748-ef0f-448b-be71-a8ddbad2d4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd746e1e-579a-4e6d-a181-8ba59c8ca573",
        "cursor": {
          "ref": "f60ffff2-e9b9-4c1b-af8f-339b1754f1a2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2e8ab6bd-161f-429c-a670-caf43bf3e488"
        },
        "item": {
          "id": "dd746e1e-579a-4e6d-a181-8ba59c8ca573",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9093efc9-93e2-46d9-a198-4ec4606c0d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e72818-7f51-4342-9ba1-5c466cc0d64b",
        "cursor": {
          "ref": "ce53ff2f-b7fa-4d45-adaa-fbae2baf2f80",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6506ca2b-26db-4b11-b831-9d2320f91ba8"
        },
        "item": {
          "id": "15e72818-7f51-4342-9ba1-5c466cc0d64b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2a413e2e-9621-4a5b-91d2-740ba26bdde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87bc2c8-f1fb-46ea-8420-566b956063e2",
        "cursor": {
          "ref": "8c34581c-4085-4892-a50e-9918c6b3a638",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0ad5f062-5b1f-42c5-a7d2-67b5e816e770"
        },
        "item": {
          "id": "b87bc2c8-f1fb-46ea-8420-566b956063e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ba5dc297-5f12-4033-9c4c-424d2b5777ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707a0e7d-9e52-4dd5-9b4a-686277e2ee74",
        "cursor": {
          "ref": "e70d7b20-24f3-4f0a-a1f7-6e63d1ab3eb0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "69e3deda-dc9d-49a5-964a-665bde5d5d94"
        },
        "item": {
          "id": "707a0e7d-9e52-4dd5-9b4a-686277e2ee74",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b425fb09-e2c3-4952-8518-5de06bf7c43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbeb31d-5c58-49fd-8a82-eab303a9b6b7",
        "cursor": {
          "ref": "dc10ba93-478b-4691-9634-7dd8f5e3fdf6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "06ecd160-8ec0-4090-8550-49e8895bc3a8"
        },
        "item": {
          "id": "efbeb31d-5c58-49fd-8a82-eab303a9b6b7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d979a082-057a-498d-8862-7cbcb0bc0d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe46e737-7af5-4445-8316-13050f61eb49",
        "cursor": {
          "ref": "65046033-724a-4cf1-8ddc-8dd46a1ffcfa",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2e544af3-6d5c-4956-85e7-618983e6ef42"
        },
        "item": {
          "id": "fe46e737-7af5-4445-8316-13050f61eb49",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "41f6e4ff-8a6a-40d5-90a6-04ef3f2b0d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc374b1-9ef4-4f77-a21a-bef313032337",
        "cursor": {
          "ref": "81adfe19-30da-400d-a421-3272f25d7e34",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "edb4196f-2559-4fb3-9552-68c730aeceff"
        },
        "item": {
          "id": "4cc374b1-9ef4-4f77-a21a-bef313032337",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c1432fe1-5056-4c4a-b9f9-d52531a75ca7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e875b46d-b3f8-49a6-b2b3-60f96eca5062",
        "cursor": {
          "ref": "8d214036-7e33-42dd-8d24-181f166bb977",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "35162b7a-5f93-4692-9064-9a30fd836943"
        },
        "item": {
          "id": "e875b46d-b3f8-49a6-b2b3-60f96eca5062",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e3daa05d-c870-4212-b89f-1d8635d468d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fe589a-ae1f-4424-9529-8ae3b7f23d0b",
        "cursor": {
          "ref": "eb76aab6-4bfe-40de-bf61-1b573ffeda1d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5831cc25-46ba-4b47-bc80-eda4e4e7e2ae"
        },
        "item": {
          "id": "29fe589a-ae1f-4424-9529-8ae3b7f23d0b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "258f37c3-93b6-4b97-9bf7-571f984244f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a06256e-7fdd-4e69-955e-3e19d1f80eed",
        "cursor": {
          "ref": "1960eded-a290-4088-a2e1-aa766a917421",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cdfe53c9-7be8-498b-8363-f23d735edb17"
        },
        "item": {
          "id": "3a06256e-7fdd-4e69-955e-3e19d1f80eed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f8b82f88-45e3-4297-ba59-fbd8991c6230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df0fcdf-74d6-472c-8ee4-5454a7a6bc10",
        "cursor": {
          "ref": "5df04dd2-611e-4b96-bf6d-4b738fd13667",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c973cfe6-9671-414b-a813-49821a62a9ff"
        },
        "item": {
          "id": "1df0fcdf-74d6-472c-8ee4-5454a7a6bc10",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c995f533-93c0-4639-88df-071a02be3b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5c5de6-45ef-4b70-9753-db2fc017181c",
        "cursor": {
          "ref": "2f9e6b40-7996-4ba1-a959-7442ac3d7226",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ea9fb90c-6950-46ca-bf2d-91d8ae81ef4a"
        },
        "item": {
          "id": "6f5c5de6-45ef-4b70-9753-db2fc017181c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5d2600e1-612b-450b-8f47-c35208f7d220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f7cdc2-7b9e-422a-913f-04b55f53b802",
        "cursor": {
          "ref": "f1a8d54a-6da6-483b-ac9f-f2b2c62cc94f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b973094d-96ff-4647-bb63-3d6c801b7c3a"
        },
        "item": {
          "id": "04f7cdc2-7b9e-422a-913f-04b55f53b802",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6af258a1-0d3b-48fc-9c10-40a17e29ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf651ee-858a-407e-8947-65d3581900d6",
        "cursor": {
          "ref": "a37b635f-7870-451d-b893-1fc789ea90a0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dde2d309-53a0-495a-a371-9771c37bf338"
        },
        "item": {
          "id": "5cf651ee-858a-407e-8947-65d3581900d6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67a1f11f-64ad-424e-88a9-421eac69609c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c433d1d-6a2e-4bce-9339-385904271283",
        "cursor": {
          "ref": "40d064d5-1d9c-4b00-a012-45bd0bfcc76c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "31d42ec9-b0b1-4553-a6ca-e8f6ab828cdc"
        },
        "item": {
          "id": "2c433d1d-6a2e-4bce-9339-385904271283",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a2fa3e20-1534-4a0d-b8e9-432cb3748727",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c4e17608-a48b-49ff-b8fa-5580127d85b3",
        "cursor": {
          "ref": "0804b629-b9b1-47cf-beba-4e095fd08b08",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7756b8f1-3de2-455e-90d1-fc2bfa6f2568"
        },
        "item": {
          "id": "c4e17608-a48b-49ff-b8fa-5580127d85b3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2954f882-6d97-4648-9791-65c8daa8b11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b233ca0d-9b31-44ad-b5d8-60cc1a59994e",
        "cursor": {
          "ref": "54447cc8-1998-42d8-be56-df210ba9d2d6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4e658719-538c-4547-802e-b1a08dce3e79"
        },
        "item": {
          "id": "b233ca0d-9b31-44ad-b5d8-60cc1a59994e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cea27ed6-42fd-4f7f-b630-e684226a8cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0393919c-a152-45b2-95cb-64d337e65953",
        "cursor": {
          "ref": "d73ba709-74c2-4c19-ba9f-992542990d2c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9d2f7da2-7693-4907-b1cb-10e02ac689a7"
        },
        "item": {
          "id": "0393919c-a152-45b2-95cb-64d337e65953",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e090507c-2373-4cd7-ab63-2f45057e7ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca131e03-cca0-44c5-a408-f7270b7dc81c",
        "cursor": {
          "ref": "1bdd9067-40b8-4e46-a745-271201e573d4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0111c7ec-13a6-46ce-add7-5fa00fe591d8"
        },
        "item": {
          "id": "ca131e03-cca0-44c5-a408-f7270b7dc81c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "70385b48-e947-4d6f-9b27-446dea2c8060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee43685-323f-4b1e-a35d-adcb8157acb5",
        "cursor": {
          "ref": "7add83ca-d35e-4237-ad74-0a11b561ddd2",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2d10e323-094b-4da0-b617-e9615f3f36d3"
        },
        "item": {
          "id": "0ee43685-323f-4b1e-a35d-adcb8157acb5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7c915cc7-93f0-47b3-bd88-62fdd4ae8baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5edcd8-45cb-4466-97dc-4847964a480a",
        "cursor": {
          "ref": "ce872df0-95d4-4b58-892e-bcb2aa59735e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c9485ccb-32d0-41e7-9549-a1bad39a3f40"
        },
        "item": {
          "id": "1b5edcd8-45cb-4466-97dc-4847964a480a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bb6f8c5e-4dbb-4c1f-8c02-78fee45d36f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8941c4-672d-4c53-88d9-e5709bab6961",
        "cursor": {
          "ref": "9b58ffb6-1105-4424-b507-fcfad67db5f1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b1ea4de1-51b6-4e09-bd1a-368f6f98693d"
        },
        "item": {
          "id": "be8941c4-672d-4c53-88d9-e5709bab6961",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9131bc85-94d6-476d-b416-5ad8f5d6c29a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "8a75f8ba-a436-4990-8657-b165e76f702f",
        "cursor": {
          "ref": "96f772e0-c29a-402b-a13c-5f0fd67f9971",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9e8df091-ce90-478c-a4b3-0a5ccef9ed37"
        },
        "item": {
          "id": "8a75f8ba-a436-4990-8657-b165e76f702f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3c468a0b-6d6b-405a-980f-4436ee682180",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c7d4b9c7-756c-49d3-b189-f88cdc84b69f",
        "cursor": {
          "ref": "e5731120-ce14-461d-8bcc-a140f4b05eb7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9bfc2eef-530d-41e5-8fa9-72f2ad344096"
        },
        "item": {
          "id": "c7d4b9c7-756c-49d3-b189-f88cdc84b69f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a2e48539-f1e9-4864-afb0-875d5d834f45",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 124,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a4f1872d-f1a6-438c-959f-66a7914a66c4",
        "cursor": {
          "ref": "31e4ca2e-7c03-48ac-be83-9afe051ac684",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5c951aeb-03f9-40c8-8452-3813acca65f2"
        },
        "item": {
          "id": "a4f1872d-f1a6-438c-959f-66a7914a66c4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9fde12ce-8f07-4cd5-909b-361f9865f058",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "61db968b-a708-433e-8b9d-fe48c1324019",
        "cursor": {
          "ref": "33147dd0-c64a-4cb4-b1cd-0f6f880e8357",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ecb4fa40-9e43-4c6f-9671-42fcbe767a7e"
        },
        "item": {
          "id": "61db968b-a708-433e-8b9d-fe48c1324019",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d0222f7f-152c-49ec-afd5-9afed9797cc5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "a1afc033-5bce-4dc7-a7c5-62cb971656b8",
        "cursor": {
          "ref": "9d6c211e-bdab-4a33-b1e0-442943713923",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d7b6a6d5-4665-499d-b594-6419d4317e87"
        },
        "item": {
          "id": "a1afc033-5bce-4dc7-a7c5-62cb971656b8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "acc1ba44-819c-4162-b61d-b79f0d133c23",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5b6c4dcb-18aa-42c8-9fb9-890e338d4d0b",
        "cursor": {
          "ref": "ea53f0d7-d419-481c-89d6-a334507a460c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b6247f0a-a4d8-4a9c-b38c-93e763dec94f"
        },
        "item": {
          "id": "5b6c4dcb-18aa-42c8-9fb9-890e338d4d0b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "01e62fa6-f607-40f9-8ed9-3a8f29389645",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfd474b-8319-4028-8ea7-e6af21796eab",
        "cursor": {
          "ref": "660eecfb-f0f6-4994-8306-9903198a0dc1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "64aef3f0-e4e3-481a-be6b-48c74454e9d5"
        },
        "item": {
          "id": "7cfd474b-8319-4028-8ea7-e6af21796eab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c5a84797-5aab-4524-bc13-ab1f5ab93bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5337c46-aa55-4a55-8247-7208bc6b8b54",
        "cursor": {
          "ref": "73861dd8-6281-4c6c-bbc8-fb2911ccbac2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9419d9c2-1c5b-45ec-a74a-b8529a9882b2"
        },
        "item": {
          "id": "b5337c46-aa55-4a55-8247-7208bc6b8b54",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "36d0836b-d940-4e68-ad8a-8c9159d3ca9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e7dbf7-0a7a-4573-bb02-97fb78a17131",
        "cursor": {
          "ref": "7cd8bb1d-b4df-478a-9761-4e11b450249c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5b853a7d-9cef-4838-bd29-9bbb159b6357"
        },
        "item": {
          "id": "91e7dbf7-0a7a-4573-bb02-97fb78a17131",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e23ed2ad-4cd1-44f0-8adb-0a85b4db0fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0521018d-4d59-4ce3-94be-19591fdc801f",
        "cursor": {
          "ref": "17f616d3-b12f-4384-a78e-922276119190",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "436c5adf-4169-4dfd-8dc9-ae34e9aaa618"
        },
        "item": {
          "id": "0521018d-4d59-4ce3-94be-19591fdc801f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3c0ed1b9-db7e-4d87-a55d-d463972ba1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dc92e5-dd7d-4f66-a534-68f189c166e6",
        "cursor": {
          "ref": "19452b27-72b6-4e2a-8c4f-d2ea40cfe61e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7e510f1f-7175-4da8-9572-835d1c79cf03"
        },
        "item": {
          "id": "43dc92e5-dd7d-4f66-a534-68f189c166e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "00dd427f-ee3b-48b6-9162-bc1fe9b5c210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeb25c2-9b0a-4926-98c2-86c4db0cad6b",
        "cursor": {
          "ref": "7ac6c2e9-3344-442c-b6c5-701fa6ca5f1d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "068a7d89-6ab8-4e87-8ebb-c4b28b8add7b"
        },
        "item": {
          "id": "abeb25c2-9b0a-4926-98c2-86c4db0cad6b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "623cdad3-b2f9-4049-b266-86be5b86bc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfe752f-75ba-4e93-b89a-42db179fcdc2",
        "cursor": {
          "ref": "458fa8c7-aa0f-4943-9cb0-2f818ba43ea4",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6fa81c1c-2187-4bfa-838a-9dd6271ad032"
        },
        "item": {
          "id": "ecfe752f-75ba-4e93-b89a-42db179fcdc2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "753761c2-520b-4913-8611-92974cd957d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8474682b-3f61-44da-b5ff-6fbe5a5fda46",
        "cursor": {
          "ref": "3de5266c-c6f1-4485-b9b7-b72308beaf95",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "50a99219-863c-42cc-8521-90d4528238fc"
        },
        "item": {
          "id": "8474682b-3f61-44da-b5ff-6fbe5a5fda46",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c99cc799-08f7-4f90-ba16-7bad485682df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eb4690-cd3f-4e90-8887-d79f3599330e",
        "cursor": {
          "ref": "be0f5ff7-64e6-4d1b-842c-acaa46732ed0",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "98840fe3-ace8-465b-b54d-f8604ce25ade"
        },
        "item": {
          "id": "a4eb4690-cd3f-4e90-8887-d79f3599330e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "03e5a1cd-679a-4af4-b5bf-33a8ae71da10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeba38ec-9ebf-4bef-a7da-f458a38d3c50",
        "cursor": {
          "ref": "625706bb-b20f-4a36-a1da-f43fa98666b4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9ded8ba6-8d94-44f4-bb94-27778dda2091"
        },
        "item": {
          "id": "eeba38ec-9ebf-4bef-a7da-f458a38d3c50",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "117b5e81-49f0-40e8-93fc-7d60c3932c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32358ea0-8877-460c-a34a-485f2b9dfde0",
        "cursor": {
          "ref": "3c93f2a4-b586-4ae1-b7de-33563dd56fd3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "41e8b473-92e1-4c2c-994c-c9ecf849af14"
        },
        "item": {
          "id": "32358ea0-8877-460c-a34a-485f2b9dfde0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "57942cfa-851b-4f20-984f-103690942902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94297b57-792f-4e63-9eb1-117868df49e0",
        "cursor": {
          "ref": "47fe5df9-9308-476b-aa82-6541bc1fb5f0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "830aec2d-9391-41c1-9445-e5046eb39d9a"
        },
        "item": {
          "id": "94297b57-792f-4e63-9eb1-117868df49e0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d37fb853-8f94-462d-b54a-ec96d53f9751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ddb0df-31bc-4f0f-919d-9ef460c7a547",
        "cursor": {
          "ref": "894ac573-988c-4029-864d-9e7e8de463e6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "45925b9a-0c27-448e-9d60-de9780572c30"
        },
        "item": {
          "id": "c3ddb0df-31bc-4f0f-919d-9ef460c7a547",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e45df25-2cf2-4209-b848-e663e6089873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41357810-a2d7-46af-bdc1-45e7a9fd1b59",
        "cursor": {
          "ref": "13f4a34a-51de-4598-9650-d53cc26edf4e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "444fb057-59c3-4e30-a481-371a9d80ea96"
        },
        "item": {
          "id": "41357810-a2d7-46af-bdc1-45e7a9fd1b59",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e31fcd54-9582-4c4e-92d0-af3b46f03f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ccc7a8-5908-4a74-b693-fa8c0750fff6",
        "cursor": {
          "ref": "2aa8eeec-9d88-48e1-82f7-2b9cad0e901b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "347a3fcd-37e0-487f-bc35-e2e972544cb7"
        },
        "item": {
          "id": "07ccc7a8-5908-4a74-b693-fa8c0750fff6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7c441bcc-b89f-47e6-93b5-9af239422827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47533100-4a13-41f3-93f0-1f043309fea3",
        "cursor": {
          "ref": "e2e15279-5520-485f-9e21-4cfce3d557b6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8fa7a94a-244d-40e2-9604-8b1d8f37fce5"
        },
        "item": {
          "id": "47533100-4a13-41f3-93f0-1f043309fea3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ed9ec1f-1262-4817-9ecc-98a8a615a756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b679d657-9bb6-45d3-b0d1-f87e4e3be8ac",
        "cursor": {
          "ref": "3c1b7d19-af2c-4de6-bfc3-0dc46f537ccd",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "04b14a88-dfbb-4194-b4e6-6370b3d55211"
        },
        "item": {
          "id": "b679d657-9bb6-45d3-b0d1-f87e4e3be8ac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "68c1822b-b54c-43a2-b562-cbc0945576af",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "94f05e4e-6f2a-4278-9994-99591775ebfe",
        "cursor": {
          "ref": "a2ba17b4-a62d-40ac-85d2-7a6a0d644ddd",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ac865d0d-ddda-4bd2-8f3f-3f6adfffc09f"
        },
        "item": {
          "id": "94f05e4e-6f2a-4278-9994-99591775ebfe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e67e75ec-a730-4ae6-a5e4-ef514776d46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91065dff-cd12-4e41-a564-eb00cf683483",
        "cursor": {
          "ref": "64ddcc07-b5a4-4c36-94ab-a11437219b4e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bc331a04-818a-4511-b990-2d5ecc2e8cab"
        },
        "item": {
          "id": "91065dff-cd12-4e41-a564-eb00cf683483",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3e1ce576-d924-43dd-be1c-1bdc977c573c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7459d3c6-e660-4d9a-874c-9e156c7c39af",
        "cursor": {
          "ref": "f2a47f3a-6eaa-4085-a16a-83dafd0a884a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fbf3545e-fe87-4d3d-9a91-0219f116fdc2"
        },
        "item": {
          "id": "7459d3c6-e660-4d9a-874c-9e156c7c39af",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e4042ba-737b-400d-a349-830cb74fbce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41c8db5-0208-41d1-baf3-3b1b2c394c90",
        "cursor": {
          "ref": "02b49398-d4f0-4b50-a95f-d4f233abd8cf",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f7d03d53-e5fa-46ac-a47b-af0e3d143af3"
        },
        "item": {
          "id": "f41c8db5-0208-41d1-baf3-3b1b2c394c90",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "557639ac-b163-4acd-93e9-541f1cc4332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31408e64-bc18-46dc-b1e8-dd93c738767d",
        "cursor": {
          "ref": "1a362a56-dc68-4859-8d71-38f0f66f5901",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3365c619-9028-48f1-8296-0ca2e58f7616"
        },
        "item": {
          "id": "31408e64-bc18-46dc-b1e8-dd93c738767d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fe98fd96-284c-4e79-8045-2d799010a7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0767dfb-2e4e-481f-80f5-23f4e9fd7ce7",
        "cursor": {
          "ref": "7e354bca-8089-4887-9f6e-53cde144c460",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b01200ed-ff3c-493e-870a-fba5f18b80c5"
        },
        "item": {
          "id": "a0767dfb-2e4e-481f-80f5-23f4e9fd7ce7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1a656b25-d02f-489e-b91b-fb97d387e61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19df136f-7bce-4239-9bae-b4ea7ff059e6",
        "cursor": {
          "ref": "7b0f4480-acdd-4ac4-8520-658fcf7ba29f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0685ad4d-44c6-45ba-915a-b6a43e1127a2"
        },
        "item": {
          "id": "19df136f-7bce-4239-9bae-b4ea7ff059e6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8c9f5d81-bc58-417e-b601-440b736bf695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ca3558-b321-444b-8f34-09e158eae8a4",
        "cursor": {
          "ref": "206baf3c-2d4e-4e9c-b80e-e326f426f571",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2de6d58d-035b-43f9-83eb-db0e685bca29"
        },
        "item": {
          "id": "62ca3558-b321-444b-8f34-09e158eae8a4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dfa19e4d-6c68-43d7-a046-a8015c4333dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b56b6c6-af7b-430f-aea1-2fb97fe456ba",
        "cursor": {
          "ref": "c0be936e-ccaa-46cf-84cf-62a435d3b39b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0c87b6d9-021b-47f3-ac68-940548b8bae3"
        },
        "item": {
          "id": "9b56b6c6-af7b-430f-aea1-2fb97fe456ba",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "18b1b6b5-5c34-4e2f-a2b0-f1dc0c0e0659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa313d97-01a4-4e9d-9c41-901e62dfd072",
        "cursor": {
          "ref": "fa3f71a1-aa9a-4c7d-836a-a7583e6fdf98",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b036b534-bb55-4704-b12a-f2707efec2c2"
        },
        "item": {
          "id": "fa313d97-01a4-4e9d-9c41-901e62dfd072",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0c093bfe-d644-4b58-b15c-aa3399aad912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de27f86-de5a-47fb-8d95-3b6996cbe6a9",
        "cursor": {
          "ref": "a675a3fd-60b9-46f7-affd-a39bff734a2b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "84a72474-3a61-41e3-87df-8cd28a8e6f1e"
        },
        "item": {
          "id": "7de27f86-de5a-47fb-8d95-3b6996cbe6a9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "11ef1594-7736-494e-96d0-9aea15107cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fa97b4-5a74-4535-b93d-76dbd2728dce",
        "cursor": {
          "ref": "7fa82b10-3be4-418e-b1dd-d66a656e4dd5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6a057c99-2915-4824-a7b3-8d603601f897"
        },
        "item": {
          "id": "18fa97b4-5a74-4535-b93d-76dbd2728dce",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f2476cfa-75dd-473e-ac2d-fffe1e33e603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aad478-7e1a-4a0d-b1d3-49069128a612",
        "cursor": {
          "ref": "e39b9721-9f50-416b-acd9-4e9e420681e6",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "13bcd534-cad8-436b-ba88-a07283e4718a"
        },
        "item": {
          "id": "68aad478-7e1a-4a0d-b1d3-49069128a612",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a5c7683f-f707-4226-8c9f-b319c68ea23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df580399-e0be-401e-92fe-fe1f817d2ad0",
        "cursor": {
          "ref": "725890a5-250a-4085-8694-8bdb74401671",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "322cb839-4ecd-446a-8d89-d5551e90d34c"
        },
        "item": {
          "id": "df580399-e0be-401e-92fe-fe1f817d2ad0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bcc572b4-8826-4478-99e5-a1b58e95d339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b060a455-4fe5-45b8-96ec-4fa60c1f5da2",
        "cursor": {
          "ref": "7b66ee40-257d-4499-b61a-8cce3cb1f14e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e0aea8f5-c15a-4ed0-8816-765ab9d17817"
        },
        "item": {
          "id": "b060a455-4fe5-45b8-96ec-4fa60c1f5da2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "49ed3e54-9f3b-4c53-a7b7-fdc22ed77a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbde5b4a-8da8-4c09-bc5d-5014e4b9d168",
        "cursor": {
          "ref": "614a8957-ae08-4f3f-a1f2-7962afd5c598",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d2849ac1-224d-4b08-9c62-a9dc2778260f"
        },
        "item": {
          "id": "dbde5b4a-8da8-4c09-bc5d-5014e4b9d168",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "835094a1-0979-4486-9e2e-91e8b3f1d1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03196f90-86b4-42ab-a878-65577d7bd209",
        "cursor": {
          "ref": "9528b2d4-6abc-482c-ba1f-d787923f9ae3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "911abc47-d790-4b7e-9f55-8fc63cd43e47"
        },
        "item": {
          "id": "03196f90-86b4-42ab-a878-65577d7bd209",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8182b652-d31c-4446-a0f4-fad17f7bcff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ec5fa2-5335-4f12-9908-49e20ff2fd5f",
        "cursor": {
          "ref": "0a19bcdc-9b22-4645-8e29-424311658278",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4f66bad6-c3e6-4162-b72a-ab4cc7768433"
        },
        "item": {
          "id": "29ec5fa2-5335-4f12-9908-49e20ff2fd5f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1e76773e-5915-4740-9a3b-90c3d55d761c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71937f0d-20f7-4d41-9380-a45246adca11",
        "cursor": {
          "ref": "55d9e343-9fd9-4727-b295-8f1e4dd84f2d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "09e3cc41-6395-43bc-b8f3-6882f5ca71b9"
        },
        "item": {
          "id": "71937f0d-20f7-4d41-9380-a45246adca11",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "49f20419-f6d7-4d95-a620-56638cf35375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a1e441-161e-4a95-b38c-3b21884f21b6",
        "cursor": {
          "ref": "6627698b-941d-43e8-aff3-b1d890fc6707",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2a3e2589-e8d8-413e-9802-14a45d06ed9a"
        },
        "item": {
          "id": "b4a1e441-161e-4a95-b38c-3b21884f21b6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8fad3e8d-cd46-47dc-a53b-81cbd9689ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a33395-0374-4a00-b8f8-1866b5f423d3",
        "cursor": {
          "ref": "2b7b0300-68bb-466c-8f32-4d1ddf18a4b5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "65179481-6f68-42b2-97a3-d092f9191447"
        },
        "item": {
          "id": "45a33395-0374-4a00-b8f8-1866b5f423d3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3ad5bc6c-dda5-459e-8010-f63b654a9c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c0e90a-8bd3-4d9a-9270-7744b0d43afc",
        "cursor": {
          "ref": "3dca40a3-2e5a-49e1-b980-2a5e2d1ae178",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d7ad3771-a87f-4255-ad4a-12ebfcb0e74c"
        },
        "item": {
          "id": "e2c0e90a-8bd3-4d9a-9270-7744b0d43afc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0ef80fe9-5e39-474a-9dab-79354fb8b0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476ee021-7e63-4b78-8044-cb73f9cf1265",
        "cursor": {
          "ref": "82f4f359-49a9-439c-813f-d532a62508bb",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d6e157f9-8311-4ef9-ba8d-77e270060498"
        },
        "item": {
          "id": "476ee021-7e63-4b78-8044-cb73f9cf1265",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b13a571c-d329-4582-9623-a7dcbbbb4710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece77f35-0f27-4adb-956e-b164366b524d",
        "cursor": {
          "ref": "75cc0e9e-3e7b-4f47-9fd3-5664a828ead8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b270a443-cfb6-478f-ad3e-3732e2c886e5"
        },
        "item": {
          "id": "ece77f35-0f27-4adb-956e-b164366b524d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a6e5e0df-805c-4253-969f-3858d3f9daef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77112904-cde8-4bc2-98ee-e79a30f06436",
        "cursor": {
          "ref": "d914cfa1-4797-4f93-aa8f-5097c92e6741",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c37fb257-347a-4130-9767-5205865aa4e2"
        },
        "item": {
          "id": "77112904-cde8-4bc2-98ee-e79a30f06436",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "76a299b0-0708-4a5f-a736-a2cdbb884ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc7b780-add9-48ba-83fc-aa108f606953",
        "cursor": {
          "ref": "14740ac6-4fc1-45c8-875b-739759f6329b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8f95adde-9523-4dbf-9655-20329d213a14"
        },
        "item": {
          "id": "9dc7b780-add9-48ba-83fc-aa108f606953",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "14f69f80-e1ad-46dd-a3a0-8b1203d96083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069cbf84-450e-4bff-a2d2-c9eb845cad04",
        "cursor": {
          "ref": "e65b0fcf-8dd5-4892-bf2b-aea59b0a7641",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3934fd6a-44e5-43dc-b29e-a8d2029e50dc"
        },
        "item": {
          "id": "069cbf84-450e-4bff-a2d2-c9eb845cad04",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4ea7d81d-1068-40a0-984a-5b94681b6273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef79276-b872-4e33-8a02-fd9312059e84",
        "cursor": {
          "ref": "4329e774-b9d7-4146-87e6-185d074aa25e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "efc718de-c480-4d94-8679-a18cb20520a9"
        },
        "item": {
          "id": "0ef79276-b872-4e33-8a02-fd9312059e84",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ee9c318a-2a1a-4be2-89ea-5b9d2668bad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76617f81-46a0-4a65-a66a-449aad55a1a3",
        "cursor": {
          "ref": "26c94558-173a-4b95-b5e1-4ffe8b821a96",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "14c0b5ac-5a8b-4f39-bcb2-cd597853cb77"
        },
        "item": {
          "id": "76617f81-46a0-4a65-a66a-449aad55a1a3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "353290b9-4b89-404e-9215-bb8fc68bb288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c66f8f-94d8-4248-a7be-94cb53c557d0",
        "cursor": {
          "ref": "e4ace9ba-eb43-459c-8567-32498159620f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ed526c1f-0e31-416e-8d49-bfe677b65135"
        },
        "item": {
          "id": "55c66f8f-94d8-4248-a7be-94cb53c557d0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "90292bcf-fc71-4ef7-9612-f2d1c2517df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ffac08-537e-4038-a671-e885c2989cbc",
        "cursor": {
          "ref": "5762f112-6d66-47d1-9dc1-9f5ae49d80ac",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e7392d82-3c1c-4697-9c9f-d2f66667c938"
        },
        "item": {
          "id": "d3ffac08-537e-4038-a671-e885c2989cbc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9ce3b992-2d11-4fef-96ca-9a3b347fe442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e96c2fa-8a37-4009-9dc6-c36d1e50bbd2",
        "cursor": {
          "ref": "5740da98-7d97-4c7d-9daa-27f6898f29bf",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7b2ec9a8-8525-4e2c-87ad-5f8eea96e1b6"
        },
        "item": {
          "id": "4e96c2fa-8a37-4009-9dc6-c36d1e50bbd2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e384303c-dc92-4ce9-bd61-96e89d2f49f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5e601b-ccd7-44ba-9c5d-72baba6530f7",
        "cursor": {
          "ref": "0ec39401-5576-4b21-9ea1-903c93fd25c2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "59521126-3a9c-493d-b9f7-5aa9b5d15fdb"
        },
        "item": {
          "id": "8a5e601b-ccd7-44ba-9c5d-72baba6530f7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0c17bcdb-f969-4861-8473-ae07f00e5f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51a8c06-b355-4adb-aebb-4611499abcc1",
        "cursor": {
          "ref": "ed995d98-79e8-4c5c-aad7-c3dbfdb9674e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d9b8367d-91f2-45fa-895e-55dd5b54cbbd"
        },
        "item": {
          "id": "d51a8c06-b355-4adb-aebb-4611499abcc1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5ceb7d2b-e310-442c-a530-a27451089298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1618df91-616d-4dd8-be9d-0326476c60e4",
        "cursor": {
          "ref": "6eab79c2-1c2a-4bdb-884d-babb9bc63818",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9d916824-f513-4f00-89d9-feeac41adb65"
        },
        "item": {
          "id": "1618df91-616d-4dd8-be9d-0326476c60e4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6c77e36c-a2af-4967-b07b-bbd91aa8f2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6da44a-f0a9-4014-a449-73fc56d4c90a",
        "cursor": {
          "ref": "d2292315-751f-4a56-aa0f-815fa833c8ae",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c70ec73b-e047-4310-a505-7168b46db603"
        },
        "item": {
          "id": "9a6da44a-f0a9-4014-a449-73fc56d4c90a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "992951ac-f050-4192-af5c-e800381ea724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e9b1c8-2d00-477d-bf2d-8f53c474493e",
        "cursor": {
          "ref": "8b67ab7c-b5da-418f-bc54-7f1064fb1da0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6868210d-8345-41e6-8ade-7e03c059ff2e"
        },
        "item": {
          "id": "80e9b1c8-2d00-477d-bf2d-8f53c474493e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a22387db-3972-4db7-bc65-684494bc9789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1c9ade-9a1d-4e67-9b28-77e96c256815",
        "cursor": {
          "ref": "c008c012-86c8-4224-b796-49b2165eebd2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "85cb82f4-f150-4d70-9879-75b8b3d71ada"
        },
        "item": {
          "id": "6e1c9ade-9a1d-4e67-9b28-77e96c256815",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "657dd07b-d246-497e-8cb3-cf747a23fb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffe9474-b367-4c17-8787-6c3f02e607fe",
        "cursor": {
          "ref": "5eedbf93-6d8a-4fdd-9342-7a121c32062b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1c1c60c5-6eb3-471c-8250-30deec9b72c8"
        },
        "item": {
          "id": "7ffe9474-b367-4c17-8787-6c3f02e607fe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b0f66c8c-23ec-48f4-a8cc-e146ed09eb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b516a6f-461a-42e5-866a-468c699e5b51",
        "cursor": {
          "ref": "854b9393-bdd6-4366-ba8f-289e8fa06750",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f68c8687-7e2d-4c94-a854-a0e4bdc4dd53"
        },
        "item": {
          "id": "9b516a6f-461a-42e5-866a-468c699e5b51",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e5d79fb9-e434-4f6d-aca7-e7fc02215c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7c9119-9478-462c-8c2d-a0009c8f3df9",
        "cursor": {
          "ref": "2f76334c-719b-4c07-b12a-7fed54552e60",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7d619962-01b5-4815-b93a-b343e422eeb0"
        },
        "item": {
          "id": "fb7c9119-9478-462c-8c2d-a0009c8f3df9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8c51c8f6-daef-42ce-a847-a191ed0e89bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d3cd0f-3e5b-4a0d-8c56-1914adcceb1d",
        "cursor": {
          "ref": "cfcf2bb2-17cd-4c4e-b831-fc8a47d312ba",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "33389eba-3ccb-4b49-bd14-dd2a3a9c5299"
        },
        "item": {
          "id": "c8d3cd0f-3e5b-4a0d-8c56-1914adcceb1d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aed5b5b9-24f0-4615-9671-228d97a2d4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276475ab-177f-4db6-a4f2-437df44f5273",
        "cursor": {
          "ref": "02dfe388-b39d-43ab-8d47-a13c1c09bb92",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e98e3807-ff26-4aaf-a003-becf05368358"
        },
        "item": {
          "id": "276475ab-177f-4db6-a4f2-437df44f5273",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "05a3e18b-317a-4bc1-ae6d-db75bedea2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cb718e-0077-4a3e-9ef3-728d720180ee",
        "cursor": {
          "ref": "955672f6-5bd0-455c-9901-5b1c8a2d94cc",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "29d275fb-feb6-4ab6-ac1a-c7fdb60718c5"
        },
        "item": {
          "id": "a4cb718e-0077-4a3e-9ef3-728d720180ee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b15c334d-203e-48de-a55b-41c95a5062e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55292e89-5a22-4cc9-8275-f03d8bff2654",
        "cursor": {
          "ref": "502eaa52-1e09-4d20-aca0-0c46dcf0148b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9c90d494-2a87-4f9c-8e04-1ae800e871a3"
        },
        "item": {
          "id": "55292e89-5a22-4cc9-8275-f03d8bff2654",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d384ce32-d27e-41d3-8e18-efb019f7d314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f01ccb-635e-4703-99a3-6c4db38705b7",
        "cursor": {
          "ref": "bf59a3d1-c1cf-42e2-a626-12a58beeb584",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "be1bde82-a433-47cf-83f3-a0dbb8e8eb2a"
        },
        "item": {
          "id": "06f01ccb-635e-4703-99a3-6c4db38705b7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a068fe3b-a900-42fe-9a23-43bfa9ede9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823354e7-10f3-49bb-86a7-c8247fcc15ef",
        "cursor": {
          "ref": "77325ad5-f42f-402c-a5c4-8ca4566f1156",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6fef70b3-2a3f-4e74-9f92-2858300d412b"
        },
        "item": {
          "id": "823354e7-10f3-49bb-86a7-c8247fcc15ef",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "078a0f18-b2ff-45b2-a09d-17096280b3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcda4c20-3e9f-427b-86f8-e024e51c9805",
        "cursor": {
          "ref": "54cde2b7-3b6c-42d1-9b57-71371f392d03",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "11b11af8-664a-4ac6-a55d-7977ebebf36d"
        },
        "item": {
          "id": "bcda4c20-3e9f-427b-86f8-e024e51c9805",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "034dc1c6-a272-498f-80cb-05baffd74c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3847c0c9-dc4c-4efa-a440-f3cc3b75436f",
        "cursor": {
          "ref": "2767f1a0-1368-4d1c-8057-53cfb1dbaee8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4fa39472-7360-4828-a186-9d32a595df54"
        },
        "item": {
          "id": "3847c0c9-dc4c-4efa-a440-f3cc3b75436f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "457a3dde-9723-4e5c-97c9-cb335f294127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c00319f-cbce-437e-a161-a094891bb480",
        "cursor": {
          "ref": "aa26766f-e209-4476-84ee-793628501f86",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c004a8f9-7df4-4252-9ee8-dbcf115d82b7"
        },
        "item": {
          "id": "9c00319f-cbce-437e-a161-a094891bb480",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f2298fc0-e859-4d90-afd1-1e788596229c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc5358b-cff3-476e-b9cc-d8d33bcff424",
        "cursor": {
          "ref": "68d046d1-ef28-4beb-ae33-22e9dbb0d8cc",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a9d3f180-5890-4e72-90d9-5257a242588d"
        },
        "item": {
          "id": "6cc5358b-cff3-476e-b9cc-d8d33bcff424",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0f083935-2580-4ce0-8afb-a8a988388477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2c799c-d92c-4a5e-9cb5-55bbf15ebef2",
        "cursor": {
          "ref": "d7f0e2ac-0f1e-40e9-b639-7a6850597881",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4f3c8c8f-9d0f-448c-909f-95b5f7ecaa5c"
        },
        "item": {
          "id": "ae2c799c-d92c-4a5e-9cb5-55bbf15ebef2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "687dbe52-52b2-4b6d-b5ff-7f8253f6ea97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afe43db-b761-4e23-b401-8dd006d82245",
        "cursor": {
          "ref": "0fe3eb46-fe03-4e47-82a5-7938e5321704",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c3795087-507c-4e27-80b4-275e6978fda9"
        },
        "item": {
          "id": "2afe43db-b761-4e23-b401-8dd006d82245",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "434465b3-d0cb-49d6-80d6-e1a48a288b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1026,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e9df24-f0cc-4eec-9a23-fb1d95962a18",
        "cursor": {
          "ref": "deeb31ef-cb7d-41b6-b9c0-826bec9d31b8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12b0b9af-96ca-4522-91c7-84ac1d4b1d5e"
        },
        "item": {
          "id": "f8e9df24-f0cc-4eec-9a23-fb1d95962a18",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5331ff12-5d62-4d7a-b53f-8c6ee251698f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276ca692-2f10-4a23-8824-92b55665688c",
        "cursor": {
          "ref": "d0c094a7-5b99-4dff-81b8-e07e3c69cd6e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4dc79ebb-599b-4c5b-a7be-9e9cba922b6e"
        },
        "item": {
          "id": "276ca692-2f10-4a23-8824-92b55665688c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "156211e8-7a01-4848-aa7b-fd9cf176f1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020fb5b8-3e83-48e0-a6cf-d0ecc927d39b",
        "cursor": {
          "ref": "17668e1d-d2bb-442b-97dd-caf3024823dd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d0c1d31d-3827-4268-a7a5-4b5a1ee3f6ea"
        },
        "item": {
          "id": "020fb5b8-3e83-48e0-a6cf-d0ecc927d39b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c73975b3-1737-4713-8993-0a831dd6a3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafbf1a2-4350-402b-8d17-d9a6407ca59a",
        "cursor": {
          "ref": "36782683-78c2-4f3b-b53e-9c2354765709",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5cb0666f-2500-47c9-8c38-7d4a26fa81f8"
        },
        "item": {
          "id": "cafbf1a2-4350-402b-8d17-d9a6407ca59a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b5e10e3d-aa5f-4cef-b52d-4912bb544d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93a5960-a988-47b9-a29f-813df20dc0eb",
        "cursor": {
          "ref": "28cd683d-c965-4edb-bcb4-546e2454c6b1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "02d207dc-af53-419e-a68c-a3dfa7b258fc"
        },
        "item": {
          "id": "e93a5960-a988-47b9-a29f-813df20dc0eb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6af3e9ec-9db9-4245-a227-50e443a580c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1e2653-8cde-4106-bd69-0b7c573460e2",
        "cursor": {
          "ref": "c12adb8d-31c4-4c3b-8f10-f76ef825916b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b9481503-b3ad-4d3f-9f12-683832e375e9"
        },
        "item": {
          "id": "3e1e2653-8cde-4106-bd69-0b7c573460e2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8cad52be-31da-453f-b706-194f0bff75b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f792f43c-1d31-4d2d-8573-a430c22f5486",
        "cursor": {
          "ref": "78d0f103-c2a8-4fe9-8c37-fe3c6779bebe",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "36ef8ab7-a0fc-43ed-b111-104c5031085d"
        },
        "item": {
          "id": "f792f43c-1d31-4d2d-8573-a430c22f5486",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5b990e31-3efe-431b-a0d1-ee97ad8722f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3625724c-3b84-4785-b14a-2f4398f79ff8",
        "cursor": {
          "ref": "c47be512-6606-47e8-86f8-836d73da746c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "909db42c-139d-4e59-af58-b7b0e0b278eb"
        },
        "item": {
          "id": "3625724c-3b84-4785-b14a-2f4398f79ff8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "80a3d846-8e38-40ae-ba67-627bbedafa1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b5760-cadb-4498-8008-14bbf08ab5b4",
        "cursor": {
          "ref": "fe02dcf7-def1-4085-834e-e139bafdd3c6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "246d52ac-e231-4353-8a26-798653804bc5"
        },
        "item": {
          "id": "b64b5760-cadb-4498-8008-14bbf08ab5b4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b023e56b-112b-4efc-84ba-d8449732b2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48646a5c-9c2f-4bca-93e0-8aa1afc052ea",
        "cursor": {
          "ref": "ed9e0208-5913-497e-8537-37f90794f8d4",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6d86ed7e-6c2b-4597-8ead-e4dd1b9f574a"
        },
        "item": {
          "id": "48646a5c-9c2f-4bca-93e0-8aa1afc052ea",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d54ae37d-5e01-4d98-bbc4-b7d17afcdcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b1a466-5476-4fe7-a497-58f0402521d9",
        "cursor": {
          "ref": "cc45f557-1ed8-4794-a91d-ccb4b36f3ab2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3e4253b1-8958-46f1-a44b-fcca33bbd60d"
        },
        "item": {
          "id": "b9b1a466-5476-4fe7-a497-58f0402521d9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6935c441-468c-46ec-9f87-f0e3c859b750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1c24bb-4aeb-4df4-b3e0-3e9d6d0722f3",
        "cursor": {
          "ref": "ca4dcfed-a0cb-4c5f-b10e-c681e4471c25",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4193e0bc-3ff6-4576-a420-09f10a3d4508"
        },
        "item": {
          "id": "1d1c24bb-4aeb-4df4-b3e0-3e9d6d0722f3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2fde3f4c-a3f4-47cf-abdc-3d6fd1ff6dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2357a1e7-fb54-468b-b7eb-e6bf92156a3e",
        "cursor": {
          "ref": "312dafc5-3a7c-4cd2-be61-803856504a09",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "75646ffd-ee25-4750-9d75-c9c4d36c0d46"
        },
        "item": {
          "id": "2357a1e7-fb54-468b-b7eb-e6bf92156a3e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b2a116f7-dd40-46fc-ad67-6ff00db04733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bae0fd-e0dc-42a1-bbf5-5d450c14d9b8",
        "cursor": {
          "ref": "442d37fb-fdc2-443e-819b-c59e19cf3fd7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7e0446fb-44fa-4017-84a3-9760e3ebbd16"
        },
        "item": {
          "id": "d7bae0fd-e0dc-42a1-bbf5-5d450c14d9b8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e4228baf-f15e-479e-a6f9-515e92f41aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71da00a7-1692-4373-831f-674c6fadb48c",
        "cursor": {
          "ref": "5a0dbdf1-bbd3-43f7-bc5b-4f46d046f7b1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4ace7b70-ba6a-471e-b4ff-d5eead3517a8"
        },
        "item": {
          "id": "71da00a7-1692-4373-831f-674c6fadb48c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a3039836-27ac-4901-9711-adb69cf63de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbde94be-dba5-4bfb-8ee7-12a444e1eb9a",
        "cursor": {
          "ref": "b9e47702-7555-4705-abab-457466e001f7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "94bb4a52-c8d4-4cea-94af-71e839ebb243"
        },
        "item": {
          "id": "bbde94be-dba5-4bfb-8ee7-12a444e1eb9a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "224c60b8-2707-4b12-807d-84d8d4e60561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1542b23c-7f31-4cf4-b7d3-ce82691c8f8f",
        "cursor": {
          "ref": "9fb039e1-10cb-40e2-b3e3-c860aad12970",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "98b62416-4ff5-4cf6-9cce-ef47e5c64a05"
        },
        "item": {
          "id": "1542b23c-7f31-4cf4-b7d3-ce82691c8f8f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "238e1005-8310-48c2-8fd9-4258b59d4824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d6cdf0-83cc-4cb8-b67f-a1a549549ea9",
        "cursor": {
          "ref": "b592d924-9762-4b93-aae8-51eae9e265b7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6fbd4341-a9c5-402d-9e7f-ca046a373dd0"
        },
        "item": {
          "id": "37d6cdf0-83cc-4cb8-b67f-a1a549549ea9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6a26f468-000c-40ca-9936-1fef34d8c270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa627ac1-f456-4817-b45f-a4d14b8a8e08",
        "cursor": {
          "ref": "014abd48-0b74-480f-b22a-1f771fb781d5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "41377ade-9deb-45f6-b7ee-95565783fa83"
        },
        "item": {
          "id": "fa627ac1-f456-4817-b45f-a4d14b8a8e08",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "954b08d3-870f-47b1-ab98-0d82be160e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb08be18-bd03-4db3-9ae0-f6341070fa07",
        "cursor": {
          "ref": "8d2de071-50f5-4f52-8362-d6c7d1e2d857",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5bda8b3a-da13-4185-abc6-8f4aea1a18a3"
        },
        "item": {
          "id": "eb08be18-bd03-4db3-9ae0-f6341070fa07",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a81e16fe-1290-46ee-8947-328a38f4b88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a761ecd4-788e-4696-b4b1-4d51d863b037",
        "cursor": {
          "ref": "5c90309a-4123-4443-b7dc-8a11afb61f56",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cd79e009-e12c-4885-b91a-055033cddfc5"
        },
        "item": {
          "id": "a761ecd4-788e-4696-b4b1-4d51d863b037",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a29b5215-5e1d-4cef-876d-895029700006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a39404-68a1-420d-ab6b-4275ee899b69",
        "cursor": {
          "ref": "9a72e8ca-54ad-49e8-84d6-459f0998bdaa",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "38e2211f-ce16-4450-b5aa-587a6ce2f502"
        },
        "item": {
          "id": "35a39404-68a1-420d-ab6b-4275ee899b69",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ff79b35d-85e8-4594-b7b5-82d8a5cd8c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac70bb1-a7df-418d-beda-1d8c0ff40c3f",
        "cursor": {
          "ref": "34f50f1a-4a73-4842-938f-3beadc44ad61",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "12729aea-ee11-48b8-aafb-4fb0f8a7be82"
        },
        "item": {
          "id": "2ac70bb1-a7df-418d-beda-1d8c0ff40c3f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8ec2c090-0a28-46e7-bdcb-02d049d5b4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abf65c6-a379-4197-9057-6d6f87fe7dba",
        "cursor": {
          "ref": "e15344e1-127b-451d-9907-dfc98d143f49",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9d5ae66f-cac4-43ca-a386-f2f7d748f500"
        },
        "item": {
          "id": "5abf65c6-a379-4197-9057-6d6f87fe7dba",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6691c9ed-cccf-445d-b247-89b64bbda5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a70666a-e923-448f-910f-a6870262086a",
        "cursor": {
          "ref": "3558c743-de91-4492-801e-090985223794",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b861495c-a900-433b-8b11-12b528f4751f"
        },
        "item": {
          "id": "8a70666a-e923-448f-910f-a6870262086a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "166f4301-991b-4c03-b8e5-0c075e47f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa753e10-16cc-4a48-8462-be4bbf279603",
        "cursor": {
          "ref": "332f7183-2476-4890-9d90-37e1824c28a9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "46f95af4-40cf-416c-b611-80613264275a"
        },
        "item": {
          "id": "fa753e10-16cc-4a48-8462-be4bbf279603",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8361e5da-e727-493b-8ae3-7d05fd54e5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03792050-597d-4b2a-afd5-c77f1b926279",
        "cursor": {
          "ref": "981a3236-0c5d-470b-aafe-09e3d1cb9d21",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "db7499b0-9892-4a83-9d6d-d7f4c089dfd6"
        },
        "item": {
          "id": "03792050-597d-4b2a-afd5-c77f1b926279",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9ad43805-dce8-4512-a5fb-c8935a57936e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a52f319-ad04-4428-a687-34dcd45dc5ff",
        "cursor": {
          "ref": "b7a1515e-cc33-42bb-b636-6b72d367f036",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a58df914-9a3c-446d-853c-2ff1d7927d46"
        },
        "item": {
          "id": "7a52f319-ad04-4428-a687-34dcd45dc5ff",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9d2022d1-ddc9-4338-b10e-0080a5e5fbe5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0e86c6-b34d-4c5e-a5f3-f0fb1edbc3e3",
        "cursor": {
          "ref": "2fdd52b0-ab3b-4c9d-be46-98c3fb9b972a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8b713bf7-ee4c-43d9-8908-dd1b56ead92d"
        },
        "item": {
          "id": "7f0e86c6-b34d-4c5e-a5f3-f0fb1edbc3e3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5380c7f5-577d-467c-8f3d-c4843e4cf28d",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c09fe92-7602-4aa4-8886-8bb8e8b500f1",
        "cursor": {
          "ref": "b2e0492c-02e2-4b71-8582-e57f02f0b8c7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "014c0bac-f73c-4396-972b-743096162799"
        },
        "item": {
          "id": "7c09fe92-7602-4aa4-8886-8bb8e8b500f1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bed41f05-223e-44ae-a22b-6b032174bb84",
          "status": "OK",
          "code": 200,
          "responseTime": 2421,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "71282cbc-5952-4f71-9c82-6e13e83029ba",
        "cursor": {
          "ref": "b3abce4c-3d5b-4067-8d5e-b2ece18c4acd",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c16ed3d8-9d17-4d67-b77d-3db60880aa7f"
        },
        "item": {
          "id": "71282cbc-5952-4f71-9c82-6e13e83029ba",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f5166395-6bdf-4975-b6f0-de38075a60ee",
          "status": "OK",
          "code": 200,
          "responseTime": 2771,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e051eb8-826b-47e7-814c-5848724ecd0b",
        "cursor": {
          "ref": "9281376b-85a0-4b34-b3d0-4eea2f27f864",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d22650e0-a6ce-4c5a-9201-52accec39519"
        },
        "item": {
          "id": "9e051eb8-826b-47e7-814c-5848724ecd0b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "51ae023a-5347-4f71-9d11-677e1d04512b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e051eb8-826b-47e7-814c-5848724ecd0b",
        "cursor": {
          "ref": "9281376b-85a0-4b34-b3d0-4eea2f27f864",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d22650e0-a6ce-4c5a-9201-52accec39519"
        },
        "item": {
          "id": "9e051eb8-826b-47e7-814c-5848724ecd0b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "51ae023a-5347-4f71-9d11-677e1d04512b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa29d39-6bca-4d04-b97b-3f4caca7faed",
        "cursor": {
          "ref": "f7576c78-3855-426f-aa3f-4cf2b30264a6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c123f9b9-5c73-4149-aac8-f4aa0c735720"
        },
        "item": {
          "id": "2aa29d39-6bca-4d04-b97b-3f4caca7faed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9d55db79-9eb7-4ec5-87f0-dbda4fd1376c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19ccb37-1605-4183-b54b-b9bc0038fe72",
        "cursor": {
          "ref": "b2413789-aa1f-47a2-af1e-87476f0b58bd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4e985fa8-e1a9-4078-b2b6-7a67d97c8760"
        },
        "item": {
          "id": "e19ccb37-1605-4183-b54b-b9bc0038fe72",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3ad9a03f-8344-44db-8bfc-c5b7fee1c93e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}