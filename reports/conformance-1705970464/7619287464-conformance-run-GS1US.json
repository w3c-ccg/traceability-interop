{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7b91527b-1cf3-4e5f-bbc9-e4aa1588e4cc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f96be0a7-c138-4617-a50f-3bd82915ba25",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8c196d0-3187-4edf-b2f1-61e944516b2f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "653cbebd-f323-4c0f-b50f-6bce636c9fcb"
                }
              }
            ]
          },
          {
            "id": "2b7f6653-8853-4179-b7b5-72cc0a2199f0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44f12d8d-a5cd-4e1d-9e7d-458261910d82",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3edba112-bea2-4867-a9b3-7c485daacf92"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5027b0fa-5dd8-4cd5-b830-ce07940b5d9e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "033e0de8-015a-4b0b-b10c-c4e386813e47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af011600-72f7-4cd4-87ea-fb45594572bf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48dd0987-f9ff-4c25-b8be-91bca8c2cec4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb64acfe-82b8-4604-bcb4-ca5445736468"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e00c7b6b-b3a8-4a35-a00a-27b1fef910d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1eae386-7a22-4229-a8d2-e5d60b55a173"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d65ef0aa-f1e3-4816-aa30-d5243121b03a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ad07fa7-610b-4252-b76f-6f55a16d69f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e0ca9fa-b0f1-4ba1-8092-d93dc632b8fc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7776ee2c-6126-43e7-b931-33c7de7faf81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "011e639d-53e1-4ef2-95a7-e39c134c9994",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c086c18c-56a4-40ba-b93b-5290392e8b98"
            }
          }
        ]
      },
      {
        "id": "9597f207-ef6a-478c-b44e-200bf2970cbe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b953bd5b-aa08-42ae-ab87-80a7add0675d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cb6e095-c386-467e-9529-e8e6abcb0009",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bb2ff82-bd5c-4173-b80e-5687950a857b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24906ca-da35-4119-a03f-ce63f8468dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a232072b-4c35-4ef8-83e5-0f02fc2f7a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa56012a-7dbb-4bab-8221-32ac367ab755",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6c159b-a659-430f-b46a-3d45696ebe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b699e59a-0f50-4b99-9d4b-35ed4e8384db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb55c5f1-204c-4d22-b2f4-a5dd9de60712",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab90bd8-a7c9-4027-b278-412a0cf74a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b615572-c09b-48b6-806b-70286809616c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "380c6e58-08bf-4363-b524-50b6bbf04cdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3bb74f83-1359-4beb-9dd8-378c2fb0a62a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3746a6f-8e35-4484-b0ae-333e9c1caa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bc00b5d-b787-41b1-a4f7-20d5349b932e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b564f49f-4b0c-4d3f-ac43-0b608337599b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f61bbe-33a6-4b5d-8136-897aa5b184c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "03ed5bcf-ef63-4bc0-af07-9f24749e358d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e057ebaa-d3c6-4d7d-8e43-4709eabd7ca0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31c8d2ad-24b8-42f1-9d1b-058341de2940",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f0fe8b90-e5af-4c9f-aca7-00e4c877d924"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "697d20b0-c370-4116-8b8c-d0f5c79da4b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b1f7bd78-a9eb-41b8-911d-3c833848fac1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18eceb59-ecf2-44a8-8420-d4eba13b81b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d282659c-3639-4186-b493-146bc1bd6d07"
            }
          }
        ]
      },
      {
        "id": "3312edd0-7431-4c65-b7ab-792f64755756",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e7beffc1-4256-4dbd-8e2b-9fcb5aaaec7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9fc8f03-ed29-442b-81ce-3bb46b36494c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c2e7c746-f639-4266-8e19-d25619ead81e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5c10c4-3df4-4974-a0a5-33aa888de6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c59d45a-2c65-4a04-8582-43a81026722e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038f6f67-87f8-4d99-9a2c-3f1b3e546f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c4ad337-e9d6-46fd-b267-61282e691792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9302f997-1be2-4015-8c4d-76339a5090a0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5a527b-dc2a-4d00-bbb5-174724fcfc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150b62c6-5581-4a02-a677-436fd9110dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dba7467-5c8d-4904-bde9-3263b1a82fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6cbc7e4-96fe-44b6-99e2-ee6d410db9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae2e904-04d5-4402-b174-f685b18b0ab2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fea48b-da08-4908-9df4-2b2be367d0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8764ff40-aa6c-41e9-955b-7e428b4436f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a614a9db-dadb-4cc0-a75e-339d556a0e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ab48698-e191-49a1-b5e6-217543ec6d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c5b99f-0848-40ae-b0a1-f526eda32dd2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd20139-10d0-40ce-8893-8fdff50bd7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d90d01-77ee-44e4-a620-608a0433e8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c76f1f-3589-41bb-b74d-4172c834a318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e7e4d58-d5eb-4392-973a-0fb197a0af98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9313d0bc-f7c4-44a3-8b19-cf88e2844df6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df675b3-1b5d-4de6-95bd-2f796225cc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8876c5-8ff5-42f8-a69f-97a843ee18a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4308b808-dcc0-4f62-987b-6161b268ec15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "defe4566-011c-4165-a283-9a79a36b6340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955dbb8f-40fd-4bba-a73f-10ab8f71a26a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d1eec9-c20e-4ce4-a564-b50dd32ffafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bebd6f8-9e1c-4af4-abc7-3a68d5398d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749de90a-ff4e-4076-a18a-d36b37d0fad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d658576-5aeb-4413-b7b7-1e5a16667a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d55b0b-f025-4bb4-a963-c6e0d58ef7f1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab22e889-cf40-4f18-9c38-85c278024190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e75f882-d305-4077-9e73-4b057122e9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3b1bec-25c2-4777-8947-ae0eaf1a9afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "932897a4-d39c-40ac-91ef-2f556f4b8547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9930b0d-962e-4710-9e12-392bb5bfa3ef",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc91bb6e-389e-40fd-832c-c3bf9834c472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3c40d1-38ca-417a-8fcc-994cdaf1625b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec85fed-da98-4051-8d7c-ddc910f7da5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5313e1c-8b9d-473c-8205-5b537d483ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea2dd29-03d1-420f-a39d-c5e8793fe588",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f5e3cc-dfee-4e81-a63d-5780f2fe2f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4909e146-3a1a-4b50-a3cd-a74762acab50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624d4a42-117e-4a87-ad5e-42f469b66549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01ee3f5a-cfcc-4ce9-a12a-0e7a2d6c8e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc19d97-16b3-44f3-ad2d-eda298e87f58",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25372a67-a313-4aa7-80c6-1c86b5a07dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ae500a-56f3-4682-bb3a-da309383cb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f0253e-235a-4cbe-8fe5-178074245968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d75235a8-bca0-4192-ae9e-c9b3c6b643ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25bbeeb-78b6-4be5-82a1-908ed38b16f4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d339b0d9-1c30-41d4-b0f1-dd252cfbb63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2031b7e5-ebba-4756-8242-ad8f35ccde0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcc24f1-b514-4066-92fe-06ca82258dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d9adab9-7869-45f5-8326-0b8f82d87411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997ced86-7eec-4a9c-937c-2233e2f461cf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f98df71-0b8c-4be4-8137-ce089b51bacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddb0fc2-d26d-4f46-9ffb-8ade0f3be787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b9f38b-f612-4842-b950-fe5bf613a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8ad8a4e-d894-43ca-b2b2-d4f3674987f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419f7d05-25b4-4a09-8328-00ba7fdea568",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e83a27b-ae37-4410-82e4-23a0dbe3d0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9541c0-a16c-4356-a927-c6db07201ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c72a729-8f51-4929-90ce-85a430fc54ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00ee4a11-9eea-44bb-bdac-5e3f00b5ccf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe450dda-bb99-4a8e-b850-34433068ecce",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c3ac79-1a9f-4a21-905c-e37f889f15be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f60a2df-1e0c-45f9-88c4-a2a8e7355f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e3cf0c-4e2b-4d5b-995f-36f6b82dea79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2474386a-833c-433b-8c95-03c7d8e789f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4390b486-26a6-474a-bfc1-efa53954f282",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae86683-3aaf-44fb-bc4e-971f12719111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0889739-1afc-4b41-b3c1-83074ac6f035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b42e62b-ba6f-4457-b611-f6b92b37b311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc693f70-18ee-4195-88e5-932f1e6cefb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e658ec84-7ff1-46c6-9c66-4e072e1c3b78",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4787924d-962e-48ee-a7bb-0d72f94959e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a915a385-0b5b-409e-a331-c576846fee6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c7393d-2c55-4e6c-9a01-558768246fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8326ce61-9595-4f33-a894-6bbd2fb1fd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc8cc5d-359f-4f99-a7de-f4b7fd6d9728",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54f7956-7fe0-4829-9ee4-812cc7279219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf7a79b-2359-4116-9fe0-ed9b05f0aa1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6663fe35-6954-4ab2-a640-c402f643db0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "965ec216-79cf-4308-b060-d0d584e6d88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3e45aa-2b7f-4e39-b404-314d810b1a34",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17f2764-048f-44c5-bc17-da658697909c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56db09c-d58f-4806-a43f-177161f178a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9610072-a67c-4c4d-a965-cdbcd4114dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e611950a-c559-4876-8782-5f4e3182fa46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594356cc-a1f7-40f4-9c71-5b4e5060fb11",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d070f6-55fc-4259-a865-951830e27b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569bb0dc-84e7-46d5-9e04-2f7163863f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b14ab86-ef05-4c82-bdfc-f19a4f4dac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "018b88f5-3ac4-4cd4-acd8-566697d6965b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49b89b3-2f27-48b3-845b-1288d982a44f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdcb241-73b3-40b0-89de-3cc6928ee827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046bae37-bbc5-4c02-a535-6e6806a85904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315780c8-36c8-46b5-bd16-7a4b1b94cb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb19037-b7a5-4d74-b92f-e5d9d0f0416f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca23675-ec06-4586-905c-001d879f4716",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206da390-ebb4-435b-8c24-74887f73d42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cae6abb-164b-4d61-9a35-11cba2a0f052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc5300a-d8c1-48dc-9b4e-b07136578c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1993d729-66fa-4713-9f20-922a4938219b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fb0fac-87f3-4616-8106-e1c864f3ee58",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149fdda9-b9a6-4ba3-b431-4e62085c9cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3d62c9-f95b-4bd6-930d-6645fa50a182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a3e455-4590-40bf-a477-3da4f9da4dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed19f75-47f0-40b0-837d-218fe75c4fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d26406d-3b06-4d91-b1d2-26d279f87ad9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3169bcb-ec14-4030-86e6-26fb93b593b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa7f7e9-7326-404a-a69b-33f63a3bb20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841390ed-d5e8-49af-be47-5d4bb0ecfc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7445c930-eae1-458f-91f5-2df97e8a3d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8f488f-ff46-4a32-af36-9f0fcfddc993",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdce773-4fb1-43d4-a733-9b82c73b4b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2e96d2-4571-4c04-9306-0059cf72507b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0360ddd7-ef10-4cf5-9b9b-c94f44e65885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c873ff8-aecd-48c4-807f-f997a191ac26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa8befe-86e2-4b0f-b3fc-468d5a414cee",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f7291e-a5fe-448a-9bf1-8ee9c40fbb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac48f939-4ce2-4a8d-85a5-1b8938c779be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd10d302-c86d-47bc-a8fc-44f5ee341096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d39b6cb5-7d1e-41ce-a17a-bc359b369404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5017a8f-817f-439b-b832-063b3e5a0b69",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028e095e-9669-4807-986d-a157554a2825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5053cfab-a270-4320-b932-a4651de1cc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51da2f07-49b8-4dfd-9849-29a01421c5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa754966-3f11-4f8d-b90f-9c170f112abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9930239-a04d-4993-92c3-55ac1725bdeb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442599a3-7221-4aa3-aab0-292f689f81aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abfc1a3-3b03-4409-add8-d298b49a0424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0f6951-6976-4de8-975e-dadfeb9df43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bd3b80-83de-4bc0-9142-87be7884617b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbd3999-358d-4546-8ec2-af1745c30462",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41769945-3f16-40fd-80c0-3e85dd904f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dfdcd4-b75e-4ed5-8f23-11b6124a8876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbda4683-610f-48e1-86e5-3c7631ecf273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef74d7bb-5f4e-4ba4-968d-792673bede81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15316ea-85e3-412a-88e7-03341155b4f9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b0c817-4bdf-4afc-8350-1f78059f622f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3845b0c6-86e3-47d7-91a2-573a9d6ff129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05715b5a-ded3-4d97-8dfe-30bfb5071144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efef8899-e9e9-46a0-afad-3864c23e857d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae81b484-658c-4575-9038-f9fd5ace5c07",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c1e9fb-239c-4670-81da-fa40f1e4b74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9587819-8ce9-42aa-96d0-528b380e2bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb26d61-86d6-4fc1-ad80-825c74bfc7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ee07af-df9a-46b1-99b9-c30298ec7714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aacf9c-831c-47a4-96e0-422b5ae55a3d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798c517e-c2b7-4c97-b078-b2dacbb05e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b335f2d-7990-4ce7-9001-4c8ff8c3e559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575acb4f-9122-436e-b4e7-479787949c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3ea370-864a-4d16-8810-65cbc3ad7c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e754e298-23de-4985-a9e6-02e85cf873f2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d975b66-ac1a-490e-9c9f-281e36b28eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a1cfec-3931-49e0-8c9a-a28dcc154f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1f8b73-dd7e-4efc-a3d7-c7bc0e612e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec4500f-a87d-4807-bb8a-683a38f5ca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2d1e75-7877-4046-aa45-41e8202c3c9d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b1782b-deb7-4c3d-add3-3f63d7a168d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a23d7ed-4b1f-4a7f-8318-9954406a6002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7681c7a0-123d-4a86-928f-e21a909dab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0a9827-46c0-424c-9dac-c9c8c65296f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710133f7-6bae-4e65-8750-008c9f52f8a9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a869fe-556f-4337-9d89-fb878c0da8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43de6a5-85de-4316-872d-5114563c44d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684bc14b-e08f-4714-983e-e8ca2074d566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5194509a-b4d7-4900-9d93-3b149f50db56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94dc08c-0893-4e11-892e-3e6b4bf87952",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4576551d-5cce-429f-9d74-c0d24f50f5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d589fe97-dd74-4c38-b7e9-72cfb5e58ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d90a88f-0242-4508-aadb-58818e0df38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6015bf2a-3608-4a87-9625-6b8c4448b616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6226a7-8751-416f-9962-d2aa62622d5c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27379871-11b7-4877-8729-95d8fc28acd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ded25881-bdd4-4e4a-bade-21e2c632253e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852117f4-31e3-4063-81f1-aaf9647122e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f81eb7c7-39fe-4745-bcb5-f08ca6c1ba66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1754911-b29e-4df1-ab08-378cadf47a54",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfd59e2-cded-428c-9e02-6eb9fe38aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c223cb67-643e-4840-9d3c-be182fbe908b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30279407-fa50-404e-a61e-0d6d2d1890ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b086bd77-0e06-4426-8755-7d4d95d64939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02eca9f2-a9ec-4692-9391-561c95bea585",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da659232-ed91-44c1-951f-d2bc7484cf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11cdf7b-2240-4f1c-a443-cea0c6884f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400a11f1-af2e-4cd8-b538-6b3292ea744e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8ea535-c58f-4f86-9a52-dcd81818b462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314a6153-f43d-4c2e-b1a5-9b6921c1359d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4f0b1d-0914-4dc2-a694-a45e9a416d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f957b5-593e-4f33-9178-bbe004178164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4201b17-b4d9-4c29-b6cd-dcaac6f718fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0ff898-85d3-4be0-97d1-3e1c57c7929f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c50a9c-9363-43b8-ba23-06a07e4ccb35",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a23e1a-00ac-4ddc-98f0-9b3f30be8e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1482f87-ea4f-47f1-ba3f-be599e14424e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1c63fb-4d10-471a-8ad8-2c2f4be68f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "183f82ea-717f-4a05-a06f-9c3606bceaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f9f1cd-4fe2-4a23-97df-600975e9f084",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526d3d00-ac02-41bc-b9e7-4b23075d0772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f2b9dc-1470-44ad-836c-4a494907d4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5946b15-2804-468c-b4d1-3af2736a6fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b025a3b-51ae-4529-be9e-5f601438bc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef861ae4-6788-4636-97af-3e41e8a08369",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a656acd6-6e35-4b55-8c4a-adc66896706a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe7abe4-bfc6-4d50-afe7-e8613c1cbd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfde5e70-be71-44ed-bdb0-8432ae2a609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd840e5-19f0-429a-93f7-d58c9ba7f0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0eab36-05d6-4b6b-aeea-762a07052a8a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c3c010-cc46-4b1c-955c-6a2b3f981d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e2a141-3897-4d35-bcbc-8b6721df4178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d28b0a4-3ff9-4fbb-ae87-5297fbab9a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f553dd-2a34-4a3f-bfbe-ec2440112137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b08968-5a47-4427-be16-b142fbcd2398",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb8e4bb-9f54-4d15-af52-3260f2aaf854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5d8c96-f028-46be-be9c-78357fb3b5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5ab722-561c-4a55-808e-73050448d0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "58983aa8-6928-4188-8eaa-93cd168b5195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0076db30-66b2-4cfb-9dbb-b14eace6cb81",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81bdaff-dde6-481f-a0c7-21815f73e24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c4f942-ac80-4c6d-94a6-7fb3d1e91948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833035bd-be50-44e1-a3b9-50729e8c1983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7191e7cf-6e18-4ed0-9492-1b719f536b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c023bd72-7456-4561-a79f-4d347282fda6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b6edc2-009e-459c-8065-2b2a924762fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9775431d-78ba-4523-bfb2-c4407e81afe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14487b2-1416-4be3-9c39-4c9a355e0f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a22349-623b-40a2-8a09-7c5965da945c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19bf4bf-80ef-4d4a-b9b3-65ae2d67fb36",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8088704-2918-4924-8370-9f17874bca95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fa9b65-d26a-4dc2-972d-8359dfcf0c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2301736-8217-454e-9740-9a7d0e118a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a8d52b-3f46-45bd-baaa-a037820899de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef8c1c7-1a3e-4995-bd1a-ae211234818a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a89d846-050e-4249-9f33-822a3964f4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c577d327-26bd-4dbc-a2f1-1abf11fc2086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b759a2-aa40-4c18-ae12-5b7bce500baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27da0028-d491-4a2f-849f-21a08ecd74f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0b3a60-4cac-4323-84bb-1c6b5ed1ea65",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d71df1d-261f-4b50-a1c2-bb033667ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b91a4d6-f721-425e-a98d-a132c00c78c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bf8426-519e-4e23-881a-31959a91ac03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbaa89a8-deb5-4d9e-998a-1c9c143602d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22015f8-b226-4653-b3c3-4dc72c369313",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0050a89b-83b7-4c6e-8c91-9fd95dc2b43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172765eb-f110-42bf-8ba5-09b033925b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6723fd-54e7-4041-af21-bda9d7de5bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a806f11-8ea5-42f7-9221-2075b2a4c3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc3a499-d064-4f99-8de8-587b27822f9a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150e35f3-d5b9-41f0-a7a6-6f059e4cab52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dd45de-89a7-47a3-a6fc-017bb0538715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1408c11d-c06a-479a-80b8-0c8d44ed8eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "81bdfacb-3683-4ebb-812a-6483714afe24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aa338e-6950-423a-9ca1-5830d03854e6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e84f5-5e6f-4e39-9e22-a8281da47718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749fa5e9-9b9c-4b03-ba0b-2d07091937d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a37791-a877-433f-bbf0-48eda092af7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59967837-09e0-4ebc-a642-c98c393280f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c72f36-e040-4cee-9fc9-fb8e1c0697aa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7440e7b5-e980-4bae-9416-8c48f7b8fc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3abc1c-ec83-4d8f-9468-d084e0aa3db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a75a548-0122-4f93-b968-802d31169c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc829c4-77d6-46ba-9bcc-6a2e47b13514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe933d4d-6e22-41f0-b2ec-1f90c63535f0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4835db68-73d6-478d-930c-53aac87622da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee49c13-6a8c-46f1-8080-b3300b2c860b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe283c8-15f6-404b-be72-1875d4217b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd1cc09-704e-4329-97f6-6e4acbde5790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa12fb6-bcb7-4642-8768-6984697a1169",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22da5733-ee82-4dc1-92d3-42847e58ae99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c1ffb5-bafa-47f6-b0fb-539a42e66c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c39912c-533b-43ab-bd18-f3b2fd48d4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75919ed5-f40c-410c-93b6-060ab0b46713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41ba178-471f-4c1a-807c-00b11c813f62",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5f4902-eeb1-46f0-8be8-763285fc3f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a1f159-768d-41c9-b7fb-61f8cf812920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a2ad6c-cb42-4443-9bc0-b7ece6761318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0beb82-77e9-4d6e-b9cf-df99fbdb7b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5325610c-1cad-45ff-918c-807681ecdd44",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f8bc45-08ca-4ab3-aa79-23df245eddcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1594065-31c4-4435-802c-a27991259ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fd1dcd-4709-4a4e-b30b-925bc2f38db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2756e5-1585-4cff-9360-3ecd8f8d80ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f31675-f1b9-49ff-8099-f46c7e52d9fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2b08ad-2de4-471c-8def-1b86bd0a85cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78898f29-13b7-467b-8e0a-2dc895036dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdec27e8-850c-4c85-9ba3-5825ca64e673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6417bace-89a7-4496-8f46-93fccb218435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693523ca-1362-4844-8381-c8d86a89b58f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8835bd-537b-4ca4-b96f-af572cda74e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ef56dc-8a1a-4476-93a2-ce6559ea5c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82de2a7a-a730-4bfa-83b9-61c63ba6fff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31b30fd2-a201-44f6-ab3d-253ba29cd3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73744c16-6df6-46e6-a7ba-6975f52f456a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778ab307-af8b-4e17-945c-4bf93d930e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d7c7af-afa7-439b-a267-5d5d203917b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a02c19-f2c3-47e9-aac5-224d78b81135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac69e2e2-efe7-4d45-be60-ab0d28601c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a32e46a-033c-4c27-9501-d3f5c8118ade",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87664f3-3dec-4304-bcfd-722778279159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3c76cd-c03a-440d-85b0-45af95a07357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9801044a-6914-4675-a795-eca2f48c998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1799c1c-475a-443b-86ec-0f53579ceccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80906225-a725-4005-9fef-807f302dd28a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e833019e-e63c-4638-a2be-8ec8619218ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b166f2fe-aea3-4a08-ab4a-b2fa5d3831ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de45e788-9114-4f8b-a6c5-f015d047b610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab52c90-fbbc-469d-a05e-4bc726276c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e628ea21-c828-4911-a1d4-07c79205c43e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f3843a-a4d6-452a-b944-416deafdfef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71eb565d-1e53-45ca-8341-6fb061f0eb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43545c8-57f1-4aa1-820f-ecbc256a425b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "659ba697-7675-435c-a330-8e1cedd894ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61284f04-b1ee-4192-9ea2-24145883ffd8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135a5109-9abd-43f4-a01e-64a6c9f07273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47172cc9-4b65-44f0-b657-278eb0df3f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a640b5e1-e45c-4158-abce-eae69c0a467b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7558623d-7a75-457f-bd06-4a36cfef04a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd74a65-e470-46bd-b8f5-ad4235b0126c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab88ea9-f818-414e-8518-1848aeaa58eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df515360-fea9-41b7-b0ed-e22a15e3e412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36616982-f322-4c9b-9713-7ca6d0c3cc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d062627b-b59e-4791-9ed9-99c5fc767ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902271ed-c6c6-4b1a-9cdb-f361db72f4a1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39bd612-414f-4b6d-bcd2-d5cb264ba8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb277b5-45d3-4cc3-adeb-fa802abab77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36489579-edfa-456f-8928-c8eef83a0c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee50c6fc-88b3-43ae-963c-bb43dc18ea04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a86fee-abb3-4c30-9ae0-b85c9613b2ca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4797ae07-d3ec-4189-b5e1-c8e719f8470d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4174ed40-3d6e-4e32-8d03-2828278529f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5140a15b-e658-4a69-9b76-277080ab5940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f569093-5a24-404f-934b-d621defc02b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995054d8-670c-47f6-b8ac-6354d9918423",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38927c82-b934-4a84-b367-bfaceeace39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b6322b-2b3b-47d0-a305-4a6a33241aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6fd3b-6ae2-47a2-a293-296d410b8abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8641bf3-f108-4c6e-beeb-81fc79bfafe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26878911-40a2-48ac-b108-6053cbb42959",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d32d09-a394-400f-b3a3-9579750946d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d431626c-0b44-442a-b80d-5b269b2bf98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66b46e1-32c5-4349-a4b9-4e69bfa904ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f39c828-2ee7-4de9-9abc-dc2cf10cd7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c4fa58-94dd-4719-be5e-2141be133a79",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb12e37-720c-45ac-8f32-ffc0f5c4e6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712fdc37-a721-4665-9d6a-d0a26965b3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4956190-f94c-4c32-a991-4a50823a02ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2aa22ab-3eba-4ab7-9e5e-a16b644205e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca8d919-d043-4c6a-84a6-370fa9b0ff24",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c8110f-c0a4-4626-aec5-d766ded1af45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10388741-60eb-4de5-88ad-4c917e3146df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd1214c-6277-4d9e-ac3e-398d9f24e224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ecdbff-56ef-4999-bf23-2102ec7590a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c2d431-1e44-474b-8cd5-7caf814e9893",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10635005-c9ec-4f64-b8f0-1ab78f89d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2a7d3e-f06a-4100-b78a-516839cd3fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40ca2e5-0f1f-42c6-9837-e53e1e104a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f02b4b18-356f-49f3-8b9a-ff7d12b03fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5a5a17-7f76-4e0f-b21f-527cea76f071",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eed5e29-9567-4dfa-a231-1d6a79a7f794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae58c03-2f4f-4575-90f6-10fcddf4e215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7d34c1-865c-4a47-9fe1-d06f64eff644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e8569c-053c-417c-957c-674ca79d8322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d94cca-9bce-4c02-be4a-52d3f13149e1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51b9f0e-1c7e-4a38-9faa-80f2ddc0e2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f43dc79-f9bb-4eee-91d5-cf389a39b33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515a8c41-c169-4746-82fb-80c336ed96f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acd82a55-1b3d-443d-b436-80151db5e0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51042c1d-1407-455c-9cdf-a748cd67292f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecd40d4-862e-48c4-87f0-8505f786a401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81406c2a-c375-4f9b-88c8-67e0e91b4770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48f5a66-574f-4882-bd8d-18f0815c490e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "732f19c4-b929-4496-8aba-230a91871446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede8c604-124b-4830-8e11-f334d412cee3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d74d33-a598-4404-a71d-817055d0e064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0fb894-3fbd-4302-8bc7-19382b8fa616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed990278-0250-4e3e-af45-ba37d878c6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3b47b4-d216-46ba-9858-2bef1ec749ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ba3d03-7311-4ef2-9cc4-9228f0179241",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206d726d-0574-48ba-9402-594069c89ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a542f81-fab5-4644-8257-04762bead3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67e96d5-3eb7-40dd-a4c5-09da7fd2f8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0874f99-d26b-4f07-a9cf-41da4bbdedfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a84578-2924-4fed-9ea6-22c41c7b3a16",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd125d7-7316-4be5-b94a-631e92280094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814da284-0e1f-4ed1-a3a6-7035f7c6ca90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35063f2-83f4-4c2f-bed5-d1664648c767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aff4510-c34f-4a7e-9b8c-d0e74d0cc561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc80135-1765-4c9d-91a6-4bae04760a63",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d469564-49ac-4ee5-82ee-7a3330aa720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f146488f-a093-4a1d-ae6f-07879a06bd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e91c7d3-3382-427c-8c69-e0cc82a5424d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d35f2c36-d9e8-4614-9bea-9e1325198083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04962d11-c29a-4e78-aa36-e4583ae93f1e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb2b94-5cc2-486d-960c-6d8dd2607fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd93cd3-fde4-447c-8268-6f9ccf7d1db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bf173a-9910-43cc-8d0b-78ee760ed58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d397ef7c-a7bd-4f8b-8533-f119e2f209a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66462a77-f585-48a1-baa2-add71fbdb7e7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b49706-57cb-4015-aa6c-e1e65ffebe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f407b958-dc14-4c41-84c2-77cbe5deb01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59935a4a-e6f4-4ae7-9f4e-c7fb21f2c31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36017f5-1ed2-4bad-a12f-0aac8cb824a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bd053d-b914-42a2-9f2d-a5af7a72e8b7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fd51db-d200-452e-b4d7-b7a40d540923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9379266-1f3a-4f9d-b9a7-8aa4665d1553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d15b68-7d3f-4586-ba0b-85308571b2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b33c7f92-233e-444e-8aed-529dc0f41c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4babcd21-82d4-42f2-83ed-450d712da985",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02669296-6615-479e-bc22-e79a30fd6ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ea8b45-7bdd-413f-8842-5694ae587a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3993157-8081-4dc3-bb60-3fda7546a25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "865d2030-1324-4426-bd23-0deb2241f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58d7b98-d305-4886-b1d3-218dd56b196a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1aeaea-d51c-4081-97a4-05c34b03d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff97772-fa95-4c49-8160-9ae589fccf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec365bb-29f7-46a5-9a00-c1682e2ed5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db3a5f8-12c2-4075-9f0a-564cc8f2b441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3ea390-80de-4cd7-9da2-9ef2a9b3e704",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a190d38-22a4-4f4b-8dbf-ceb719d37bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f826c5-b11d-4035-b5fe-5212c6d15e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5580bf10-25a7-42bd-b166-aaa32fff5ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f76f9eec-51ef-45a0-8644-0a5ad7e94238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cfb347-e626-4c82-98b0-004dae192f7e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b69409-7e06-4bd7-bcb5-23321e0facac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5fa7f4-9979-40dd-9051-925864d7726a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb08457b-4016-4c2d-a3df-a497a87f686c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "337432c3-ef43-469e-ac74-f214a30ec4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fa2851-1baf-4129-b669-ed009bf4f443",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5735b20a-52c6-4468-acd9-adbf0a0dc6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4df60a5-4d23-4d5f-a8c7-397e00994f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880a085d-bf67-48b6-b5b2-813e58f37fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68b2151f-9a37-441e-a8fd-bd2e3f823cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c852c4-64f7-49ce-b55f-1fd73b6d1675",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6dbd2f-acd0-4bd5-8bf6-9b289a52d46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0616da13-e69e-480f-b8ff-1cdc596ecb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fce7a4e-e51b-421b-89e2-25f0cc3ebca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc464d7-9cd1-4ca1-b7cf-bc25f13156a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaeb042-8e79-4098-a1bf-3b288643dbe6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09f76bf-5c4a-4179-8ef8-eef988b3f1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fa8412-b171-4a66-b04a-cd24ba4bc8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa35d6b-48eb-4f45-ac16-634b16fc68ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "080b007a-4c52-46e3-ac84-3c2489db5021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71de72c-9e56-4460-8277-ec0a3398b424",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa0275b-2157-4c1a-84f8-28fa944e2a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc2a144-0d7b-48bd-920e-8b512dc9289b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764d4797-df84-4494-9b10-78fa3f4d9737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "258de938-6b61-4660-a555-d7977321f2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5546242b-da37-4109-ba56-3a68286c7530",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fef938-8d90-49d2-9178-2ac058d3c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab9d4f1-09f8-4ef2-ad9f-f050dd2d15cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3381a09-9446-45cb-a4c6-433c42dbe920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5915565f-8552-4e29-b768-efe55b783886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa14dce9-461d-49d6-92ae-044aea958c96",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0975648-9aac-4b97-aea7-87fe982ccbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d833ac64-c045-4cae-9514-0dfee1bf70af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5004ad00-9a4a-4e05-9399-2ab9610ed871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "517a211c-dbae-4652-8f05-c0e407eafbaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c84c4a6a-40e7-44de-9f66-525e7ebb86dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3cd1fb3-0047-47da-8147-a79141fa0cbb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811c1510-2174-4684-ac7e-2a9f9d638026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6df1057-3453-4f70-b578-c5893a8b9f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe07ce2c-7a75-4e2d-88a8-4d1bcfdab493",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d7db4dc-993a-4b55-9cee-b915cb58ffe4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c3ff5e8-32f5-45c5-a01d-060ae82f5b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af6cbf05-4bfa-4099-9967-9e703a88bf7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d141c4f-3153-4ed0-8264-35f49b51c5e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f27183f2-b43e-4988-9e0d-959f1f3d6543"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c0c7eb4-67d9-4c5f-8da1-150705727e2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "598a6832-b8b3-4f83-b31a-69e78f80ec3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64df7884-b88d-425a-91a6-29ff296736b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3bf47222-b247-4cf2-aa4e-97ab56e1a7c8"
                }
              }
            ]
          },
          {
            "id": "8cee3e68-92c3-41f6-890d-d5bbf6335197",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df215f65-b6c5-41f2-8cd0-f989108caa54",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "079314e1-fe2d-4cec-94cf-4d57796c6075",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed49d24-d569-46da-bc69-aa753174df0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aede2bad-ff31-4578-9cc9-028b3ba93ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237c70b3-27e4-44e2-a64e-b6bb849a9069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7100cac5-6a32-412b-83ba-40bb6e13e36a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d30b999-d58a-4ffb-a637-ee48c1f15873",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ea9ecaf-07ac-4da0-8831-38f7cfced19c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "907cc129-601f-4719-a695-25671f8c9a46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "082ea5ea-b44b-419f-a463-8afc58e53c30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bae024e1-beb2-4050-87f3-0b0f32597862"
                    }
                  }
                ]
              },
              {
                "id": "bd052614-6979-43d0-987c-10c364c6b707",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "048ae3b6-2eae-4d01-8f91-d98bb46e4bcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f0a089a-8dbb-464c-80a1-4c3c516b5510"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0dd29c1-f5e5-423b-be81-8ecdc068609f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "02f3037d-2386-491d-9a16-e803887ee4b2"
                    }
                  }
                ]
              },
              {
                "id": "51333ee1-4a07-4cef-b05e-797765362698",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3ba5f8f-f11a-4f16-9e5a-dd364424209f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80c436cf-740e-4989-9b9c-bdab53455f70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7047f3c8-f1a6-4fca-8652-3f2c83d23bcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8788e621-7d4f-49fc-a2c9-a92988626068"
                    }
                  }
                ]
              },
              {
                "id": "c0732797-0023-4d7f-baff-ca45cc81457d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69e1ed29-3ff1-459a-ba20-ef26fa547e33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "092af9f9-1033-4fa0-acd1-5458e2afe0fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "862de50e-fa68-4a07-ab99-10e3208d0167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7c6b760a-5374-40c4-86d5-eb3ebb72062b"
                    }
                  }
                ]
              },
              {
                "id": "3391ad75-1de8-428e-b1d3-b2d36b3758aa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb5f951a-7a71-480c-9732-0c59130f5018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d9f52ce-a9c0-49ca-bc2f-576f4940015e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "613adf6a-da55-4a13-b153-bfe75d754799",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a4550ae2-682c-4751-a56a-00e679f29a02"
                    }
                  }
                ]
              },
              {
                "id": "33cf9da2-7b55-434f-9439-f1546e0598ba",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9688a02d-25a8-4d11-9428-42547052881b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7198415c-bbb6-4d1b-b726-3706d2afa4de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9952793c-3c3f-4e12-9ac6-716de1b8208a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c235cd03-9a03-4268-b11b-272798cd1c4e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac0a1085-049f-403a-98e3-71c9b840e54d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5bb6b4e-10a7-453e-9190-f552c51b7085"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06c0ab7b-e18f-44da-a063-bde9656c296d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "118d5723-8228-46d7-91b6-8e79b87f34d2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4e25d61-b03f-4b65-8a2c-b37e5ce296ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7b6104bf-49d3-4153-981d-a2a24e9b0a50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab32823c-63c1-4ddc-b248-67e732cc4864",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9131f41d-af6a-4f96-87ce-60043174a91f"
            }
          }
        ]
      },
      {
        "id": "db96efe8-3dcf-4235-b2d8-309180e47a98",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2f377c10-643c-48f7-94a3-ac8ed1fe58b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03dc9f5d-8cca-46c9-b380-70886af3a29d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6c06fc8-9d2f-4b7d-a956-a538b04cf1fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21bf6f6-c635-49a8-a4ff-872e31b8df24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2a7d5c-268e-40ca-b725-c011a8a92c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dd665a-03c7-4a65-9f54-5ee3fc90daca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b51745-bb86-4865-8a6a-a3f241b2e7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d36a498-19c6-4372-9cb0-2f785c834a04",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81de2f95-7c75-43b0-9a1b-c420b9cf4138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2a5529-77b1-4ba9-84de-9b400df7da8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5439c2-5b24-4eb7-8db6-3ebcc6b760f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05af918-03ae-4461-93ad-1afec5da7924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2f4c1b-856f-46a9-b850-9e40945b60d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abe16b6-1c03-4ed5-8ed6-de6d1957f163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdb31b0-51c1-43c1-af86-09f6db3cdb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bfac53-fe6f-4c63-a5b3-c35fe43875ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74a7f10-dcde-457b-9485-0aecaddafc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c7d497-fc8b-433c-9aca-6c0855777d6b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3572f92-5526-48b3-ac92-ee7be2a23071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9452e5e-bf90-4aca-a6a0-cdc2f3805258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f012d7-ad4b-4d45-9b83-1b77c908bb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "592a33bc-1381-4cd2-800e-188ca6459ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ff26b3-ad0e-450f-a35d-5637e1f4968e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ac6ff3-1ea7-4acc-82c4-a32f593a05d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb5baa9-95c7-442d-9d24-04561a66ec10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f0c829-ebca-4f99-a61f-a774aa89ece1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89251bb7-9f27-4bc5-9a5e-a1c42b57681f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07f7d6c-76f0-4320-8e16-43f51847df25",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b30d38b-ca2e-4797-ad1c-9734fdfaf2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c914118d-7ff6-4e32-a6b4-7173c9b7f4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e31872-853e-4336-a302-d0caac22bf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dee03572-b8ae-470e-a8c9-c34e97ba744c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093b8930-dedc-4e9c-9656-5d47d903f256",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dce74d-d11c-414f-90d6-9d58c67f7979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20efead5-854e-40cf-b1bc-86d1af984bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7443721c-d270-46c5-8fc4-42d0154e7e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b29c4c0-f02a-439b-9e95-a984ffb466fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767a53ca-4f8e-4eca-ac37-834909632f6e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f553286-8985-4937-b871-ce3be4c33e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7733ed8f-4243-4db8-b544-92253738dee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628378df-4861-4c70-986f-a65df3af31e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4adcaa-03c3-4d85-9cd7-b690fc604f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e60c42b-4a43-437a-8174-64376cc0d535",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423f4f5a-f4c0-40fa-92e1-8f4ebd107943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f227e1e-58b5-4101-962a-6be3c25104d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875aa972-3c37-420e-943b-0d5c0636e007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "167b33c4-b4ac-4864-b011-4dc722cd1ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba144427-f89d-48fb-aa34-c082ae448015",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9d996a-e571-40e8-a7c3-75ed2b16b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10894daf-ba0e-4831-8fb4-96de9013af40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde22ab7-8684-46ed-b8cd-0e084e2f8dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9864d57-c6d9-476d-86b0-60a425f69ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f7cc7f-52f6-46a2-a84c-ac0ac8cc04b8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6733e4-bec9-421c-9a4f-91a72526a783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b724a3-ca72-4e1d-b3cd-43833414480e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e9b887-19d1-4ca7-856e-ecda9bd9dd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b5559750-9b6b-48e8-bab6-253bef881bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5f9c0a-edb7-44c8-8cc9-b09a6eeeecda",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c8d412-a156-4fe1-a1c6-2c53c8a5bb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30606f6-2368-4b9a-96d9-c18766603587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9644e1-7e6d-4ac2-b1f2-76e44cb8dbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59a29b5b-facd-413f-a956-4b1adb73073a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c28e83-dc13-4693-a268-cd90ee5ecf1f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d56bdff-5bb0-42ec-b710-aab77d4b01ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1257bc1-b23c-463b-825d-079e25c49c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c7b201-d9a1-4508-ad77-1ce7c64f2ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96eddde1-5a5c-4395-8db2-cc48709c94d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837793c7-1484-408a-a94a-596e1f578682",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41f3f7f-a40d-4a1d-9d8a-28115add8dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3e4936-d4d8-4b25-895f-dfb428006a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec74178b-3702-48f1-aa17-78c3b35afaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da0e24a1-3c6a-4393-9bcd-78c0f0b752e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106f17ab-dbf4-46c7-b920-fda8e1c05663",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380142ee-1e0c-4f7d-9abf-ccef9ca572c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3ff906-bade-4e95-a9d7-63c40f8a35d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406ccce5-7420-4fc0-b04c-d04da7ce1f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "63dc0fc8-6bc4-4d7b-9ea1-6e0932008456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2420d560-1411-4f87-badb-0c8465e717ce",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46e87d5-ba98-4cb5-9f1e-13c5c6e2996f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4807c7-8cd8-4720-840a-8b76759af38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923aca65-1ab0-4fa8-8441-121ef90f17e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ffe541-efee-4bab-989a-d77e454337fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0157f4e-7469-4580-9c27-d3bf2b417dfe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459daafa-53fc-48b2-b515-2790d2f2965b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae269216-b04e-414d-bd75-4fa12d3516d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9748bd2f-50eb-41a9-bbdf-ff5c53dc3af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "810e7e0e-69e0-4665-85ca-105aba410d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787c61b4-f67e-47b2-a171-ce196f34d1a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7385fec-250f-4abb-8704-0f1dba4f007c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd5a91e-2b8d-4987-9c12-5540f609c658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9202fe6a-007a-48ec-ad57-c675b3a64d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dce346-56f3-476d-9465-5815ac4bfa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ab50cc-7689-4baf-9496-1bbac70d2b8a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0d5cc5-d5c7-48a8-ab50-3d9e66b82ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d5bb74-2e79-4c29-bd90-2b3487306a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9754efd8-4f45-479d-bc9a-5764fafe5a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df504d15-e125-4f2f-a9e7-78b8034d4cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de08458-e7e0-4736-9031-c71c3945fcc0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c675c1-dc53-41c9-a03c-81b83d449657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf308026-c2ec-4437-b916-bc954f4a569a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19af408b-cd68-4fe5-9579-ed6e295a2425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2317c2b7-0b2b-4d2e-8d73-7565c5aa484a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9c0c1e-64e7-42ce-a57a-25cd413062fb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb2bbe9-8bff-46d4-8ee9-f844a421a0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b08f389-a0bc-4a79-839c-8fb3b7c339f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4169191-11e4-4814-8eb0-7996505fb2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fda372ed-cf58-45ed-9076-991780ae97ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214f2148-8242-474e-8f0e-6b6841768832",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22b8618-cfab-4112-8234-e6f216f4f9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b096df-561c-4fe6-ad25-ecaedb53dc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dcb594-507a-48af-b82c-6214a1113a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c9491e-2400-4e45-99a4-3f92033a76ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a28216e-7d82-446c-8b6f-f0b9258cee07",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2fc975-b7a3-4348-bfb7-4e14fea61e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb46289a-d347-45f2-87eb-4f53c4852a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4384c4ae-d332-4305-a4f9-506c3c7dc5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63f2882-79b3-4ecc-8513-53cc7a6d612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07165d44-56d0-4b2a-a7f5-8af1db30e06d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c836eec-2d0d-42a7-9a91-14703e1143a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7255725a-66fe-4cb9-ba40-7ab7fb6cbd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648d5aee-2096-4f09-8e85-b0b6cca28ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd0769f-f871-4356-ae16-e3ced34cd57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38982be2-3f4d-48ca-b9d4-737afcbb4100",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb25015-ce30-426e-9091-2d2cad21bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01da1417-b29f-4a0b-bab7-063bfbadad81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0510e2-491e-41e1-8ffe-541206ecddb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3331cebf-a6e4-4520-9abb-0f4eed39876a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8971128b-de60-4a4b-ac71-9c590d53f560",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed2dff6-007e-423f-a9bf-5cc86c664008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b81f5bb-a5a5-4fbd-9a6f-f7e20b8a8b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcaa0e8-b924-4ccd-a63f-c119e4e69210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "291780d4-0f16-411c-95ad-6de4939d2d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec4ddd0-67f0-4da5-9dc3-19462035fef0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a24378-6546-441d-87fd-e20dd58d8d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ea126b-6985-49d2-a93e-5724356f7a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679793fc-c99a-4337-a42c-35f1a64f7621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d4e612-f25b-4ca2-97b0-3ca0a54962d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cf0ceb-1c2e-4c8d-9754-df51c41ffc3a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca8bbfa-ebc7-450c-a980-2fbaf43da8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f97bbfa-f94b-47f2-81eb-70445de3f32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed411fe-9adb-42c7-b87a-1defe487a804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "175a8e1d-97b5-47fb-a854-6fb0f3b93ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c047c6-1423-4717-99de-402b84f9fc2f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f1aa18-1150-4b15-a9ff-c1dec9cd3778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edec5259-40d9-4f1d-a648-5b6f73258ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c348455b-4fe1-48af-9364-4644b51fcce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71da2006-b7f1-42a0-bfe1-3bb56ff57daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f3df31-a7f5-4de5-9194-f69cc0ba834c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7235df4-bdd9-489b-9094-c0643e8fb17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbd3f06-215c-4cf8-9a7e-12d5c15f4cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a5cc52-afa4-48a3-aa97-e677fc1fc295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7288ba5-e7b1-422d-9c90-3e3d57e06381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81af4a94-2936-4991-95dd-8a03a0558878",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaf8cd5-7fec-44dc-b920-1e947b131bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da316404-08f9-4939-a273-2122787601a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3710b702-e525-49e4-a8af-78a5104366a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ab7b48-3277-442c-b293-c0c35bdf24ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db1a40c-be7f-4584-b166-e83da743cd07",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a20f59-9dc1-469c-a848-d525bbea0619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fd8dc7-134a-4ab1-950e-648bb47dfeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d23f86-6068-45b1-90d7-34c78f9fcc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd92dbcd-d1d1-49f7-b8cb-12501448bccf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5527bcb9-7c01-4036-8ff8-3122f0e007f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df6acdf8-e03c-4b44-83ea-1d8fedca9aaa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe6cad0-313d-468e-9324-58cff61d12e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbac1a0-0842-4b93-948c-5726d5df7072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c9354c-ed6a-4aed-bad8-653e42ef7a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98377316-1af2-4979-bced-f62191a41f6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb6cfb70-55e8-474f-8972-d7bcd9490cb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "777e1c35-0d2e-465c-93ab-127f1888c3d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57c9432e-de7a-4612-a6f1-e854639695e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0e086bb-35ed-43ab-b73e-8bec51b997b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d17b96f0-8a9a-46e5-a081-9b5a2f320808",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "564827f8-585c-415f-97c6-856caaa10a4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3676105b-3564-432a-a03e-4aa2c0500bff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd5033bc-bfdc-4ba4-8066-314584f45334"
            }
          }
        ]
      },
      {
        "id": "0c636dbf-4503-4c0d-a862-fbac7fd0b59e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bf4c1111-a02f-4a28-94c9-f32d85947073",
            "name": "Negative Testing",
            "item": [
              {
                "id": "148b0aa8-2669-4ef1-97d7-41c433cdebd7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47ec399e-ab08-4bcb-a286-8801f2cd8e5e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c42475a-a1cf-494f-8736-bba0bc184979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14324b2-f8dd-46e9-86f3-87ce9cffddcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91262b0d-067a-4aab-a621-bd13afdeca08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "739dbcdd-6f82-4393-98fd-68b3044f8877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6feb07-6e28-4f01-996b-5fe8dacdb95c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1e92f0-091c-4218-8ad8-6f0b4e3c4721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65aa1507-af37-4844-ab8c-96b0766d53d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1437cc-470c-4682-97d5-6fd14f370071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d915df15-0c5f-4d35-a3b3-6c239f2806b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cd89eb-bfad-4e27-943c-cc43cf39fe23",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e14408-b861-41a7-8760-369768fc3f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4d3a9e-e2dc-430a-bf64-e63aa76faad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cce1c0-85cc-4c9a-a9be-e0e58759889f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ef9763-af98-4312-b2f9-03f0a89231b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b689292-fa33-47d5-96a1-4ac123f1ed4d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b173140e-61b3-43a0-a19b-34e87ccbba71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d33810-10d7-4a8d-a425-36c65facadec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8032641d-1327-47f5-80d9-35a06bccd828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3239cf-6a1a-419d-9f6b-a5fdd13a0314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f00172c-5e6e-4f86-afa3-9b5f4c39643a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55236075-45d1-4b10-9231-815dcf744736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37815520-9fdc-42b5-834b-22dc47b3238d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef47fa1-90ef-4704-9a60-395546b288ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a342ae-d1c9-4078-aba9-f7b70787fe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c339ad35-86f6-48aa-8f62-c2be41892189",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbdb142-4c9c-4287-b969-844c6e910219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9dcf35-b5f2-4cc0-a880-e5f85f8f1ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f15d89a-39cb-454e-b532-09ca8a76d2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a14ceb-0eb8-4c8c-abdf-14999adbc545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a804f4b8-61d3-4def-bcff-4d75eefbcc42",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bdae2a-90b9-4124-88cb-61cf6501fb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0554ee2-97c7-4400-8ae8-c997f096778e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8d4412-1af2-4827-9e11-6a8ec8947f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b28aef-8aac-40da-88fd-ce3e8209be57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77aa4a07-dc2e-4506-a390-74f32b7d7d3a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c63e0a-d75f-46f0-bfae-40c7692304aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea34336-6fe4-4afe-b42c-035a0c3d38d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77a66b4-3de5-4a91-90b9-94176afea9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "715a13d3-1b40-4d4d-ac97-2f1b6412bf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c12b328-8072-4025-97f0-b32a191995f1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c207c67-48c7-4d0e-8efa-701e9d5abb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0696661c-edc7-42e3-9bdc-ef43c34f9d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1abc9e-1483-4e03-8f4b-158ad26e8392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e100dbdc-2274-44cb-b74e-9cb187d80600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e20c1e-fa0e-417c-bbc6-fc1fc81e8650",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ab33f5-99e6-4149-825f-a7d7828ee147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a0fdc2-c283-4d9e-90f3-029f1fb26bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9255e588-ad16-49eb-95eb-15f3f87a059e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05902bec-8eed-4053-8b80-ff001765bc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e22d4a7-5722-4c44-938f-133d88f0a131",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46eea858-4f66-4fdc-b65c-8105bdc6bea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40fde63-4aed-4057-8337-686ae8b1dbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e564838f-cbe6-4666-92a0-219c9785ecf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc80439e-798f-4606-b070-62f19185ede0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876eab9c-3710-42d5-90da-2d18039ab737",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e50ae0-3a3f-4cee-a0fb-0a411403ab73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfaefde-737a-4fe2-9a6d-fc8c7de4d45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3939164-ab5b-4ab4-8f3a-b3079b63ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8ad09c-3eff-4554-b20f-1383a5ba81ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca658e5e-7692-45a0-983d-4a8a8b22510a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b142d619-d847-4dd8-a21c-1c24b9ad80bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d08f89-1300-418d-8b42-efe4ae0d3b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f421613-6cae-4f7a-a6da-926b3942fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c27391b-0efd-405b-99f6-ca141cbaebb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0c683b-dee9-43c7-94a8-91e4bf54cf41",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f813e0c-9ba0-486b-b0d4-d99cfa4b93fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f92be6-60d6-4d2f-a830-1fa9e7f47f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a6a7cd-0ef7-4ce1-b873-95211fcc342a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae1f881-89c2-43f1-84a4-3c1f8df7a90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc4824f-c447-4399-90f5-cdd3e276971b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4e1a93-6b0d-40b0-aa2d-e795756a6e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7993e55e-d51b-42bd-9848-c2966573fe78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846d05d5-e644-40a4-a858-614af092d0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "211adf79-fbde-44f6-a74e-e6205b09962e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e47109a-d8a7-42c0-809f-5790a1fcaa26",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77806143-68ad-48ae-8639-cf7bddd0e39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60859ad9-4064-4172-a8fc-475aa7b3f140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3cffb1-2eaf-4794-81dc-083479daf4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee934bc-6a86-4e64-a0c0-8ba635769bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305990c2-5278-4b0d-acf7-8924a54dde00",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c28b18c-a3fc-4965-a2eb-d1e4351e9c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c05ebc5-9744-456c-8f36-d7bd184561e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23157725-1848-4c6c-9b50-bd065dc0d411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9214865-6b96-427f-b4fc-82bb30e0ee70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa0cfcb-20e5-4020-9b40-d596685625f7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27990899-62b3-41df-86bd-968a8b0e9b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad426f0-90b3-4de6-8133-13ee8c8b7f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe4283-eb43-43a7-adde-103654fcab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "129e626b-ffdc-4078-beb3-7726bee3c402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30844d9-da41-4c92-87af-b9feb941fa6b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b8e690-9aff-41b4-b97d-3771440657b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a997dcb9-385f-4a59-8ac6-06a2c143bda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b16981-4b1a-44fc-b0ad-e21c47f4e509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9206d3a5-2199-46f3-95e9-35229a2a4620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed3121e-73e8-4b3a-af06-b30a1a1f48f0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53e9b74-f69a-4457-989a-7d339901d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a02fa68-1b98-40a1-9ba3-383f077a4041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275b0be4-b358-48ed-b7e0-607ad63baae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3edbee-2fbe-472e-b256-28d7cf9120e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1ddbd5-7e8b-4f47-b863-0662569d4b6d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574a6655-b0ec-4954-927d-bfa981e03622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63d0796-d179-4643-94ee-50498bd5b226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a668c14-df59-4741-bffb-2cb13a4504fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92eea848-4282-4175-8c74-f359868d94d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27a758d-3f53-4621-a4fa-0aff715f88c4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa528a2-787a-4802-b3ad-d59f0e2fe056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37919a51-f864-4a5a-b5ff-565cd954c050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5612b3cc-94de-4ff5-95d1-c3db0022ef06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b062c3-b0cc-4c32-a8c1-7b9aaef7db11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce641dc-f177-4609-a173-a8bf516c1761",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0863cef-5059-45dc-92ea-44b91d4ec191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd70cf6-1847-4941-b7e0-a50af5cc5172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c93cad-2af6-437f-94d7-f0e47b29f090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6328b5eb-2732-4a2d-bb05-b142116007f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf775af3-9f40-4a96-8981-7cba2dd34dfa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243dcbec-5dbb-4f20-8dd2-6afd9e1c8a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a98246-d46b-4ca5-99b1-ba3974ecb196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbee9c0-0480-4999-a419-9a1527ce8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec21536-c574-4c3e-9d7b-8af7afefefc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f51f76-223f-4a21-af7d-ec9cb9a0457d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053cf165-5d72-4b4a-9dc3-1b6d1c88022d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d253bc19-bfab-4c42-b7b6-f59a32fc6496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20679c91-3d72-4a54-9817-6d2c38447cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf8507e-429b-4287-8ae4-1e0b079c882a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058796ba-45da-42e9-8d25-c214d9d9f968",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecee1212-2ccc-4bda-95eb-daedd5c005d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a442d507-0cb5-47fa-9e4c-ceed25df8110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d23d862-bac0-47b8-9adf-f7cc3a5b9e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f5de39-a606-45cc-8b0a-8a16793e9ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa93d6c-781d-4b16-87b1-7449fad04f89",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b24ee2-6fee-491d-bd9d-33badd155446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d079ad-c019-45c5-822f-c2a458d4ec6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efbebbf-508e-4006-b7fe-cf36d75b97f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38a8148-add6-4d55-80c4-acf6977dde7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7805811-f53e-43fe-b22b-10abb8366c58",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f18d614-e757-44ec-adff-47f59acc5b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e319d738-3154-437d-a655-e0291aece4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e5e4b1-7c01-47f2-af72-ed8f9b9bbee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b53f0b-73d5-4914-80da-130ce9be3ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc472736-a020-46ac-8ad2-a052e320f891",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc71a440-1558-493b-ac26-86053ca59414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cdffb1-7c24-4a96-9893-d83b152ceb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eccc48-737d-4b58-b86a-b1f126ca2bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7831c5dc-0777-4eab-bc5f-c8612c289c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba386ff-c6e3-4cb7-812e-c470948b74ac",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0754e985-043e-474e-b548-09886a3666c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8837e7b-bfbb-4620-bade-8a6ad894d5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd668b9-79b7-4853-a5b3-80da0d5a4c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2054b15e-1d99-4b9d-b919-8f5d0c7acda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe98fd9-2be7-46ea-ba55-d95c2519fcbf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380c2c2f-ae96-4251-84ef-682d477e9243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afbdcbe-a5a1-4091-8c27-604ba3804df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ba2a61-3fa7-4023-8233-9791dc84bce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79433985-d807-4afb-b049-085778ac45c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9ac119-69d0-40dc-86c9-340d2dac591c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f17b84-0f28-4d99-9602-f23478284ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8847a013-ade7-407e-b15b-9d052fae4819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3468c9-eed8-4c26-924c-afa7ef1d94fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd1a228-081a-48d4-9c4d-09b6561d82b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e00c951-b68c-4f78-8cfd-86dc3bcefc8b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff35c7dd-5855-4efa-af75-9a9afe561e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5b962c-2957-4718-8638-58a0b1f8e1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a385a47-1c94-41e8-a93a-a4488f700631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6163f3ac-10e4-4269-8f3e-ccdfa7e9b417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e5bdc2-f56b-4a19-82f2-4dc612ef4827",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94647ed-db1f-4d00-8026-e32f4fe28e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fa6d0a-c707-429c-93bd-4a44cf74ff9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00c6190-4472-4097-adb2-880aad002839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb7b239-c99d-490f-a496-329222070356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b47a180-bda0-4793-ba56-9e4b32bc4f02",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a259904-47f0-4558-92ef-b09330ddec23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450ff4e3-1311-43ab-9fd6-a011a0ceab07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aff251d-8172-41e1-8903-3750c44022f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72735907-f36f-4c53-bb0c-5598710f644f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc41370-0804-4d89-9ff2-94ff85f4a59e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229a91bd-3349-43a0-9d29-e53a7d88a98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c64547-bde8-4518-8831-0a310ec94137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15108104-9a29-4b69-9b49-137a484ea1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be544a89-fa4c-4c59-82a7-15f3fd32f7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361738ad-435b-44e7-abea-5703840c190c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebc64e4-f886-4d98-a93b-8b85b5034911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbe5ca8-e82b-43db-a8d2-3f273abd0900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae03fde-cea7-4fce-b411-836510ce149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4288e00-a5b1-48e7-9f43-80c008a7149f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d96789d5-366e-4e97-8cbf-3b9ec551c742",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e782117-7277-4698-935b-f1b373d1d03a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c3cfbc-a64e-43b1-bc65-c592602056e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c68a01aa-826c-4960-b990-0a2f9ccf4423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aabd9e-38f8-4ba4-b1a7-8ddc3be7b4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec432bc4-459f-4226-9f94-598e43fa6e3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9b42cbf-5132-4b04-bea9-d7bae76c2eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1b6c7fc-6963-470a-9de6-27951392243a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1760ade6-5194-4bfe-82ce-3228c861d8e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c05b800e-31d4-43b1-b290-0704e72b285e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eaea9372-4270-4c2d-89f5-04789f671e29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "430f94d6-7693-4820-a255-6ffe416130f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a4944cd-7f2e-40b3-b0b4-b4c020681380",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3de78faf-1026-490f-b078-6925c502812f"
            }
          }
        ]
      },
      {
        "id": "8f571bfe-c04b-4cc8-b17c-3ff2f6cbab86",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "57879550-ac1c-436e-9614-75b6a7d6ca7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "647df267-c961-4561-8bf0-97ffae7eaf46",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48543e0b-a938-44b5-9bca-eea13c4bf224",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b427bf-e76a-4a8d-9ffc-d63878707718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26f1fa8-8fac-4739-ac43-40822e0624d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8b7f98-98ce-4860-8e9f-69f9c8fa3f6a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d884d5-3d80-4f0e-9aa5-b89f75e4e507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90cc1a5-afd9-46b3-bddd-f60f2c27cfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c98d3cf-1c00-44e4-b679-e8036891aa25",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85db5ce-0583-4f65-af2f-62359174ce3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419972ce-8bbd-4f94-878e-de11cc9fa901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d0ab40-4b8c-46a1-b264-54807fc6b0b3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ebfc8d-4762-4370-b687-989032a504c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256216fa-d09a-4ed2-a161-393a15cdac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d282fe-a1c6-4fe4-92d9-05cd160a121f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500f0736-79ec-41af-a77c-9a9617f5ed34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87c1ecc-6ec0-4bea-a36c-2630e4bbb8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181b6ec6-c976-4ea0-baf1-93dc1167c761",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b57104-310f-41db-a378-a549ca8d7e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1d47dd-71d8-4f26-bd20-ea3ffb28e4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a1992b-4c9c-4d2d-a471-d264c7c7c3a0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5427e3-780f-4f5b-a491-b20535cee18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f861a5e8-eff9-407f-93ef-e8568862a99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5ffb12-8426-4bfd-be7e-7e4fb8081208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a46e8d-9e34-412f-8f31-61bb3f916ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6257fe-44e4-4fcc-8293-b4de893e0e5c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ced0d-64f0-4752-856e-a6c589afd21d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa54c5da-321f-4967-a71f-e18982bf6a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543fef42-28e9-4461-8e85-eda217f6f941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5264e521-805e-46f7-8d10-f344dcdd8049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fad0598-7f17-41cf-9edb-6cff366721d3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a23138e-6184-4321-a01b-b3f679bfdc63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0330211-97c2-4402-9885-713c2fa75dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cbf79c-0056-47cf-80fa-7ff7954e42ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67270635-b108-4ecb-bc1a-c9c9d993821b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e0a244-4f27-487b-9575-ee2635721278",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f55da2-56c3-490f-bf8d-03ddf9b694e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07719986-3bd2-4138-b5a2-6ff0c986c826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c432e4-44a5-4644-b42d-0ab125a4ed61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c64b5b8-1df0-49ca-8367-38207861fb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c919e9a-4f9c-4b32-8331-ed3bc5176cbc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df00f18b-c533-4fce-9775-161632edf6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2a9dff-8a46-4459-a2fb-52e702c05a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9eb63a-8766-464b-8d35-317bd920614f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10c55ee-1b62-4089-b435-f068321690b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12126ac1-6ba1-4ee9-8715-c6600fe94554",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5691b72-e61a-42a3-bb75-e86af1329121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48ab90a-6c68-41bf-915f-1ef5a5434353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a3ff0a-629c-4bc6-9df9-344d090f4536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa08115-5bc6-489e-8694-d8c1606f3bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dda840-4310-4943-9c36-0050368ac7c0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8308dc05-0d74-4474-91c0-1171335feea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40e2bd4-6994-46b9-974b-a7aa3d6f0f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aef1c8-7b4e-4830-a9d2-fb1554b1a468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a49b8d-ead8-4f07-bd5f-647a57caacb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fa20dc-18ca-4e70-b1a7-4b993a56a39a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234a1c3e-af44-44ab-ba6f-6278484f0903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f2dd20-6d1e-4f4c-966a-144352cf0123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635196f3-7e64-451a-aa31-35b70f8dc5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98b15e8-231d-47de-a2d2-9b729687f22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5ac28b-5ee0-45df-a9f5-b35b57274d38",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f942db9-18ed-44ae-bad2-d09346eb9f35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e641652-decb-4e93-a6dd-fc2bd17277bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2792f49e-3709-4dd9-bf87-48edcc6a5060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540de398-fbe0-4e49-8c6f-2b02f260c469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66db614-2fea-41f5-8d2b-8eb6934af0b2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecd462f-3fdb-4e81-ac98-e49b2bd6dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e97a53-644a-41f8-891f-2a70353bb7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cad361-64e6-4fa1-9bfa-11899067fd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cde24b-ce36-4a2f-9662-77abfbb5eedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fbda2a-0b0f-4986-9bbf-3b39b7254836",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c89a249-f653-4529-8cb0-97099c16cf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf1bc90-d7c4-49a8-bb47-47b1d302f23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9cd69e-5d02-4c3d-96b3-ad355ea5bb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea1b66a-b7ae-4abc-bdaf-58dc075a5ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bac4a08-bde8-4aed-b5cf-843be82ca4cd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f89b86f-9301-423f-b5d2-89662311f4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55875002-8c74-4d8f-ac9a-d30c91454f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b280782-48fc-4d84-b4ea-6869b6083c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e339def5-ea91-40bc-b06d-851a30b36453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885cbc72-20ad-422e-8b5e-81d022fe2fa6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3330b27-6863-4200-b8fa-4ab5cb506920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ef095a-5ecc-4e15-921b-782bb19aeca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0cc207-a3f0-4d54-84a6-34da43ffc4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e2b032-30b9-42ea-bdad-9ba5f77e51c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38abe869-004e-47ab-8adf-4849071b5def",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a1564-5402-4443-932d-dfe7fb7536ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbc9b90-6fbc-40ad-a62c-a28051f8a18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f5589c-d75a-4032-820a-fc0e85b59390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cadda29-9dd1-48ff-a727-2f1b99c78c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091e623-6939-4bd3-9059-2ae432598f4a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca5649c-c110-4445-a40f-a8fb8f496697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fedf1f-0e27-4230-bd08-1f733baffe86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761c6f40-d380-4d01-a82d-060a00386468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119cbb6f-1e85-498f-9a58-17c267cf541a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637a3361-6936-47ab-902f-60e41317d40f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a191df18-3737-44b5-b1cd-7428dbec0042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028bb887-5dff-4c33-8666-1151d6fe5e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4271a0d7-ae31-41ba-9cdb-322cf6956950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d853c5e5-f3bd-4aed-8fe6-06eabb86303e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a184f18-d4e0-43fd-b0e1-6e2716dea0eb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feaf5a4-2aaa-4e56-b303-5fe77daa82ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9467ae65-1b21-4a4d-9bfe-eba905805c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88852370-fe5b-44d0-9cf8-6e9db2f707dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e61583-5147-40e9-8861-3bb83316ab1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3eeead-9cac-44ed-acda-31f01024034d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f72ff3e-1123-4520-adc5-4a3b8802abbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57006191-b291-4e28-8127-81bc34e0ff0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704fb5c8-3a1d-4572-a18a-74ceed1b00e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de2c001-3e08-4f37-aa82-e9183dae6d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a85a10-5973-4bb9-8987-81ad135bdf35",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c86bde-2145-4ffc-a11d-77e545d24f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee83d0d9-e67f-428f-93cd-fa32070c23b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de42dbc-f7c5-40ea-85fc-5afaa2bc32b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2f181c-7c38-49c8-b5b1-2b5ba9ccbedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61133c58-d752-49e2-9b66-63a755274945",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d03794a-4812-403d-aaa0-6898fd2663f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d91a2a-b75e-479e-937f-c34da07db4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b72d74-20fd-4a5c-b8a3-cc3bd58bd28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1584ab2-91c8-4862-a4c4-3e7c518fd159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c1cecd-0111-41a3-9a4d-f884d096a9bb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3958ba-9b11-4a84-b8d4-b19bbe07de2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03000082-0942-4971-be37-467383db8de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a8f907-13cb-4467-be0b-0fa6bbc7abae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85663890-ccce-459d-8213-1fa40865046a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a51d0cf-4197-4858-8263-1033a5f0806d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f35f61-7cf9-4484-8ce1-ccfbb14814bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868b6813-935a-44d0-bde7-163295744311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffb6ad4-4464-4988-96e9-885e58864316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da87bde-17cc-4483-a609-e1a164ca8f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72b7d0c-b649-4c37-8829-94778955d8ad",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00461957-a0b5-490b-b3fe-c40d9d748ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97257323-7a4b-40af-b69a-160c395d21b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb48093-3b20-4e7f-afe9-58af0520afa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5f899f-6c2e-4d07-b480-4fe4627b9077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3327e2a3-9205-4488-b43d-18770e6373b3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c871a81-6576-4cc7-9c80-6c1a260333b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f0bf05e-9650-4f1e-b0d1-a8aa0586c494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a70ad81-891a-4bbb-b88d-ef53aaa43cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8afb1f-deac-4c7d-8d15-b4f9487d922c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73154408-6c10-42f9-a871-10c406669e41",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8661dd1-c9ab-4b6d-b896-b5c4f4c1c655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c46c82-9d77-4c20-b8f7-0dda99e7aa78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cde289-1823-4b88-a793-9d4991d33e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46589486-3213-4d2e-a762-3fd562a7c07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acce2d78-8533-4a66-88c6-3482996a9f4c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f84da0e-e3ba-4668-a6d3-69ca1bc7db03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ecf76e9-e984-469f-ae0d-45754ef7492a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9eefa8a-c118-4811-b03e-fff2c778b575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf39c2e-aad8-4cca-8ecf-34ea833df2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd22e11b-7ee0-4393-8484-5f9f104f7f5b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14020e9e-5acf-47e2-a386-129ae0af40d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa2ea48-17ce-4261-a67f-040c8142c1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1699700-ceec-4cd8-aec5-7e52aec0d4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5474c8b-70a5-4dbf-9d5b-2c8ec8586ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407d6c0b-2231-42db-8c16-9bf8a6b7bc94",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88331c5-23d5-4b30-9c94-cde770d9472b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c905eb04-2cf0-4c1d-a730-4fe36e3bd6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c168ddd8-dde3-42c4-9b00-ca8d3a805a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3914ac-8d1e-4cf6-a433-07cdda8f4dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8855da86-e1ff-42cb-9d20-79ea6d5032dd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c78634-ea45-443e-b5ef-2eb6a2f3d905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7244859c-335a-47cc-aeab-b973e63909a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3225e993-daf8-4d13-97d3-5c77b5ddd224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1111a30-4620-4fbb-8a3e-79a72c572fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e831a98-dc2d-407d-9e03-0a5223072741",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18cd104-6601-4609-ba16-71cde0d22f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789ebd65-bd9e-410f-9e79-622e13334aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cc6e23-08bb-4a51-8fe8-36f7191ad217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d5a0d0-e4f1-44d0-9a39-e1846ae44f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd342dc2-d778-432c-b874-df25470d5172",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171d4e45-fc8c-4564-be67-076c1d787989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a49a2e1-ee7f-45fc-ad07-874a58cfe774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220b7fea-b415-41c9-a664-047f1238c509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066c1b01-340b-4931-9774-25c2b57bd0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3bb97b-e16f-48c9-bf2e-6502a991f362",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eadcd7-44da-4788-8bdf-b708b8b1e9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbf6661-5d3c-49e6-a83f-31cb35526426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535cc990-6672-4ae5-9861-57d924c8fcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f556b1b-9750-4bce-b4dc-08978d051e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5cccd7-ea1b-46a6-b17e-ea3f505a9442",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53d485d-f679-4293-826f-c4ec20a32d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c340b12d-b111-4d14-9b7f-ff224d47fec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a8d285-6ade-4baf-9b1c-2fcc97c6070b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258509e1-f94f-42bc-bf2b-bd19843f9922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd36b5c-594d-4476-809d-f1b393139156",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52188880-c0d6-4093-95b9-8c20bdf0b79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeb36f7-2f2f-44dc-870a-807bc3697a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8751673-566d-426d-933d-e82162abc45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f847255f-41e7-47fc-afaa-51d592717e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0520cab-7c49-4bc4-82b7-39174a045b54",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a1eefc-d356-4337-aa4c-7e16df8bbafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bad1dc-0206-4598-8026-4be840e5d8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4661db1-8b53-4fbe-bd09-b66678b6fc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab534ce-a4a7-4fc9-8af9-6e26df080b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12522266-689f-481b-8143-062b07aa0814",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15957bd0-0670-4a2d-8f23-b8d66a08b78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a5035e-5c2b-44ef-8cef-4d80b5b3645b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef68415b-1164-452e-8d6d-e7a1fc68d12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2166aab5-eeea-40fe-a5a2-8ec8e6d81ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb824c65-123c-42c9-b4d1-6088f03538e3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9253ada3-4276-46e0-9551-e7adcd157461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8671a426-2536-41fe-99da-2c7207c52bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e9628d-8353-452d-9687-c49ee5da3fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60328a0f-fbb3-4d64-9985-59a813ad14d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cd4053-a92a-44ac-ab2f-345a86fecccb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee822626-6aa0-413c-b773-0735a996a41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1994fd-ead7-44e5-a286-2f7c9bbe3de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5342ba2f-163b-447e-a725-d9a6d0db2364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dc64c8-5070-4c1a-93a9-54057635fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f33866c-a61f-42cf-91b5-93f963aa7ebc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02000cc4-b1b8-4fe4-bb5a-fe97434a3698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fb62f3-197e-43a5-8e00-a18cc5348e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a592e-bbc6-47fa-be53-34f3a5d8bfce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba8ae2e-281c-4503-a15c-0d11435c2c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b36820-c36c-4bf6-b930-9e4cd8739e40",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6165dcb0-42bc-432d-ac63-846f21be3111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf37254a-5d29-47d6-8f7c-a589988a1fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844b0cba-d338-4c5d-bba4-3016a2d5860e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83382ebe-93fc-48e5-8f5f-da0040aca43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44eacdb1-b2c0-4a25-821b-8b1a5115478f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621d4673-7e3d-4b84-8489-c9e4ebb2e904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c7bfd0-2fce-43a2-bdce-d0f09e4d0d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f6bfd0-62bc-4d5a-be31-7e072c6c7e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05052d9c-d553-4459-a5a7-84ffaf7240d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267af370-4465-4ab8-a61f-ee68b863a8d0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed58010-cc77-41dd-839e-b3b4a49fd416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fb4364-c52f-4c71-9189-020210c5b255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482d175e-90fc-4a48-abc3-d271a89bc164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc83716b-eafc-40bf-b5f6-9b0fd3d7839a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13aeafe-9a14-4aa0-8cdc-479a8b564926",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461317b0-d9e5-4b52-87e8-bf3b6fb4dddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a8dba4-9ce6-4a4e-8ca1-e4aec2c994ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f683eb-be8b-42de-97b9-933f64356531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da34de45-7196-4cb6-856b-105a3084ed0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a179fc0-0155-430c-b94c-042d04d7e676",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f456c0e5-dbde-4884-9191-b2cb79d5a741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbcb0b4-c96f-40e3-b12e-eb7c44343c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a967ae89-168e-4dd9-ae75-709d86ccf3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80adfdd-6a7c-4476-a30f-9b83becbd4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f077c2-32f6-4d82-bd80-9747785ec9a3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b972ee-cb99-49f8-8c48-1720c8f05a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9b0538-bae8-44fe-abbc-1afb7bca65b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beab2339-2473-4cd3-9952-57d08af80591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04902388-7dc1-4f7b-99f3-d09f8fbd54d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdecc9f-1614-4911-82ad-cc9c1c04dc78",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72d8017-ca32-403a-afea-72d54a890729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07503ee-da68-4941-9d5e-9cf29d087bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c006d68-84f2-4bef-a4de-30b5b231d843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84b673d-5a0c-4185-a126-8ee6f2b97ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2a430d-7aef-4c59-b767-7bbddd77527d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6224d8-7e2c-4612-aca9-041cdd6478f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab95f05b-5a60-4ee2-9d6a-55230f91d90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b737de-0a4b-4d05-985e-d6e3d33963d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855cd09a-9f16-46ca-9117-824625fce10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04e8468-5237-49b5-b0c7-dc6409259693",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5ec233-ac81-43d1-a4d5-496cb8de74e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff4309d-a377-4496-b57f-581105051550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff75657-3184-4de9-a8b8-9f7ac45af1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7c6c04-3aed-4dae-ae99-4c8f11d62160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b86fd9-76da-4f55-935c-e63094728f4f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c27e9e1-e189-4c6a-a720-6b0c7224304b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa32a5f-d579-40e1-a5e6-933d19179cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a73d10c-e534-438f-afe3-55331ff1b59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4c4bef-2b01-41ec-b8c0-da6a4fdc9b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22904aa2-d48f-423e-9333-0f52ded4a430",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4bc911-98ab-4841-b93a-bd5ca4a740b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad52957-883d-4d09-9257-751161ce574b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d973b0b9-a761-4434-9d13-2cce8ae12b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb1ea52-f751-474f-8260-f3bef6fc51bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5892db-0a51-425d-95cd-e4285f6280f0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0d67ea-3667-4819-b06a-788edf992473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeccc1e-8052-4fdf-a5f2-ab02d527c945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8eeb09-7a2b-4ea8-8cda-06a1edc2b1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb3becb-5997-4c02-a761-348281c334d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d40d82-eac9-40b5-9a5c-541f7129e30f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147a446a-78c0-4bed-91bc-c1f638842986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562837e9-ee9d-4931-927a-f378236f5368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6290df-f1f7-418a-bd92-624b15ec5284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2f41c0-5235-4f6d-8418-b67035daa4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c937f070-10ac-4e17-9b2b-1cd312bf2da5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793e678a-b8b4-493b-bfa7-d3150f52c4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586a1edc-3642-4194-9440-fffa0ec08e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14a5d49-6c08-4778-beb3-8059e54f6304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b730ce-7b81-4090-9eff-b4ba5b7283c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c86002-6249-4a96-83bf-97fadd3b020e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cca5d3-dad8-4915-b4a6-89d0ddfa10b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b21855b-664d-4d08-87a8-ad19cb34abae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d8bd38-d7dc-48f0-8ea6-7bbf653551b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09a7a25-dabb-469e-8374-f4cd5d4a298f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf7d641-fe2a-4986-b247-df0c58a43e83",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5f9e67-bb96-411c-b92f-f3b08b30bf43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5c6e90-bb9f-422d-9142-53e27ca3440b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab3bd7c-9869-45b6-b7b0-6efaa2a37536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d58392a-b51d-4245-bf1c-b37dbd46a30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6065629d-6ae3-4bcc-9bf9-eac876c1c87b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0a6ed9-e7da-4a87-8e1d-9a4a0c901c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5e10e7-041c-4738-adfa-5737faac3d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cc3dd5-64c2-46e1-a9f7-6bf693762637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa11656-e02f-4bba-bc3d-8182b425cb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affdba61-5fac-4e47-95b1-6af6af6a6d69",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e57ed4d-638d-4707-83ad-310df7a58e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045f9dab-30e1-49cf-9593-7ffe42e4b4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adebe07e-a8ad-4807-82c9-e81271fc8ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2c89ce-b02d-4870-b8b3-525405023824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44487dd-287c-4913-baa8-f008a6d88d1f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fcd3c0-b22a-416f-b35d-92f597da9163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1edb67-f999-472d-b789-196ebc0195e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dbda03-8b30-45c1-ac05-7f9cf9a9d011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22aae98-77c5-4706-87a6-bca93e126a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bf75f2-2948-4ace-a17e-9c20d074723b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f39b90d-ec4b-492a-9e47-558baf619d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b98c5c-659a-4e9e-a7b0-8c29612229db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2714175c-cc8e-4f45-87ce-622b602ec715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2b7435-7321-48bf-9362-a8f46949fc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7d9a39-50ac-4c94-9c7d-6e38537537f7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7293189-e7d4-4772-aa1f-779bf2a15ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a109c7-efba-4453-8add-84d9744d91eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a3f4c5-303d-4de4-893b-c05397e7e139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f74d34e-86c2-4e74-9a04-7c691e0ead1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cced019-901d-46b5-bc99-73b373d65454",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeddcc0d-3e01-4927-b531-caf931aaaf96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0353e19c-1b0a-4d3b-8ae9-782a172efb3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc06f4c-693b-4531-8118-1b3e45d76fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41e620c-8418-4643-a174-48ad338585a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0e9f02-1131-4271-9d53-84644bc72303",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d1aa7d-12b1-43dc-ba7d-de5688903dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f777fa44-c85a-4b52-90df-7b3a0b547fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddda1557-1731-4dc2-b524-39cef81ca1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64bad11-c448-4364-9b93-42d0b61bb46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d20509-b990-496f-84d3-7051c616cddd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbcc312-072d-4627-8310-fb401275ba4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db188cf7-3cf1-4345-959c-48ccc1746f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8abe203-bad9-4014-92a0-2d0cd858437d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3614bb-9c79-47d6-a2a0-d2b18f24acd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b7148e-61c8-490a-9e8a-095b2b8a5ac8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ddb0e5-c340-4472-93bd-c2df9dbf0dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73b9754-91f5-4937-9e2a-8b977ac41f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bf7268-df35-49b2-a248-d14079b196ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbc602d-543c-4e52-9080-8c5f92d2ecc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c20acbe-94d4-41b4-baaa-2d7dc9cfd906",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be885d1-2430-4899-bfa7-62fbdb8ca2b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df74b637-3b2c-496d-9280-39544d74bcaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4227f1-57b2-435c-ae1f-b25956e516bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc84bff8-b8a7-4490-bf1a-0fea4f4be3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbfbcb8-6002-4958-8f24-0e3ed00a538e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87f9046-e42d-4abb-b613-f4b005a9aedd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b63cfee-e8e6-4947-9973-2ba247532727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf16900-2ede-48e7-9709-fa039d33a302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c833b9-8747-4af6-8024-5e3fe9805353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4ccb0b-5329-4f84-922d-6ca327fd8871",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44939ff1-9cfd-400c-b2d7-284f3f4f0aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c1eb751-80c1-430f-aa26-81a74551cc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cfbaf3-ec52-4e66-8723-f81a52eddf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85feb1be-8274-4409-850c-6fb8c4a11160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cf79cb-0281-4e3d-9a7f-5bf5b1b6adf5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a7bfb6-5eb0-4a8b-927d-5553b2f76e79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76134327-b63b-4025-9a58-b0e7f8f69cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e0117e-250f-4802-a8e5-336b5f098fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf9b972-d1d4-4311-94c3-bf2fcce07c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a18712f-7486-45fc-b61c-40834b9f19c0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ae281b-e1eb-4b3b-9050-43f51504b7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74668044-13f3-440a-86e3-340905d46874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08e9ccc-d6d2-423e-bcf4-4d828618b45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2347768e-39f0-4b4e-ac69-2c0b2093d2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aa4773-7635-4b0e-97cc-ba4c1e2badc0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2a76a2-0066-4b6b-9dc5-e97c65ba07f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e6b87e-af1f-4f47-b1be-2f4d7223728e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a940bcb7-9e1d-4123-b1f0-e290c475107c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9274e631-3700-4f74-9e3a-8963d153a836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb7797c-250e-4bf0-bc45-3b87e7aa3c89",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467526fb-3e65-4abf-a762-2e5a7d4acff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff066ea3-4d26-4213-9baf-e71337851185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6b55bc-0c0c-470f-b4e5-1aa9b2675fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb1caae-67a4-4b29-8ced-bb7b8094383b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01159ffc-b92a-4e74-8d91-2875f4772837",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc28ca5-43d7-4332-bcc2-b79b6ffbbfe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13793b8b-7805-4507-8b8c-0ecb3742d2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f457b2-25b6-4c20-9dd2-5e37ed7b7083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bd6eb3-5a87-4114-9a95-6b199b40c585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fa4947-86ce-429a-882a-f955693b1b12",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1903ea4-0bde-4b4f-a6bc-48edb6a867d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1283e481-e5dd-4978-84f3-99a62e0c66a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23873b4-abf6-49b3-8691-5ae25d8a6b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a07803c-648d-482e-ad74-6ba458874c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435ae9e6-c3b2-4472-ae23-bd5c9e325ea4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d547d1-a9f4-48ff-9fa0-bc9cd0303526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1238991a-e095-4ca2-bc85-e3492b7b9f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1475ee-7777-4880-ae68-459476e8aea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d226272-e8d1-410b-a727-8a858fe8ed87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82d038a-42a8-40eb-aeda-b9d9430116fc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d35b1e-5b58-4153-a033-1d54008f8319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "933d593d-0481-46b9-a53b-7023a9f67293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8939f3d6-93d0-4ec3-8c95-1a8a75155167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a56a44-080f-4992-a05d-1c389a58b639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6197a205-a29d-4b12-8aa3-8770dbdaa308",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67a3569-769e-4e87-91be-25cf025659c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf18a3f-1522-4985-8eea-f27f7fb9cba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d14c6d-34ff-46b9-b088-9776136bfacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af86adb-40a4-4c26-ac2b-fa87c92819fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33de487-8859-4a5e-a5a4-d2114485bb46",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ba51ce-bd11-420e-98a0-6e73912c4d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59a1240-066b-46bf-b918-9fa2b9a3df40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5656a453-5aeb-40cb-8130-d6076c350a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46554e3-0948-45cb-ac15-75bfea90a585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99916249-5646-40d3-973a-ade60200f5fa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec75295-7eca-4453-b93e-338e5fc5bc04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c191599-0743-49db-8601-777868708c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08c9e75-8c1d-43f8-8cfe-ed91fd63ec15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9f8a88-521b-43c9-bfa6-405e8b511de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1823acd5-6bc4-445a-bfca-acb39c92b3a5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b622d0-3a39-429b-8ae7-726da2716615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab158cf-58c7-4b78-9646-b9257aff50e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7abc70f-0863-4568-a3e0-d80e127d10ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212703e1-92d1-49f4-8b86-187055aa9ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbff0a3a-f186-4c71-8749-c1aa5054d1ef",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af72cb05-c1de-411d-8128-00aa49c5af0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec87132-19c0-449c-92e3-c71143ec80bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c641fb57-9bca-4ddc-a78c-5151b553e5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49969d70-77b6-424c-910d-277355c7d707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270a876a-1578-4c5a-a87e-b23d5adc2201",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d85aa9b-0aaf-454c-a614-4842fe7243a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e9589d-9ead-4f49-afeb-8ab80f1e3648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e777a173-026c-43a1-a9ab-40d0ed1c43a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cea4ab-bd53-4e62-b054-8bc5cd9b712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5b388e-b3bf-4a9b-b2ae-9bab1c550ad9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6208f4-1448-43ac-89f2-521c56bb5b73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a479ed-cd0d-4eff-a08a-04477dd755af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845c56c7-596b-4bc0-b81f-070f106c54d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54da9b32-7340-4659-95f8-ef98579c4d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea463c15-251a-47ab-bac8-ca15fbe4e60b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4666589-8298-49bb-8ab2-3c0ee5175d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604e163b-f400-44db-a810-cbbc9b190f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a53fd6-82ee-403f-b0d5-17efc8641801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04495e2a-e404-460c-a2b9-3da065b29b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c544d0d-9b17-4bfe-8795-2e4eb2fbdeab",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e910115-8f86-4e4e-b91f-dd9024a7788f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6402331d-c4e6-4050-9a5f-2843e77ce158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cac44a-524f-4705-8563-63e73ecb156f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a95558-5ea4-4b44-bdd5-5a2bd0d65590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3d1fc8-d19f-4d47-8624-736633cf0647",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa15d814-8a6c-4759-a11e-8ae7c6d0c09d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944b441a-0526-4760-8020-f8615c2221cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69736b2-d3bb-4b04-b1dd-1efbe8e19eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c499213a-730f-493d-88a1-c1eb90b87d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7fff86-cdcf-482c-b76e-d96b5f419031",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7904f051-5544-4b5d-b606-8705bed4153f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee898c96-f5a2-4fe0-9c58-70dd7e81afa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d34c82-1589-4777-ae6d-44851cdb2016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fab0bd-661e-47a8-8397-33c8ee9a900a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647d84f9-e66d-4fbf-b34a-b6a57c56fcae",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce64ea98-ec5a-4e1a-8fe1-1c43bb40bcd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd63f925-74cf-45c9-8deb-6189aab2ff9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2ca76c-8769-48c4-989a-8bca16738a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31630efb-3b70-4df6-ad4f-dc55abf735b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94526ad0-4cf4-486c-8632-6bff6751e793",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364d9ebb-007a-4089-8914-53bdff55f2cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79be693e-258c-48cc-912c-34f23d5173d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752684ef-c0a9-4ce0-9d22-119b1a916e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a60267-e1ee-4409-a610-19faa47e631f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bedd19c-27ca-402a-90e2-fcb410268658",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3d676a-aaea-4a4b-ba11-4ef308055d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af1cef4-d4d8-4e19-9bc2-2ad692abb941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a1bfc8-4f70-480c-9ff5-28beb4eacf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4848ccd-6457-44f1-bf0a-aa02ea04d91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50af0968-2f2b-4d8f-b660-1c88f94fd64c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f510886-752d-4bb5-9927-9f0e173bfd31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e16395-dc8b-427e-bc76-16d8282bb3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e015d87d-f6b6-4330-8a6d-de00b7b6f36d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daabba3e-1504-4b5b-a1ce-8fade9f6e202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de0d643-71f4-46ce-9a07-2857d4f5c606",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaadbd27-e285-4400-a6ec-b1593e2d638f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98878dfc-53f0-40e2-b742-9667b89b6fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bac77a-5f93-41af-b450-92108749704f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a5860e-479e-4134-b36b-e991ddfddb87"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "309bb8bf-f8b3-4813-b7d8-b16d91098c57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a8f0e0d-291d-479a-b240-1606cb604e5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "400a0e31-986d-46f8-a2b4-1b45d99f7515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abff7c33-92db-4792-b1ad-02af5fa625c0"
                    }
                  }
                ]
              },
              {
                "id": "613dbd06-a5f8-4b44-827a-c6bceb3bdccd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1239057-7e32-407d-a661-1152d60beba1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6337fbfb-0851-41c2-9110-d58cfb8a9e61",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30fa8c97-0c63-4635-8d7a-d10a16b09cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0fb28d-051a-4271-9d07-92857efa75a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28b4537e-c45a-4433-b7e9-0ae62f197071"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e42c0dd9-db86-4c23-8476-0e29f5618ada",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79a04c3f-1676-4d23-8e58-7a58f63d2161"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73c0e1db-7880-415c-97b0-e34343830e81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6da7755b-87a9-4d0b-ba57-70ac5bf66269"
                    }
                  }
                ]
              },
              {
                "id": "a784b6db-707f-4e8b-b38a-1af9588eb5fd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f5c75e46-f616-4f6f-b48a-0134f0fb162d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1b924c-821c-4ae9-b264-7f8e31679212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8cba4bd0-1087-4152-8cda-8942a025d3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47c646a-4e30-4453-8675-02a59d52a6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a7b241-67c4-49ad-9472-5bd239a33875"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78a00451-d204-46c9-a11a-32af49b3cdd7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "21005000-f76c-4364-8d99-4b50f36ab181",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c3176a0-b44f-4fa4-b956-a50346379bfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3ccf3262-b83c-44b9-9f43-0de1fc587a08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "733b0ac4-9396-46b0-8ad4-5da6e54e3d7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d700cb7b-8384-4f42-9e5c-c3c0d432f19c"
                    }
                  }
                ]
              },
              {
                "id": "846a227a-0b2c-448c-8989-c00cee290fc0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19ee0261-1cce-4e77-b7ce-9f0b18559c19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "151879d6-ec6f-4a49-9e72-c31f7a29b918"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "857a23c6-69db-4600-a12a-d01e63104b2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1275724-e004-41f2-9749-a42b102d9ff5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "074dedb0-805a-4443-88e1-bfa4bcc845f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "84ab3811-10a0-4d48-8484-97cfaba78a3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc76fbff-e8de-403e-afc5-e12c25e62b54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "403e8f6f-8563-4d45-b6bd-870f78cf8261"
            }
          }
        ]
      },
      {
        "id": "36af7c85-16be-4d4c-ad99-2c3fae86d910",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9c7c330e-2494-41f7-ae45-a3c02aa80e06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c0f5164-c625-4d9b-9ec0-50ef2c0d9c92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f23bb67e-5ba1-4233-b2d5-a14dfac65be8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a341d5b9-9c31-4b47-a363-1cebc0fac476",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b23fb7a-e031-4634-9c50-3d7d708c4e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d78c253-bda0-41f3-badd-7b2b535a2919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "439a6997-08a0-4977-aff1-9605db861de6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9102bff7-c0fe-4528-b4dd-a433297a2555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54d846fc-64d0-4498-a17c-00f14863462c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3573f9c-8fc8-4608-9852-46c6e3ce1ad9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac8bca33-b3f2-4e19-b13a-f98e6652f279"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fa38991-ef20-47f1-899d-6b3481b74eab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9c0eec65-c51b-4f3a-bf2d-3e5de85e9069"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a049c98-97c7-47be-8d3f-47998c7b8180",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a359e9e-7795-42eb-99ed-1a042c060cec"
            }
          }
        ]
      },
      {
        "id": "4224113d-444a-456b-a7ed-e80de220feb6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "43094152-2cf0-4952-bf95-2e1029dba532",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cdb2059-cdc1-4ab7-abfb-a399af6de036",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d6d8b68-4b56-489c-9944-edb274992b14",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb6f9fb-a0ac-408d-bb76-8c799009063e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f16eb954-50e3-4409-8766-87afa92c8629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad749ac1-7f11-41ca-968c-fc297a71e0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a023082d-f350-41c0-a565-3d6dfcb90624"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e09d0a2b-9658-459a-9b18-15a7125259ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b30568d-5e0f-4b7d-99a4-2e478ff7a34e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d41ddad-be9a-4aef-acfc-c1ee84ade286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8a776f9-a268-4868-b4e8-af971adf1bf6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c89ef4e0-c000-464f-bb81-b960ad256f0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1975c1e9-627a-4b62-be6e-3b88ab210e6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ffee59c-78b6-41e9-bb78-dfba650c690a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1ab5fc8-76bd-4ee8-8dcb-45e0c27f265d"
            }
          }
        ]
      },
      {
        "id": "ffa81c63-5c62-4165-ae16-038bf0bf1c67",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "32642518-a01c-438b-8beb-b6eb26ca0a47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56804286-16ce-463a-8fa0-1b3a83fda414",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f313abd7-4262-4939-9936-e4f333915f1d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75595a33-9f3a-43bf-a0db-16805f3058b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dcc01e4-655e-457c-b560-5b8fc1d1ef6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d6c467-c0bf-4250-8eb5-2e3eae14af7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "585eef7a-6ba4-46b3-8a9a-08fe52b1d357"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23df06d1-9cca-43ce-8624-7e119c4cddc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df6e6310-8d93-47af-b9a6-6d9197cb7812"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76f891d8-eebd-4251-b573-2a297074db76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c9e653f-43b9-4a95-9a90-edfbadbc3b52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06645536-64af-442f-843a-508f56554186",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bfec0c74-6f4d-4268-8958-aa9d68cf486b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a429f5c-1d73-45b1-8d31-446c909a2194",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d29af85-cfd1-4a6e-8fcc-052ae67d6554"
            }
          }
        ]
      },
      {
        "id": "dcf8e223-bfd1-48c4-8a71-dabcbf3477d4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f0f7632-7c0a-4751-bd3e-e34101c250b1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16e10577-9d56-4d60-8b6b-52b059634a94",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "54978f1a-c31e-402e-a0ba-2870b15f3406",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0daa5f1f-4833-4e13-9d30-e253defbde81",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e419853-1f6f-4396-8566-48b6ec3a0fcb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 92.70175438596492,
      "responseMin": 4,
      "responseMax": 9114,
      "responseSd": 603.3353018746301,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705970229293,
      "completed": 1705970264766
    },
    "executions": [
      {
        "id": "f96be0a7-c138-4617-a50f-3bd82915ba25",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6a551a84-0dea-40b3-bcfa-b8ba671b1d68",
          "httpRequestId": "af7be6a4-122b-4ff0-90fd-dc0c0f76a454"
        },
        "item": {
          "id": "f96be0a7-c138-4617-a50f-3bd82915ba25",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "02bd0fa7-bf18-43c4-944a-ef5861da8d3f",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "2b7f6653-8853-4179-b7b5-72cc0a2199f0",
        "cursor": {
          "ref": "70b35a66-e95b-4473-b92e-61a852af24ba",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "de672c72-9afa-4268-a209-a556a4aa8d94"
        },
        "item": {
          "id": "2b7f6653-8853-4179-b7b5-72cc0a2199f0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "314ccc8e-60b6-403f-b667-ce3e27fcd1ed",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "af011600-72f7-4cd4-87ea-fb45594572bf",
        "cursor": {
          "ref": "00583f3c-72a3-4239-9252-6f5b736eb9fa",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3993c8fb-9f40-409d-a4df-1403fc98ae6f"
        },
        "item": {
          "id": "af011600-72f7-4cd4-87ea-fb45594572bf",
          "name": "did_json"
        },
        "response": {
          "id": "9853e378-e89d-4531-9804-da73144523d0",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb2ff82-bd5c-4173-b80e-5687950a857b",
        "cursor": {
          "ref": "5b5b647e-90df-4369-996a-57d3b5d375e5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28c41832-882c-4406-ae52-f7108c7d475b"
        },
        "item": {
          "id": "1bb2ff82-bd5c-4173-b80e-5687950a857b",
          "name": "did:invalid"
        },
        "response": {
          "id": "a225f02d-2d80-4096-b479-4020375c5d34",
          "status": "Not Found",
          "code": 404,
          "responseTime": 836,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb2ff82-bd5c-4173-b80e-5687950a857b",
        "cursor": {
          "ref": "5b5b647e-90df-4369-996a-57d3b5d375e5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28c41832-882c-4406-ae52-f7108c7d475b"
        },
        "item": {
          "id": "1bb2ff82-bd5c-4173-b80e-5687950a857b",
          "name": "did:invalid"
        },
        "response": {
          "id": "a225f02d-2d80-4096-b479-4020375c5d34",
          "status": "Not Found",
          "code": 404,
          "responseTime": 836,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa56012a-7dbb-4bab-8221-32ac367ab755",
        "cursor": {
          "ref": "723419aa-084a-4d68-8217-b1e6f8bfa2d8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e929c9cd-f017-4f3f-a6f2-0b23cf561923"
        },
        "item": {
          "id": "fa56012a-7dbb-4bab-8221-32ac367ab755",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "36c6cc1b-98d8-48aa-b37e-9a99fe170b4c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 21,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb55c5f1-204c-4d22-b2f4-a5dd9de60712",
        "cursor": {
          "ref": "feed46d4-21a7-4bdb-8e5b-8d3707720f57",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "00a07f12-d0a9-4079-9594-059f382dd4c4"
        },
        "item": {
          "id": "fb55c5f1-204c-4d22-b2f4-a5dd9de60712",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4d52a7c1-ac7a-4f09-8ff7-4f3a9d4e8228",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb74f83-1359-4beb-9dd8-378c2fb0a62a",
        "cursor": {
          "ref": "62a7a5ce-2492-4ccf-b7d5-4a2476d5ed16",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ed8095cc-db5e-4d74-9bd3-73185d9792cf"
        },
        "item": {
          "id": "3bb74f83-1359-4beb-9dd8-378c2fb0a62a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "98004e53-26d2-4284-8112-dc715dc740c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 16,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e057ebaa-d3c6-4d7d-8e43-4709eabd7ca0",
        "cursor": {
          "ref": "adbf8957-0cd1-4a4a-a78a-a47ab9783087",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1c61fe57-511a-4077-aeb5-ba943ca889b7"
        },
        "item": {
          "id": "e057ebaa-d3c6-4d7d-8e43-4709eabd7ca0",
          "name": "identifiers"
        },
        "response": {
          "id": "41a0bb85-0a76-4478-9da2-95327f987197",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e7c746-f639-4266-8e19-d25619ead81e",
        "cursor": {
          "ref": "77f2680e-32d7-4a66-9fb0-2c4526dfce20",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "46a2e51e-3fa6-4f5c-8c98-ec1f4ba2ecc6"
        },
        "item": {
          "id": "c2e7c746-f639-4266-8e19-d25619ead81e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a23efc76-097a-4ef7-868b-acc8da6bd052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9302f997-1be2-4015-8c4d-76339a5090a0",
        "cursor": {
          "ref": "28c4d427-15df-400c-911d-836e66ea034f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec90c57d-98e8-4d47-93cc-9b72af99cd94"
        },
        "item": {
          "id": "9302f997-1be2-4015-8c4d-76339a5090a0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bcfa3b1d-f5cc-45ea-851a-8987d7f51e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae2e904-04d5-4402-b174-f685b18b0ab2",
        "cursor": {
          "ref": "f6cf388d-8e8f-4d3c-b3c4-6da5ca0f5493",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6aa2360e-9500-4a55-90c8-38f292ba96ff"
        },
        "item": {
          "id": "eae2e904-04d5-4402-b174-f685b18b0ab2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0e98fcc5-61d9-422d-9b09-ed180cf6bc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c5b99f-0848-40ae-b0a1-f526eda32dd2",
        "cursor": {
          "ref": "6fe8eff4-ee52-489b-9727-b60743ff2379",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8d8b581f-d1c3-4146-a45b-520323beddcd"
        },
        "item": {
          "id": "72c5b99f-0848-40ae-b0a1-f526eda32dd2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "06cfd673-882f-4470-9345-eb3972ebbf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9313d0bc-f7c4-44a3-8b19-cf88e2844df6",
        "cursor": {
          "ref": "c50bbda5-45c6-4ccf-89e7-91ddc2fb9355",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e50a5c86-cf11-4e57-85cb-a4adb9981867"
        },
        "item": {
          "id": "9313d0bc-f7c4-44a3-8b19-cf88e2844df6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "adbff63f-68b0-4ab1-8c7f-609cb74185c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955dbb8f-40fd-4bba-a73f-10ab8f71a26a",
        "cursor": {
          "ref": "f5dd2730-1a49-4c73-98c2-bab3c9ba56c0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "00ab29ab-74ba-4d8f-beb7-d824e8c1d211"
        },
        "item": {
          "id": "955dbb8f-40fd-4bba-a73f-10ab8f71a26a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b76cb685-89ce-4dc2-aed9-022af2a0d748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d55b0b-f025-4bb4-a963-c6e0d58ef7f1",
        "cursor": {
          "ref": "398ff9af-6384-4c06-a1f6-73d632865305",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9bffd031-db22-4a3b-865b-c5ec84a18eb5"
        },
        "item": {
          "id": "47d55b0b-f025-4bb4-a963-c6e0d58ef7f1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bc03996c-f0c4-4ed3-87cc-6dba535236ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9930b0d-962e-4710-9e12-392bb5bfa3ef",
        "cursor": {
          "ref": "8209f5a5-9ca5-43eb-b226-abce019bad27",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3c627da9-dada-478c-b3f0-4fbd04a8344b"
        },
        "item": {
          "id": "f9930b0d-962e-4710-9e12-392bb5bfa3ef",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8f756615-1745-4c8e-9f96-5ae43b9af91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea2dd29-03d1-420f-a39d-c5e8793fe588",
        "cursor": {
          "ref": "42c8143d-cd39-42c5-b4e3-e9b6059189a9",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "23b3a46a-fc57-4037-8631-cd20c9008fe6"
        },
        "item": {
          "id": "cea2dd29-03d1-420f-a39d-c5e8793fe588",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4f7646a4-a441-4e4a-9720-a4d5de63c6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc19d97-16b3-44f3-ad2d-eda298e87f58",
        "cursor": {
          "ref": "21775dd4-66e4-477d-ae9e-0a006d720871",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6a616bf4-94ba-460b-a791-1e317eb045f0"
        },
        "item": {
          "id": "0fc19d97-16b3-44f3-ad2d-eda298e87f58",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6f2ae53b-41b1-442a-bfd1-0fb3d33fa8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25bbeeb-78b6-4be5-82a1-908ed38b16f4",
        "cursor": {
          "ref": "a9d4af7c-73fd-4ce2-888e-9fc8622d8684",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8e07fba8-620c-4fe1-a03f-71b3e656fd5c"
        },
        "item": {
          "id": "d25bbeeb-78b6-4be5-82a1-908ed38b16f4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "722d2f08-5dca-4c88-9954-c01532f471f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997ced86-7eec-4a9c-937c-2233e2f461cf",
        "cursor": {
          "ref": "409496f5-bb42-49e2-8090-b3283509948d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "64d2c147-7f51-410d-a1fb-dc483965d375"
        },
        "item": {
          "id": "997ced86-7eec-4a9c-937c-2233e2f461cf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4acd6057-745b-4754-8b19-ff7b306962bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419f7d05-25b4-4a09-8328-00ba7fdea568",
        "cursor": {
          "ref": "a0ac3dc0-caa8-48b5-ba0d-bc391f30be89",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9dd0d870-8cc9-4156-a2dc-7caf904d0757"
        },
        "item": {
          "id": "419f7d05-25b4-4a09-8328-00ba7fdea568",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7c8d5a33-4d68-4bf2-9750-40543fe9495d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe450dda-bb99-4a8e-b850-34433068ecce",
        "cursor": {
          "ref": "7551c7fd-f074-473c-9c54-136974ba1f15",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b5e53ecf-3950-415b-8387-4fc17d9b10a2"
        },
        "item": {
          "id": "fe450dda-bb99-4a8e-b850-34433068ecce",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "01d344cf-7a44-454d-a925-f4589c7fc9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4390b486-26a6-474a-bfc1-efa53954f282",
        "cursor": {
          "ref": "19445562-9fdf-4bae-b831-4618f411099e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b3e8027e-d303-4213-b8aa-a4eb8b9a6a7b"
        },
        "item": {
          "id": "4390b486-26a6-474a-bfc1-efa53954f282",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5e521918-bd19-4650-a145-d88fd1044396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e658ec84-7ff1-46c6-9c66-4e072e1c3b78",
        "cursor": {
          "ref": "1ad9f171-fc61-41aa-8648-ed880a7e77aa",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ad572de6-e080-458f-8d38-084a9aa50633"
        },
        "item": {
          "id": "e658ec84-7ff1-46c6-9c66-4e072e1c3b78",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3a543aa3-014b-4017-8467-1ff00d60d168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc8cc5d-359f-4f99-a7de-f4b7fd6d9728",
        "cursor": {
          "ref": "ddd2b6c9-e0ec-48b4-afb2-7e7a68cc1c0a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "70b521ea-0ce2-420a-a8cf-a2deb5619dd5"
        },
        "item": {
          "id": "dcc8cc5d-359f-4f99-a7de-f4b7fd6d9728",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d1ddda06-6794-439c-8452-173617fdbb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3e45aa-2b7f-4e39-b404-314d810b1a34",
        "cursor": {
          "ref": "9d0149f6-bb15-4c84-b6a8-763728065c8a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9087a73a-f8aa-4d1e-b8df-deb3efe7f35b"
        },
        "item": {
          "id": "1e3e45aa-2b7f-4e39-b404-314d810b1a34",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3dcc1d2f-1283-4136-8c2d-cc819087c622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594356cc-a1f7-40f4-9c71-5b4e5060fb11",
        "cursor": {
          "ref": "dbe40481-a7f5-4db1-bb64-960b4cb5cd4e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "81e0acc8-47d6-48ab-afce-39d366fd4f82"
        },
        "item": {
          "id": "594356cc-a1f7-40f4-9c71-5b4e5060fb11",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "48c8ca17-66c5-4bba-b9fa-a6716378f62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49b89b3-2f27-48b3-845b-1288d982a44f",
        "cursor": {
          "ref": "1d514c2c-e3dc-4948-b68d-dabb9e5f75cd",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "36299b18-587a-4f99-9404-0398d219c0a2"
        },
        "item": {
          "id": "f49b89b3-2f27-48b3-845b-1288d982a44f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3e337860-b6a4-4677-b06f-b98ffce8c3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca23675-ec06-4586-905c-001d879f4716",
        "cursor": {
          "ref": "eb255dce-23db-497c-9ab7-dc4f61352199",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e7ccc689-d9d5-4341-8d62-54cf8a10639a"
        },
        "item": {
          "id": "2ca23675-ec06-4586-905c-001d879f4716",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c9c80912-f546-4c62-9374-85f2373b0fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fb0fac-87f3-4616-8106-e1c864f3ee58",
        "cursor": {
          "ref": "9cfcf77d-ac92-4469-ab19-b2b20167be7b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "703c6823-319b-45c4-964c-7a2e7b3b625f"
        },
        "item": {
          "id": "c4fb0fac-87f3-4616-8106-e1c864f3ee58",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f153f77a-4abe-450e-b77c-07ca4deb8f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d26406d-3b06-4d91-b1d2-26d279f87ad9",
        "cursor": {
          "ref": "30eee2c0-2223-474d-8c5b-21f6398a1fea",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ee9a4668-6edf-4490-a865-ba6a0f298353"
        },
        "item": {
          "id": "3d26406d-3b06-4d91-b1d2-26d279f87ad9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4fb08373-4d44-4458-b1bc-4da9eb5e24ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8f488f-ff46-4a32-af36-9f0fcfddc993",
        "cursor": {
          "ref": "0888c1aa-e8c0-40ab-a2f0-6dc403116c02",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a81b3d64-1ae9-4942-84bc-ddad0537a553"
        },
        "item": {
          "id": "5f8f488f-ff46-4a32-af36-9f0fcfddc993",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "86d4b683-498b-4f7d-a920-b103d0d9263d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa8befe-86e2-4b0f-b3fc-468d5a414cee",
        "cursor": {
          "ref": "10471d89-57f6-4b4a-a992-600c658ae18a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4fb88fa0-710c-4e8d-a68b-452c6e003495"
        },
        "item": {
          "id": "8aa8befe-86e2-4b0f-b3fc-468d5a414cee",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "21620919-1b1d-43ff-9f97-c8a5bf42d429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5017a8f-817f-439b-b832-063b3e5a0b69",
        "cursor": {
          "ref": "096894e0-7e4e-40b2-b093-5690edeede7a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "11a2e26c-8d90-4258-be0d-80629e43526a"
        },
        "item": {
          "id": "a5017a8f-817f-439b-b832-063b3e5a0b69",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7a8c02f9-5fc5-4b7d-931b-80da67c64bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9930239-a04d-4993-92c3-55ac1725bdeb",
        "cursor": {
          "ref": "1a3f347e-96be-441e-be0a-8ed39ed2a331",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3f764b25-7c06-4b99-9be6-955acbe5cd77"
        },
        "item": {
          "id": "d9930239-a04d-4993-92c3-55ac1725bdeb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d726e8fd-7e5b-40b4-8c7f-f0595c6660c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbd3999-358d-4546-8ec2-af1745c30462",
        "cursor": {
          "ref": "984cf839-43bb-4a9a-8682-a81844f60a26",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8b81dc46-ebc2-44fb-b7d3-a2fe4c109d19"
        },
        "item": {
          "id": "bdbd3999-358d-4546-8ec2-af1745c30462",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5291bb30-ecb8-475f-acac-df507faa4930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15316ea-85e3-412a-88e7-03341155b4f9",
        "cursor": {
          "ref": "c96c8efd-892b-4373-844e-85607b261e62",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7717fdc6-0d67-4b87-a92b-46248820942f"
        },
        "item": {
          "id": "a15316ea-85e3-412a-88e7-03341155b4f9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fd45d491-fa7c-4b17-b60b-8851837b7f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae81b484-658c-4575-9038-f9fd5ace5c07",
        "cursor": {
          "ref": "d254af4f-23ec-4e38-a1b2-0440c40f3c41",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d8c2223c-c466-4157-8114-a44bf9fb5eb4"
        },
        "item": {
          "id": "ae81b484-658c-4575-9038-f9fd5ace5c07",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9fa7b7cd-5fdf-41f0-ad41-ce8483f9e11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0aacf9c-831c-47a4-96e0-422b5ae55a3d",
        "cursor": {
          "ref": "41dc91e9-564d-40eb-bfc6-c10166f4f8b6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8bbad22a-84e3-46f2-904b-cb207e1d9391"
        },
        "item": {
          "id": "c0aacf9c-831c-47a4-96e0-422b5ae55a3d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ffdab250-9203-4133-94aa-c76debdc3ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e754e298-23de-4985-a9e6-02e85cf873f2",
        "cursor": {
          "ref": "1b1d96ea-61f9-41da-97f3-5f55b192997b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b5fab5d1-6847-44a3-81c0-14adf5b090a9"
        },
        "item": {
          "id": "e754e298-23de-4985-a9e6-02e85cf873f2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "adfbd288-7a3c-45f3-9137-335dc155458a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2d1e75-7877-4046-aa45-41e8202c3c9d",
        "cursor": {
          "ref": "32895c78-ffb4-438b-b0c8-b97dc444a0e3",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "72349687-8d00-46fd-a8d2-4c95c447b448"
        },
        "item": {
          "id": "2a2d1e75-7877-4046-aa45-41e8202c3c9d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9ab03b9f-e7fa-499d-8877-eedecbe587a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710133f7-6bae-4e65-8750-008c9f52f8a9",
        "cursor": {
          "ref": "da9ded31-617d-4a6e-a682-d91d7f76a22a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dbee8ac6-3c43-41af-9f77-a0e4e15b2022"
        },
        "item": {
          "id": "710133f7-6bae-4e65-8750-008c9f52f8a9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f5d75c2c-1dbb-45fe-86b5-226e575d3095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94dc08c-0893-4e11-892e-3e6b4bf87952",
        "cursor": {
          "ref": "92c5a82d-7d33-489e-b17a-52a966df67c0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6caf2022-47f5-4785-a192-8875c11cbaf1"
        },
        "item": {
          "id": "e94dc08c-0893-4e11-892e-3e6b4bf87952",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "83f431d3-ec3f-4176-9914-2fdd40a02482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6226a7-8751-416f-9962-d2aa62622d5c",
        "cursor": {
          "ref": "5705df94-5579-43ec-9d9e-d4b6d9136f12",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1150a650-48c3-415f-b850-902cc2f3950b"
        },
        "item": {
          "id": "4d6226a7-8751-416f-9962-d2aa62622d5c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7118daad-4b4b-402b-8c02-9ebd1cb07465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1754911-b29e-4df1-ab08-378cadf47a54",
        "cursor": {
          "ref": "35e88af3-aadd-4495-aa75-c9adf8f49972",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "20279f15-5ce6-473a-920d-631c22d5bd2e"
        },
        "item": {
          "id": "d1754911-b29e-4df1-ab08-378cadf47a54",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "04b7e291-210a-40e5-aa72-f098075bf215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eca9f2-a9ec-4692-9391-561c95bea585",
        "cursor": {
          "ref": "3d635494-7068-4f4b-8036-4e415f8237e9",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "71d6ad97-25ae-423d-9ce5-c4a37f0af5df"
        },
        "item": {
          "id": "02eca9f2-a9ec-4692-9391-561c95bea585",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dff2e0f3-f5f8-4b74-be6d-8d0b5da96a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314a6153-f43d-4c2e-b1a5-9b6921c1359d",
        "cursor": {
          "ref": "008f65c1-b68e-4548-a6d4-80f8bda3f0fa",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e3b2ed84-8dbb-49b2-a110-92896a134f0f"
        },
        "item": {
          "id": "314a6153-f43d-4c2e-b1a5-9b6921c1359d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a11777d4-f6d2-428d-8d8a-cfaaf6f4f232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c50a9c-9363-43b8-ba23-06a07e4ccb35",
        "cursor": {
          "ref": "ca0f3ac4-09a8-4d75-9692-eb2643a2a588",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5a25426e-3c58-4208-b0bd-c28d5605c9a9"
        },
        "item": {
          "id": "a8c50a9c-9363-43b8-ba23-06a07e4ccb35",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a2ece41b-b32d-4cdf-954d-8a40f140b6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f9f1cd-4fe2-4a23-97df-600975e9f084",
        "cursor": {
          "ref": "3d653c6c-d238-46fc-8cfd-abe9e52aa1ba",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7a1cecca-069b-475d-a3a1-2219f566699e"
        },
        "item": {
          "id": "48f9f1cd-4fe2-4a23-97df-600975e9f084",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3b7dda09-6015-44ab-aeda-b49250f6aea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef861ae4-6788-4636-97af-3e41e8a08369",
        "cursor": {
          "ref": "46b7094a-e930-4fb4-a782-523934b95026",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2c1f929d-681b-4b5e-ab9c-5c7198584d3e"
        },
        "item": {
          "id": "ef861ae4-6788-4636-97af-3e41e8a08369",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d4af1bcc-2422-41eb-9149-03d6dcf2e883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0eab36-05d6-4b6b-aeea-762a07052a8a",
        "cursor": {
          "ref": "c89cf336-7175-48a9-bbeb-349b264707a1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2a5565cd-f2df-4168-a678-7067e9a8cf14"
        },
        "item": {
          "id": "ac0eab36-05d6-4b6b-aeea-762a07052a8a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bfe155cc-9dd8-4062-a461-d559a3d8de56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b08968-5a47-4427-be16-b142fbcd2398",
        "cursor": {
          "ref": "bf957d0c-7348-4e19-b42b-8f97d39d5c0c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "17608bd7-33ea-4e36-966a-0496a96dd2c2"
        },
        "item": {
          "id": "57b08968-5a47-4427-be16-b142fbcd2398",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c059c38f-821a-4a16-8c9c-472a10112d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0076db30-66b2-4cfb-9dbb-b14eace6cb81",
        "cursor": {
          "ref": "758ab2ff-feab-4a1b-8470-36c00e706fef",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f12c7ff1-9001-4f0a-a393-bb4051ea8547"
        },
        "item": {
          "id": "0076db30-66b2-4cfb-9dbb-b14eace6cb81",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "79e92d52-aecc-4689-86b0-f5b68a642a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c023bd72-7456-4561-a79f-4d347282fda6",
        "cursor": {
          "ref": "db619cb4-cbbd-48fa-a695-37cac5505222",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e976c684-b39d-47b0-9c9e-44939301f061"
        },
        "item": {
          "id": "c023bd72-7456-4561-a79f-4d347282fda6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "36b6166c-3976-4311-8328-2abe6adc166c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19bf4bf-80ef-4d4a-b9b3-65ae2d67fb36",
        "cursor": {
          "ref": "368365f7-f57c-4a11-a97e-3a08475cb875",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a34ade37-e873-48b4-a36b-ea09ab600feb"
        },
        "item": {
          "id": "c19bf4bf-80ef-4d4a-b9b3-65ae2d67fb36",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9bedebc9-8788-4057-96bd-0ba453d7838f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef8c1c7-1a3e-4995-bd1a-ae211234818a",
        "cursor": {
          "ref": "5426eafc-23c3-4fe0-864b-62522207f945",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "62c44871-dabb-443d-ac37-6f3157e285ae"
        },
        "item": {
          "id": "bef8c1c7-1a3e-4995-bd1a-ae211234818a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3f4c17e8-109d-40a0-92af-cdc976e71a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0b3a60-4cac-4323-84bb-1c6b5ed1ea65",
        "cursor": {
          "ref": "bb475d08-d9dc-4808-a3b2-113cf951ba0a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "329b173f-05a0-479b-b62a-e11b78f401bb"
        },
        "item": {
          "id": "3f0b3a60-4cac-4323-84bb-1c6b5ed1ea65",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "246c07b9-6a4b-4250-a841-d9cd36dc9d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22015f8-b226-4653-b3c3-4dc72c369313",
        "cursor": {
          "ref": "ce86294b-536c-4653-937e-1b45d0c3c5da",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "82b7643f-ca69-4ecd-b0d6-18b78100b068"
        },
        "item": {
          "id": "c22015f8-b226-4653-b3c3-4dc72c369313",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "780be309-788e-45b8-a896-e59041faf85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc3a499-d064-4f99-8de8-587b27822f9a",
        "cursor": {
          "ref": "163d6aed-dba0-4f41-8418-571ec7a5ea67",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1d1bd678-0324-4c9b-b5bc-f23b7fb28565"
        },
        "item": {
          "id": "3fc3a499-d064-4f99-8de8-587b27822f9a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "498b248f-5eb2-403b-a303-f1d20731dd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aa338e-6950-423a-9ca1-5830d03854e6",
        "cursor": {
          "ref": "0d3b15d0-9b6c-43e2-8d23-2ce7f8e1ba3c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "efe965b1-19d0-4176-8674-0b69eff42fdd"
        },
        "item": {
          "id": "d7aa338e-6950-423a-9ca1-5830d03854e6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4a2687fa-ed86-4cb9-b39a-5a4c41d09c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c72f36-e040-4cee-9fc9-fb8e1c0697aa",
        "cursor": {
          "ref": "d3dbd664-9c74-42e5-a48f-2c4043ddaa62",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "833c8858-e346-494e-a74a-3caa19e8c23b"
        },
        "item": {
          "id": "48c72f36-e040-4cee-9fc9-fb8e1c0697aa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c42e556d-86fd-4ea0-afaf-30099e8cfd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe933d4d-6e22-41f0-b2ec-1f90c63535f0",
        "cursor": {
          "ref": "0f5eb2b9-68f1-4129-aa6d-0579be7bc4e5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "819eb3f7-78f8-4e6b-b0f3-b05f7d5fc1fc"
        },
        "item": {
          "id": "fe933d4d-6e22-41f0-b2ec-1f90c63535f0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fb3ffee0-a750-4afb-b368-d4d243e72c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa12fb6-bcb7-4642-8768-6984697a1169",
        "cursor": {
          "ref": "b1bf3db6-c3ea-420f-9b53-5d6721724ab6",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0aef63cb-2a26-4a2b-8138-0cb55c3decec"
        },
        "item": {
          "id": "cfa12fb6-bcb7-4642-8768-6984697a1169",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a344bbbc-b9fe-48e6-b846-acbf6eb583d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41ba178-471f-4c1a-807c-00b11c813f62",
        "cursor": {
          "ref": "14e7e078-72b7-40aa-a7a8-7c9af059875f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bfc35615-3114-425f-8159-dd9db80915c6"
        },
        "item": {
          "id": "e41ba178-471f-4c1a-807c-00b11c813f62",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "af0ccc9b-efe5-4eb1-81ef-0dd9d33c9f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5325610c-1cad-45ff-918c-807681ecdd44",
        "cursor": {
          "ref": "dd71fc62-07db-4b09-a572-5b995367c5e3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5107ab32-a570-4948-af86-e58cb5684d62"
        },
        "item": {
          "id": "5325610c-1cad-45ff-918c-807681ecdd44",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cbe50560-1872-4b0d-93ab-7ec10fc7b2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f31675-f1b9-49ff-8099-f46c7e52d9fd",
        "cursor": {
          "ref": "9c5cb4e5-55f7-477e-b000-88faa15ad4ea",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1559b75-83f9-4253-82fa-6f482daeea91"
        },
        "item": {
          "id": "19f31675-f1b9-49ff-8099-f46c7e52d9fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f44af294-531e-4dd8-be42-961be6191d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693523ca-1362-4844-8381-c8d86a89b58f",
        "cursor": {
          "ref": "3861049e-f414-4b95-984f-a5403dccb865",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c2007501-fb56-4130-adcb-360dcf31863a"
        },
        "item": {
          "id": "693523ca-1362-4844-8381-c8d86a89b58f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "17bd5486-b1e3-43af-88da-6ec11e514513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73744c16-6df6-46e6-a7ba-6975f52f456a",
        "cursor": {
          "ref": "114daebf-4ff0-4ac7-907e-5e54c8677dd4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "718720ca-e8da-41dd-81e2-db3bb37b53f8"
        },
        "item": {
          "id": "73744c16-6df6-46e6-a7ba-6975f52f456a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b4c93984-7aa9-4dc2-9893-6946026ea100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a32e46a-033c-4c27-9501-d3f5c8118ade",
        "cursor": {
          "ref": "8c9cdfda-e095-4e91-8616-9767e496e563",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6cc98367-7101-4a53-a527-55c9c5cca6c1"
        },
        "item": {
          "id": "7a32e46a-033c-4c27-9501-d3f5c8118ade",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "74bb0000-5feb-40c5-a117-397165874b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80906225-a725-4005-9fef-807f302dd28a",
        "cursor": {
          "ref": "dfda607a-636c-45b2-8127-96575b4bad77",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "20c21cb1-5850-4f44-bd23-25d4fe3b990f"
        },
        "item": {
          "id": "80906225-a725-4005-9fef-807f302dd28a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "698f4daf-6fca-436e-bd22-be56b63cd779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e628ea21-c828-4911-a1d4-07c79205c43e",
        "cursor": {
          "ref": "e2f33606-c32f-4cec-b8ca-a4c7cdf9da9b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a4104458-3c87-4939-9cc0-aa24ecde948c"
        },
        "item": {
          "id": "e628ea21-c828-4911-a1d4-07c79205c43e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "837a39bd-35f3-4ead-8bb5-91dc3627b041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61284f04-b1ee-4192-9ea2-24145883ffd8",
        "cursor": {
          "ref": "0e68f9c1-49b7-44f9-a49b-e3bfc6d2dedd",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9a12b9e0-a017-4203-afa5-d404426cdd73"
        },
        "item": {
          "id": "61284f04-b1ee-4192-9ea2-24145883ffd8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d445ede0-3773-431a-84bd-a096b7684953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd74a65-e470-46bd-b8f5-ad4235b0126c",
        "cursor": {
          "ref": "2011066c-ed06-40df-bddd-a05e1f11b66f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "37ff20d7-2503-421b-abe3-467e651f2cd1"
        },
        "item": {
          "id": "4fd74a65-e470-46bd-b8f5-ad4235b0126c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e9173ce3-1549-4f31-a096-d38a968beaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902271ed-c6c6-4b1a-9cdb-f361db72f4a1",
        "cursor": {
          "ref": "62453546-800e-4918-bd2b-cd66bbc2117d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c0b21ebb-62b6-4903-ae59-ae70c660d68d"
        },
        "item": {
          "id": "902271ed-c6c6-4b1a-9cdb-f361db72f4a1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dd317578-2121-439c-a084-072112c6682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a86fee-abb3-4c30-9ae0-b85c9613b2ca",
        "cursor": {
          "ref": "6dbdfcff-6c22-4539-9a9a-0947ee6234d1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e0ac486a-c567-4a1d-923d-ae102cec66d7"
        },
        "item": {
          "id": "11a86fee-abb3-4c30-9ae0-b85c9613b2ca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0671166a-e9ed-4e55-a6b2-3c4dfafa770a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995054d8-670c-47f6-b8ac-6354d9918423",
        "cursor": {
          "ref": "fa27f5f7-451d-46a9-85fa-d035071fed04",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7473eb5c-3d1e-4d21-b951-07581611d068"
        },
        "item": {
          "id": "995054d8-670c-47f6-b8ac-6354d9918423",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "271b5d5e-9047-409b-80bd-6f28459ea0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26878911-40a2-48ac-b108-6053cbb42959",
        "cursor": {
          "ref": "9d9cef31-7e06-45fe-bb3a-0a516184fb36",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7c8ab446-e96b-4c6b-ad9f-eb337691116a"
        },
        "item": {
          "id": "26878911-40a2-48ac-b108-6053cbb42959",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "455211f9-a407-4d52-aa6d-25c64ad3f35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c4fa58-94dd-4719-be5e-2141be133a79",
        "cursor": {
          "ref": "eeb38936-9ed1-401b-bec0-b4e6312373fd",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "66856517-7fb3-4a67-ae61-55a1f0975b8d"
        },
        "item": {
          "id": "39c4fa58-94dd-4719-be5e-2141be133a79",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ceddad15-5bc8-4493-b1d0-f6ef27281d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca8d919-d043-4c6a-84a6-370fa9b0ff24",
        "cursor": {
          "ref": "a3afa329-8ba8-4a29-8ef1-2e8e5e00d537",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "82a80a28-aa77-4f92-8079-b2236004add0"
        },
        "item": {
          "id": "bca8d919-d043-4c6a-84a6-370fa9b0ff24",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ab054e01-6565-41ec-b6b1-0d36f3b46725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c2d431-1e44-474b-8cd5-7caf814e9893",
        "cursor": {
          "ref": "271a04fd-1ad8-40f0-9fdf-ca98b9238985",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "72c906ba-c1d1-421a-97e9-6c7009a96779"
        },
        "item": {
          "id": "29c2d431-1e44-474b-8cd5-7caf814e9893",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "28832bef-3f8d-4def-b649-76974ae4b0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5a5a17-7f76-4e0f-b21f-527cea76f071",
        "cursor": {
          "ref": "ceb19c47-80b1-476d-89bb-10a59c1eadfd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9055f02d-37b0-47eb-beb6-226b08dced78"
        },
        "item": {
          "id": "dc5a5a17-7f76-4e0f-b21f-527cea76f071",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f357b5c8-7fa0-4675-b2fb-75640c4d512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d94cca-9bce-4c02-be4a-52d3f13149e1",
        "cursor": {
          "ref": "f76ea2ab-1ab5-4bb0-9d56-d357420e8cc5",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f1e215d5-201e-42e4-8fd7-873fcae2c6fa"
        },
        "item": {
          "id": "21d94cca-9bce-4c02-be4a-52d3f13149e1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e4879ca5-1b8c-4f03-b988-557a88468e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51042c1d-1407-455c-9cdf-a748cd67292f",
        "cursor": {
          "ref": "3a95aba3-27c3-4d38-8539-68d7653a0ee4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f322043f-ceda-4180-b588-355d250e1924"
        },
        "item": {
          "id": "51042c1d-1407-455c-9cdf-a748cd67292f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f4aa13d4-bde1-4d01-a479-25d964e20aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede8c604-124b-4830-8e11-f334d412cee3",
        "cursor": {
          "ref": "be988128-cc70-4113-b5ff-c5852fc84257",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "125560ef-d5b0-4b1d-bd70-18721fdcb375"
        },
        "item": {
          "id": "ede8c604-124b-4830-8e11-f334d412cee3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b2c309ec-35d7-4428-893d-e048b703ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ba3d03-7311-4ef2-9cc4-9228f0179241",
        "cursor": {
          "ref": "a1221d05-b565-4090-8235-d4892d9ea851",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f7c10e55-5c85-4373-b5ac-bfcf7b619ebb"
        },
        "item": {
          "id": "83ba3d03-7311-4ef2-9cc4-9228f0179241",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "566c2923-a4ae-401c-8997-d11118362a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a84578-2924-4fed-9ea6-22c41c7b3a16",
        "cursor": {
          "ref": "d5659966-d910-430b-b43d-e2b1bf84ee41",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3d76d650-256a-4462-bddb-8b99623b33e9"
        },
        "item": {
          "id": "14a84578-2924-4fed-9ea6-22c41c7b3a16",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "271ebc94-4bba-4150-9072-d8f8382a6e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc80135-1765-4c9d-91a6-4bae04760a63",
        "cursor": {
          "ref": "e4ad527a-4449-4e46-8129-8bc9669cf1a2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a95ed1bc-e13f-4bf4-8c1a-fbbb4a3a576a"
        },
        "item": {
          "id": "3bc80135-1765-4c9d-91a6-4bae04760a63",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "884c7044-412c-4fae-b0fb-67a81c1892e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04962d11-c29a-4e78-aa36-e4583ae93f1e",
        "cursor": {
          "ref": "1c10caab-beac-445f-91b4-bdbbc2fc7d14",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "47e7313d-e2c8-4136-a73d-68ebf5348090"
        },
        "item": {
          "id": "04962d11-c29a-4e78-aa36-e4583ae93f1e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "967ded2f-ffd2-4d3a-8354-e1fe5b56095c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66462a77-f585-48a1-baa2-add71fbdb7e7",
        "cursor": {
          "ref": "9c2d37de-b66b-4a50-bab0-d5c5c39086b7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7392e4b5-3d60-4cb5-abfb-cbcf16d502af"
        },
        "item": {
          "id": "66462a77-f585-48a1-baa2-add71fbdb7e7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "496fc5de-f312-48ea-ad77-ceb0e3506549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bd053d-b914-42a2-9f2d-a5af7a72e8b7",
        "cursor": {
          "ref": "c45a869a-5b45-4279-8e3c-4cc639e6943b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1adb0a5c-014a-471e-b3b0-11371cc22ee8"
        },
        "item": {
          "id": "96bd053d-b914-42a2-9f2d-a5af7a72e8b7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ed37bd78-5d56-4bd3-aa6c-a3cb609bf63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4babcd21-82d4-42f2-83ed-450d712da985",
        "cursor": {
          "ref": "4ca5e983-7cad-4887-b692-f73ec979abeb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "96273df2-2a90-4512-81e6-15f5b7ff1a10"
        },
        "item": {
          "id": "4babcd21-82d4-42f2-83ed-450d712da985",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c380548a-0603-4d58-845a-c53bed427a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58d7b98-d305-4886-b1d3-218dd56b196a",
        "cursor": {
          "ref": "7345eb31-0ce9-489f-ac38-aeeb4ea7b4b9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cdaa0b67-2526-4f06-8d28-b2e0de395ddc"
        },
        "item": {
          "id": "b58d7b98-d305-4886-b1d3-218dd56b196a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "024fb198-3e4e-4473-8014-05d7f68935ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ea390-80de-4cd7-9da2-9ef2a9b3e704",
        "cursor": {
          "ref": "9136e5d6-8c61-4c71-abb1-96e347d9e4d3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "70c1afd3-c1d5-40e9-8d22-71f6ce5dc7b5"
        },
        "item": {
          "id": "ca3ea390-80de-4cd7-9da2-9ef2a9b3e704",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "82192af1-9d9d-476c-8577-50785ed537a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cfb347-e626-4c82-98b0-004dae192f7e",
        "cursor": {
          "ref": "08fcd090-ee97-44bb-8409-80c8b13497cf",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4889a44f-74fe-42a2-b990-fc41518a037a"
        },
        "item": {
          "id": "b3cfb347-e626-4c82-98b0-004dae192f7e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a54b5815-5bf3-4be2-911a-ac9c63b90b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fa2851-1baf-4129-b669-ed009bf4f443",
        "cursor": {
          "ref": "5006851c-34c7-4916-88d4-8e009c82d249",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fd831a03-9c5c-4017-8397-be779599d382"
        },
        "item": {
          "id": "c6fa2851-1baf-4129-b669-ed009bf4f443",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0abe4600-1173-43cc-a75c-a2b27ae027a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c852c4-64f7-49ce-b55f-1fd73b6d1675",
        "cursor": {
          "ref": "922de865-62b3-4bc4-9fe8-f77d047e4920",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "68b3971c-a90d-4833-bd07-380bd8b738eb"
        },
        "item": {
          "id": "68c852c4-64f7-49ce-b55f-1fd73b6d1675",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "04bfdbb5-ef7c-41b1-8d13-5865d48feef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaeb042-8e79-4098-a1bf-3b288643dbe6",
        "cursor": {
          "ref": "2fc6c809-27d4-4143-8a35-61a3198aa485",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "be45ae12-3b6a-423e-a578-dd082395b289"
        },
        "item": {
          "id": "dbaeb042-8e79-4098-a1bf-3b288643dbe6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ac4f0826-eac5-499d-8b2d-d802bb852206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71de72c-9e56-4460-8277-ec0a3398b424",
        "cursor": {
          "ref": "aa222e31-a963-4171-b8cb-ad0a8c8c1816",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bd174ca4-abb5-4443-b6c6-ace70914394f"
        },
        "item": {
          "id": "e71de72c-9e56-4460-8277-ec0a3398b424",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4ba3d4f8-4ee2-4240-85fe-0bdb6bb2216c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5546242b-da37-4109-ba56-3a68286c7530",
        "cursor": {
          "ref": "e7e5ce61-2afc-41c3-8a67-5a2edd972e88",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "09be8374-17a5-4e35-b321-7452496f7c34"
        },
        "item": {
          "id": "5546242b-da37-4109-ba56-3a68286c7530",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "787f2bb0-e825-4140-a867-b5c420e84c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa14dce9-461d-49d6-92ae-044aea958c96",
        "cursor": {
          "ref": "f06211e4-5197-49d8-b27b-59c87633b442",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b1bffb71-138c-48f7-b651-48d2b64a135e"
        },
        "item": {
          "id": "fa14dce9-461d-49d6-92ae-044aea958c96",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ad014831-51c4-499a-b481-d43c9ed2f63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cd1fb3-0047-47da-8147-a79141fa0cbb",
        "cursor": {
          "ref": "6f022f04-6a60-4dd2-9678-f15ce7a63cd5",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ae15bae0-e580-4c38-8f4b-489b4bd97653"
        },
        "item": {
          "id": "b3cd1fb3-0047-47da-8147-a79141fa0cbb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4a1dcd00-5496-411e-9573-6cce3a488fb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079314e1-fe2d-4cec-94cf-4d57796c6075",
        "cursor": {
          "ref": "0d86ca1a-3e58-4ee6-80d1-45d631280d77",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9858483d-19d4-416e-8873-d534516efaf0"
        },
        "item": {
          "id": "079314e1-fe2d-4cec-94cf-4d57796c6075",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2d4fef5b-bfc4-4fad-ae26-e0a18cadbd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3d30b999-d58a-4ffb-a637-ee48c1f15873",
        "cursor": {
          "ref": "a93e8f87-0b6e-4b37-9e93-1968cdeb0e2b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "87ac5f61-7e4a-4477-9712-4e5fbe589310"
        },
        "item": {
          "id": "3d30b999-d58a-4ffb-a637-ee48c1f15873",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c64c6c28-c2e5-4719-8401-0da9f686a747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "bd052614-6979-43d0-987c-10c364c6b707",
        "cursor": {
          "ref": "08c232bb-4552-4571-ab16-0cbf7d134220",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8b65940a-5b14-4a64-8bc3-92ab809cd2f5"
        },
        "item": {
          "id": "bd052614-6979-43d0-987c-10c364c6b707",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9d4c8adf-7ffc-45dd-a866-16a406c992c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "51333ee1-4a07-4cef-b05e-797765362698",
        "cursor": {
          "ref": "5c33940f-3b1b-41a4-9ed0-04eaa7221e4c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9579698d-5b37-4b13-ad74-fb7c95d23d5b"
        },
        "item": {
          "id": "51333ee1-4a07-4cef-b05e-797765362698",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "029a326a-972b-47ae-9ab9-578ce1856854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c0732797-0023-4d7f-baff-ca45cc81457d",
        "cursor": {
          "ref": "6e7da26e-5763-4d44-840d-53299d7c6ebc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7dc57339-b91e-4047-a9bc-d6aaa1289ed3"
        },
        "item": {
          "id": "c0732797-0023-4d7f-baff-ca45cc81457d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ce501541-81e7-40b9-9b0b-b3b010753b4a",
          "status": "Created",
          "code": 201,
          "responseTime": 9114,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3391ad75-1de8-428e-b1d3-b2d36b3758aa",
        "cursor": {
          "ref": "78b8d46e-3f3d-4cbf-bea2-70d5a6e4cbc8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "41850335-9656-445a-bdd2-ea5fa39a3ad0"
        },
        "item": {
          "id": "3391ad75-1de8-428e-b1d3-b2d36b3758aa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9d064f49-7618-453a-9780-629daa1222cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "33cf9da2-7b55-434f-9439-f1546e0598ba",
        "cursor": {
          "ref": "f8fe264b-c694-4482-bc41-c1f991649575",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f0086d04-c9a7-400c-b9a6-aab010f74798"
        },
        "item": {
          "id": "33cf9da2-7b55-434f-9439-f1546e0598ba",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c6e4110a-5dac-4b25-8ee2-0b44048cf1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e6c06fc8-9d2f-4b7d-a956-a538b04cf1fc",
        "cursor": {
          "ref": "155ff326-eec0-4301-ba02-3b7787ab834f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "89ad88b1-6b62-4fa0-ae46-6b07da0c6381"
        },
        "item": {
          "id": "e6c06fc8-9d2f-4b7d-a956-a538b04cf1fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "447d3673-b71b-43d9-a44f-341f34492e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d36a498-19c6-4372-9cb0-2f785c834a04",
        "cursor": {
          "ref": "3c9546ad-b8c0-4bf9-ae5c-2849eff48f8e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1b99eba-fa47-4a95-b36d-4307af531bca"
        },
        "item": {
          "id": "5d36a498-19c6-4372-9cb0-2f785c834a04",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4f568e1f-c253-4885-9326-46aa7e192d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2f4c1b-856f-46a9-b850-9e40945b60d0",
        "cursor": {
          "ref": "a672a70e-4a25-4a50-b1d1-5cc776b5d72d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "46795a74-17bf-4f1d-923c-1bd7303222a2"
        },
        "item": {
          "id": "4f2f4c1b-856f-46a9-b850-9e40945b60d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2d43f36d-1b49-4b35-8504-ca238d65edeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c7d497-fc8b-433c-9aca-6c0855777d6b",
        "cursor": {
          "ref": "27320276-14f4-4568-8e1a-647f8b2a1f65",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ce1f1770-bf24-4811-8fdc-9fa1b699e5c8"
        },
        "item": {
          "id": "75c7d497-fc8b-433c-9aca-6c0855777d6b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2a5dd89c-5a69-453c-b69b-a7f2862d35c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ff26b3-ad0e-450f-a35d-5637e1f4968e",
        "cursor": {
          "ref": "faee69ab-fbad-473f-bc1a-128f23976918",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7b2ac7f3-bcaf-468e-9c4b-3a7eb24bb5f4"
        },
        "item": {
          "id": "e2ff26b3-ad0e-450f-a35d-5637e1f4968e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2363111b-b7d6-416a-a169-345085f5db9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07f7d6c-76f0-4320-8e16-43f51847df25",
        "cursor": {
          "ref": "82dbd2d0-4c30-4edc-ae1b-aa7dc3a919f3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6f6fa40f-4c98-48fc-8c45-5c5a2164642e"
        },
        "item": {
          "id": "b07f7d6c-76f0-4320-8e16-43f51847df25",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "272019b9-7e26-4187-a907-7b6ba5c9371d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093b8930-dedc-4e9c-9656-5d47d903f256",
        "cursor": {
          "ref": "71934eaf-098b-427c-954f-678ebc8e99c7",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b73231c5-6100-4ab0-8d70-d1576eedfc59"
        },
        "item": {
          "id": "093b8930-dedc-4e9c-9656-5d47d903f256",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fec861cc-8665-471c-bbeb-1177bbdd2d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767a53ca-4f8e-4eca-ac37-834909632f6e",
        "cursor": {
          "ref": "931c69c4-ead6-4eec-8ed6-2dd521d5ed2c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2744a88f-0884-409d-812f-4e04583880e2"
        },
        "item": {
          "id": "767a53ca-4f8e-4eca-ac37-834909632f6e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e7fe35a1-f7a5-4e92-8f26-19f6d80aee22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e60c42b-4a43-437a-8174-64376cc0d535",
        "cursor": {
          "ref": "c60ba175-64fa-4baf-86c7-034f5d2c456d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3d6e8696-0241-487d-bf75-c6f162ba16ad"
        },
        "item": {
          "id": "5e60c42b-4a43-437a-8174-64376cc0d535",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1b7c1ef8-e578-4eb5-95e1-98b3af721af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba144427-f89d-48fb-aa34-c082ae448015",
        "cursor": {
          "ref": "4e12ca37-a13c-44d9-b519-a2d94417e779",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "04ea1492-688f-4f9f-9adc-47e7df00e385"
        },
        "item": {
          "id": "ba144427-f89d-48fb-aa34-c082ae448015",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "562865c4-617d-4c3c-a059-ce7b041d4365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f7cc7f-52f6-46a2-a84c-ac0ac8cc04b8",
        "cursor": {
          "ref": "de0b4aba-8b64-4588-9fd8-7f646415b299",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6bc6da60-669a-4746-8c7b-e6c4452bc42d"
        },
        "item": {
          "id": "16f7cc7f-52f6-46a2-a84c-ac0ac8cc04b8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5e1388a1-4edc-413a-a076-663dcb28230c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5f9c0a-edb7-44c8-8cc9-b09a6eeeecda",
        "cursor": {
          "ref": "657f20cf-4551-452d-a577-f32eb8e51565",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e49bd52f-8636-4b0e-852f-b6ab3a300e85"
        },
        "item": {
          "id": "4f5f9c0a-edb7-44c8-8cc9-b09a6eeeecda",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1963fe24-1715-4af4-b466-f9cf4c357078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c28e83-dc13-4693-a268-cd90ee5ecf1f",
        "cursor": {
          "ref": "a2af2a36-6605-4cb3-aec3-f1213add41a4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aa8d4e67-66b4-4707-b8ba-1e673c249583"
        },
        "item": {
          "id": "13c28e83-dc13-4693-a268-cd90ee5ecf1f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "12187880-6e6b-4472-89dc-93b1705a183c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837793c7-1484-408a-a94a-596e1f578682",
        "cursor": {
          "ref": "650ae44d-5bed-4a50-92b4-5812fd2bd984",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b2f9ad58-a84c-4a24-812a-98418ea65ba6"
        },
        "item": {
          "id": "837793c7-1484-408a-a94a-596e1f578682",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ad8aa414-ca6a-4b3c-934f-8ef9ad281579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106f17ab-dbf4-46c7-b920-fda8e1c05663",
        "cursor": {
          "ref": "f070865f-c8a6-48ee-b3f1-09b7584fedf6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2a8646b4-b975-4083-87fd-2f29d72d233f"
        },
        "item": {
          "id": "106f17ab-dbf4-46c7-b920-fda8e1c05663",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "17fc2e18-ba10-4558-ba4c-58c5df04810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2420d560-1411-4f87-badb-0c8465e717ce",
        "cursor": {
          "ref": "501fcef0-6926-4576-ba68-b5a2f5cb2aaa",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7fd77550-90e1-4d2c-8ec1-00b58ffd5ea8"
        },
        "item": {
          "id": "2420d560-1411-4f87-badb-0c8465e717ce",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7235df3e-08eb-4cd6-b79f-f53ebddc888c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0157f4e-7469-4580-9c27-d3bf2b417dfe",
        "cursor": {
          "ref": "38ba8fc8-506f-44e2-bb05-16b41b7956b7",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "74c13d57-a024-4bf8-a3fb-fd4502d78f14"
        },
        "item": {
          "id": "b0157f4e-7469-4580-9c27-d3bf2b417dfe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ce144815-4ff0-4316-bf16-17ca669975c8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "787c61b4-f67e-47b2-a171-ce196f34d1a6",
        "cursor": {
          "ref": "f566e3ee-44e6-45b5-9222-eae183e2b17b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0e0b6d08-ac09-418f-bc9c-9e8a9f581a02"
        },
        "item": {
          "id": "787c61b4-f67e-47b2-a171-ce196f34d1a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d59d51f8-198e-49a2-ab4a-b6b595a7228e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ab50cc-7689-4baf-9496-1bbac70d2b8a",
        "cursor": {
          "ref": "42636516-0ee8-49ce-9e2a-b68ead391066",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f9a8ce2e-b878-4434-b243-b505fddc17f4"
        },
        "item": {
          "id": "46ab50cc-7689-4baf-9496-1bbac70d2b8a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cf4100a8-3e5f-4f37-9ca0-7cc033e7dc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de08458-e7e0-4736-9031-c71c3945fcc0",
        "cursor": {
          "ref": "837b1471-e7a4-49df-a6c6-2c41f1633cd5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9e5e5c9d-042b-44b5-9cb0-72128c3ee331"
        },
        "item": {
          "id": "9de08458-e7e0-4736-9031-c71c3945fcc0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6bc2f30c-125e-4585-9005-6aa501e6305f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9c0c1e-64e7-42ce-a57a-25cd413062fb",
        "cursor": {
          "ref": "bfaf53ae-696e-4e11-8155-b3dbc3e04dd5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d53ef4b4-e914-4896-99ca-2cea0ed017ba"
        },
        "item": {
          "id": "4e9c0c1e-64e7-42ce-a57a-25cd413062fb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "97a291c9-f5f3-4c86-8afd-afb2811aac0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214f2148-8242-474e-8f0e-6b6841768832",
        "cursor": {
          "ref": "2d85c2f7-1ec2-4391-b051-4de4f23860ee",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9f0f7899-132c-41eb-8384-40e3163597b9"
        },
        "item": {
          "id": "214f2148-8242-474e-8f0e-6b6841768832",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bcb2cbf5-7cad-4871-8ce9-1814d48a2227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a28216e-7d82-446c-8b6f-f0b9258cee07",
        "cursor": {
          "ref": "4c891298-fa85-47ad-8eef-08becaf7b5e5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "06028a9c-e45a-4d33-b6bb-71dae4507d16"
        },
        "item": {
          "id": "0a28216e-7d82-446c-8b6f-f0b9258cee07",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa2a1a34-d41e-49a8-a65b-cf31f4665ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07165d44-56d0-4b2a-a7f5-8af1db30e06d",
        "cursor": {
          "ref": "1ca0080d-40bf-44db-b18b-cf18557a915f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "efbb803d-cdbc-407d-9f0d-276fd24e6c92"
        },
        "item": {
          "id": "07165d44-56d0-4b2a-a7f5-8af1db30e06d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "053e4952-7ec4-4154-83e3-fa8c0d8d3bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38982be2-3f4d-48ca-b9d4-737afcbb4100",
        "cursor": {
          "ref": "7c6efa2b-1171-4c11-bb2c-3b3f0f471ed3",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b4b7fe89-4b85-4c26-aa6c-cf292f1d835f"
        },
        "item": {
          "id": "38982be2-3f4d-48ca-b9d4-737afcbb4100",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3b8bf9a8-b262-4366-a60a-fe175d535a14",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "8971128b-de60-4a4b-ac71-9c590d53f560",
        "cursor": {
          "ref": "51d8f406-b036-4276-bb5e-219696118406",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1b318cf2-4617-4c65-a5c9-07762c3dded2"
        },
        "item": {
          "id": "8971128b-de60-4a4b-ac71-9c590d53f560",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "17e7db98-03fa-4fa2-9b73-b020aceb8a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec4ddd0-67f0-4da5-9dc3-19462035fef0",
        "cursor": {
          "ref": "1f9c5471-1054-419b-af47-08b834ae77ac",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8a2af6fd-d97e-4359-8d72-75103424cfa5"
        },
        "item": {
          "id": "4ec4ddd0-67f0-4da5-9dc3-19462035fef0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aefdb9ff-b06b-4068-baab-8de729194d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cf0ceb-1c2e-4c8d-9754-df51c41ffc3a",
        "cursor": {
          "ref": "ddd1c354-3e8e-4126-88b5-b12889eee59b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5e27460c-d4ff-46cc-9991-058041c318cc"
        },
        "item": {
          "id": "10cf0ceb-1c2e-4c8d-9754-df51c41ffc3a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c0b43d9a-f001-42e8-b7b3-474aab512a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c047c6-1423-4717-99de-402b84f9fc2f",
        "cursor": {
          "ref": "97808a31-1a0a-4120-9085-b2497a2ec393",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ec634342-8659-46a3-9d2a-6c9dfd41d394"
        },
        "item": {
          "id": "73c047c6-1423-4717-99de-402b84f9fc2f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fe0e90e7-813c-48eb-ba2c-b949234ff24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f3df31-a7f5-4de5-9194-f69cc0ba834c",
        "cursor": {
          "ref": "789d8465-27ad-4c23-9432-ac7ce2b16b0a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "57a44ddc-05e2-41d1-b830-9b30b72682ae"
        },
        "item": {
          "id": "79f3df31-a7f5-4de5-9194-f69cc0ba834c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87cb3f27-3ca5-4619-9a98-6aee59aff296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81af4a94-2936-4991-95dd-8a03a0558878",
        "cursor": {
          "ref": "36cb30b1-59d0-4925-9586-1cb5418f419b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8694f317-b869-4b3d-a419-92d8864bc7b5"
        },
        "item": {
          "id": "81af4a94-2936-4991-95dd-8a03a0558878",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8da327d4-3652-493c-853b-b2d912432469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db1a40c-be7f-4584-b166-e83da743cd07",
        "cursor": {
          "ref": "4a572ce7-7a95-4eab-af91-17d9dd7b937b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "76cff0e9-74a4-4863-8a65-af00e5231dd7"
        },
        "item": {
          "id": "1db1a40c-be7f-4584-b166-e83da743cd07",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a7a5641f-bc38-4d37-820c-b32694b81ff9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "df6acdf8-e03c-4b44-83ea-1d8fedca9aaa",
        "cursor": {
          "ref": "272c7016-78b3-4610-9c79-b4e5ee8c0e64",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2895b22d-833c-40c5-ae92-96ea9ac9b9ae"
        },
        "item": {
          "id": "df6acdf8-e03c-4b44-83ea-1d8fedca9aaa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3b149fc0-c47a-4940-addf-386482183dda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ec399e-ab08-4bcb-a286-8801f2cd8e5e",
        "cursor": {
          "ref": "e3b157a5-e560-4433-af93-87c1236d41ee",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1050336a-c761-4bc9-ad77-63713297d5a0"
        },
        "item": {
          "id": "47ec399e-ab08-4bcb-a286-8801f2cd8e5e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "01e748d9-ef4c-4f5f-a94a-466e9fc9ce28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6feb07-6e28-4f01-996b-5fe8dacdb95c",
        "cursor": {
          "ref": "53602316-d5f1-4e70-8100-19e15eb9fb15",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8da70bda-3594-4b25-914b-aec85e41b922"
        },
        "item": {
          "id": "ce6feb07-6e28-4f01-996b-5fe8dacdb95c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c22a0280-2b16-4625-b258-496c5edafaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cd89eb-bfad-4e27-943c-cc43cf39fe23",
        "cursor": {
          "ref": "73143cc8-d4ec-424c-b49f-930983f0abeb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0daac097-aaca-48c2-b527-d711ab49786d"
        },
        "item": {
          "id": "37cd89eb-bfad-4e27-943c-cc43cf39fe23",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6bb5f7a3-dc3f-4835-ac49-7e4cf5f6db38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b689292-fa33-47d5-96a1-4ac123f1ed4d",
        "cursor": {
          "ref": "836ccf96-3789-4eac-b615-30fbdc7e74ef",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "225e3217-1d4d-48ad-be6c-056f08565a61"
        },
        "item": {
          "id": "0b689292-fa33-47d5-96a1-4ac123f1ed4d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9291c387-f3c0-4a33-bcae-986e3e36f756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f00172c-5e6e-4f86-afa3-9b5f4c39643a",
        "cursor": {
          "ref": "7b671660-95ee-41a1-8a7d-8f33a581df29",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c3dba19f-7a4a-40b8-a39b-8fb7750ff8bb"
        },
        "item": {
          "id": "7f00172c-5e6e-4f86-afa3-9b5f4c39643a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0cc95222-cae6-4d06-acf8-5d0ed620e46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c339ad35-86f6-48aa-8f62-c2be41892189",
        "cursor": {
          "ref": "7c349e41-9b4e-4f45-9671-fb48e24982bb",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7a46b416-ace3-4739-b616-9cd561c95123"
        },
        "item": {
          "id": "c339ad35-86f6-48aa-8f62-c2be41892189",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5ed6f77c-40c6-4a09-b2b2-f452e2f182ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a804f4b8-61d3-4def-bcff-4d75eefbcc42",
        "cursor": {
          "ref": "35ee9121-f8bb-4ec0-93ce-4d2d5360c5e8",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b2f88280-f86a-4e1b-92e6-b630b7910254"
        },
        "item": {
          "id": "a804f4b8-61d3-4def-bcff-4d75eefbcc42",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d5226a87-074c-4eb4-825b-517e1acb5ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77aa4a07-dc2e-4506-a390-74f32b7d7d3a",
        "cursor": {
          "ref": "a0ca03dd-2bd9-4c35-b01d-17801e7c02ee",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aa0d2121-56d0-4b52-a5e3-f5a9d3292301"
        },
        "item": {
          "id": "77aa4a07-dc2e-4506-a390-74f32b7d7d3a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "10a324bf-0e37-4cc0-80f4-f57deaa16ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c12b328-8072-4025-97f0-b32a191995f1",
        "cursor": {
          "ref": "7282c2f0-4678-4e54-a99a-4a177ab9a3b8",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8b3ac90b-327d-4da8-9b8a-cc0e64ebc5e1"
        },
        "item": {
          "id": "0c12b328-8072-4025-97f0-b32a191995f1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ad86eea-f357-4471-9121-de68d5632a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e20c1e-fa0e-417c-bbc6-fc1fc81e8650",
        "cursor": {
          "ref": "12fa700b-2825-41d7-a82a-ef569ec29c2a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "100cbf8c-2bdc-484e-953e-24f90622b8d1"
        },
        "item": {
          "id": "a1e20c1e-fa0e-417c-bbc6-fc1fc81e8650",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9f3ae58c-889a-45df-8d36-60acf9c19d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e22d4a7-5722-4c44-938f-133d88f0a131",
        "cursor": {
          "ref": "bef25751-67eb-4a06-9746-fb9263ba521b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d3144706-6324-4a1c-8205-416e3343663c"
        },
        "item": {
          "id": "8e22d4a7-5722-4c44-938f-133d88f0a131",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "01d6ad66-573b-4e73-b73a-b93434a10cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876eab9c-3710-42d5-90da-2d18039ab737",
        "cursor": {
          "ref": "2e57dee5-4162-4c50-921a-ba781d2c55b6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "53a795d6-d149-43d6-ac73-960c17c9ed60"
        },
        "item": {
          "id": "876eab9c-3710-42d5-90da-2d18039ab737",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "127dc35d-ac2a-43cf-9fc5-401026a7f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca658e5e-7692-45a0-983d-4a8a8b22510a",
        "cursor": {
          "ref": "06792a75-c427-4a91-909d-a97108696254",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "742dd015-c1f5-480f-b9f9-e7e760f614d6"
        },
        "item": {
          "id": "ca658e5e-7692-45a0-983d-4a8a8b22510a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "faacb0d1-af84-4902-a76d-dccdf25c277c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0c683b-dee9-43c7-94a8-91e4bf54cf41",
        "cursor": {
          "ref": "d801255b-1028-488f-ad61-2b5fe3a4c157",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "86a3fe68-919e-40d4-965d-8aff2c476adc"
        },
        "item": {
          "id": "9f0c683b-dee9-43c7-94a8-91e4bf54cf41",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8ec5a0dc-f67f-4333-95c6-57dc63450160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc4824f-c447-4399-90f5-cdd3e276971b",
        "cursor": {
          "ref": "c958b301-15bf-4225-bfb8-e74531a2e189",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5b125552-f34f-4da1-a034-67d46711b1f7"
        },
        "item": {
          "id": "bcc4824f-c447-4399-90f5-cdd3e276971b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9c4d3d8d-812f-4305-b30c-af3dce00ef47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e47109a-d8a7-42c0-809f-5790a1fcaa26",
        "cursor": {
          "ref": "2dc0d0e9-86b6-4820-b601-55e557e90c25",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e9c31cd5-6f31-468b-9a93-1292e80e66f7"
        },
        "item": {
          "id": "0e47109a-d8a7-42c0-809f-5790a1fcaa26",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd0fe076-50c3-4737-8c7a-f17466497fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305990c2-5278-4b0d-acf7-8924a54dde00",
        "cursor": {
          "ref": "7154ac99-e16e-439c-b7ae-df3193bdc991",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a10164c6-b537-4861-bbe4-03fd55cab59c"
        },
        "item": {
          "id": "305990c2-5278-4b0d-acf7-8924a54dde00",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "900c5ab0-5f34-4003-b3a2-3e68c15d0551",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "daa0cfcb-20e5-4020-9b40-d596685625f7",
        "cursor": {
          "ref": "99fc99fc-edf8-4da3-9dc3-8f267953e3c3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "440097d7-372e-4378-ad2b-5bec470bd21b"
        },
        "item": {
          "id": "daa0cfcb-20e5-4020-9b40-d596685625f7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dd5c1359-9ea9-4db9-800f-1aa6411a7059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30844d9-da41-4c92-87af-b9feb941fa6b",
        "cursor": {
          "ref": "161ad8b1-4968-4aa7-9e61-b9b2bc457823",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "79ddedea-caa4-4f65-9806-2b31a961e7c9"
        },
        "item": {
          "id": "c30844d9-da41-4c92-87af-b9feb941fa6b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "37eaebd8-34cd-48b9-8364-2f58ca4b3f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed3121e-73e8-4b3a-af06-b30a1a1f48f0",
        "cursor": {
          "ref": "95640211-7df5-479d-a14a-3cb9258b62ae",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f1011ac2-c410-4a5b-9378-d3d089a8ef97"
        },
        "item": {
          "id": "7ed3121e-73e8-4b3a-af06-b30a1a1f48f0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "135dc861-f1b0-4a7b-8e1c-8f42313d9ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1ddbd5-7e8b-4f47-b863-0662569d4b6d",
        "cursor": {
          "ref": "7f57a017-e2d6-4511-a545-b2474301038f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eaf7efc8-6473-41ef-8250-b3b2515740a1"
        },
        "item": {
          "id": "fd1ddbd5-7e8b-4f47-b863-0662569d4b6d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8f32bfa4-7ff3-44fd-b59c-4e36e75401b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27a758d-3f53-4621-a4fa-0aff715f88c4",
        "cursor": {
          "ref": "fcd69a03-0528-4bec-95c4-838fac180048",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "626852ea-22c4-463c-bd0c-90816154d528"
        },
        "item": {
          "id": "c27a758d-3f53-4621-a4fa-0aff715f88c4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "236079c4-5504-407f-8aec-f5a5b2e9502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce641dc-f177-4609-a173-a8bf516c1761",
        "cursor": {
          "ref": "97a3e09b-97e6-4dfe-b2c4-a454554276b2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e3020704-46cb-4c02-bb7f-91055fcc5d67"
        },
        "item": {
          "id": "6ce641dc-f177-4609-a173-a8bf516c1761",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "797703cf-72c6-44ea-96cf-f47441108cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf775af3-9f40-4a96-8981-7cba2dd34dfa",
        "cursor": {
          "ref": "9da20dd1-9c88-468c-a14f-3e1484063c1f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1da1f637-fa4c-4d41-ba79-48bab5636cf2"
        },
        "item": {
          "id": "bf775af3-9f40-4a96-8981-7cba2dd34dfa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "672daf5e-d3b3-4247-9927-14d1fbd408f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f51f76-223f-4a21-af7d-ec9cb9a0457d",
        "cursor": {
          "ref": "0cb34086-244a-4e10-8a37-dc95493b62f2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "30f11269-49a6-43a9-8652-eda25fe62d99"
        },
        "item": {
          "id": "10f51f76-223f-4a21-af7d-ec9cb9a0457d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "630792f5-5e6d-4959-b90c-818c99e11c02",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "058796ba-45da-42e9-8d25-c214d9d9f968",
        "cursor": {
          "ref": "bdccf477-d3d8-4484-bfc3-3f10f8d1a1dd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2c78d718-aca3-454f-9ef4-aa48c87c41ea"
        },
        "item": {
          "id": "058796ba-45da-42e9-8d25-c214d9d9f968",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1b544ec3-5a5f-4d4f-9098-b332afa94bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa93d6c-781d-4b16-87b1-7449fad04f89",
        "cursor": {
          "ref": "fde30d12-f5d0-4526-98d5-fb33c7ab19bd",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f20dd90d-5fbe-4ba2-8119-9ae613a703cc"
        },
        "item": {
          "id": "daa93d6c-781d-4b16-87b1-7449fad04f89",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "da7a6ee6-f100-49ec-8eaa-e0374dd9ac04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7805811-f53e-43fe-b22b-10abb8366c58",
        "cursor": {
          "ref": "28c4665e-9b96-463f-a47d-e7e1e6046704",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e879101c-4891-479c-a83a-6f67eff4a256"
        },
        "item": {
          "id": "e7805811-f53e-43fe-b22b-10abb8366c58",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25eb3c86-d5db-4aba-b054-6e5c9adf9ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc472736-a020-46ac-8ad2-a052e320f891",
        "cursor": {
          "ref": "97503b53-247f-47b8-b4ed-2eb605144657",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1a4ad64a-e3a1-4358-a4df-db56358ba2a3"
        },
        "item": {
          "id": "dc472736-a020-46ac-8ad2-a052e320f891",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8d05409a-211e-453f-9f2e-78c67e11c1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba386ff-c6e3-4cb7-812e-c470948b74ac",
        "cursor": {
          "ref": "3baf4858-8408-47f2-be8b-b06b4929cb7f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "04961c11-a3c5-415b-a512-932ab7e23a74"
        },
        "item": {
          "id": "2ba386ff-c6e3-4cb7-812e-c470948b74ac",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cd72e5ef-147b-4e56-87d1-b4661079fed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe98fd9-2be7-46ea-ba55-d95c2519fcbf",
        "cursor": {
          "ref": "ea53f00e-6729-4e18-a2e8-892745dbeb85",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7bca6cb0-a54c-4c51-a0ab-5b1d0396612a"
        },
        "item": {
          "id": "ffe98fd9-2be7-46ea-ba55-d95c2519fcbf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "98b342ed-38ef-4bfa-a8c0-7c944f07456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9ac119-69d0-40dc-86c9-340d2dac591c",
        "cursor": {
          "ref": "ee3789ea-b77e-40b2-9e19-af67df0a7eb5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "47bb8cce-3101-42e2-8ae4-80cf14bf25f8"
        },
        "item": {
          "id": "bf9ac119-69d0-40dc-86c9-340d2dac591c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "71fd6751-14a3-4ef7-b98c-89bca7393dda",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "8e00c951-b68c-4f78-8cfd-86dc3bcefc8b",
        "cursor": {
          "ref": "e37caca9-947f-4b67-b668-79b454884766",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "46f50353-9142-41b6-a3e0-0766afdbddfe"
        },
        "item": {
          "id": "8e00c951-b68c-4f78-8cfd-86dc3bcefc8b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b5ca5910-bca7-46ae-819b-e4070343c482",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "52e5bdc2-f56b-4a19-82f2-4dc612ef4827",
        "cursor": {
          "ref": "028eec2a-05be-4c3f-a5c9-225bcf2d009f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0c83a1a4-1bbe-4f35-9ee1-4690172b75d7"
        },
        "item": {
          "id": "52e5bdc2-f56b-4a19-82f2-4dc612ef4827",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "90028b15-8fb1-4e67-a6c8-fbc8af150b39",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "7b47a180-bda0-4793-ba56-9e4b32bc4f02",
        "cursor": {
          "ref": "7cd71eba-c5ed-4667-8976-78a287394c92",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "79a8c044-13ff-4aa0-b288-d2c0ffe0df54"
        },
        "item": {
          "id": "7b47a180-bda0-4793-ba56-9e4b32bc4f02",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "60f6117f-001d-48e8-9f67-0a7df06d4b11",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "3bc41370-0804-4d89-9ff2-94ff85f4a59e",
        "cursor": {
          "ref": "cc8900c7-049a-42d0-bbf9-d5845549dd7f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "abd84585-a712-4dab-90a4-65c12db2ebc1"
        },
        "item": {
          "id": "3bc41370-0804-4d89-9ff2-94ff85f4a59e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "18a83897-5968-4c14-a919-ea551c856e73",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "361738ad-435b-44e7-abea-5703840c190c",
        "cursor": {
          "ref": "bb0bf605-5408-47d0-9578-d1c7743c3c7e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "56426ae9-b95f-4757-a1bf-4588db0cb19e"
        },
        "item": {
          "id": "361738ad-435b-44e7-abea-5703840c190c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "857c6043-1747-4965-a089-b866a2aa6b64",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "3e782117-7277-4698-935b-f1b373d1d03a",
        "cursor": {
          "ref": "5944ab96-9bb7-4cfb-a1e5-f9737d163bcf",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ebd9bbf0-8130-44a9-819c-ac4f700dbdd1"
        },
        "item": {
          "id": "3e782117-7277-4698-935b-f1b373d1d03a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7254efc6-ccf4-4c19-8ef1-4e231ddf3f6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48543e0b-a938-44b5-9bca-eea13c4bf224",
        "cursor": {
          "ref": "6653046a-8cc1-456d-b4e9-0cfa306114c0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "aaa83d57-1c09-403d-8085-3ad34dd6ca8b"
        },
        "item": {
          "id": "48543e0b-a938-44b5-9bca-eea13c4bf224",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "078f2d41-8cbe-4696-8b2a-2ff21fcf85d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8b7f98-98ce-4860-8e9f-69f9c8fa3f6a",
        "cursor": {
          "ref": "bdad9410-84ec-4c53-a0fe-cbabe0cdbfbd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c42802e4-fe2f-4790-b30c-aa6c946bb4ff"
        },
        "item": {
          "id": "7b8b7f98-98ce-4860-8e9f-69f9c8fa3f6a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1d3dd288-d453-4677-bfd1-cb3a092916f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c98d3cf-1c00-44e4-b679-e8036891aa25",
        "cursor": {
          "ref": "a2dbb341-5eff-4e17-8114-f8b917d4cc6b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5b6ae471-f019-470b-acd0-42cdd47e67e0"
        },
        "item": {
          "id": "3c98d3cf-1c00-44e4-b679-e8036891aa25",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cc194ff4-3bb8-4b23-ba30-aafd998d8c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d0ab40-4b8c-46a1-b264-54807fc6b0b3",
        "cursor": {
          "ref": "5ed94484-9c8d-4362-8074-f02e6cd3d7a1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0eb34e16-636a-40fc-a0ba-540c4fe4d08b"
        },
        "item": {
          "id": "d6d0ab40-4b8c-46a1-b264-54807fc6b0b3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f16595eb-3312-4383-b63e-a9f71356133a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d282fe-a1c6-4fe4-92d9-05cd160a121f",
        "cursor": {
          "ref": "df800653-d779-455e-a16c-1dde53912dda",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eb4bdc73-4cd9-4c48-8087-40b537ec2b4b"
        },
        "item": {
          "id": "c2d282fe-a1c6-4fe4-92d9-05cd160a121f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f9bed8a2-4535-4cef-a554-059384743bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181b6ec6-c976-4ea0-baf1-93dc1167c761",
        "cursor": {
          "ref": "a96795cd-6c98-4ec3-b79b-64721b56e54b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f4caff7d-578a-472d-b48d-be357b29ce7d"
        },
        "item": {
          "id": "181b6ec6-c976-4ea0-baf1-93dc1167c761",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "28197562-15f2-49e3-bd3f-adae49188251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a1992b-4c9c-4d2d-a471-d264c7c7c3a0",
        "cursor": {
          "ref": "a0b7eea2-8f8b-4d8b-9e72-cd2c198fe7c0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e8aae9ea-dbed-414f-90d8-dbc4eb18d77f"
        },
        "item": {
          "id": "45a1992b-4c9c-4d2d-a471-d264c7c7c3a0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "13e16c36-471f-424a-9096-ad356e8fc8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6257fe-44e4-4fcc-8293-b4de893e0e5c",
        "cursor": {
          "ref": "3a282db4-2589-4340-a078-7fb3f0b50f72",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4baa6b98-e583-425d-b6bd-acdeea943339"
        },
        "item": {
          "id": "ff6257fe-44e4-4fcc-8293-b4de893e0e5c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a22e29f0-c79c-4c77-b2a6-884dfebd5d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad0598-7f17-41cf-9edb-6cff366721d3",
        "cursor": {
          "ref": "5bdd860e-4ceb-49cc-a5d5-834bf9158fac",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6dd725f1-9333-4d0e-9ce6-6d9a2d17c283"
        },
        "item": {
          "id": "4fad0598-7f17-41cf-9edb-6cff366721d3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e9a8d9c2-70e6-4f15-ba75-0b30fcfdd20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e0a244-4f27-487b-9575-ee2635721278",
        "cursor": {
          "ref": "2bfb457e-c1a7-489f-a17e-89b4485f3231",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "637e3756-0f6a-465e-833b-8bf8c0a70ac6"
        },
        "item": {
          "id": "e9e0a244-4f27-487b-9575-ee2635721278",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6012a031-9d0a-4b07-994d-a9835377bdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c919e9a-4f9c-4b32-8331-ed3bc5176cbc",
        "cursor": {
          "ref": "1db6722f-3d69-411e-8ba2-188fbfa43ba5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dca2a5d2-41bb-4b4a-b56a-c35dbd77d8d8"
        },
        "item": {
          "id": "9c919e9a-4f9c-4b32-8331-ed3bc5176cbc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "61417a31-8deb-4058-9cc6-047a36f6fb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12126ac1-6ba1-4ee9-8715-c6600fe94554",
        "cursor": {
          "ref": "4d94f8ac-9396-424e-8925-e1799a39de96",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "35059369-4d23-49c0-9576-50575a4ff8e4"
        },
        "item": {
          "id": "12126ac1-6ba1-4ee9-8715-c6600fe94554",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2889bf53-246d-4506-84e3-4d6cc7ebc6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dda840-4310-4943-9c36-0050368ac7c0",
        "cursor": {
          "ref": "c2a07a7e-c823-480f-8c8c-ffdb4066f041",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "deb8ab7d-168c-4d52-838b-663784a172fd"
        },
        "item": {
          "id": "65dda840-4310-4943-9c36-0050368ac7c0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6684f79f-1c92-4807-88f8-09d6a4052a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fa20dc-18ca-4e70-b1a7-4b993a56a39a",
        "cursor": {
          "ref": "fc5a152d-ca6d-4999-8ac8-dd18c3f1b659",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "104e9654-398b-49ab-a04d-751185151db3"
        },
        "item": {
          "id": "d4fa20dc-18ca-4e70-b1a7-4b993a56a39a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9111db0f-4f80-4e70-8b07-1c64fd170148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ac28b-5ee0-45df-a9f5-b35b57274d38",
        "cursor": {
          "ref": "22c5b0a8-0f54-43f7-a9b9-90948dd21d9e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9a55c629-a249-472f-b63e-4f6c6b726d55"
        },
        "item": {
          "id": "3d5ac28b-5ee0-45df-a9f5-b35b57274d38",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5b512b31-8ae7-4499-8e21-c47c2bf38d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66db614-2fea-41f5-8d2b-8eb6934af0b2",
        "cursor": {
          "ref": "26b2195c-01b1-463c-b195-35d83c487731",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f11f28d-48dd-4858-ab3a-cd83bcd5a371"
        },
        "item": {
          "id": "f66db614-2fea-41f5-8d2b-8eb6934af0b2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0a6b9a1d-220f-427a-8509-2b9042ced6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fbda2a-0b0f-4986-9bbf-3b39b7254836",
        "cursor": {
          "ref": "2247bba7-310c-458a-b99a-a97063a2d30f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "12e73ba7-d936-4a23-8d62-0472bd329f3e"
        },
        "item": {
          "id": "c0fbda2a-0b0f-4986-9bbf-3b39b7254836",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "380d5983-64e1-4813-bc7a-85540ebefd3b",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "6bac4a08-bde8-4aed-b5cf-843be82ca4cd",
        "cursor": {
          "ref": "0c4c37a3-0eb0-4091-9f08-8f9ed5ad57f6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6f11dc4c-17b1-4b14-8fff-e71e56472523"
        },
        "item": {
          "id": "6bac4a08-bde8-4aed-b5cf-843be82ca4cd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "743b0d7a-b02a-4043-bdb0-c5cef7f06f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885cbc72-20ad-422e-8b5e-81d022fe2fa6",
        "cursor": {
          "ref": "da1ea3a3-f2fd-4a90-8969-466fdb87c100",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e92788eb-f7c7-4ac3-9335-a0fe92b3fcd2"
        },
        "item": {
          "id": "885cbc72-20ad-422e-8b5e-81d022fe2fa6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7ca91c11-4e89-49b1-9ebf-2cc9f4b6d08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38abe869-004e-47ab-8adf-4849071b5def",
        "cursor": {
          "ref": "0e1cf547-40c8-4e0e-89f0-a9e29648325e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "06c8e025-1eca-4d95-966b-efab6093bf28"
        },
        "item": {
          "id": "38abe869-004e-47ab-8adf-4849071b5def",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6d65fe45-4c7b-4c3d-96bb-89c795c997b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091e623-6939-4bd3-9059-2ae432598f4a",
        "cursor": {
          "ref": "bbd8f7c7-a4a5-41b0-8d61-64719661f173",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7653a553-ddec-4c4c-87ab-06e49bc5d69f"
        },
        "item": {
          "id": "5091e623-6939-4bd3-9059-2ae432598f4a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d5df1804-d270-4ff3-9fb6-a9ad52a3dae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637a3361-6936-47ab-902f-60e41317d40f",
        "cursor": {
          "ref": "cec9b139-d3fb-47fe-999e-e6ae647f8fb1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "96adb2d7-5f9b-44e1-8cdb-6c6929875ee7"
        },
        "item": {
          "id": "637a3361-6936-47ab-902f-60e41317d40f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f6c8e3b2-63f1-458c-9006-a4a1d5819c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a184f18-d4e0-43fd-b0e1-6e2716dea0eb",
        "cursor": {
          "ref": "68033b41-174d-4094-b285-609137084108",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f5f8d9fe-c05c-4b27-b050-e9cf6068521e"
        },
        "item": {
          "id": "2a184f18-d4e0-43fd-b0e1-6e2716dea0eb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1d18defb-d2be-4217-b7b8-fe437ba04482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3eeead-9cac-44ed-acda-31f01024034d",
        "cursor": {
          "ref": "17494a89-6d78-486f-b1e9-48f0e751282b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "77f50933-f57a-493e-a0f3-e48a6eec245e"
        },
        "item": {
          "id": "eb3eeead-9cac-44ed-acda-31f01024034d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3853a989-b622-40d7-95aa-a8d83ad8e53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a85a10-5973-4bb9-8987-81ad135bdf35",
        "cursor": {
          "ref": "c42357fe-179e-4c86-a1c0-ba642b5712d1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f9a04729-5b61-4c92-949e-85ed24a236d3"
        },
        "item": {
          "id": "76a85a10-5973-4bb9-8987-81ad135bdf35",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0f530f4f-f917-4ecd-ad7d-f376929d2fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61133c58-d752-49e2-9b66-63a755274945",
        "cursor": {
          "ref": "67406537-94a7-47f8-8f11-2a95a8bd8694",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e52f8934-c2e0-46c2-81d9-3083b02cf501"
        },
        "item": {
          "id": "61133c58-d752-49e2-9b66-63a755274945",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8655c108-641d-44c9-9528-dc421bfd33cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c1cecd-0111-41a3-9a4d-f884d096a9bb",
        "cursor": {
          "ref": "eb729475-23d5-4baf-8bae-6436203ed1a8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ccda87b8-54f4-4813-af94-069c3a3c57d3"
        },
        "item": {
          "id": "62c1cecd-0111-41a3-9a4d-f884d096a9bb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4156f469-8c99-4c03-96d0-fc68d515d099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a51d0cf-4197-4858-8263-1033a5f0806d",
        "cursor": {
          "ref": "d8fd45e0-b809-4276-aef7-7931888ffd4c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2a5bd71e-bf43-4b63-8fec-b50fc950f594"
        },
        "item": {
          "id": "8a51d0cf-4197-4858-8263-1033a5f0806d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b46d6a3c-ff14-49df-adf0-2f5b4575d1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72b7d0c-b649-4c37-8829-94778955d8ad",
        "cursor": {
          "ref": "3f20978f-e2b3-4787-a7e6-8d17f74f3eb3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b7079502-ab01-4a00-b187-5afe7486e991"
        },
        "item": {
          "id": "b72b7d0c-b649-4c37-8829-94778955d8ad",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "05e9919d-ce2b-4b2a-b6d1-4902a56bf3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3327e2a3-9205-4488-b43d-18770e6373b3",
        "cursor": {
          "ref": "565f4e8e-76d6-4119-b04b-a464307b7f8f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1a84963f-81d7-466f-b4e6-97db3096d214"
        },
        "item": {
          "id": "3327e2a3-9205-4488-b43d-18770e6373b3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "07582c78-78b2-4111-9ce9-8ea930b5ecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73154408-6c10-42f9-a871-10c406669e41",
        "cursor": {
          "ref": "17434f62-dbc4-47e7-97a6-b1e938ff9755",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f0eb8688-7840-49e5-ab12-4dad106e6e1c"
        },
        "item": {
          "id": "73154408-6c10-42f9-a871-10c406669e41",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "106c4c80-dc7c-457f-9a3e-c5bf9fd50e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acce2d78-8533-4a66-88c6-3482996a9f4c",
        "cursor": {
          "ref": "26115373-f367-4797-8f96-e23fe4413911",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "345f2df5-b5cb-4ef3-af0e-98c868e86234"
        },
        "item": {
          "id": "acce2d78-8533-4a66-88c6-3482996a9f4c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c7d43f99-241e-44d5-bea1-3b945cb3a739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd22e11b-7ee0-4393-8484-5f9f104f7f5b",
        "cursor": {
          "ref": "add44725-6f31-4cc5-9444-84d4832a45f8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c98ed39-dfa0-40a1-85a8-1a3b0bceed18"
        },
        "item": {
          "id": "bd22e11b-7ee0-4393-8484-5f9f104f7f5b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fb2f336f-be89-409c-9ef1-22ed2899c04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407d6c0b-2231-42db-8c16-9bf8a6b7bc94",
        "cursor": {
          "ref": "5f79c9f0-b2b1-4b5e-9f78-0ff48af59efe",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f324ed81-c98d-4d5b-bbc9-bb7f8b634eb5"
        },
        "item": {
          "id": "407d6c0b-2231-42db-8c16-9bf8a6b7bc94",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9593736a-eacc-41aa-9924-5cd1ac9643cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8855da86-e1ff-42cb-9d20-79ea6d5032dd",
        "cursor": {
          "ref": "169ad0ec-aae3-47f8-90e9-a060034b1cd0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ab6437dd-a491-4cf2-9c57-ce4aa7351ea4"
        },
        "item": {
          "id": "8855da86-e1ff-42cb-9d20-79ea6d5032dd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "154935e3-408b-459f-bb10-0dc4ad982f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e831a98-dc2d-407d-9e03-0a5223072741",
        "cursor": {
          "ref": "b04417e5-c866-4868-bc3f-6c4933accce8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "841f8779-aad2-41af-a842-6d9484b8e37e"
        },
        "item": {
          "id": "0e831a98-dc2d-407d-9e03-0a5223072741",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9d3de1a1-a396-401a-bf63-c8f5ae9e2933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd342dc2-d778-432c-b874-df25470d5172",
        "cursor": {
          "ref": "ff260f80-a169-4429-a262-458bf0a0ba80",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "528a5d5c-5dcd-499a-bca8-06823bf1d987"
        },
        "item": {
          "id": "bd342dc2-d778-432c-b874-df25470d5172",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3ac48554-def6-4167-b993-096b1a24a115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3bb97b-e16f-48c9-bf2e-6502a991f362",
        "cursor": {
          "ref": "96c092fa-0f08-4ec7-82a2-faa238a4796a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e60d1608-bb38-493d-9c5f-ca2ecaebf8dd"
        },
        "item": {
          "id": "ff3bb97b-e16f-48c9-bf2e-6502a991f362",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4407273e-ae7d-4d62-aec6-08272065a91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5cccd7-ea1b-46a6-b17e-ea3f505a9442",
        "cursor": {
          "ref": "5ce26dd0-277c-4cf1-8a7a-d55c6fb5ee09",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7fb94693-9f11-49cb-81fe-8a7c779711a9"
        },
        "item": {
          "id": "2d5cccd7-ea1b-46a6-b17e-ea3f505a9442",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "06143aea-aff3-4672-b904-6a259ba8ad09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd36b5c-594d-4476-809d-f1b393139156",
        "cursor": {
          "ref": "ac264d0f-54c2-4906-9142-c0c37d458734",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c5b79be6-50bd-43ac-bcdf-abe8e9afe53b"
        },
        "item": {
          "id": "cbd36b5c-594d-4476-809d-f1b393139156",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e37083ba-5c39-44d5-a114-e45a97c54a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0520cab-7c49-4bc4-82b7-39174a045b54",
        "cursor": {
          "ref": "7b8e2f98-2e84-4f2a-b869-eb316a365786",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9761722b-204a-4084-b56e-bd39b1eef3cd"
        },
        "item": {
          "id": "f0520cab-7c49-4bc4-82b7-39174a045b54",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e83c7d2-85e8-4f45-9577-ec6bbefb3a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12522266-689f-481b-8143-062b07aa0814",
        "cursor": {
          "ref": "58deb39a-1fec-42e4-81d5-169120650ec7",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "010eb641-17ae-4aac-811b-ffab57a4e561"
        },
        "item": {
          "id": "12522266-689f-481b-8143-062b07aa0814",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d0d58136-752f-4822-b449-4fd95411790b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb824c65-123c-42c9-b4d1-6088f03538e3",
        "cursor": {
          "ref": "03343000-f3f0-4b24-96b5-ff6a3156172f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1a139f72-e8f3-4bd1-8a83-f8a7d9330285"
        },
        "item": {
          "id": "eb824c65-123c-42c9-b4d1-6088f03538e3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0692ec54-8d19-4630-ae9a-153b5ec99d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cd4053-a92a-44ac-ab2f-345a86fecccb",
        "cursor": {
          "ref": "0735531c-bf91-43da-b1d6-a26d13898637",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "95a7af8a-df8f-4098-a4c0-8d4da379419f"
        },
        "item": {
          "id": "47cd4053-a92a-44ac-ab2f-345a86fecccb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "03d4233e-55f9-4db0-9e9d-1dde48864fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f33866c-a61f-42cf-91b5-93f963aa7ebc",
        "cursor": {
          "ref": "ef863fac-ac97-4405-a5ce-48294248e42e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2de69c9f-6813-4cda-b46a-c486d44f08f0"
        },
        "item": {
          "id": "1f33866c-a61f-42cf-91b5-93f963aa7ebc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0b840560-e374-4fe6-9dac-613abd338bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b36820-c36c-4bf6-b930-9e4cd8739e40",
        "cursor": {
          "ref": "b092bc02-9e66-42a7-a56a-9d945f3d2669",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f574dfad-3819-41bf-894a-01965af3bbb6"
        },
        "item": {
          "id": "42b36820-c36c-4bf6-b930-9e4cd8739e40",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e136a4cc-c7ba-48fd-a51e-cc7488e0a3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44eacdb1-b2c0-4a25-821b-8b1a5115478f",
        "cursor": {
          "ref": "98723185-e105-425b-8ca5-b24e31633005",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ddc5dfe2-9583-47cd-80bb-122405fd24b2"
        },
        "item": {
          "id": "44eacdb1-b2c0-4a25-821b-8b1a5115478f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2d955ffc-ed60-44c3-9b87-0ddb74729a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267af370-4465-4ab8-a61f-ee68b863a8d0",
        "cursor": {
          "ref": "76dddc84-8321-4fe6-96a9-c59c29afcf24",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "df9ea288-2e59-4c91-b76c-efb60ce51698"
        },
        "item": {
          "id": "267af370-4465-4ab8-a61f-ee68b863a8d0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8051e988-2961-49a1-b670-c8b9493cd904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13aeafe-9a14-4aa0-8cdc-479a8b564926",
        "cursor": {
          "ref": "39fa1540-272a-4a26-bdda-06143fd641f6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "85777ee9-ca88-4ab7-8d79-89e293329998"
        },
        "item": {
          "id": "f13aeafe-9a14-4aa0-8cdc-479a8b564926",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "519d6226-3afa-4eca-8db2-e20eaf45e83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a179fc0-0155-430c-b94c-042d04d7e676",
        "cursor": {
          "ref": "e0b15703-5453-4c86-93d4-361ac7aa428f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "52497025-5f47-4c01-88e2-84d174f64932"
        },
        "item": {
          "id": "7a179fc0-0155-430c-b94c-042d04d7e676",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9bc5cda6-57f8-4638-8521-82b2fda8d851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f077c2-32f6-4d82-bd80-9747785ec9a3",
        "cursor": {
          "ref": "a766840d-9240-483b-a3fe-0f46529b56d2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "13dbbc43-7c4a-4760-aec3-96d62139f855"
        },
        "item": {
          "id": "47f077c2-32f6-4d82-bd80-9747785ec9a3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3d8c4748-5d1c-47ee-9d72-c140ddcc662f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdecc9f-1614-4911-82ad-cc9c1c04dc78",
        "cursor": {
          "ref": "fd20675e-fcb7-4eac-88fe-354dfb4e5793",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cfb6bc80-b017-4061-a582-84fad97c8e5e"
        },
        "item": {
          "id": "bcdecc9f-1614-4911-82ad-cc9c1c04dc78",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9183e197-63d5-4b0f-af0f-8ea57dad59ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2a430d-7aef-4c59-b767-7bbddd77527d",
        "cursor": {
          "ref": "6f96e1d4-a6cc-4e08-b887-1fa01ac81436",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4b4bd6a0-5bf2-445a-8fae-4395cb067a11"
        },
        "item": {
          "id": "be2a430d-7aef-4c59-b767-7bbddd77527d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "795599fe-ad0b-4f15-a4f4-773b02dce57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04e8468-5237-49b5-b0c7-dc6409259693",
        "cursor": {
          "ref": "fc639803-0a96-41d4-b1cc-3761670a0447",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "de208384-09c2-4314-a437-7858bee66ee2"
        },
        "item": {
          "id": "d04e8468-5237-49b5-b0c7-dc6409259693",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6c415b6a-9aa0-4f4b-a217-c88ba2c7cff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b86fd9-76da-4f55-935c-e63094728f4f",
        "cursor": {
          "ref": "9f80f511-d697-47a1-b348-ea5747d1a6ae",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "68d109ad-c08a-4fad-a124-04b0220c3f64"
        },
        "item": {
          "id": "79b86fd9-76da-4f55-935c-e63094728f4f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dc36dd6a-6799-4219-9f09-329319e3b8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22904aa2-d48f-423e-9333-0f52ded4a430",
        "cursor": {
          "ref": "a825e2ca-07ac-4546-a930-bf2fe422d315",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e6f004bc-eb28-401e-b5e0-78fcff3ed07c"
        },
        "item": {
          "id": "22904aa2-d48f-423e-9333-0f52ded4a430",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c7bb04a5-d269-49e9-aeca-2d986ebb6ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5892db-0a51-425d-95cd-e4285f6280f0",
        "cursor": {
          "ref": "c51ee762-b91c-402e-89b6-7d93197bc8b9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "44ad62d7-a4c2-4ea7-b6b6-263cdd17cf43"
        },
        "item": {
          "id": "4e5892db-0a51-425d-95cd-e4285f6280f0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ef85d813-f381-4306-ae73-3c8ce8e7d70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d40d82-eac9-40b5-9a5c-541f7129e30f",
        "cursor": {
          "ref": "dcc4c54b-baf9-4df2-854f-9ab3402e33a8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "53e25d55-3f63-4856-8e5b-f73b22584ba7"
        },
        "item": {
          "id": "90d40d82-eac9-40b5-9a5c-541f7129e30f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5ebfd2fa-09e1-4041-904f-02b646eb1af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c937f070-10ac-4e17-9b2b-1cd312bf2da5",
        "cursor": {
          "ref": "67411cd0-6965-40f8-b28d-75017ca79158",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1cd6f38d-c676-473a-b313-dfcf19d1476d"
        },
        "item": {
          "id": "c937f070-10ac-4e17-9b2b-1cd312bf2da5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d87bfa23-c194-4124-97da-762c0c4162c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c86002-6249-4a96-83bf-97fadd3b020e",
        "cursor": {
          "ref": "a268197f-a2f2-4da8-9f79-6668a0d755a2",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "20cc7381-1e01-46ee-89d1-d7c44f1e551c"
        },
        "item": {
          "id": "00c86002-6249-4a96-83bf-97fadd3b020e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ff22367b-bb89-40ce-a242-326bc34cbada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf7d641-fe2a-4986-b247-df0c58a43e83",
        "cursor": {
          "ref": "0414781d-480a-4666-a8b7-6e0a24048d00",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a2609b10-ac47-4e3c-94fe-f91231c55125"
        },
        "item": {
          "id": "cdf7d641-fe2a-4986-b247-df0c58a43e83",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "78236afd-cc58-4dbb-b3d4-84ab489519ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6065629d-6ae3-4bcc-9bf9-eac876c1c87b",
        "cursor": {
          "ref": "4f4bf802-8e78-400a-92ee-f08a2797dad0",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "42a0e5f9-6942-47fc-898a-23619d9e95a8"
        },
        "item": {
          "id": "6065629d-6ae3-4bcc-9bf9-eac876c1c87b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b5f36569-f034-4fde-b2aa-84a1b3dff570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affdba61-5fac-4e47-95b1-6af6af6a6d69",
        "cursor": {
          "ref": "38c5d3c4-f0b4-4b03-bdd8-84a2e707976b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "236f311d-750f-4de6-910d-cd390864ceb1"
        },
        "item": {
          "id": "affdba61-5fac-4e47-95b1-6af6af6a6d69",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9179083d-c96f-4dfd-bdeb-ec4dc77e4c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44487dd-287c-4913-baa8-f008a6d88d1f",
        "cursor": {
          "ref": "32627677-b28b-42b1-bc01-ce59d03132b4",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dbc57b54-6962-43a5-bbc5-3dae7cb4730f"
        },
        "item": {
          "id": "b44487dd-287c-4913-baa8-f008a6d88d1f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "99208eb3-d832-4ada-960d-142ab2eabc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bf75f2-2948-4ace-a17e-9c20d074723b",
        "cursor": {
          "ref": "5442cdee-25c8-4d8f-91f9-1c9f22f62974",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b292534e-2467-425b-89ae-28bfdcf5d90f"
        },
        "item": {
          "id": "85bf75f2-2948-4ace-a17e-9c20d074723b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "263cb87f-9b28-438e-bfa8-06879d61496c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7d9a39-50ac-4c94-9c7d-6e38537537f7",
        "cursor": {
          "ref": "9d8abf41-75d3-4b9b-a7a0-35b8391b71b2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "171670da-97e1-468a-a528-6318b5bc1ee9"
        },
        "item": {
          "id": "ab7d9a39-50ac-4c94-9c7d-6e38537537f7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d43a0740-b60c-4bcf-acf7-d031e67b733c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cced019-901d-46b5-bc99-73b373d65454",
        "cursor": {
          "ref": "8398b196-854f-4ddb-8ea3-171e6428a6b2",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "66ae2275-5293-4c9d-aa0f-9620bfa9a1dd"
        },
        "item": {
          "id": "8cced019-901d-46b5-bc99-73b373d65454",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "927e9ef5-f5c9-4e2d-a1d9-db7bd1ae57a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0e9f02-1131-4271-9d53-84644bc72303",
        "cursor": {
          "ref": "763ca799-4be5-4875-b486-ec18fe88890e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "db079d7e-df24-472b-838f-548c927aa216"
        },
        "item": {
          "id": "fb0e9f02-1131-4271-9d53-84644bc72303",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "855f7c05-b926-4eba-ba98-38d261c022c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d20509-b990-496f-84d3-7051c616cddd",
        "cursor": {
          "ref": "a0d2ae72-0560-45aa-8b5c-093eb3b49c24",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "800da2fb-67a2-45cc-b44f-a0d3ad5ae8b2"
        },
        "item": {
          "id": "39d20509-b990-496f-84d3-7051c616cddd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9cbd485e-27c8-4ce5-9562-8800e70163df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b7148e-61c8-490a-9e8a-095b2b8a5ac8",
        "cursor": {
          "ref": "dc691acb-c15a-434c-9023-d58314eca762",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "22d58a3a-cfb9-4f17-9b48-7fc7b07a7d5e"
        },
        "item": {
          "id": "27b7148e-61c8-490a-9e8a-095b2b8a5ac8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4a6b6127-5a3a-4268-9514-24aea0794c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c20acbe-94d4-41b4-baaa-2d7dc9cfd906",
        "cursor": {
          "ref": "b354a607-73a8-43db-bf22-996ec3c57dfd",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a340a0f-6f93-4869-ab85-6fc603e207c2"
        },
        "item": {
          "id": "4c20acbe-94d4-41b4-baaa-2d7dc9cfd906",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "15d4deb9-5a0e-4720-8203-c9ff24d6d209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbfbcb8-6002-4958-8f24-0e3ed00a538e",
        "cursor": {
          "ref": "ae606ac7-82af-491a-b17f-43ac4721f71a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9bc163f1-abee-4bcc-81da-82148262d87e"
        },
        "item": {
          "id": "0cbfbcb8-6002-4958-8f24-0e3ed00a538e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1df789ee-2560-4ed3-98aa-384ae493a710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4ccb0b-5329-4f84-922d-6ca327fd8871",
        "cursor": {
          "ref": "de2589d6-16dd-4147-bf3b-5f32c9a2c38d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "774026be-d355-4bc3-b722-477be5bc1726"
        },
        "item": {
          "id": "fe4ccb0b-5329-4f84-922d-6ca327fd8871",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "267e4d5b-094d-4dd7-be63-b8d7d4094b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cf79cb-0281-4e3d-9a7f-5bf5b1b6adf5",
        "cursor": {
          "ref": "5347f61a-3d13-4aaf-942f-6d850b33958e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98ab9175-f4a9-4412-b082-4acd0dd7ac8b"
        },
        "item": {
          "id": "21cf79cb-0281-4e3d-9a7f-5bf5b1b6adf5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f25d22e8-2928-47d4-a9a9-96f87965152b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a18712f-7486-45fc-b61c-40834b9f19c0",
        "cursor": {
          "ref": "461dd4c8-4f09-441c-8c92-e04edc3d0a82",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bb71da6b-32dc-4e01-b113-31d9b35a4e89"
        },
        "item": {
          "id": "3a18712f-7486-45fc-b61c-40834b9f19c0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bab5677d-2bdb-4b6e-94c6-8658a9ded3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aa4773-7635-4b0e-97cc-ba4c1e2badc0",
        "cursor": {
          "ref": "44b613db-6da9-4229-8e6b-0592ab182f53",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e47d4b24-ed1e-4025-bf6f-43e321031296"
        },
        "item": {
          "id": "99aa4773-7635-4b0e-97cc-ba4c1e2badc0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "141b1420-24f5-4a2b-a795-1d5dcd636dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb7797c-250e-4bf0-bc45-3b87e7aa3c89",
        "cursor": {
          "ref": "86e37a0e-98f6-424a-8f43-63c50de32ed7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a5b22baf-6303-4192-a743-7ffc06286cea"
        },
        "item": {
          "id": "5fb7797c-250e-4bf0-bc45-3b87e7aa3c89",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3bbe2ac7-59db-4706-8bc1-4c813b7a5e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01159ffc-b92a-4e74-8d91-2875f4772837",
        "cursor": {
          "ref": "668c429a-6587-4dc6-9a7d-22324e8a2762",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b5bb4cc2-88a1-48e5-99da-e4d320aef0c9"
        },
        "item": {
          "id": "01159ffc-b92a-4e74-8d91-2875f4772837",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "66f69b13-0035-4d43-91c0-9aee07a5f99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fa4947-86ce-429a-882a-f955693b1b12",
        "cursor": {
          "ref": "324e411b-b2e2-4331-8267-ce80c03f2938",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e47f9a00-22ba-42f7-a1b5-a605e4c178de"
        },
        "item": {
          "id": "d4fa4947-86ce-429a-882a-f955693b1b12",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "78dedc73-a2a2-4077-aa00-6c7ca76fc33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435ae9e6-c3b2-4472-ae23-bd5c9e325ea4",
        "cursor": {
          "ref": "b89dbb0b-11df-4eb4-b01a-e54cc3606fbc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "65bb9fe2-e55c-49fc-a447-ebc2963d8218"
        },
        "item": {
          "id": "435ae9e6-c3b2-4472-ae23-bd5c9e325ea4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "23e181f4-d6ed-4e3e-a239-85a2b2173436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82d038a-42a8-40eb-aeda-b9d9430116fc",
        "cursor": {
          "ref": "ac89db52-882a-4c9e-86d3-8889f928b5c5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "77e4a0b3-51c3-45cf-8d6b-ffa8fb1d6716"
        },
        "item": {
          "id": "e82d038a-42a8-40eb-aeda-b9d9430116fc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f917421c-589d-4c5d-8004-1026051d2a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6197a205-a29d-4b12-8aa3-8770dbdaa308",
        "cursor": {
          "ref": "f1c920af-aba0-4aa6-9489-7f93065ceff3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "adbb13c6-d80f-44bb-9c54-b74ec632b166"
        },
        "item": {
          "id": "6197a205-a29d-4b12-8aa3-8770dbdaa308",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2ace0e10-b4fe-47e7-ab39-078eca0dd92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33de487-8859-4a5e-a5a4-d2114485bb46",
        "cursor": {
          "ref": "1a8f7f6b-c027-455a-a645-7c95b3b69c83",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6e5ec8b8-4e5e-40c3-b765-ef517302dc3b"
        },
        "item": {
          "id": "b33de487-8859-4a5e-a5a4-d2114485bb46",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3fc244c6-7ace-404e-9472-fb61b5044f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99916249-5646-40d3-973a-ade60200f5fa",
        "cursor": {
          "ref": "a88191c6-9960-4ab4-bc41-dc4f34974548",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e3b2b571-dad1-4d96-bc53-8fbe6df3c35a"
        },
        "item": {
          "id": "99916249-5646-40d3-973a-ade60200f5fa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5aced1da-ef37-4e64-8440-a60ff15216de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1823acd5-6bc4-445a-bfca-acb39c92b3a5",
        "cursor": {
          "ref": "6ed1250f-3cdf-493c-9d65-ad0c0c05a0b5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5fa05631-2db8-4825-94f4-576e9f435661"
        },
        "item": {
          "id": "1823acd5-6bc4-445a-bfca-acb39c92b3a5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cc7760b6-93d7-491f-883c-97a7f998e3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbff0a3a-f186-4c71-8749-c1aa5054d1ef",
        "cursor": {
          "ref": "e5b561e7-2b04-469b-a028-a7cff5bda776",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2882c94a-6362-4cfa-b8e1-c2ce8340622e"
        },
        "item": {
          "id": "bbff0a3a-f186-4c71-8749-c1aa5054d1ef",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3b94cae1-13c3-421a-b85a-dc196ff5a589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270a876a-1578-4c5a-a87e-b23d5adc2201",
        "cursor": {
          "ref": "08536c3e-1500-4fb3-b7f3-7cf99156c4ab",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4a8a8026-99ef-4c6c-bbe2-93fa773bf474"
        },
        "item": {
          "id": "270a876a-1578-4c5a-a87e-b23d5adc2201",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "64418e45-cfa1-4d6c-ae88-9b64b2b87caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5b388e-b3bf-4a9b-b2ae-9bab1c550ad9",
        "cursor": {
          "ref": "b09b18a8-a23a-427a-a2ab-2b3562fc21ef",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "de869e51-2865-4dcf-af27-3ad723291303"
        },
        "item": {
          "id": "8e5b388e-b3bf-4a9b-b2ae-9bab1c550ad9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c4242a55-ce62-4f29-87c6-c4daeefd1074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea463c15-251a-47ab-bac8-ca15fbe4e60b",
        "cursor": {
          "ref": "3ef32640-46df-4b78-9977-a7dec4fbd4bc",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d24e33a7-3dc4-46fc-bd9d-06e716711e8e"
        },
        "item": {
          "id": "ea463c15-251a-47ab-bac8-ca15fbe4e60b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7d285e8c-d0bf-418c-8274-93553ac121f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c544d0d-9b17-4bfe-8795-2e4eb2fbdeab",
        "cursor": {
          "ref": "5ee4f98c-d5bb-49c4-9691-a064fba96458",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "85c654f7-84c3-4dbe-8ac7-07a5790def87"
        },
        "item": {
          "id": "7c544d0d-9b17-4bfe-8795-2e4eb2fbdeab",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e300e31c-ddae-4839-8db1-492babbec0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3d1fc8-d19f-4d47-8624-736633cf0647",
        "cursor": {
          "ref": "7bfcd245-970c-4d06-af98-8429fc692fac",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ef271e72-b051-491f-864f-d5a7ff7497fd"
        },
        "item": {
          "id": "4f3d1fc8-d19f-4d47-8624-736633cf0647",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "005909ef-8941-40e2-96a5-b3eb998899f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7fff86-cdcf-482c-b76e-d96b5f419031",
        "cursor": {
          "ref": "9c806877-3db2-413b-96ed-6d201c9033cd",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f9ee13f6-e64a-4ee3-97d3-e20a45ff4629"
        },
        "item": {
          "id": "fa7fff86-cdcf-482c-b76e-d96b5f419031",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "50dc4022-5a2c-44c2-a3d2-77ddb29c5570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647d84f9-e66d-4fbf-b34a-b6a57c56fcae",
        "cursor": {
          "ref": "88e5b6b6-b472-423a-a8ae-7622f254f1f8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7358596d-1771-4431-9341-9e096d37b66b"
        },
        "item": {
          "id": "647d84f9-e66d-4fbf-b34a-b6a57c56fcae",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a1941cae-8892-460b-8946-7eb603bf5300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94526ad0-4cf4-486c-8632-6bff6751e793",
        "cursor": {
          "ref": "5a472c6c-0a75-4e1f-bf48-a73cfd9fe87d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fa5f7e20-cf05-4e11-9e63-2c5f31818ad1"
        },
        "item": {
          "id": "94526ad0-4cf4-486c-8632-6bff6751e793",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "05f45ffa-7ed8-4070-b7dd-3023f3e96bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bedd19c-27ca-402a-90e2-fcb410268658",
        "cursor": {
          "ref": "5928b170-b9af-42a0-a674-7c36b5d9e0f0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "65170cc4-3896-4290-a51e-2d4fde5fa27e"
        },
        "item": {
          "id": "9bedd19c-27ca-402a-90e2-fcb410268658",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fb2e3bb0-6560-4d05-a16c-03cdf20aaf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50af0968-2f2b-4d8f-b660-1c88f94fd64c",
        "cursor": {
          "ref": "9f3c2d7b-303e-4d78-bb07-e12002a69792",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "46917a82-ff00-4a6f-8f49-5f72799bd119"
        },
        "item": {
          "id": "50af0968-2f2b-4d8f-b660-1c88f94fd64c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "541997e0-1a7a-403a-bbce-e3624493c7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de0d643-71f4-46ce-9a07-2857d4f5c606",
        "cursor": {
          "ref": "495911e9-5068-4592-8eae-1902ed7b7ace",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "414dcfec-ee26-48da-81f7-29a5fd24f8c2"
        },
        "item": {
          "id": "9de0d643-71f4-46ce-9a07-2857d4f5c606",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "01c11ce6-249c-458b-86b4-140980d9cc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1239057-7e32-407d-a661-1152d60beba1",
        "cursor": {
          "ref": "648599ad-b625-4578-884b-7df087df0e23",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "72bfcd1b-d510-4c97-be36-65fca8c3b8d2"
        },
        "item": {
          "id": "c1239057-7e32-407d-a661-1152d60beba1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "79b0f805-6f10-436a-b83b-3694961f49f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c75e46-f616-4f6f-b48a-0134f0fb162d",
        "cursor": {
          "ref": "98ed0b8b-4110-4920-af6c-31f3aaa66232",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4f2cb372-8ec4-449c-bca6-cb0e3370b906"
        },
        "item": {
          "id": "f5c75e46-f616-4f6f-b48a-0134f0fb162d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "07faf04d-487f-46bc-a75e-ef3e36451cd5",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "21005000-f76c-4364-8d99-4b50f36ab181",
        "cursor": {
          "ref": "9b4cfbfb-e772-48b5-a00c-5cad8070bc0f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b7e8c301-7b4b-4459-aef8-1340f823fbfa"
        },
        "item": {
          "id": "21005000-f76c-4364-8d99-4b50f36ab181",
          "name": "credentials_verify"
        },
        "response": {
          "id": "81d85479-26a4-40ef-9d4e-d79dbb08d217",
          "status": "OK",
          "code": 200,
          "responseTime": 3442,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a227a-0b2c-448c-8989-c00cee290fc0",
        "cursor": {
          "ref": "24c0f2f0-f192-4942-97b0-9c5b3628a387",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4632dced-d5d3-45b5-92c7-21758984b4e4"
        },
        "item": {
          "id": "846a227a-0b2c-448c-8989-c00cee290fc0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f2b05e8e-6701-4add-97c5-c53c082d0f24",
          "status": "OK",
          "code": 200,
          "responseTime": 2054,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23bb67e-5ba1-4233-b2d5-a14dfac65be8",
        "cursor": {
          "ref": "aab629d1-e614-4c9c-b434-ff76bdfdcc64",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2bb0a9ac-e275-4efe-8bf6-d3fa50905264"
        },
        "item": {
          "id": "f23bb67e-5ba1-4233-b2d5-a14dfac65be8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dac68eec-3531-443d-adaf-d80b61d4a45a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23bb67e-5ba1-4233-b2d5-a14dfac65be8",
        "cursor": {
          "ref": "aab629d1-e614-4c9c-b434-ff76bdfdcc64",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2bb0a9ac-e275-4efe-8bf6-d3fa50905264"
        },
        "item": {
          "id": "f23bb67e-5ba1-4233-b2d5-a14dfac65be8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dac68eec-3531-443d-adaf-d80b61d4a45a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6d8b68-4b56-489c-9944-edb274992b14",
        "cursor": {
          "ref": "a11556ad-018f-4ba9-923f-d2732a4cb27c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f4129f4a-0a97-4c22-a870-f8b26e003016"
        },
        "item": {
          "id": "2d6d8b68-4b56-489c-9944-edb274992b14",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "515aa7e3-2de9-4d31-94f3-2617c08f919d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f313abd7-4262-4939-9936-e4f333915f1d",
        "cursor": {
          "ref": "0ee9e1de-cc01-4b73-a1fe-7fe9107d5c2b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "de0e8f4b-51cb-46ac-8103-48eac878934f"
        },
        "item": {
          "id": "f313abd7-4262-4939-9936-e4f333915f1d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b1298a4-65f3-4684-b754-a5f0296d9ad1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}