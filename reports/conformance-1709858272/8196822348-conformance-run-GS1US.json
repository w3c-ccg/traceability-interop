{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a118db00-cb56-4b7e-917e-7878069bf0da",
        "name": "Clear Cache",
        "item": [
          {
            "id": "250ac6f4-4ab7-4e94-8ecd-d9f0b2b0df61",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8e92d62-164c-4998-a776-45e4feaebbf1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fb6623bb-7591-4f19-be78-fc5c1c5c18ea"
                }
              }
            ]
          },
          {
            "id": "453f1c10-7a10-414b-bea2-1c20bdd1d2f6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "624c616e-9be6-4bb4-ab13-0e75925aeb13",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a920e51-22e3-49d3-abff-da0ba8c53319"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "54958a17-fcc8-48f6-b19e-a22617576dad",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "40be02c2-979d-4250-a71b-30118cab858e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "830ca385-eccc-48ee-b5cf-1ad7588c405d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c98879e-b096-4486-8732-1ee0477c66ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29f5cf06-b698-47d5-ba46-7a5a86ad1ba8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9c7af93-cb9c-4a7a-851c-7a3f260ba11e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a473ff8-4cc8-452c-8a64-fc6980fc1135"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d46521f-3f99-4cb2-a6ba-be394cb5ad8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0c885c4-d767-4bc6-aa3a-10ecf81c6d72"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90c3f865-1004-4a3f-9a6d-039674ced4ad",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "df4f2810-6d85-4f36-9438-b5c7db0c6d56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0a634a8-8582-4f08-9c8e-36ea075d3da5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e5631d7-5de8-4a59-b941-98bc6c7dc856"
            }
          }
        ]
      },
      {
        "id": "29881c90-bb5a-49f5-8beb-520ebc97f458",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "107699dc-95ac-4588-acbd-40cf36c77b25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a69bbbf0-bda7-4738-9057-1c480109242b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e85ff495-5c50-4315-ab4a-8206e6ba05a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cebbfc-fbce-449f-a4f3-4a2a17a380a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a406536b-9aac-42e1-a1f0-055521a1753d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83022c55-0b2b-4ccf-85f8-ced5f04c66f2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bacbfb1-3746-4ec8-9648-56970f174aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9b2b33c-9b00-4503-89c9-3ec883b614d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da96f5ac-4a1f-49f1-a418-0c5d588900d8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416ddf92-0cbb-4a26-999d-6f80167ff00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06270c8f-4dd8-4420-94ff-4fa957b90b8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84541b3e-6f94-4d0f-b2f5-5fe8a0f99180",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b51c8e9-aad2-48f0-a238-3132a3d92646",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217a2976-0637-415b-9297-0c3c271192d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37f35963-d313-4e5b-8aaa-e4c8c4bc13a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6252756-006d-4293-9c53-7a35dba5763d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4492479-5203-4f45-b088-09e0a29452f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c5c1800b-eddd-4cc8-8958-8264b979ca57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf011718-a269-4229-9b7c-2921e467cbc8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4da9eda6-ffb3-4ca2-a67c-8805aa17686a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a6245720-b211-4378-b1c7-cd92fda6e1d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a6e64e3-b877-42b5-b1d9-40b07281b036",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7af180e8-0057-4882-a6f2-dc10b92cd887"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f27b0ca5-adba-4c5a-940f-f4e84d886096",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c54877f7-1bc6-45b8-9644-d5a96b9f2f69"
            }
          }
        ]
      },
      {
        "id": "db54e611-42f8-4e2c-87f5-753253d65a71",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6fefe89d-7951-45e6-8ec6-e94228897561",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37d3a58f-36f8-4d72-99a7-d9f85d1b803f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c1955d4f-cf1a-475f-b58d-5afaec1e9d74",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb719ae-04ac-40c9-b4e3-2efe482da0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6d5dd2-a36b-4636-9f28-58254aa0c8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d88fec-2a90-43c4-85e7-1af0ef2178c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "114ce3a0-8f86-464c-9031-03cdb354ec1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1585ad17-e3ae-4033-9a83-746ba41cbc46",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4c39d7-7c0d-4de9-a962-7ff13e0d307e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c884162d-58f2-48e3-a9cb-508c589fc4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71202467-fa39-4776-9c8e-94f60333869b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eea5468d-0c02-4743-898f-8287d024c960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a6f533-5507-44f5-975d-ca957b673cde",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce7a0cb-03dd-4621-8786-8830e6222e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfb4f1b-ad26-44b3-8382-7ebb3b2cc9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c2760a-2b75-4c03-9ef5-f6c7cf24284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0ca87ed-969e-4f32-8afd-32f63b8ce63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fe2a55-ceb0-4202-8737-42a2d893dff6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035d8020-dcd8-4b31-b0a1-38e7a8688afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4086ab-9ddb-490d-973e-eb8c741debf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b1cddf-af80-4250-8676-785c9a701bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d08bedc-02c9-4fd1-8af8-e74f37c95962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1294962c-fbd0-4385-b6d0-b12e84b451e7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25326a8e-42f0-40e9-808b-07cdd83239c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7e914f-b940-422e-8bdb-15936c97224e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d9b109-25b6-4bd5-83e4-0cb88a659e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10610d9d-c153-47be-946b-be449f9746e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dd7c13-e708-4c1e-b396-9efaba41c84a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9994e710-6776-40c2-b759-7890201919f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4878f221-7a30-4c6d-9d1b-54bca2f33e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feda5e6f-2526-40e6-a539-e2254d15099d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "017f4240-67ef-4d91-a3c2-e5f92af0a7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc37935-87a3-44b3-a5a0-8ded57e2e8a2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4161bb2-ab42-45ba-819b-cf0bb344e3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a343260-ed1a-4761-86dd-2a50976499d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d779f1a7-e68c-41bb-a69d-af6befd6ec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2ca8612-6ab1-4a08-b87c-a6534d666df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3015fd6e-da30-4819-92a8-c3b6bde9f11d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2125fcb8-f56a-4fe2-97fe-9d77b9110666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfd1db1-c47d-4863-b14e-fa88fd67c84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4d5e26-5867-4143-ac42-bd6fc07108e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd4b254d-8d74-4f37-bbea-b724e960b608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86788190-7b17-48b0-84a5-d6256b31865e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7780b1-e064-4ccb-a189-62f6da104651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc552528-20d9-42d3-9d44-46a4927dc3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8f7c27-f4cb-48f4-b003-f8987b341a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63c0f898-0c76-4411-ac92-92548200394e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1f8ee7-5847-4a33-a341-757926d1d981",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd3fbd9-345a-4729-be34-926817b29d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e06593f-6df2-4ed7-8a0e-ab938b6f4f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546d8b1c-65b3-42fa-a5f3-12b917e19c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb625d56-d90a-4300-8638-b3f1da0a3c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0942c97-fae6-4b45-be53-c63847bc8b44",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb059dc-8b88-40aa-be1d-add19a12cb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b5bd2e-265c-4b44-928b-bf160109af76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074042fc-a8ef-4619-a908-fa287e278b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45296d68-99f8-416a-bc77-4bed4babf620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292b483f-61a7-4e06-abab-2659842951ca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a391799-c998-4a62-aeda-8022a590f04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c9eb9a-1159-40cc-8714-9feebf7322a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87050afe-734e-46bf-8f0b-ff85474ab1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "498adb46-db93-406f-b362-b10bd63f4349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b48c23-02df-4bda-bb35-51d4e7a6499b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8befa2-65e9-4b16-9285-07b1e7b52b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09311226-10a9-4680-86d4-8ea979d4e7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe8524a-2707-4181-9037-b71358174964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51fe431a-3a2d-4560-bf68-03034234cae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55fd261-abf0-4667-8c95-c960aa8a1365",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5609cb74-3f39-4afd-af13-0e8356d5b1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf706e52-bda6-422c-8839-4c8f7f2706ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370d374c-8bcb-466d-a456-c95e863cb2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20ba9dba-e498-4477-a720-86666bc63716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd24cb58-f94a-43c2-aa90-ce2015472671",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a982a8b7-6af3-4137-8d9c-c30dd2d08d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbd37c1-af72-4bef-97ee-cb203abe30aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58a7c3d-a0a2-4bf4-8158-7be68aaa0398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2f2af1-a77c-420a-85f8-f8a2ef8dd2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b7b437-cd45-4457-9751-578ed24b15eb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e125193f-ef5a-4fde-897c-a6d066f7c698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9f5e9c-8583-4ea0-aa59-2d1c9c8c3de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71413ddb-f835-496a-8f88-510074009004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27972c23-fd96-4810-887b-0aa08c0a0853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4940cf9-9348-44b5-877b-2ee653565230",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e980c1-9ec0-4da0-a659-ce7b8f3b89c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0839f8-2a5d-4b1b-962e-a85bbbd0f0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22872c48-e2e8-4312-be89-1a14e416cbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bd9dae0-b41b-4bd3-b9fa-7e64c9583780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5daefc-d757-4ba1-ae88-bf507b9db7b0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f3628-3f47-46ea-82f8-296c34c3ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca414441-8819-4da4-9c3c-aa8459c0cf8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fc388f-8a2d-4775-9868-e29c4586dbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89fcc2f-c9ed-477c-8a64-7dcbe6b22175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c102e3a1-df55-4b52-b7ae-6c26fb4896d9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e2b2f5-7abc-4d77-b1fd-6eeea082a997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec709222-a45a-4677-af49-ba4270282081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af7a002-13e3-4642-9936-f9c6d4e6508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "452ffe2a-352a-4652-8844-80cf2d533a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2897fe-856d-4b88-95ae-0fcea6d847e3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7799a1-7231-4451-ab05-8cfd5da7ef73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94ffe93-0112-4922-bfd2-acad509d3153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9851edd9-d183-4073-984d-3b3f03afed46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "734d7080-176c-455d-b019-0e91c4d5e4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699b1387-46eb-40dd-9150-21c98d6d6a15",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7664caa7-654f-48b1-97d2-e0ccc9909076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a79e63-b661-41af-a995-25bfbbb8747b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60501692-0a3c-4525-b48b-5e03d47a8dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f54f9685-cf7b-406d-9dd8-46561400c81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d0568b-55ab-4362-b6c6-fca6492a9f45",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5edc866-614d-4c1e-849a-1c05840b9a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e263624-e38a-4271-8466-08bb21c56d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1072de-ca83-43f8-a843-ba99dc265f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0d748e-8ae7-4921-b29e-51aeae391287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641164f0-d214-4347-84ea-19fb43287b29",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18135ee-ace3-413c-b687-9a9d618c66d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6865e4-9e35-43a6-9637-92a7e90ea073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c198cb-2cf2-409f-b9a2-9f256aaa59d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20a4652c-325d-4ea6-9321-eff35c139efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a543857-26b4-4b82-8a57-d41de41745ca",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c5cd9a-1d8d-4a3c-9cff-ae83834a23dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422eb5e6-9ea4-4cea-8c56-faa886846409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc68ce3-b96d-46af-9bb2-85aba4abf1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "60baaca2-4df4-4d4a-869a-07158eb116ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9903d7-5d44-4055-8724-bd89d1659b4b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cf5816-dbb7-4ac0-aa5f-36c80a183fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213a0a5b-6d4d-4c44-aff9-0ea7a674d928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dde0d43-4284-4963-8ba8-3618ef7c258b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1acd8bd0-f036-4116-b4ec-af4df7da94f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d12eab-80f3-4285-b2ab-8e585a5107ce",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db099618-24f0-4a2c-84ac-9335e5307e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7059400e-34e3-4ea0-9a0b-fc0d9fddc3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf60ca5-5b37-435b-bd16-c711fe45bfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce88ded0-8010-405e-8aee-d5d1ec069d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38273823-d284-4c30-8c2d-572b506ad030",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d80b1d-2a24-4ecc-9ad8-45345dd30f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d9f02e-aff7-4095-975a-48583ad4b743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be66292-8abc-4a53-9ea4-f8cb2b2ac7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21feedd4-753a-4a25-80d2-55c1bc5e0781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778020fe-f29d-491b-bd78-163e0ffa4420",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e701401-0624-435f-a3a4-35642bd7133e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77657be0-6496-4e53-9ad4-17bdde61f717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98e65c5-1d33-4f74-9ae8-8b4ffbb53778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20dd239c-8411-40dc-9b34-bff13e39d4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a57568-a22d-4133-ae9c-b45e9f100732",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5688e043-ea7c-4c00-a4bd-3011878c867c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737a1e5b-66e4-4cb5-8f71-fad29d5fcb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33a1d53-db74-41c8-8a70-48cece0f64c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6ab0f3-2b20-472d-be26-f36a8b34e1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cac1977-064a-4acf-aa78-35e93ab4e989",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42e400b-24da-4247-b916-5bf2f06c8315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c4918e-b1e1-448a-a474-9564826fe0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d593ddd-d3be-4d36-9d74-3675bc0e93b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7692e22-b81b-4962-aaa1-a5c46edc7897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf558eb4-b197-4927-8c9b-725a0fc263cd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755fa11a-beed-41d3-a29f-a1e964686651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5042a77-b5a2-42bf-a463-ba75316fe68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec5f91e-dba7-4b93-9bf7-c7bf6ffb8160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d55893a-ee3b-4ec9-9dab-278f5e9b2a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380b3806-09c5-40d6-a52b-afa0fd5a88a4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfab5f5-0e3e-4753-b8c3-d7a2e4575354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ca077c-327f-43e7-931e-431daa6f1417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f6788a-609a-4658-91aa-e20fb65a57f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eeb26b4-e664-47bc-9c87-7bd0893357cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fb89c9-ea9a-42d5-bc32-5113423f1512",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb10768a-791a-4415-bf4d-b8fb39cc9e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ab182d-9544-40e6-8cc9-2f0361ac892a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f0dd01-1f45-4832-bf69-5addfa90a2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27124c37-3c22-4b14-8815-3a93faacbb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e27b4fe-ab50-43de-8341-d8b809fa63dd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4b0f3d-63a8-49e6-9179-4cd26d274121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d1960c-726d-4ad5-8ad1-fc31f8dfdb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a199c75-130f-42c4-b59d-30d182a0520a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5224d6-7d75-401b-bfa7-98b842026c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbcf473-a396-4b73-9419-735f05fbf39d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0725c1-2bdb-45d6-8fea-a6bad434f7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b4e8f5-f051-4251-b084-3b4ab553a3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bb52f3-79d8-41d7-85cf-341a95788c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b98ec6cf-e049-46ee-a5a9-e3e8830481a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb30141-ab1b-435a-9717-11ac515db521",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8c544f-7bea-4664-9ff5-dfc6b0a1b2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb768e84-a434-4f9e-8bf5-fbdb64ec7400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9e2533-6480-415d-aef5-784bf551ca51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa16e72-412f-414d-b456-1d49e9b4b972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1de986-ec37-4b4c-bd6f-36579177326d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a4391-7432-4214-85c2-4d45f8218244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2554aa38-71a9-4404-8889-d218d9135d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748f12e5-5f49-425a-9608-deca0fb80815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13a23222-cbc3-4ded-8167-0807c7ff6185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ae9917-77c2-46d0-8fe0-5c0dca6228e5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d62547-6d97-4ffc-ab0a-75fe0cfa8ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612b30a6-549a-4e59-b3f9-e08819d22e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d336b9a-9106-45ee-af37-920d9db66aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7152c3c-d693-4d77-b866-345474ea976f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410d3679-99d5-4fed-9baa-52f33e154a96",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e651142-bccd-44c9-9edf-ae1b3903b1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6d1218-f73c-4395-beed-251624c5ca29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f229037-f34b-4d38-bd63-8c15df0f5f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43ad1da8-2cef-4ff3-9bf9-1053846737ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e40047-584b-489c-8126-e15f7b0b89fe",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8be3a9-07e3-4500-8a60-bb3c6cd33fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed06620-aeee-42ed-837e-8031b1e53663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b04be3-256b-46c5-a41f-118c43fce987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f858fa73-c536-4739-9564-4c979d3a3efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b566dcb-d810-4af5-910f-f978d99adb93",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68faa1cb-9009-427d-bcec-fad3324e0125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd28a02a-179b-44d8-aa37-1f1867fc6919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4e446c-61dc-4928-8eb6-afab411d53fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "824a1f2e-3e1f-49f5-b928-af23047bc204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e773822-97fb-4572-92b0-63e9afc6fdec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7ef187-e6b0-4f79-a249-2831643a0bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7841ac95-49f3-49aa-9a06-46c2cd5457bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33630463-fbde-41ca-adaa-fb62286c9f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "00276d28-4bcb-44ef-b7d9-97b2d858017f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a22a75-6f23-4743-9368-749f9564f554",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84f3316-b7d6-4f3b-a6b6-64f71b54ad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95ae35a-2bc5-446c-8a9a-b8d3ffca0006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2197f336-211b-48be-941b-b53c3b6781a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f101087-6f7c-4f2d-acad-59aa8ea4b4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da4bf98-ca0a-4383-bb8e-4a16fc6fcd7d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e38e08c-d0ea-4047-a329-89b8a486de33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f2ac34-a7f6-4f5e-92cd-2dbe5c4e2acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425c7bd9-7a9c-43b7-a414-2ea2a36867f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "394adf5f-ee56-4b55-8957-b883b5628fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a8fbeb-232d-4e7d-8de9-0fa69840fa6f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5b7f3d-8b82-48e8-984a-1d3fce56fd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46b3508-f14d-4bc8-a08b-9587f97911f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a3bab7-41f2-4ef0-b8f3-8935963a8056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6f3fb5-73a6-4960-8cc4-46aa7d0909d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184454d1-d03f-4873-9e82-e08cc13c7745",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b99124-0b35-402a-9e00-8463bd5bdccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dc1c3f-d505-434d-9f18-02f8eb362b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96943b5c-db5d-45d2-8e2a-beb67aaef45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d873372e-4072-4723-910d-436751ee529c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8375bc2-c5c1-4dcc-bbda-ec3a41e3a7e7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cde7504-54f7-4c5d-ba05-66fc296761a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73e8b1d-8fb8-45eb-a047-7be6c452c1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb381c79-bfe7-498a-aebe-3e8fa17d097b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52cf71c5-7f66-4f98-b416-841c0edb1f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b490ddb8-31d7-4965-8e05-83bf894381b0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc59793f-b889-4afd-95e0-83f680d51da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0eec3dc-c471-42d8-8e0d-e9b5822c92e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff83ba6-a922-4aed-a0eb-f95ed3190c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e263c886-f196-4759-9d8d-a8332fb44206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7343fe8-899e-427d-a221-8f1fbf3610d4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba7edaf-193e-407f-bdf3-177eec765959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f50b2a2-5d1f-4c24-a11f-339a84fa3c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b765a8-647d-4241-b0c2-c334b206e475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efaa7743-399e-4baf-b520-c90446bb9194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69351dc6-93bb-42ee-af95-b898009b11b2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33495333-d672-4562-932f-a29e9ff10642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1efa2fa-7a8a-4831-964f-a2205edd83f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452e8518-55aa-4526-a694-193704f1d0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "735b72ff-de32-49ca-bb93-55ea395b8364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df50b7b-4ac7-4a55-a6fb-b728543e1ad8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf18b67-e7a2-46d4-9d07-e787f7a9029a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80edbbbb-dd3d-4855-b744-e4b90ecc36b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b8aed0-e7cb-42ef-b3de-21f08febddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "216f39d6-c96e-49ce-8b30-c2856554cef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50183868-e9fb-4f41-9573-bf27448f8ecd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6085a6-dad6-4fee-94fa-ed5c5423a5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5eb5079-842f-495f-a091-282469bf36de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9c41ce-9753-46f0-bc15-e428b9db4f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5027da-b63c-4a04-9c20-0dfd7d18086f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed28fab1-c0d3-4fab-9b8c-b596fa1b24f3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e12307b-a139-4184-876b-d8893d7b0d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a2fad0-e891-4364-836c-8f960287a50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d7ce97-b9fb-4860-a6fa-d3fb6a5418f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79528bd-53ac-4a67-a99a-a5db61407f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec5f745-6823-4afe-b3a2-e48d6f9d73c1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55a5664-07d1-469f-b993-dc7d93f1582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe798684-89ed-4cf3-92d2-3966a895a28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a076c5db-d109-4fe2-bcd0-264800c04987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da2b6263-bad3-4b8a-b663-cbb2b15118a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e49ff9-b75e-439d-8aba-0136d60aef80",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb03377-c61b-4409-b3ce-12c04ecfe02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9582caf5-e329-49e7-8eea-7dfcd248ad34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d408a692-65f3-47c5-a543-5543f6702944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "581da23d-3233-400c-a283-d8563a759e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bdedb2-c95a-4ac3-8c2c-e0253887209c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b6e5cc-9026-40c0-b9fe-01374053f06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783f089a-9ec2-4d71-b3b1-234709829fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0058c513-02e2-43cd-a46a-1a6fb8678b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2e533d55-3437-42ec-a139-d1a883e0ba3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d648c1-6fb7-4dab-9fb4-dba1ad1ad5cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88b3217-b325-42ed-bf2a-fdc73170e9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16beff0c-2fb5-424a-a3f8-b0d9643f3ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b72223-ca1f-4ca6-94ce-c2716fa6bee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f739a3-68d7-4d11-9e22-f7588ba69252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c3ba86-9c17-4093-9b70-c74e2163464b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce61446-7e0c-4230-ba08-6c3ae65d2971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bd8cbc-5dfe-4ff5-8958-c06ecaa2803f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced6acee-552f-4eeb-aa56-206a6bd4f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e99d4f5-f615-4bf4-822f-46815c82beaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ae8e29-7506-451c-b134-22e84b288c30",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b10e10-8068-4123-b80b-73a48af4cc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94bd550d-86e8-490e-b0d1-2f36c21c3560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754520ad-8507-4474-ab77-aff2a1f77173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15f5618d-fe8a-4971-b852-0653304881e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5147fae5-f16d-4ae5-8e6b-4ebf9a1b474d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18a5f57-a03d-476d-b666-8a2b5888b28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d270b7-a673-4da7-b368-59f5e775d670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bc18c3-c620-4373-9135-5bc1939e2f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "82c19611-4e70-4096-9597-2c7b94c4d0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f41e0eb-3b8a-4cf5-8d25-6bd5781a3f4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a89036-dd13-4514-8ca8-9a8e144d7029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3d65bf-a0e6-4fad-9c31-d03ee6516772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555b1753-1670-4781-b655-e07087786ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "793d8155-2fd7-4d92-b56f-c09217dafce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193279be-100f-4bbb-b3a2-b1dbc4f04400",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec86831b-c4cb-4aac-be86-fff91e233136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6867ae72-2e28-41ca-929e-fa6d43b54148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054d1cec-ab72-4fc9-a0c4-55d836e33925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0313ff70-2579-4d93-a280-58cc3a7402b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd7f48d-8cf1-4fcb-8b99-91de503c2527",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084ae7b2-4212-48b0-8496-a6dd3ab80087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc482045-3579-40ea-9891-6ec9fce6bbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f0c736-c9c7-49f7-93ed-42af64df47ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa4431c-4788-4965-8b1b-f24b6b9c2dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc6167d-e985-4445-b7e6-24c39fdd674d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d483769-d023-442d-8c6a-edd4425bc0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8d9096-f408-4ee5-8c6a-371fac7804a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c75259-1ea8-43ec-8a63-435e5f2b0c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35148efb-be59-4579-8aa2-c860008a94c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b1bed2-b8f0-4701-96d4-de90eb72c41e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525eb09c-fcee-4cf8-a29a-7c84fcfd7f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed809a10-042b-4d55-a052-794d193f924c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229d0988-8cee-42b3-b6f7-98242d0c1e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb930f82-3e53-4385-bd84-4c6db3eabcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974dd9a0-0303-4d32-8615-e1f52bbe0f9b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee600eda-f0ca-445c-a3d5-87e62a80c777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf4d971-835f-4aac-b01a-6294b8f4b131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75eca1a-8159-437d-bf53-e33f5c3081a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6dad78-82ba-4aba-8a62-17125cf61fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec14952c-72aa-4c97-9656-a19e97705419",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e0e773-b90a-46a4-88ce-990fc44bee24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b422db3-f5ed-4819-a0ac-b9b544781f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e58b40e-05a1-4b76-b8e6-e70de86befda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11fdd4d4-504e-46c5-b089-ff9cf5b1c547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5e667d-98bb-4871-b833-414d1ec477eb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0974f933-d532-4752-b0b4-6f5017856f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e860f5-6bf6-4821-95c4-bae2bf44e4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d38634-f227-4bb5-9039-454252ff6d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "adbbd4c0-a6c2-49c8-ba1f-973d72d60e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383d7870-6121-4b7b-ad90-9c5c67acadcd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8557f815-c5c2-4912-b41a-450b9b0d3566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd17137b-d8b8-4d2f-a73e-fe127fc9c9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e03ef10-6bc6-4dfa-a153-2068ef91f58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4d0d42-8c7d-4c08-8e85-ad53dd08102a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dc86a8-eda5-4a40-b39c-8afbc825d622",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c270964c-ffdf-48c0-a2f1-e27c32ea0e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ff6ad7-1d02-4560-8fae-474e4c0cad39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b03540-fe61-426a-bbb7-692c95bff036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed54485-f060-40c9-adf3-a8c5b192aea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5309c72d-607e-4577-b9a2-97ee6ffbe3aa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3680ce84-1bda-4016-b779-1a8024c9aa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc5f562-865e-4077-b945-510368b3d474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e2ef46-9df6-453d-8cb9-cc79c3ea4fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da93aff3-4c90-4764-aac4-8860dfbe0665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78285a90-d671-442d-8c52-94f4beab84d9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22629c2a-8b83-45cd-babd-d5f6438a5c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21e03ff-93c2-4a00-9789-7462a740ecbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba4ea38-e7f5-4e69-882b-c9c1b0cafa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "723685e1-a896-46c8-8434-6c71286b8d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16deebf-5e1c-4a0a-964d-43b588d3db29",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2632fa-64c1-4a1a-b2b5-e0398371f977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2150cc4-856e-46ab-acb4-c084a38cd753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a410c9e-cd69-44bc-8476-afadd403e438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1930512b-e37f-4b8e-bd6d-e7ce93ded405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae9bc28-1814-4cc2-8aad-be8c7e18f357",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9e1532-d998-4ec2-9797-a4254fcd8eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cebe666-aa06-484f-910b-0dada56e04d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d8e914-5f43-439c-a34c-62ee247681dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91f0af56-d416-407a-94a3-a35d8b12eea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0b2ce2-2e04-44d1-9c26-c384ece27436",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616e1e72-373f-405d-ab69-b46ba8a1b57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc11a643-8809-4d91-8427-9569a0b11194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3800f1ff-a3e4-4e00-8084-93bc6b5d78a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "818a3ee5-6944-4dba-b196-772a63f5c82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9cd7cc-c5a2-402f-bb1a-1cfa48005033",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d377ef-9835-4841-b070-82a183b40961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a23643-6dcc-4163-9603-99a9fdb6dd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abae0e25-d1cd-4e49-b40d-ed30a5324d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98c98270-46fe-40ff-bb0c-3aa1ca76709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c893cae5-e4af-4ca2-b716-84d3c03f2411",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e95429-bb99-4d72-921a-dda709a3247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28ef362-6f1b-4205-b83b-ed0e14b0fcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d18f7c-dbb0-41ed-b05b-3792640afd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4fdcff-0841-45c1-aca0-0c00bfbd215b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e819fc-d560-44d5-8010-5d7c20b7f20f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cf3e04-4299-450c-9b99-26f0c52f212a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4918cc-e0e5-469b-84c4-a39e8c77115e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e687aeb6-8a4e-4df3-a4ab-4ce1d8fa200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c6b7fc-51d3-471b-9fee-9f7081341a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ffde3-cb05-4073-8099-f7496147232e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b096b4a1-9d75-4f0b-85f8-d74ec524a2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d5b223-72d9-401d-9fe5-cd2576b9f50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a29157-e891-4274-a377-df53e2082c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6a153e-1f36-4381-ac9d-0d6f1611e6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789c2619-38a3-4359-ba18-2af3a8592df7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029741cc-7b95-4c59-b6f5-2e849aa63511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c76e3d-c24c-4941-9943-3110b3594aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad9fe81-55a2-48c6-bd69-8bdfdf739ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "766cba15-63e0-4004-9945-d28d89babd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5882159e-8163-4531-b48e-c4bd37bb90a3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ab7a20-b270-470d-9c5c-caa2b835b18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1a63cc-ac45-4de6-a92d-1d66310a8107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebe1ffd-d2f0-4a29-870e-9e3c86fba444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4f37e2-7ec3-4a63-9e0d-cc0e25ab0b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da106aee-746d-4c2c-9346-64aa640ee7e0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166f3f58-7e35-44de-9a9e-946c65554cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715308fd-f1b9-4d18-8669-0d4e95e8926a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007cf85a-5245-4c09-a92a-04813fdaa1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1906fe50-c893-4115-92ab-9e52096f143f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30170466-9358-43df-8707-b86450500f6f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7877f05a-132f-4349-989a-2117495ad316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5a6069-4bd7-40a9-bc73-cb077882a061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522bb614-9efd-45fa-95dc-9ad3ceda5066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a15f02e-dc5a-4a1e-b81a-8a40392b7f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa184f22-bf23-4ffa-beaf-ccbfdaa71208",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b78789-b2f6-4b98-a793-79955f059ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7a3892-14e4-47b4-a902-5cac73a01911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86989649-7550-48f0-aa80-054498c61620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3bef78-d763-472a-b47e-a9b32d66cee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e26bdb-5837-415d-9c1f-9a9b9adddb45",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18bc90c-7223-46e1-b15f-9c3b322b60b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f276b5c-3f41-48bd-b788-fba72789b2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a322a09b-aff4-4a21-911e-ceb85f69bd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fab9ee-1a0e-4c4e-9ab0-94716bb2ad7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef164ba2-9db6-49cb-b0e0-ffeca830399f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ec7db5-678a-4b55-aa1f-d7f183355cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9a6ead-68b8-44c2-a670-f8cdb423f19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a372740-ff54-4cff-91bd-97df790f1a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3aa8de1-6c05-44dc-bcd5-2c4180e7f416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4238b0c0-bdc8-4b84-8736-ef8862c836d2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d14d189-2e55-49ba-8e76-1a1812d19cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da35d2c-65c5-43f5-a073-7a16a9b83553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dfe7f7-6a56-45ca-b2d1-0574feb2d2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9e33a8-a991-47c3-8dfd-7ce620065931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486dbdd5-221e-43d1-b2fa-8b50564ca8c7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c938e91-e404-4a4a-b0af-b741d3f839c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c55c1db-0423-46f2-8b0a-efc543090a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfae8dbc-15f0-4c76-8bc5-d5ac2a3d6919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8ebcc8-58e2-429b-9911-e0b3da2e6c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a266f1-8b69-4a02-8fec-a10ea72eb9f9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf3b359-a5b6-4357-80ec-7b3e0721fd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed938752-9a59-42dd-adcb-ea287de5687e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cf98cb-c459-4b38-aa2b-e0f9d60e135f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f5f31f-1538-44be-99dd-dcf5aeab9a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39182c54-105a-4dcf-8ce6-72598e0eb0d6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd6527d-041e-4795-b123-73e2b0b41e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b070c60-02a7-404a-93e7-e14917ec5133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fecf34-5c5a-4321-8a18-df9fe8a55c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b563e1e4-b171-410a-9d08-2fd964285293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a3e258-24af-4f57-9212-e346c787012f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6e34c0-49b3-4557-ac0c-821cfd2bd32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e443447-7d4b-46d2-a15c-8d40227e87ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ad30e9-711b-43e3-a706-b95e3b329854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b741e8-68f4-4d72-93e2-30671ddd6e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a03252-ded5-43ae-8efa-e9ae8647cc88",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de86d09-5d04-44c3-83a1-27f500eb9130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ee8883dc-4fd6-4c80-a209-16b5186cfa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0152b1-0496-4fa9-bf3a-b593d6ed15fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ef9065-c09f-402d-a79a-c9e895ea04f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "776744b0-773b-4c71-88c5-f9f9593cfecc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1e4adf2-f4e0-4b80-8364-af4e4c324985",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00eb8b1-a1f6-4722-838f-823699823888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acde4066-53a6-486a-9ec9-82ef27f71667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecc1ac0-3f5c-4272-b4c6-748dda789e80",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89395fe9-1da8-4496-9f54-d8dee97216fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d11bae2-41f8-47c8-9ad2-e34467c58e80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe973116-58ee-4217-be6c-43cf8d8bb454"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9a48484-b770-4a82-a5e5-78298d5f20bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a393f36-4b2a-4b45-965a-dbe170e7796b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66add936-12b3-4ac3-99b3-e5fa0af0c51c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "922d14ff-7c80-4391-a8f0-758265da066c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6363d877-8e47-4aea-a84d-f850bb927da4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "030169a8-0f0d-4d31-9a4a-feadb374bc00"
                }
              }
            ]
          },
          {
            "id": "0d39700e-02f5-453a-8f86-00e191a42d46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19a6d4c0-3ec9-40ea-a4bf-34cf4c3d0c7c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3e12c4b9-fcd4-4c82-9a3c-2d59db997a80",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e88f17b-103f-4d6d-b956-7912252d4ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2e73b4b1-ee55-429b-96e7-e6f82aa8def4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e4c686-59e2-4b18-bf6a-feb72b05e012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4b01fc-bfc1-4c12-b002-37a34417127b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af58d5ce-61ec-40fa-afcd-9699ec00aac5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0df62941-221e-4846-925c-1cd1fe3d8720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8a15972-8472-4e19-a915-0376bcc1a490"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5951866f-f8ae-4e65-967a-467113972444",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "475d350c-fbc0-468b-aa24-79733f6e6ccf"
                    }
                  }
                ]
              },
              {
                "id": "8a7916a3-dd69-411f-8d36-d18536fe7095",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00312fe4-012c-4b8a-a580-65b01035bda0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8ad3f73-2641-48d1-b659-910576aa833b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a04290a-5bc1-4cc4-9e8d-b3840713aaa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dfdcc245-9949-4bcb-b841-8cb43ae0ecd9"
                    }
                  }
                ]
              },
              {
                "id": "6a7784c3-75c1-4bbb-921b-5a1b6c09106a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43af8d9e-84f6-4a97-8053-6af4974b5179",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d864fed-0e92-42a4-9a92-3e247f03e53f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8070ec7b-a5db-479e-a8bb-cf1267a6e70e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "077b6261-e606-412a-aaf7-304b281ea357"
                    }
                  }
                ]
              },
              {
                "id": "4cdf0afa-c0d5-431c-ac79-d9e760311fa2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84d634c9-b95f-4dbd-b936-094b92ca686b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3976063d-0a41-45a1-a3b2-925acb92453a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cb97907-4a33-41e8-8d82-567d7cc98f3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "026e3df6-27b6-41c6-adc1-3b3fb6fc0a98"
                    }
                  }
                ]
              },
              {
                "id": "2995e647-907b-48ba-adeb-97d96d1d7f01",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54650e3d-d9c8-4b54-8b76-5ae856bb0bbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6747535-7bf5-4a06-b00f-e1d2033d573f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b562f18c-6bed-4674-be19-e8c577bb0636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7328c3a8-2084-4d1e-bb9f-b451b0acff78"
                    }
                  }
                ]
              },
              {
                "id": "436516af-168b-4ac4-b8cd-159fba6958fa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79f0a6b0-e43f-4f61-a3a3-ece696159726",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0309ecbf-d5d4-4874-86da-50b3638d67e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50b795ba-0993-4074-8ce2-c193fc0b366d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "152b5907-9801-4254-bdf3-2240941f4da4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf5cbd53-15a3-4c48-8939-799ee87eead7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6785780f-bf6d-48a3-be28-6ba6ebee291a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09a0a163-b49d-47e4-b240-010d5c412abb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c504f7b0-69ba-4c65-add1-076b7710d304"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afe91f7a-2529-498a-9abe-59df77c78045",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "942f0c27-efd2-45f1-a442-40c27069c255"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be7fc62a-616f-422c-bfee-2041b6cecc54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e09cc0c-f10c-4d87-a931-bc3b81f8ef67"
            }
          }
        ]
      },
      {
        "id": "438d45d5-f19d-444e-87d0-759a687fa740",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "69b062f8-8702-435c-89d3-923fea1c9ca6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78acd1ac-8e03-4ddb-a03b-1418e2b17934",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2251144-066a-4c82-9cf0-288d8b6cc498",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26664b97-4d4b-485f-918a-fae80303ba67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d3cf18-764a-4aa9-927b-bd42f40318ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7684d521-801e-4595-b304-c7d9d3b13139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef09248-ad2b-4617-a68a-15bb1d335911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f110322a-cc37-4674-b79e-fdadd80c5e5a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f71c2ad-d2d0-4a50-9a9c-d57890ed05c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fe6452-4dea-45ae-a42b-5e939044d9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0471b8-10da-4af3-8842-3424385c0bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f77917-26d5-4669-b95a-63c1b67a8edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4281204d-c643-4948-85df-065b2444dbd7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a52968-0768-4ecd-8911-8e29371a4406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9459311f-e934-4934-aa8b-33c04ab309f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54776e5-efae-4c60-a75b-4aeeeb5cfbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7244f4f8-8928-4674-ac56-476dbdf95b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15f8e41-4b68-4042-9082-8b3140850d76",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21ed0d6-6e49-4ada-9c4e-27357796c300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f00aca0-0427-49d6-8375-3a9b1915ed1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c9b8f4-0175-44bd-84ef-51b4ba0e907e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14e5eb3a-5dce-4b49-8a18-ea7ce3c72e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67071517-5d33-4788-ba30-e2e39e1c7c6d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db1136b-abcb-4fde-82cf-3eb4a48f9759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95233806-ce84-4066-b455-e02a7ee9971b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f49ebf-ed91-4579-b38a-13b95399f94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd611e2-67a1-471c-9e0f-b120f3b6fbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4308bf22-49b3-4cee-a764-8cae24eb232e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0f41ad-ccb4-4abe-85ab-854c013e2db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92515e5f-014d-4a54-b5aa-8d9dce0c8a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee3e5a0-5dba-4992-a5da-83d4c8594c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a9d935-39d4-41fe-9311-c1511a70f98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bafaab-f398-404b-b932-fd0ef0788764",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a40338-1a1f-417d-ba80-c9d6f53404f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1c2f5b-fd9a-4a75-88b3-13fcf97c4209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2a41cc-5977-4fb8-918c-03e6a4f400e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a25910-0ca4-4b99-ac03-7decaa7edce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82129285-d070-462c-960c-040336d9db9f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c384f7fb-b061-464d-a7c6-abd367cf7de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e953ea-41c2-46f1-8b8f-1ced6d58450e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c374912c-dc92-43ff-985f-c2e680eeac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2909b272-313a-4e0b-a899-00d6c28050fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d0b2b0-a4a1-47e8-bc49-f791d47b7bbc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb867b87-af69-45bb-b18a-938bf9b34e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690753da-4856-4e32-aaf7-08297a396a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a4a61e-1d4e-4066-adf3-53f7ce554c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb9f847-a287-4efe-8b20-ad511f1ba2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738bb767-fb3a-4cab-8321-b131eaa94e62",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf3cc89-c4e2-48a2-a447-c50f0d285103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d4b76e-ca5f-49e4-b2e3-9f761f8b9126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63c2af9-e0e7-44d6-a24a-fe71055da715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d468c1a9-ee86-44fd-a4d3-8165e41a0c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837da268-b384-47b8-ad97-f3f98a3cf414",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e0719a-11bf-49fe-9980-1008dacecb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1dc70bc-ecb1-40db-8656-165cec6e4434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dbebc8-3409-42dc-a112-e74eb25d8499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38b908bf-ed19-4d65-a0a6-dbc826fd765b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cd957c-68ef-46fb-8dff-cd3704a89324",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff4ce51-eaa3-4492-9ef8-5a23a7d898e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a63d03-914b-4f66-9c14-852b4d11fa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3885599-6749-4428-9c3c-d8b0f11f4d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51c09b40-8320-478b-8c06-957ae1277972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4148bfdf-9a83-4757-a639-70afbb6a8278",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687d319b-c843-4dc6-930d-67ba8c7d2cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7194a669-d05c-49d7-a715-3eafd4dc8bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984ee4cd-d548-4cf8-b6df-8c162b6800de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1004bcd-94ab-448e-9377-06246259d999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3b0b92-4d7f-422b-9c90-8b2ccaa163c4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6365bc-3899-47cc-b879-a77b542cbbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cc7842-f37f-41d8-b247-2e5f28e02fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f03e92-d91d-4f0f-b199-b8e2fad0df01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe13e22-63eb-4b8e-be83-43b97c95f49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ec78ad-ee8c-4511-96e2-33c30a84b423",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6572dc81-4058-4bc7-b559-4f5b9091506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cb5cf9-bd0a-43c1-b21b-874934e41883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154f0d68-8449-486d-9854-a17cb9a88106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b7feee-ba08-4db1-ad5e-1cd18e148122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef244a4d-aa3d-4a92-be41-9406341909f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e8113a-538e-43ad-8a67-59f854dbdf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921fec4c-d0e2-4ff0-9f45-7c1f2d5bc776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae6730c-6485-4ec4-b745-d775f397f6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "927f0784-060c-425d-844a-d100e2d5de11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fea49b-b275-45e3-8d7b-58be2893ef97",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655c1537-3b85-4018-b95a-5f5e4c21e5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e0826b-1036-4757-b86b-879138b4833d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071ac136-3bc6-4c85-bd73-69080ca4b4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "de7600cd-141c-41fe-b4f2-2a5472e4e92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa970f4a-d6fd-48bd-be89-cf91007dae5d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d941edd-f9ae-4a10-b0b8-c106c5db3ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6bcc15-455f-492b-8014-96e81a93a9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab4e27-65e0-43a9-b2c4-20a6b0e5c5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3291528-3801-44b7-8bb9-ee814c482a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afaac16-8cc2-43aa-b142-06a7e3cbd2db",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6874bcd0-fe91-4770-966a-f730a6fca651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dc16c6-0c5d-413e-a7d7-f53240728c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b07db4-9c22-427b-8ad1-40bdb5fcd681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12808802-1b75-4ed9-be1f-c77d05d34069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b31f60-a5f9-430d-b4a2-a39eca1b2a03",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f94650-dad7-4450-82f5-1343869eca90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9e1c65-ca5c-4d92-ae79-96378844e5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca294fe8-1d57-4808-b913-e41cab47a56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95edc82-54d9-4633-8c56-b9b4d659c5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39f7fc0-141a-4838-98a8-6178c61d7a21",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201942d6-56cc-4990-81b2-b09c203013aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5a9d4d-9303-47fc-9224-1c96d6ce9b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf93c1b-f9f3-43ce-b5b9-2f4a9b40f4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1abb26e-afec-4bdd-8649-8355288b8f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cb5118-8ef9-4307-a2dd-bcac515682e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af2e251-521b-42b6-af20-51addb98ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a584a2d9-3b4d-4fbe-a75e-701bbfde165b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530037dc-381d-4ef4-9d1a-a4d5319db8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23373e8-1ba8-4e46-8845-43355fdd8138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e9476b-1dea-4456-b720-a2b8f516184d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6e8128-33f5-4801-b92e-3559950259f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9949e671-213e-44e5-b89a-cb99bf497b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd845a3-d5dc-4d0d-ad6c-c7f692103eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64733310-a6c7-4e91-a7ae-9cd17f30fb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9e4f42-f956-4e47-8844-44c40bc10476",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4731da-7901-462c-b59c-43296fc1abc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9402a229-9fb2-4e69-9b1f-7aa6b74b59b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9510d912-afe7-41bb-bb72-bf17bca28094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfe9fde-9b7a-470a-8c57-4432f606b00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb447784-06cc-4a37-a36a-4e2c5f5de4d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4d1a02-4039-4963-b2fc-e720ee54a20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b0eb01-b410-4a9a-ace6-3606baeee46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44bb233-a2ac-4e28-82bb-8a0705339e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cacc675-e290-4539-accd-b706c771bab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593360e4-fda1-4f6a-a4ba-02cbc445c207",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a63600-5756-40fa-aa04-54b219cf758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a784492-526d-44fe-869c-a6dd292f8279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c775827f-9daf-4f92-bdbf-f4eb30864c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d81fa0a-8356-4728-b470-c8478ea3d365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591a613b-1915-4888-a3ad-e42993f71477",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7dca4-ed70-45a9-b2ac-cc115647659a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e70872-78ae-4941-b912-bebe2a7cc67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287b575d-b7f3-41ed-9eba-b26febb44236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5d8c4c-44f2-49d8-8ebd-98ae1b97ed04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802e5709-9477-4cea-87c1-f82b5ad3dedd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f39d1b0-b15d-4bf5-b4aa-520f4dd9e385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadb3892-b0d0-4efc-8999-19a9a8624809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90a30a7-dd1b-4fd0-897f-d599948fe4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35eca760-b075-4085-9fea-4e1574f2dacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc34ab49-cc92-4f40-8176-825d1e305ea6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249f75ee-98e4-438e-826a-735f426c2e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8420215-8605-4021-a1bd-36d80b7a096b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4ce7fc-fab3-4a47-8771-6b857ec8ee5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9563213e-efb1-4787-8212-b190a071e336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b70f656-2f7d-4f43-8434-189b0aec297e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22938887-a090-4110-a9d2-2e86acd815b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2b9e41-3792-431c-954c-e57296dbc6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e975b0f1-028d-4bb8-b115-9ec92b6af2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5bab99-36a9-4b42-9015-af17040f2ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ec45cc-b81f-4cd2-a3b1-0e3786781687",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ea095d-cad0-4e07-957d-a06995820151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01a3f91-862e-43be-b7c2-ae7cd3ada025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec0e106-607e-408d-abc0-0f78d5566e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4ebd95-d60a-456e-8bff-fdb3cd46c32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b50a7e-bcb9-4fa4-a393-aa520335eeb3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ab9184-4ad1-4e07-9820-d2ffbb567d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e967eb4-be2e-45a2-ab7d-1816906c9ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e92849-0ca1-434c-a272-1f709b2e52e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5745483f-ffac-4b09-b5eb-1a603afdd94a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71e36fb2-cdd8-4822-903d-d2ef8a23704a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3caab381-b2c3-4307-b4f4-b6de6fe20865",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6baa581-ffb0-455d-bdb2-b7c1acab8d70",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1c3632-dab9-423b-8d84-1937464de565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68273108-baf0-4553-8d4a-d935f7826ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a3be139-800e-443a-92b9-20632e23db3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d61e6d78-6458-4e76-953d-cf5e14389d3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7101c171-8d63-4464-8b24-3b13ad94f677"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78c954ed-d69f-4411-b57e-77711190e823",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe86d30f-2de5-4874-a890-f5999d5702be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40e5145e-4e1f-4163-861f-22af0a978469",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa756afe-5ce2-4d5c-9e2e-2b6ec365aa7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "755399a9-96d2-4455-ae32-ff840e8e0357",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8d74c53-63ad-4b34-992b-9dfdb71ea6c9"
            }
          }
        ]
      },
      {
        "id": "04edcaa9-6268-4fae-8c37-afc3c4dafb74",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "15b850cf-e3b8-437e-9301-1169800149ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ad1f8c7-3c64-4703-8719-611eacdf936a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27a51d92-fb83-4227-87f4-b83cb1b08718",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87047893-28fa-422d-a840-d87f0f372fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd6845c-7af5-42aa-b2a8-9232f3fe4b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eb8ad4-d2e2-4f31-b6af-9424dab53446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1a121b-c0ab-44c1-ada2-a1dc55929544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8a9490-d58f-4eda-8bfa-a210518a775d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cab880-42dd-4043-a0bb-a8ec2948d531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617cb0b4-9b7c-4bf7-84b7-31f410432fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5824115-36f4-4d11-90b8-a1514b435f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37efc064-1f36-4fca-aa8e-bf68dafd93de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3127ac6-0394-417a-bf8e-34e331b790ed",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c0f094-5f56-481d-aef8-a904281f5af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5de486b-6f24-4d3c-a7a5-dd80558e97d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62644b81-f7a7-4c9a-a0b5-6049a6f2af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a3c8cf-4027-496c-8444-28d8be1a1442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ec2a1b-5476-41bf-a6c6-4ba2ce2cff07",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dcffb3-053c-48cd-95c4-32b2466a7d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d117fe-1d5b-41b4-a533-6a04f0dba4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa85aa0-62b3-46dc-b73d-54822032594f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09bc70be-1690-4c4c-b896-2daaed43b112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a98b2fc-905a-4033-a09a-8d5b961cca14",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8560f8e1-13ba-4574-9979-64ac3a69a729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73218166-141d-4410-acb1-34058522393d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c277f9-e199-4c5a-9a98-62ccf27db20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4278e5-33d3-4dcd-9442-4aa046235351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa0877c-0b3c-4123-ab17-0204b9863011",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeabf57c-4041-4fb7-b748-69e0557f90bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f0a3f3-4a49-451c-9209-3d56e0d30fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcc650e-29d3-4697-919e-274ce2ad94ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74c1ee12-948d-423f-a536-d88329b0874c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ae2baf-217d-4edd-a972-e6defaffd2d7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28a7593-88c3-453b-9445-e148ced4908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8edb42-553c-4ef2-bd4a-01e466c1465d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3f5ae5-c1f1-4c29-8f6a-ddfdf8751211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a167e3-1e9a-4df3-824a-014ec3be8e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee32150-6009-4468-ae15-6e79dc9c9209",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3672f2d-9865-481c-813c-c6055f0232ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb306d36-0c20-4cdb-9c8a-e4028f976eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e899619a-7353-4dd0-946d-c21b0f664155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d237cddc-bd2d-4b35-b6d7-56060338df0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2aa6c6a-e870-49f6-83db-fde1fd923a91",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63be9c4d-5be3-4a24-b53a-fd06949cc6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e076551-a947-49ff-b5a4-8ce7c4526f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02905a36-350e-4be3-a64d-e4b46d687265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "228e8094-8090-459f-9046-0dc444f63917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc97232-adb9-4882-a7a1-a29c936e6b54",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18517ce-a8f5-4a39-9a58-122d0a6a86e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77fcedc-cd31-4505-ae16-04e6ce01b881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b57bc8-65aa-48cc-b714-6f0fdcba4747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b68e8b-3562-4d4c-9040-97b1dd00525e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42458352-4dcb-48f0-b7b0-a209d103f9b5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe53434-6ece-45a4-a2df-77700b58838e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed83df1-d7d5-404f-9427-830fcffddf8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd00193-b2b7-46e7-bc0e-42655a592e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c5c314-505f-4461-95ba-40c52fad21de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cad82ea-a032-4e93-a846-12473d5211b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c858510d-1d6e-42ab-8b96-34144f150dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef890151-3632-489a-902d-b5d9e9843b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cf976f-8420-4f7e-88f4-7c4a05139f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c26b888-037c-428a-b3f4-4ef3b1b28ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9b401a-3609-4c64-ab1b-c613e86e7066",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580b7fe7-28c0-460f-8c7d-64d197b3c040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd338af7-df26-4638-b3c3-4991f585ff7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320a2b82-14ec-4847-b5da-57e0b6569eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3a526d-be7f-4acc-92a4-3c375dcd3e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4459ab-91c9-446f-ad2d-f56731a14645",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9deb216-2905-43ad-b1b1-71f611fb781b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c0a79b-2871-4829-a356-b4e2eaa024cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004109e4-ad64-4a09-a6e9-3172dc441d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4998d7-bb81-43b6-8392-2d0ab6466b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c67a7a-a22a-4fe4-a67d-73ed42cb6042",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ecdaeb-a885-4e5c-a58e-b0514bb7e34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7849eb50-7b4c-4d76-84ac-aa6c0da4a651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c405b97-b652-45b9-8c95-82650042c793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb64ebcb-3809-4269-b97a-4ac20fc05b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8264dda-5b12-4251-934a-23577bde483c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833a1874-db49-490f-938c-54eb41513582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30e6665-f52d-4a81-9eea-7f7dd501dc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472e0631-665c-4e7d-b36f-c1833b2dc78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "74fd1122-a8c9-4d52-a1fa-9cbf1d41c264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b78138b-115a-4a71-8295-52480680fd97",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0123000-352a-4985-a205-c8e2a3e47527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2644bba3-dd97-4f1b-a993-5c23098a1bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6665a7-57a1-4746-9dd0-be14691a9eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbc1dc4-84ab-4d4d-8efc-0411f232c626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843d3535-8305-48a9-a644-aaa8fe152527",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ca31fd-fc7c-4cfa-b5be-8aa59c92f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f11b22-d64e-4df0-8ffa-c68851b3fd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f160216-5229-4b5f-b01e-0c2eda2e9d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "56144ce8-34ea-4151-a0c8-2e7ac4a8c496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27777c3-c266-4412-a35f-009c98cda08e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f8d31d-aca3-4a6b-8544-ee4d6b75e6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a6c72c-19d5-48d4-bad6-7def170955e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b307524-bd96-4a2e-a559-4e4cdc0b383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61fbe33b-93a3-4a12-aab3-35441348d0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8a86fb-3332-4ac8-aff0-37fbf1a35d24",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d41821-1ea0-4b20-8bf1-334f863605ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5eef48d-28ce-48cf-9fda-b7d2e4201692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb17e85-1715-4144-b199-08ead81b07b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "958aad2a-b7d3-46d5-b868-376423f960dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619ae003-0fdc-4014-9ff3-237dfa613c4f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f2f4af-a99c-4533-ba6c-64a894bb3eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9447c91b-a51e-4e9c-b42d-d6f7234c8926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714a5f34-fe3d-4970-a23c-73982d06ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac409ba-2618-45b3-afde-4c518e4afd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ec627f-1a64-4782-8cc6-106e97fcf239",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5ecacb-c061-4cba-acad-10d7eecbb763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6a7510-e979-4fec-b570-eb0a21cc1ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8d820c-e4d1-4d93-b029-ea79d08a5dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ae8f83-fdbf-418b-b3e1-ca768bc1dad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185da1e2-ad80-44a6-bd25-e7f13ac7e8fd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee267031-aec7-43ab-b2bc-ae81cd49614b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc88e507-76a5-4c58-b072-d901aed96584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514b7d13-5687-4933-9a0e-494152f207df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c4736a-65e3-42d6-bcd2-e2e4337add62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f0c977-18da-497d-83ff-8dbdaced722e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec3df46-6fd3-4de4-8d95-df2ed416ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedd4ca2-b20d-4380-86f5-99aa9bb2e39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9446e758-2285-45ce-bc0e-29388c754e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2e1cb1-04f2-4148-84c4-7d932e08f4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cba138-b11b-4189-9b84-cbcc22bd0ed9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434f6abe-7ccb-4525-90b2-ef8b3bdb606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31155c6a-cfda-4809-92d7-21c54a462442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed577a4-8eac-4cc1-9f31-ff3e3c1a652a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0adf591a-708f-4323-97b8-3e71123b29b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086027ff-56f7-4696-8112-20596b6f549e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c02923-92be-442f-b0ab-f3cf6bd9f95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a298a67-9427-40c4-b3b0-c862f9bc0369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3b93ae-97d3-4ad5-8cc0-eea5ef752d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ade32a-0f20-4065-b5b0-8e382daf8691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71f8f3e-7abd-4efd-b83d-9b0fa937f313",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64668a1d-49e7-4511-aeae-e377790fb065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb0c2ab-cc36-463d-b6e9-933b31d1aa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12f9ab0-cc9e-48aa-98a1-748057b4e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c3f3b0-048e-44d2-a90c-4ca482e7ed1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a0a3e3-84a7-402b-907d-08b0a133f03d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5b8bd8-3a42-4665-ad84-5d72c03dae52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177a25d7-84ec-4c17-bd14-3ca3f84672e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be6e886-856d-4431-a610-89080aa90f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b62a3b-59bc-414b-98fb-c45f31537f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a100d0-f1d1-4872-807a-c755af7dd906",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8fbe90-dd4a-4381-bc16-a759def9cb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b637d5e-670c-4e08-b2e5-02195d688142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb45a57-da39-4ebe-9ec7-4fe6bcc0a824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b102ab0-ce38-4327-ab5a-e173c49370a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5661497-4d4f-4ef2-bf29-f708839780a0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fb3829-a09e-47af-9322-b25afe32db89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7305f79-70b8-4fb0-8ea5-226bfad2bde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8673316-ea2d-4360-bcc5-73e493ba8514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97b4e4d2-ef81-41e0-b215-ba0a318c0333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1d28c6-61b6-44c5-a4ef-9e89e2b79d06",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062262a3-238c-4973-b6e4-a7f61d7c7445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95227d96-0622-42b3-8cd0-9df72818d04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9071c95-0ec1-4911-88e7-8125e0c2ca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5683c31a-eb65-41a0-82d8-342de84a01ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57a9d41-95e1-4a3d-af4d-2fe949fc86cf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d252442-ae91-4962-a283-0da86bc45f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7590b2-39de-441a-b563-265ecead3f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1107717-31b9-46df-a4c2-d5b0b526901d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8b171b-bb3d-4270-a37c-58dda48c2fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d4f87d-e4f2-4e1a-b057-c10362c9bd0d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1bc0fb-a6bc-4851-8609-bc1ccf776d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bd55ff-1cbc-4f67-b12c-ecea5ac3676b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5d6132-8eea-4ee3-9cba-4470575d6bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf3b5c7-82e6-4ea7-912c-ccbb77eeabcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de84cc5-6623-4765-a6dd-3461733e60d4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce8ef57-5fae-4bf7-b54f-cbd2ac3551b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc014302-ca83-404a-9869-2ba16163b400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8613dbc9-8fbf-4e9d-8451-ed3b5d31f85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "629c4c32-c3c2-4769-a487-ea0ba67749c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ab2fe2-cd3f-4f36-9174-22e50be006df",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627f7429-6ffa-44f5-a938-b50ef98e86f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11e454e-3dab-472b-a4a6-01f101c258a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f87453-56ca-4663-b98c-80c82013886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e8d3b3-82da-416d-8091-3ca43659a3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7bc407-6029-4df1-a1f9-16bb17bea21a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa08b45-b440-4ba4-9c32-ae87d8bb4e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6ff464-b611-427e-8e39-a7990b6d9c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acabb05-4fa2-4800-b562-9aa948dec288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b65cfcaf-607d-4dd6-880d-9b297cae0e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896979e0-b957-4131-b689-ba248ab009f0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44032eb2-3e7a-42fa-a704-63df40bea492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118d72f1-56ad-4a89-87ce-eaff708280ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed82450b-237d-42b6-a765-e1834d17fba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c51fa1d-6ff0-4c49-8ae6-2b8c7c86509b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64cb9703-5fa4-410f-b1a5-861e472df569",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcadcd8e-6f52-4b36-9fb1-a12aa378fe41",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fac2dd0-8e5a-4342-bee3-66db1db1fe20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "42e49431-106d-40e9-b55c-ce3795a087f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccfc613-dd80-4919-934b-077ac3399045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce748f42-aa42-40d1-b599-d59132341378"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3d10fd6-0e51-4053-973c-fb3edc32a69e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2a58698-9a37-46ba-9da6-4a7081947a37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30846bc2-27e1-48d1-a236-d09411455c1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cadf04da-9974-47f7-aec6-5eae70c41ca7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a77e6e18-0e65-439f-8b80-f7e35e6e0ba8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c2b1063-3c22-4990-a098-c33421786794"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ff2ccdc-56c5-44dd-b62d-2107af201338",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf9bf754-a816-47c7-8c67-e53560a6a116"
            }
          }
        ]
      },
      {
        "id": "f0e087af-5957-4fca-8222-baa2132d61d7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1955adfe-1f09-44c1-8ae3-a2f83491fa1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c044ab1a-b418-47ac-8170-458bdb47d269",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2d49ef7-2ab6-4a47-a8bb-4a858b2dc68e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6d3c17-1e76-465a-9e41-0ccd8878b605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a89bff2-df54-461b-85e7-5270a19c4b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f607fa-446d-45de-8125-9c8cb0bbe1e6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65f5391-df23-4db8-9651-fe16e590ca20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008da6b5-610a-4a5f-a265-dd69b81daec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dfafa1-1770-4839-b951-9d65fc3e8ee9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc8a214-7e4a-41a6-b907-410dd0fc947e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4fe208-18e5-43fe-9383-7c06ca0abf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1bce38-0976-4f54-b0fb-474801b4a4d8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32f599c-c7aa-4586-97cc-8d4eb9157ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38c3a04-6d3b-4ed2-bab0-14d16b4dee7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0daacdf-8c84-4b8e-842c-04c0bafcf38f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99c9e8d-755d-4de5-a642-ecbd60055e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80cb4c6-c02b-4107-9c4a-a329b5c60629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4f979d-5a3c-473f-9126-3b3aafa3b5b7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e23258-7f3f-41cd-8044-d6acbefff697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7e8f64-4485-4c60-9d73-7707a93c2e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a134d9e7-cc8b-4bd7-af59-48f95d6d194b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c271a0c-1f85-4718-aa88-a8db0eb57a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fef3690-1d60-4491-8ee8-f76c22fb2d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168fb1cc-b217-47d4-bcb2-18afe295bc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5186702e-66d7-4cf6-b651-b7773d0d80a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a18d1c-38e1-425d-82e8-778f2db563d2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b14f3c2-fb30-4d70-aec9-d98e0b6f380d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94bdc160-bd67-4403-bab2-d6e6f6fa784a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec407b2-f04d-4eed-b7a2-b6e2dac3e5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b98799-0519-4551-a1ea-3a51a26b2877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b76538-2371-43c1-81b3-81e8a17130ef",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e02c2a-3e61-4173-85ac-664946656aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54ca2aa-66a1-45b3-a9d8-0f2a957165ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d326d02-3676-431f-aea7-3e781154b77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d6ae6c-a1e9-459f-8c05-497222019fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678fe8d6-c244-4369-8d62-8583e8db54b9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90e938d-7c35-4277-80dc-0d2cba38b021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72109e6c-e36f-482b-b8f1-9bcb48cd661a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79854a6-0144-472d-9268-5ad5f2529ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ec9ae7-c928-4a76-b6fd-85006221b84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080a5148-9dd7-4d84-a024-c2a83afe11a4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf16c8f-349f-493e-84a8-529603da2dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fe74b9-0e8b-4760-b099-aeccb8b58ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248c844e-d243-4248-9af4-73059f3ac6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a88802d-0709-4949-b36e-97e8e7749c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e833e44-84b0-4395-9068-4029d12bc390",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07e15f2-4c9b-4dc8-85ca-8755e95e38dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108334b6-8698-4e31-b901-c880e3fc39e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbab9cd-59aa-45ee-9114-19adba783e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b258f216-c969-43d2-8744-d137aebe69ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6199f7d0-717b-43b7-a573-21d8019d2d36",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b325883b-c710-4b28-a163-cc6e25c278a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf3c917-252e-42e4-a18d-5f1cee47b83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a91d2e1-a8eb-462a-a4bb-0381afc2ab63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f9e911-93fd-4b5d-bd0a-9b815624ed23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdcb914-a461-44dc-a3a3-07fb3ae6cb65",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f347fc1-94e1-445e-8fd3-1445f52ba353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03c51dc8-d529-405e-b1fe-4b6dcff15b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33995ed5-d564-44e1-a4ac-7181affe65bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14eb609e-a59a-4162-84d7-ef8cfb256b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d695abf9-2983-4948-a8b1-54814d51815c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982aa226-4461-4fa3-9c42-123a2061ccca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d261c3e4-4909-42e9-9c53-49a9c202bdfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2ca2f5-2eb2-444e-a773-5b812f43b5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b122561a-f13f-492a-a3c8-1d78ea086c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4ca9ba-1d53-4445-ba8c-2b4e2f2be4f5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dd4302-6064-49e2-803c-860816d721d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f92a5b-cbcf-4e95-82e2-920db8d27a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5344c289-70f2-4435-aefa-07384c7200b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a5ee83-d91a-4b62-81e8-174c7c6988bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bc4fb4-927c-4631-91d0-4cb0c5b4806d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea35e83-02cb-4e0f-aace-838ea9417a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc773ee-ea13-43a2-ba2a-275b7f4b76c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c2fece-7cc2-403c-b027-85d2d2b8be7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c74f6e-a66b-452a-ad5d-fb5c82bb858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d030bef-414f-4eee-8647-35f877c231ea",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a824a46a-208f-48b0-9230-d2c1ddc5310f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9fcce0-b947-4344-a0f1-1106f1c41349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6d4065-aac3-4e33-bbec-7f163384a38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fe3e7b-c3fd-478e-adf3-5e2740b0adc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c33e5a-9b56-4153-9f2d-221d602a14c7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647234d3-f1d9-4268-8fce-6d3d9f72238f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d457101-55f5-4115-af9f-7b9142cd5dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46a4685-18d6-44fb-8f1e-9969d242ae84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc0b2bf-47c5-41cb-a14f-2ab751777103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9342c454-353d-48fe-a378-05c141fbb6a6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deede077-2c49-440b-aa95-d977286da2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4091517-7027-43c2-ba1d-454de454629c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7cfb2e-14e1-4e6b-a2f9-bdbe285f0249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ce27f9-733e-4098-a746-4580931f2f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc1aea5-4156-47e9-a165-d0754c0d6437",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a051c784-99a4-451a-a68d-ac1e9a7bd0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea35fbfe-6ecd-420d-8c0f-7cbcee26dcdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b21e1b5-9bb7-49f3-abcc-3c0d052f666e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6030cf-d045-446f-a744-f0bbdd023a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95227fdc-e063-4823-be41-2ec3d5f2ca9c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7cc424-6571-4856-be7c-dbe391d1ba89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52946f73-28e4-4eed-9af9-b5377316b5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5fc187-6d41-4ba3-a809-931dbd248dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081183ca-c979-412f-b621-bb848d557d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9292d7-db68-485e-ad02-bd924722d745",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b822c929-e471-4148-b5bd-0e8138468402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06b9b65-3e0c-4140-860f-4349a4aa7a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1999a7-b8b1-44dd-bc94-2e12f9e5f9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee80876-97ff-4a94-a9eb-2439d599bae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec57432-2d93-4583-a159-cb920dcc39f3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c764b4cb-efb0-4542-876d-e0ddcf53f685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a182b0-ec9b-492f-a6ed-37a5d6bbae84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cca87b-fe89-488b-a151-6932e57f4762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1431c082-61aa-4d99-aa8e-ae7726b11529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f514b8-814d-4992-b185-cb46f5a01ede",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7cb27-de72-48ec-bf2e-59a85d8d7459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa669c5-1bbd-48ef-a732-3c7255f1101e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c4fd51-ff4d-4478-924f-1bda1de1a5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f7aaac-ad3b-4cb2-a4a4-dd6207fe9010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77b936b-1ce4-4026-b968-a96af184da93",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66829f6f-f332-4cb7-91dd-47db142fa65a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb45480d-adee-425e-808f-a336a4ccf0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af58a19e-a38f-443f-bfc2-f2d3c5ff611d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd40944-d254-4bd2-be6b-a1caef514c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a8939f-51fc-4f58-9be8-31bb7f8e9335",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce8ba92-931e-48f8-b75f-2eaa7d711a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec22d1f-db84-414e-8b27-7c2293bedf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b96634-35f9-4a48-9c3e-9238abdc4c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83acfd3d-462b-4cd8-bf18-74fad7370b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3180a7ee-fb74-45f0-ab4f-6ae42b9407ce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6523641d-ab9b-46b4-975d-dc9c1223e155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167e4d62-897d-43e5-bd9f-d603165ae5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d644862d-88fa-4230-8348-334cecbed1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ba3533-b6cb-4c2e-884d-669ef73deef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebd682f-f895-4926-9f1a-d1c313d303a4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0d4c57-4341-4a64-8e43-9e9a3b48b36a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527b2335-e122-42fc-9bff-5db9212c42ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dff5fd9-ed5e-4ea6-9c2f-d875d02a533c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47228a31-b4e1-442b-b8ae-601740676ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b480ad3-61e2-4e57-9a96-94ac3ebcd430",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105a614c-ee5b-4f61-b3a1-476431768cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c20a8e4-afac-48b7-98b0-2e9a7e600538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efa9ea2-7636-477a-99ef-a8b1ed60f113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aaec70a-894d-437f-bee0-813cf3fb9315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a61e69-effd-4df7-a5a9-caf15cbe3454",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d314d28-e4e5-4e1e-8f75-ec6917f56688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52b4a42-0839-4304-97cb-12ec58387e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53f0ef4-fbfb-4607-8f61-57e54cac9318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f900a8b-22c1-4b0c-a3c3-7c25836ea17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ff5bdf-91be-4653-a35f-339e5d1f8c7d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc43562a-a681-47d4-8efb-5caa359b2931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3228840a-febc-40d7-aadf-4be94bb9b075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc3024b-9ed8-4c59-addb-0dd3592d43a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3c02d4-5228-4365-bcac-4929f9be2503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ea5bed-1929-4bc5-883e-0bd9cd66a175",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11b4d0d-b4a7-494d-b662-a5787fa82261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3cb4f9e-2c28-4fc3-a834-3e6a07892694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91687a86-e681-438a-a7c3-f136c0dc09b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef85599b-c3a6-473b-9c0b-c31ffacc1fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0afc49e-d2bc-4ca2-9ae7-da7d307c8e8e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d545a8-9efb-426c-9826-c3cf13f69b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1cbcd7f-aa7e-4754-9a17-10f027c26812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e5301b-cf5c-4d1f-a404-26b9c854c2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a28ed14-7ae7-41fa-8dc3-7721a8e03b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36021ae-c622-4a3b-9b8c-c646a9243749",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221ae3e5-38c0-4dd5-bf3e-a17172708358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d2f7d9-6ab2-435c-ba51-e9137d285b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46770fe0-b63b-4996-940e-ab7ff573da51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b385198c-d298-4c1a-aee2-3da16ca98201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e562b68c-e10f-423b-91d8-25205acc60fd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a267950e-1532-4ded-b554-c4ff606665fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81abfab5-5468-4b69-a609-2b0b3d656b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6828dfc6-69e2-472f-9d28-98460af20470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6781233a-e14d-4821-9277-19e560bbab04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d7cd3-53f2-4ad0-a4ff-97a71f7a1dd3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe985dd-2e93-4027-b810-5bfd01a877c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f29d032-5f32-4cb8-84d6-b4d4117881e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37947b81-b7e5-45fc-9a01-a9835d889839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7d0c3b-581b-47fd-852d-43a4f61d9039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665200bd-ecdc-4700-a9bd-7c251f4acb21",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b8ad8a-8d71-4d04-8bfb-2d22b5344139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf47bb4b-e74e-4624-9a0a-5c2cfcd5dec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94d211a-7bfc-4ab8-bdca-cde198442fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da35f1a-a628-4dfc-b78a-ba50dfea52df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02137f5c-0cae-4dab-bcc6-32e71ca2b180",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a3ad41-7f04-43e6-b62e-a725c764e586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01822b4-cbce-48a0-ab6e-136550e42767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ad56f9-557c-4a4d-a915-07ef1b3d739c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be43f966-d771-4fcd-97a4-ca49c7762a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807c2f78-c0ab-4b3d-9fc4-be9f7ba8e5d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a94837-5059-48c7-91c0-a5b7f7adddb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8c6b9d-c6f5-43ce-b1de-2bd0519d8f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb581dd1-940c-4f87-b4e3-fbfc7301cedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f394575-b5ec-44d2-b646-ae3d3d21d9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bf3fa9-88b2-4bf5-ae97-6f08591bed60",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb15816-b2a2-47ca-b25b-762f8bae2fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4db55e-338d-4c51-9ed3-79b98c829e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5229302-75f6-4d1e-8730-f9938663cfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de7db84-d94c-4290-bdc6-18bbf940034b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d88a5e6-3b16-43ce-b0a0-d4d985e5397a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a145bb94-aad6-45ee-bbed-469b505fbc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aed1ed5-6305-4171-8a45-1c4d8ce66d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d259502-e033-4c25-a68a-c4eba99147b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f05424b-dbf3-44b7-a569-f653a3a641b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b9ddda-643e-449c-bd81-78d70f2dfc8b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec51313-0c18-4cb3-bae8-5bc192675f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f4c14f-5189-4845-a953-e6bb3af424f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870ff5ac-2462-4071-a122-e42f98a05e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6183a858-a403-4e8d-88b8-c5f9e0913f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42883bd1-e6d5-4ade-9441-1d575cdc7612",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b1b2a8-e5bf-4ad0-b348-2283929f9f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343a26e3-2c82-433c-91dc-9cb0bc8071f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baa775e-d04a-48e7-8d1b-3e84d58c3074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ead140f-0e1d-43cd-a8dd-bc87ee32e439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3c1059-a917-4635-80e5-cf7fcf375503",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d908f60-a3e2-4e88-94af-dc60a66d70d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66c8747-f327-4795-8b2a-7aeba02a68ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f893a91e-d931-4947-b835-c34ee6ae66f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33b3df6-7540-4ed2-b3f9-340a3542cfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3c54f0-4396-4967-954e-505772e0258a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1472fd-e30f-49b2-b973-3735e06d2d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300b0380-7ca7-403f-a9e7-b8181a430b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2521d0-a8c4-4472-ad71-22ff487fed48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb70e04-aac3-46d3-afad-e57a2053908c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debf3463-2d53-4b87-9746-4c000d0ae64b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3c220a-6b25-4932-945c-688c61f10603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5795370a-aec9-4717-abb8-065a52fb51e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe907343-9fb4-4740-b1fa-d347c48a6fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ffe77d-2878-45a1-8367-0501d4572f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b6ee37-5ef2-4b9d-aa6e-dacfc4d68de2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b679383d-6430-4691-825a-53f221d40c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5185d75c-b3f3-404e-a6b6-ac7cd46dd44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be655247-22fb-4422-8cb3-cfddfa96b2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95d885b-9ea6-4b75-b8a9-83a306f128b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27f7730-af02-4aa8-81ce-06200a5f4b1b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335951f6-8b70-46e1-ad7c-79d10689db00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd38a1b-c8d9-4ac4-bbd5-3c7224450442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30816fda-ad64-42bb-884f-a42042064388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0195bbdf-9029-440a-8220-02cfe54db6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e07e4af-5f90-4a50-be8e-21e43e22f70d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ae2004-d65a-4517-93f3-6cea4fd7242c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f948e750-7731-4f9d-9021-2490193130bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90ca344-2319-4eb7-a99d-96a0369dc643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caf6945-e1bd-4542-b5a4-c21d2aa8a2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed133bb-c2a3-42df-8e2e-e53043a39509",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e807c4e-7ad6-4071-a7ec-d69ab3289ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d097171-452f-4c6d-81bd-a66572b9b369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7232ddc2-3d1b-4060-ad40-e8c89120974a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b63d3a-1aa3-4c52-87d4-d52286c83f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f411da07-19a5-41dc-b967-c1b7fc1ad389",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292d9432-f427-46cd-a81f-27ea3cd6828b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e272724-295d-469d-a28d-869072c00013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96bad85-a948-4d95-8c91-f9e7737e2ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6a9e7b-5fd4-4f56-b56d-3bf8492ccd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82f5ad7-63e6-43ee-aaf5-1f7fea2d83ee",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86265db8-174f-4c5b-ac34-af09bfaff5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fce76cc-530b-4c28-afa0-85b107ed9707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f3c973-a8b9-4a62-868f-e50c4c6fb066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89157b5c-2054-4f21-a97e-a9e673f19601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07978876-e941-4b15-8252-b1e72e8c2ccd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c152779a-24a9-4c9e-8089-3f4907da000f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdce42a3-79be-48a3-915f-dec6ff3a7db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a706c1-999f-4c7c-8306-1c7f6950b913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194c7be9-d182-4361-a188-0ab692d7c2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29affde-50b1-43f5-aaf0-b97ae329173f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae4b0c0-5aa8-44c5-ad89-1ce420eafa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b40444b-06de-4cfe-822f-293cc1a41f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8faf1ba-d73f-40c9-8c29-b5430f213f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946d1ce3-d0fe-4124-b14e-6e9a73245b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc3cee2-16da-4c63-9cf4-1677c6c13d8d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46439b9b-e488-42a9-86b0-492bd5fb2428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cabb6c-da22-4423-8f5a-662c4fed6b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd921bb-9ead-44dc-9f13-3d40932f15de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a255a3f-854d-4988-bfb9-24d1061b0ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9768aa6f-a39a-4594-b3e5-9880e97713a8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a42a8e5-664e-4160-9d33-a41f9e1b9b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50c8ca0-ecd3-4b8d-ba2b-ad741868802c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f5d99-da6d-44c6-951c-c85903ce408e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82418d08-d6f1-468d-8d44-5d0223f4cab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ed1ec4-9a67-48fd-870e-0910b01b6e38",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc869f94-f072-4fbf-8ace-ff343686281c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04c499d-8909-4fa3-9dec-b06ee60ca270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45babdd1-96a7-4aa5-a64d-66223de38dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdaf5f2-5ae2-4fe3-9f35-8e31fc96b1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82551fd7-6c9f-41af-ac28-a6fcb988b1a5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a341268-d9ee-4137-8e01-3efc7cf0208c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ba78e5-d694-4840-829e-2f46bdb50784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefe0d59-f141-4436-81e0-9839afe36ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc86b76-2a46-40f0-8a52-821d4800e1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ac5185-72be-4c16-a747-04b132ed3569",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a6514d-9c70-4897-9366-3a44aac1f72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667e9818-1531-422f-b56e-0913db703720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a920ff5e-7eb5-43ae-ad2f-88e10fedc23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369415eb-aba7-4c53-a2b7-c1a289c402c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b89f4e1-fa7f-4b17-bd00-d5d9481e78cf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f697f395-02f9-4353-af6f-6409cd2d38ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae597515-c899-4cb9-bc36-168ca50be460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c8dac6-6648-4cf3-84c1-4015cc2086af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cbd7d3-1b02-4846-8a12-d03b10af7935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66447524-ac73-4d6d-b008-4648b446dce6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be3f302-f598-4af8-89ef-ae24d3063308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602e83e6-a2eb-46fc-83e7-e2a64b50fd59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80442392-eb42-4a3c-82a2-304392b8c366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2f9f58-bcb6-4b27-af44-9d930c695acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e23334-d4ba-4910-a97e-58bdd85bb224",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1ab5da-aa28-48e0-96bf-11f2b879d7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de5ba61-7431-41f8-85c3-af3497e94e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec7befa-1e54-4b99-b366-e2977c5f907d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff2789f-6b1b-4a91-b4c8-8cc8dae7429f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2def16-d0cd-4921-8c87-225f1f30914e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8f4987-e6ba-46a2-9eeb-884bac391567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6570d633-8296-4dd4-b2a4-f8578425a3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83f70cb-ae45-449e-9d89-dc6bc8e37bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c701ece-7b9f-4883-a700-23e8aa600dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae54304-aa5c-4d08-a1c6-c9c77de74258",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f757a0df-52af-4c84-8fee-f941513d4144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae990f7-8510-4f5a-a4fa-3c7563f58631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1ca6d2-d517-4352-b0e3-29cf680ff18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e8c30d-8599-40b6-aeb7-cd306fcdda85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae27a6a5-d91c-4ea7-bb26-70eda72fc3e5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775ca53a-0af8-435c-bd7e-9fecf4b92b06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c385d3-5ff7-4577-bc2b-ed573df4c485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbb73a9-d58b-44d7-9e30-8b8a0aeaaf23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f76d84-0057-4a33-8693-5fe8c4e2abce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5893c69e-e3fb-4184-b806-b90ad3bc690c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec01244a-1d9f-4705-be48-0610d4195daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db8a151a-cae4-4152-beb1-c9b81c28ac5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40768579-af57-4f63-87c7-7c02f51c3b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0502edc8-950d-49c2-a937-a2d97162848f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9656fb-fb7f-435d-b942-1dfb065b4f62",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4318f2ce-0240-43d4-9e04-d423dd2e80f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f678cc4f-2aed-4003-9d5c-b956c5592789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41213680-df34-4180-a33e-a9f72d5d6368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210fca7b-fee2-4ef3-8467-2e254cc2b510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb60775-c4a6-469c-9af7-c304febf807f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69b83d7-1d5d-48c5-98a5-efe815fa47c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c81ec58-772f-4217-8367-21b19c2ad2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dc8813-b886-49f6-826a-c8cf6d968309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4daea847-abb4-4296-94f7-6faaba617db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faaf3a46-e824-4134-9b50-61b1a2f82ff1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32e4c81-6f8b-4efb-88f1-8d1b564194e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d9c71b-8fb8-48cb-9fd9-25c7a2c0c632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a6bfff-8e99-40bc-b552-239ba5e15ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd29ea9-77a4-448b-9e61-d9b823f45cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b838e9-f798-4f37-bc36-f53c1b29c06f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b565172-595e-4157-8fa8-aa9252b16c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9823e2-0d23-4c9f-b9f8-7348cd04efd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca70df9b-e482-4e1c-9beb-3c83d9102b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4715e078-74d6-4955-bc6d-c6486293375f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be4a76a-0d7b-494b-9c08-387bbae1c9c7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db0b0ec-9dff-4c81-b4bd-a3fc56781c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0bcb264-2975-43ce-bfd0-6101ab53f31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278fb7f9-d3e0-4369-9021-8919ec389d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9cd432-b165-4302-9ad6-fe63f14a753d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c5887c-6003-430f-b602-2763c0a49fd9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9b6f03-ac61-4535-91de-a7a6dc4b40df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d38983-5ae2-426b-982d-2aed1d945cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b298e7-c902-4328-b3a8-7787e67b99d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b806c5b-6e78-4b39-ab12-4d4e37efa2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f6c5ca-ea77-4811-9a8c-bce82a94a444",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1df974e-f01f-4541-932d-95036b80cc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af1b9fb-e1e9-4e8d-a7d5-cc4b59026d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cceb9a0-7faa-48a8-95fe-46f9f7762cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecebd54-9cd3-4a9e-a504-33058a734e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdffab78-c72e-47bf-9869-ed7dbdb3e8d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa479fc-88e8-4138-8da3-65c96a405b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97fde64a-a3b2-4eed-b226-7ad127bf5980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f9c818-1c0f-4ae1-8212-31031a072606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b969690-91d1-43a2-b727-f7b7befb87ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a131931f-e81b-4f38-8bda-c4d18efead6d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc254b7-66a6-42fd-9017-dcff4e7b62db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9043fb9c-2ca4-4525-b27f-03b89405ff88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc140895-3427-4f6d-82a5-81febb060840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876d378d-e87f-4a59-a42e-9c6d453d0acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8199818-7adf-4b48-863d-3b7c82dbe3f9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd6e504-c77b-403b-9723-ca44a0efde98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4197c81-fe2d-4916-af99-8a7e68d19c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55cee0f-f265-4f58-8e57-6d218befc6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7adb11-be65-49a6-99a0-c718b1c2e9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf74433-49ca-4197-828b-7151150c149c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da17b080-46c1-4bf6-8489-eec6545b46e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d5213d6-0bbf-45d8-8617-bc4518f26fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f6ce50-29c5-4395-84de-5cdd628f59f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c5aad7-a454-42a9-b6a1-d22fb99944c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8541f0a-e548-4831-b175-cce8d5d2a5ec",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa74ae94-8ecd-4561-bec2-0f0cb69a4344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a85b4d5-f2f9-44b3-8e82-6634e5f4cf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26e21a7-bf91-48c2-ac9b-b69e0a3b97b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f101cf07-1569-480b-9a36-aa711ef37c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8815c0a9-4de5-4b2e-a72b-2a88a329dd23",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c33dd0-ff5e-4020-852a-19af749f3796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f63d8f0-3695-4676-b1d3-99a884e568c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba62f07f-845e-4bcb-aa46-58d709d4a82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a878c80-5506-40a3-af4d-e2cd8c4a5691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4caabe-9a49-4c76-8fc3-a914cd29f28e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5f98be-68bd-4453-b3df-c585eeeb9f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb731b52-2e3b-469d-bd9d-9607dfdb08f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064f72c6-ac44-4392-813b-a0b40377da21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbee4724-f8d6-4b52-ab12-01563a33d199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2bcc99-a7a5-4490-8b86-f83c84ad2575",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3d9f89-fbb0-45c0-93b9-12fadc122a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a7f658-543a-4db1-b1a1-b37aa061b73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13f66c3-5f85-4b16-89d7-75e97b55d786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775583cb-34ee-4f87-ab3c-d3b87af9c07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ef54a2-7ce5-4b6c-b4dc-b29a4f9d9dc8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08fa0f6-7210-4451-87f3-b7ea3230ba99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb5089c-e2fd-4f2e-a406-7c3d1e719dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f3ea9e-01ce-48f7-9f9e-510fb33f2138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cdfda1-83df-4a43-882e-bd0349bea3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7af0e30-7ecb-4010-91d2-cfe956ac4957",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04e562c-41f1-4a3a-86b9-0c118ae67744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c1485b-7410-4921-ab0f-2bc66101fe4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476de431-d953-4412-bcf2-f67a0f58d2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282f2036-ab75-4ecb-b555-0dd7938460c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bd3a70-bf81-457f-b88a-056fd88049b4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1ce6f5-0ec8-4bf8-8b4c-d81b9c2085ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e26cb0f-106b-4ba0-97c2-415cf5992fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831cd25d-ca50-4df3-bbd4-e6ce3b5c297c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcb8f68-42e0-4b98-bba0-60106363049a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b7f5be-0034-4fb8-8182-498b9666ab17",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b7eb5f-4e1d-490f-b9c3-22211d97df1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb08333-5747-4a24-9861-7915e1b32497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafcdd2d-c495-4e4c-b368-f74c1e468aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6578f7bd-bfbf-4487-b40c-b9db900c251e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f41df87-696d-4ca5-b2a9-fb35d9b89ca2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d48d61-917c-4ce4-9e0f-bd95738dc0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfece204-eb58-4f1f-b4b5-635cfef349de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aba604-b05c-4624-b52b-b5518dd5cc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad130af-2b31-4878-9b97-74a65461e342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640b25e5-71c6-4ba4-a588-6a2ed9618437",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60f5d5c-4013-4870-884e-fe8089ed5a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cda4b14-0625-4431-84c9-355e730b7286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c89530-b440-494d-aa73-ac3109b6ceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219486e7-3555-41bd-ac3e-e1d78fa165e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ae56c4-10ca-42c9-9125-8da59a96b1ee",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fc66cd-0e4a-4ff2-bbc1-a1b910abd3ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6527ec38-d0ff-4c8c-9bb4-dc116848a59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3b5fa1-a202-400f-8c53-5b1e99c980d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67a96e2-1b1e-40fd-aa70-274ab814d1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbfa44b-c36d-4cf7-980d-38ec62e555c6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc9c4c2-1a7e-42a7-a61d-94d770f4d1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1276cdfd-b092-4168-a650-b7555d118797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7fa607-8594-448d-8477-ea73917d2f68",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6c84c1-9cac-4d29-905e-e740988133aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88f03e2-d306-49c3-8a1b-415bdc8c6c67",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8db0ae-3221-4cd8-b879-8a8cac2afcf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56178ca1-45fb-4cfa-b2d0-3b6fe57807fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e241ea-c97c-4edc-bde0-f2018676abe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd859f76-48b3-469f-abef-936df67eeea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d05e374-8aa5-42ca-8791-6096c6343a8b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fd72ac-d5da-44d8-9f08-35d6f190753b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfbc7142-7fe0-4a40-86bb-01cdca0344ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e59143-229c-4ed9-a0ad-4159821686bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59056748-9afb-4a82-9296-cae6424698a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6e06d4-8f6e-40c8-91c6-0ec2107cd1dd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db300a31-f973-465e-b42a-3ddad17180f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9737e8d0-8df8-40a2-8d02-05cd230f5142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228f1ed9-eb68-4b59-b214-6196075294d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01904c5-8d1f-45a2-9ec0-28c036939734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7fd334-ca1b-4beb-8cc7-3d63dc59a350",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c62bc0-b385-421e-bed4-4f5e70716940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf924d5-a5ee-4fc5-905e-1aa88fb2c5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e910e8f-62ad-454f-b769-f40afa71c9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1aae90-334e-4175-8976-5bb2fa466918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ff4992-6d12-4930-8102-31a50b0f28ed",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e8d02e-5ea7-4a26-bb6c-bb4d754ebf8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd63f2ae-6680-454a-bc60-add3f85e5ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b797a5-aa2b-4fd6-be25-a2842a63d44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa0f801-df81-4a7f-aaac-ed85d86273e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d6e028-dc58-4ac0-9f1a-955361354214",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca34dbf7-fe90-46ed-bd4f-babd46e216b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25fdd276-04f3-4c49-9e97-9ea8171dd488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f904a1b-4ddf-47e4-9e27-d94f3ca0083e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f4d6f9-deda-435b-a68d-0e97a4afec3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a9626c-6456-4d6e-bb79-0d3fb8f4f0b3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59e660e-4802-4637-8995-ce61d3d44451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63e2e02-94a4-434b-9dea-e6efa83319c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa788dc-6f61-4b77-967a-1da2903a751c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9621708c-7ac7-49c3-a9c6-797a96d87cee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb798dd4-1ca5-481f-bee8-0122bc4f133c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "363587fc-3ac8-4bf4-929d-418813882eb1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c9c889d-d51d-447c-80bc-25d5f01f87ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ba246f8-b169-4c1b-8fd5-dd8eb7c0d9f7"
                    }
                  }
                ]
              },
              {
                "id": "4ea217e9-1442-4fc3-bb85-5bb006c83b27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b76e572-ecfb-4bb9-8060-3a8dc41fab7f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239a9b07-2760-4dac-8345-20c3d782652b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "433d768b-47de-409e-9331-0d4db42f1f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b06c02e-a4fb-4942-a70e-7bdda2a1b861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1265f5ef-bbca-40ca-a0b6-9d1864de26e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbb9aa26-830d-4f23-bae2-8e189c0cbced",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77bea3b9-5a49-44b1-b234-4bada6c0bac2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1f60d24-5479-4390-aaa9-77faa1c79274",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b60db387-915b-4423-9d36-6a4f42a50148"
                    }
                  }
                ]
              },
              {
                "id": "48f5adae-64bb-42e9-ae64-77338f064e5b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5efe855b-b847-42db-a41e-b3f5ce29c322",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d1a230-efdc-45f2-89fc-0bd1e2c1801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "feef889c-397e-4bd6-bc99-f32b6b558e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11eb1c0-b399-4c41-a79b-f01dcf3df529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2985b36f-e9ab-41bd-af54-4fd59cb5ef92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "db1828f9-2bab-445a-aecb-8993d64cc9cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1233362d-ec27-40b3-9f3f-7d69a6ff035d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c09729e3-7aa1-4ff0-b137-f23d42c2a39a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2349ba29-9a74-45cb-9256-8f92c5477eb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1d1a709-4cbd-4c5d-8c0f-9dff7102aefd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e73e5ee8-74a1-4589-b524-6a697f2cfdb3"
                    }
                  }
                ]
              },
              {
                "id": "9858484f-e7a8-499f-8713-4439203566b7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c9c557-75b8-442b-b055-c812ce44a360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "01e68910-ee8f-4fef-b2b6-a650b711ea22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be2506e9-dec4-4cb9-a6a9-66e988908d6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c077c8a-207b-4967-8715-791c7fc7fe76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10bb6324-2984-410e-888e-ffae08b2a73c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e2769067-0bd3-4195-b091-897f0df72df0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "240f9eeb-0a10-4b03-8e0a-bbe01be33aa6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67186d23-662f-45f8-a7c5-1d0a311609ff"
            }
          }
        ]
      },
      {
        "id": "82d7b6fa-e7fb-4a96-9b70-d4f756e40cab",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5fc2cd97-0ae9-4230-af71-6dff48431f03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45142257-933d-4efd-92e4-49799dc438a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7913736-a6d7-468b-8452-efc7d06c6ef3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9771b58-7470-45dd-a391-9635da8f767a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28b20bd3-7d96-481c-baab-2806f9fdc468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0e4ccc-c41d-4c03-93f0-22ddc113471d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ca9f69f-3de1-4744-806f-7fdd95aae961"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58b0ed25-f6c3-42b9-808e-aa1ba48252ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40e99f7a-c3b8-418f-9bf8-22772011ed76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4add77d0-dc58-4545-b306-639c6ab00a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a39707d7-6121-48e5-a853-e3edc4188a51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "681e51e2-6126-4a81-b7fa-792653e865ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2682bd96-18dd-4a98-a8c3-d73e279917ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "066202ae-9167-44b8-b728-a1aac3172a50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66ff5495-68e8-4ca8-8aea-e24eac24a221"
            }
          }
        ]
      },
      {
        "id": "0e0f78a1-1829-43bb-acff-a2252617805a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c7d5343f-1eb1-4ca5-9621-36b686b8ba14",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8879a22-4d5e-42b3-b7f5-5412a0e042a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2ccaa0d-2a9e-4197-b5bf-14127e963cac",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead34f1d-1d22-45d4-9234-1af712863f30",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4bd2eff-80e4-461b-bc6d-121716564ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bb232b-b27a-483e-bf2a-6387f557e57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90353888-fb06-4e19-b144-060ef76cb1d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e939e493-1f85-4373-b240-19a3b4fef513",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d7ddcd7-e076-47fb-93e8-79fcbb40cddc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c588396-972c-4585-8ed0-31463d1943c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84a2bebd-d642-421c-a772-6e36a5b281b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e87cd065-3059-4f17-9977-3ecfa9d2ca75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "edd3b828-a735-4385-8dba-bf2bbbbbedf7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4353477f-8ff5-4176-b8ec-b341ad7dcf7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e4d0736-d9ff-4a99-a495-7dd66aece8f2"
            }
          }
        ]
      },
      {
        "id": "ec3eecb0-83ee-4e79-83a6-f6c6e16d97e4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0599de47-cfb0-449c-b482-5c46de417c43",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d6fcca4-f8f5-40e4-81d1-e7eaa210ce27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff951a81-ee47-4e52-ac02-0af463e61df2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96626f2-2966-4b10-b80a-a780b12f6b9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d39dd700-610b-472a-bb9b-1522aec3681c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449ce19d-3530-40f2-9a4e-7da0fd72746c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b53a6f4b-6af8-4c23-8f53-539b4fefe28a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b5007d8-a4fe-4dc0-9836-64dda1e6b555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f843d6bd-7eb1-4504-a3bd-2b3abaefad5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9001a392-3696-4392-8464-fbbe49fd82de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ff61527-a336-41b7-bf6c-03b570f5cbf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "767e6fb1-70d0-45c7-a938-d391d9cbebe2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3348723-8025-40ac-b34c-2f8502f4dde3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de896881-0e04-4c7f-b809-58f6162061bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a593d81-5c45-4fb9-90b5-e5c34d3212ef"
            }
          }
        ]
      },
      {
        "id": "b348e648-6ce8-44a0-9924-0048eece60e0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be448f43-3e67-40f0-9d8b-d2fded911f99",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc567c07-443d-43b4-9818-2159490fa5d0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8cafedcb-7d38-4ae6-9e7e-aeb20f9ff62e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e335f06-e6e6-45a3-b9e1-58c7e571c090",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68abf6c3-cb7f-4793-8441-aa8036afc531",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 110.36140350877194,
      "responseMin": 9,
      "responseMax": 9569,
      "responseSd": 616.5597245595171,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709858049401,
      "completed": 1709858089863
    },
    "executions": [
      {
        "id": "250ac6f4-4ab7-4e94-8ecd-d9f0b2b0df61",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4e9ee061-a966-4174-bece-c4ccf37b4981",
          "httpRequestId": "59afbd14-7256-4b23-bcdb-565563afdaad"
        },
        "item": {
          "id": "250ac6f4-4ab7-4e94-8ecd-d9f0b2b0df61",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d72e1709-c343-458b-b9c7-ab5dacb54216",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "453f1c10-7a10-414b-bea2-1c20bdd1d2f6",
        "cursor": {
          "ref": "fea23818-28cd-4ffa-b6e4-7516d15246a0",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1e714f00-beee-4f4b-a170-0b200b3f6ecf"
        },
        "item": {
          "id": "453f1c10-7a10-414b-bea2-1c20bdd1d2f6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3a8d1107-4346-4108-9343-ce70dccf0468",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "830ca385-eccc-48ee-b5cf-1ad7588c405d",
        "cursor": {
          "ref": "679d0658-98a6-44cf-b117-4d8e1ce463ef",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f98ce3c7-4d3a-4513-bae0-3171eab533ac"
        },
        "item": {
          "id": "830ca385-eccc-48ee-b5cf-1ad7588c405d",
          "name": "did_json"
        },
        "response": {
          "id": "ebf13ce0-c2de-4647-a4a8-db136e682f45",
          "status": "OK",
          "code": 200,
          "responseTime": 180,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85ff495-5c50-4315-ab4a-8206e6ba05a3",
        "cursor": {
          "ref": "7677713f-30ba-47e7-bc35-772efb764f8f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "467c8817-3c84-4f5b-9033-71b7cd5aa3f3"
        },
        "item": {
          "id": "e85ff495-5c50-4315-ab4a-8206e6ba05a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5aff745-a67c-48e8-b9eb-c0eae2db02d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1330,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85ff495-5c50-4315-ab4a-8206e6ba05a3",
        "cursor": {
          "ref": "7677713f-30ba-47e7-bc35-772efb764f8f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "467c8817-3c84-4f5b-9033-71b7cd5aa3f3"
        },
        "item": {
          "id": "e85ff495-5c50-4315-ab4a-8206e6ba05a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5aff745-a67c-48e8-b9eb-c0eae2db02d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1330,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83022c55-0b2b-4ccf-85f8-ced5f04c66f2",
        "cursor": {
          "ref": "cbd7a7a5-39cf-4470-bc7b-a015c6842b5b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f68ef139-2dee-446e-8698-e128455b8903"
        },
        "item": {
          "id": "83022c55-0b2b-4ccf-85f8-ced5f04c66f2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bd6020c5-3c0f-4f6b-b8ae-085878373ffd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da96f5ac-4a1f-49f1-a418-0c5d588900d8",
        "cursor": {
          "ref": "b7e3cb8a-8781-41eb-855d-2015db0f6550",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "66ef1a31-4c2d-46de-bd69-45ef78773385"
        },
        "item": {
          "id": "da96f5ac-4a1f-49f1-a418-0c5d588900d8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b5eb7688-93ad-4e0d-8885-631c626a4358",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b51c8e9-aad2-48f0-a238-3132a3d92646",
        "cursor": {
          "ref": "70a7dac5-1b5d-4222-b9b1-2fea434e587f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3733b902-166f-426d-a265-133b2c8b1888"
        },
        "item": {
          "id": "7b51c8e9-aad2-48f0-a238-3132a3d92646",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dff3668c-3d14-4e14-a688-b47d8b78f316",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf011718-a269-4229-9b7c-2921e467cbc8",
        "cursor": {
          "ref": "1e1e9b9b-826e-4fca-a02f-b76508d167d0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "23e79ae7-7182-47fc-a015-44af8f3f26d1"
        },
        "item": {
          "id": "cf011718-a269-4229-9b7c-2921e467cbc8",
          "name": "identifiers"
        },
        "response": {
          "id": "9ea068e8-15d4-40a6-b430-79f916971f01",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1955d4f-cf1a-475f-b58d-5afaec1e9d74",
        "cursor": {
          "ref": "806db598-ccc2-4edc-9b5a-86a1a18787dd",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0406a417-adee-4cd1-94c9-99302426827b"
        },
        "item": {
          "id": "c1955d4f-cf1a-475f-b58d-5afaec1e9d74",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a87144c1-0c9b-4e93-b563-2a3fe873d617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1585ad17-e3ae-4033-9a83-746ba41cbc46",
        "cursor": {
          "ref": "422250b1-ff9d-41be-aba0-16aee5d4bb56",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "50d8d3da-f82e-4f07-87e6-a9a599ad4b09"
        },
        "item": {
          "id": "1585ad17-e3ae-4033-9a83-746ba41cbc46",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a1c1efcf-444b-4f08-8813-10ac70262876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a6f533-5507-44f5-975d-ca957b673cde",
        "cursor": {
          "ref": "635d0ff5-4290-42be-b8a7-501865f2ed7f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ef820409-33f1-4c1c-a7c8-4e419cbc1791"
        },
        "item": {
          "id": "97a6f533-5507-44f5-975d-ca957b673cde",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "434808c8-643c-4182-862a-68c5955862ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fe2a55-ceb0-4202-8737-42a2d893dff6",
        "cursor": {
          "ref": "923d155d-0b35-4bba-bb85-979a90243ed8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e1ada89c-2c85-431c-8e47-b6c8ccc29135"
        },
        "item": {
          "id": "21fe2a55-ceb0-4202-8737-42a2d893dff6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "81e9317a-de7c-4d73-9815-ca8d4bd39a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1294962c-fbd0-4385-b6d0-b12e84b451e7",
        "cursor": {
          "ref": "2d924bd3-6393-4c17-8cdd-901d22323a86",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cfe78e47-5ba9-43e9-a239-6308e75525bd"
        },
        "item": {
          "id": "1294962c-fbd0-4385-b6d0-b12e84b451e7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e7784ddc-b66c-4c6f-9eaa-e0cda3cabfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dd7c13-e708-4c1e-b396-9efaba41c84a",
        "cursor": {
          "ref": "f806533f-c32f-44dc-9b97-96e66b9e92e2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "79248805-944d-4a64-bfb4-0dae7791b8b7"
        },
        "item": {
          "id": "a8dd7c13-e708-4c1e-b396-9efaba41c84a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9b001f25-2c83-431c-bdb5-e7bfd76a8f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc37935-87a3-44b3-a5a0-8ded57e2e8a2",
        "cursor": {
          "ref": "cd9b1d91-a9e9-4d4d-92c6-327785120b0a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4a98e6db-37b2-41ba-986a-25727ab2952b"
        },
        "item": {
          "id": "8cc37935-87a3-44b3-a5a0-8ded57e2e8a2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1bb00ed5-f87d-42b4-88c9-7b16010500b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3015fd6e-da30-4819-92a8-c3b6bde9f11d",
        "cursor": {
          "ref": "c190ee68-b656-4bbf-831c-57d748c2669b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8a8bdb40-d2c7-4cf6-b71f-1ad2fc2d57be"
        },
        "item": {
          "id": "3015fd6e-da30-4819-92a8-c3b6bde9f11d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fd441668-f1dd-4acc-8cdc-0cb371a79605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86788190-7b17-48b0-84a5-d6256b31865e",
        "cursor": {
          "ref": "4fa1a4b5-0ea3-4962-ad3c-cc13920f7270",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "88db5363-2e06-4899-9bb9-2bb845e0e982"
        },
        "item": {
          "id": "86788190-7b17-48b0-84a5-d6256b31865e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cf5fcff6-3eac-451c-8d15-6ab34218eeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1f8ee7-5847-4a33-a341-757926d1d981",
        "cursor": {
          "ref": "fd6cc2a2-3c40-4c27-bda5-1c680a0d6825",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "35e2f7fc-cc13-4a8b-8f5e-d028f69dc11d"
        },
        "item": {
          "id": "0b1f8ee7-5847-4a33-a341-757926d1d981",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a37c235d-0ae0-464f-98a1-7de6dfd5773c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0942c97-fae6-4b45-be53-c63847bc8b44",
        "cursor": {
          "ref": "039865dc-af0e-4dae-989b-1e5f565e57b3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2f1d464d-5659-405c-982f-e8b3d66bca70"
        },
        "item": {
          "id": "f0942c97-fae6-4b45-be53-c63847bc8b44",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cc56e7e6-6c34-424b-9904-381495ca438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292b483f-61a7-4e06-abab-2659842951ca",
        "cursor": {
          "ref": "eb3d345e-dd19-4aec-8662-056d3a21d535",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4ca1a81f-a736-4fdc-9280-c0208c969db6"
        },
        "item": {
          "id": "292b483f-61a7-4e06-abab-2659842951ca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "98bae13c-6712-4d78-bd94-f7969402b961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b48c23-02df-4bda-bb35-51d4e7a6499b",
        "cursor": {
          "ref": "9235836c-7be2-47dc-86c1-1a950f64533f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "900d0e46-1e99-46d9-b0f4-7f05c3819496"
        },
        "item": {
          "id": "80b48c23-02df-4bda-bb35-51d4e7a6499b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ed67c5cd-c782-449f-9958-9e89c6c7f789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55fd261-abf0-4667-8c95-c960aa8a1365",
        "cursor": {
          "ref": "238fa070-ccf5-4b31-aff1-3a6a2eee6f69",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5c0e2654-2a9d-49d0-8c1d-bcee92effb31"
        },
        "item": {
          "id": "c55fd261-abf0-4667-8c95-c960aa8a1365",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "29600b0d-6e46-48a1-ad2c-c95d335c30fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd24cb58-f94a-43c2-aa90-ce2015472671",
        "cursor": {
          "ref": "7d4daec8-79f7-4281-819f-b920a8fcd047",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3e9826c5-7156-45cb-be73-db0cb861084a"
        },
        "item": {
          "id": "fd24cb58-f94a-43c2-aa90-ce2015472671",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3643dc8a-0707-4c92-8825-d6218df8a92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b7b437-cd45-4457-9751-578ed24b15eb",
        "cursor": {
          "ref": "2d91a7d8-ce4c-4efe-9eeb-cf00773826db",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "990b5e36-575b-430b-b05f-e2e008fb1f49"
        },
        "item": {
          "id": "89b7b437-cd45-4457-9751-578ed24b15eb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "99f68fdd-070a-435f-bf9d-5325ffad704d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4940cf9-9348-44b5-877b-2ee653565230",
        "cursor": {
          "ref": "6e5e3b82-8d52-4157-9323-fdc920b1e7a4",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "64e4b2f8-a0ec-4699-b646-5704068b1033"
        },
        "item": {
          "id": "d4940cf9-9348-44b5-877b-2ee653565230",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cfb6f777-9c39-4105-8a7f-84b81990a149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5daefc-d757-4ba1-ae88-bf507b9db7b0",
        "cursor": {
          "ref": "3c345473-3914-4413-ad5c-671176290209",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8fcdd027-7ca2-406d-aff1-f39f769f8e15"
        },
        "item": {
          "id": "bc5daefc-d757-4ba1-ae88-bf507b9db7b0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2698e424-cc63-4d6e-8eda-83d4ae36c058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c102e3a1-df55-4b52-b7ae-6c26fb4896d9",
        "cursor": {
          "ref": "727dc587-0ad0-4258-87c1-aa676b19a7c7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a030dbda-ff7c-4491-aedd-739d29b3e899"
        },
        "item": {
          "id": "c102e3a1-df55-4b52-b7ae-6c26fb4896d9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ec518c78-59f7-4f1b-bf4d-40eb05796751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2897fe-856d-4b88-95ae-0fcea6d847e3",
        "cursor": {
          "ref": "499b5bf9-e88d-4eb1-9966-6dcc879eff85",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "844cee14-f0e3-460e-9de1-805e51893ae6"
        },
        "item": {
          "id": "9c2897fe-856d-4b88-95ae-0fcea6d847e3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d9b876f3-f31a-49ca-b58e-ede70e9ca61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699b1387-46eb-40dd-9150-21c98d6d6a15",
        "cursor": {
          "ref": "5200d5cb-2882-4c2e-b650-ce75ca9d10fe",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ba10e8f1-a7d6-403a-a684-c2b10f1a33a4"
        },
        "item": {
          "id": "699b1387-46eb-40dd-9150-21c98d6d6a15",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ebdebc01-8465-4efb-b690-55942d5e416c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d0568b-55ab-4362-b6c6-fca6492a9f45",
        "cursor": {
          "ref": "0caa4fcc-6f46-49d4-9d95-e2249c510c23",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ccc75ed-3206-4885-847c-ac105a357181"
        },
        "item": {
          "id": "96d0568b-55ab-4362-b6c6-fca6492a9f45",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d723d485-03ab-44d4-831e-4b94a5dceae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641164f0-d214-4347-84ea-19fb43287b29",
        "cursor": {
          "ref": "65ab5bd3-66a2-414d-b4c2-189d6a4966d0",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39315b30-b967-4854-ab13-637ca872e6e3"
        },
        "item": {
          "id": "641164f0-d214-4347-84ea-19fb43287b29",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5c84d13c-3945-4a97-ab82-a3456b7e4457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a543857-26b4-4b82-8a57-d41de41745ca",
        "cursor": {
          "ref": "42f1039f-720d-471f-8233-0fe6e08a709c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8d6c1e37-0ce2-42e0-9697-936a918afbb7"
        },
        "item": {
          "id": "4a543857-26b4-4b82-8a57-d41de41745ca",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "35499f63-0d8a-4c00-a393-0b159a6f20fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9903d7-5d44-4055-8724-bd89d1659b4b",
        "cursor": {
          "ref": "9aa09188-b077-48d0-8d70-211a1cff2791",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "acbacf2e-c6bd-445a-a894-9eb32fe37a24"
        },
        "item": {
          "id": "ac9903d7-5d44-4055-8724-bd89d1659b4b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b28a3ae0-5f77-4668-8534-ef9b2d911cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d12eab-80f3-4285-b2ab-8e585a5107ce",
        "cursor": {
          "ref": "e0373549-6b67-4b98-904b-2a903352dea4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b327eb37-226e-413f-a725-56fbed8e7d98"
        },
        "item": {
          "id": "17d12eab-80f3-4285-b2ab-8e585a5107ce",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "48f89118-a96f-4e22-8dd9-786a27e6bd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38273823-d284-4c30-8c2d-572b506ad030",
        "cursor": {
          "ref": "a05f694e-883e-4fa7-aa10-06a3205c4ccf",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "23bd1ec0-47db-4755-aa44-b618d375900f"
        },
        "item": {
          "id": "38273823-d284-4c30-8c2d-572b506ad030",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "33a910e7-90df-4398-aec1-c60dfb6dc74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778020fe-f29d-491b-bd78-163e0ffa4420",
        "cursor": {
          "ref": "a2fe579f-edca-455c-86a5-a43de8eecc1f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d1b5569f-c0cd-473c-a9ae-9ca6cbdd880d"
        },
        "item": {
          "id": "778020fe-f29d-491b-bd78-163e0ffa4420",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7dced5f7-f6d5-4480-850c-d74aa5d024ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a57568-a22d-4133-ae9c-b45e9f100732",
        "cursor": {
          "ref": "cd3da2d7-44d2-4bee-8a01-ed5fd5ca474d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a5a2933a-1905-4d12-90d7-f40d7410240f"
        },
        "item": {
          "id": "56a57568-a22d-4133-ae9c-b45e9f100732",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f6177b96-cf79-4cc0-9bc6-0807af9a725d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cac1977-064a-4acf-aa78-35e93ab4e989",
        "cursor": {
          "ref": "a5bde364-c6ca-4ac0-9a16-f6fbfb9b661d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "db9ef1be-0c4e-46b5-82cd-736756acc4c9"
        },
        "item": {
          "id": "1cac1977-064a-4acf-aa78-35e93ab4e989",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f5849ede-9c73-4715-92d0-8bdb356e4097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf558eb4-b197-4927-8c9b-725a0fc263cd",
        "cursor": {
          "ref": "5c5a949b-1bc2-49b7-b6d4-441a781e3cdb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "77d0ab0d-6c04-4cdd-a44e-434d69ef5bad"
        },
        "item": {
          "id": "bf558eb4-b197-4927-8c9b-725a0fc263cd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5d68bf4c-619f-49a2-a731-12ea0b0feca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380b3806-09c5-40d6-a52b-afa0fd5a88a4",
        "cursor": {
          "ref": "f8a54fa3-2728-4553-b1b4-23ee5274fe75",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "42ad057e-d9d4-41f2-854a-b9977017b783"
        },
        "item": {
          "id": "380b3806-09c5-40d6-a52b-afa0fd5a88a4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c90fdd87-31c3-49c7-a8d0-8a521df9e4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fb89c9-ea9a-42d5-bc32-5113423f1512",
        "cursor": {
          "ref": "ef4b8b50-074f-4cdd-93aa-0f2661b51568",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "18d032b6-f1bf-4d3b-bb0f-c623bfd4d703"
        },
        "item": {
          "id": "08fb89c9-ea9a-42d5-bc32-5113423f1512",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2cd38537-0cf2-404e-b4d0-bdc635816939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e27b4fe-ab50-43de-8341-d8b809fa63dd",
        "cursor": {
          "ref": "413c96ce-1804-4788-b40c-ccd8ac1fdc62",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "329a8b80-976a-417b-b3d3-3386d08990e2"
        },
        "item": {
          "id": "2e27b4fe-ab50-43de-8341-d8b809fa63dd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5220d420-0f0e-4e5b-8f00-5ef3f35c291b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbcf473-a396-4b73-9419-735f05fbf39d",
        "cursor": {
          "ref": "644bb22e-58e4-49b8-ab65-417c797cd2ec",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3cb4bc3f-7955-4611-be9c-1d838ec91934"
        },
        "item": {
          "id": "5cbcf473-a396-4b73-9419-735f05fbf39d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5531e8c0-908b-4939-bddc-df6fc7584bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb30141-ab1b-435a-9717-11ac515db521",
        "cursor": {
          "ref": "b2320832-5fff-4236-9eb3-72ea5ef07ffb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e8b4be61-c8d3-4ce7-816a-94690fcfd270"
        },
        "item": {
          "id": "9eb30141-ab1b-435a-9717-11ac515db521",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a5009f24-3ffe-46c1-b422-6487e20ad639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1de986-ec37-4b4c-bd6f-36579177326d",
        "cursor": {
          "ref": "9410a59e-47be-4e70-b91c-65343d342f45",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "32b226a6-86a9-4b50-a1f4-961b370dbf52"
        },
        "item": {
          "id": "5c1de986-ec37-4b4c-bd6f-36579177326d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f9b9a900-42f2-4ca6-b348-e5d0c22d9786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ae9917-77c2-46d0-8fe0-5c0dca6228e5",
        "cursor": {
          "ref": "d2107651-a1b7-4754-8a2c-10d01ad4d3c1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "485f4401-f962-438b-a8de-6a8ca2c0a3f8"
        },
        "item": {
          "id": "66ae9917-77c2-46d0-8fe0-5c0dca6228e5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "492f5ab8-4f29-48ab-bd47-6ee27fb211ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410d3679-99d5-4fed-9baa-52f33e154a96",
        "cursor": {
          "ref": "46064431-248e-4811-80e2-8993196ce0f7",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "01d319d2-33a4-4643-97df-ceda5accf04c"
        },
        "item": {
          "id": "410d3679-99d5-4fed-9baa-52f33e154a96",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "132a66cc-806d-4d8c-b83b-e7622cd0cde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e40047-584b-489c-8126-e15f7b0b89fe",
        "cursor": {
          "ref": "ab37a5d3-e3c8-41fd-bba4-5f4ba14e23f4",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "296e7add-f1dc-4df3-a250-620bc372f5c0"
        },
        "item": {
          "id": "71e40047-584b-489c-8126-e15f7b0b89fe",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8efe277d-3943-48e5-82be-49f52ad68f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b566dcb-d810-4af5-910f-f978d99adb93",
        "cursor": {
          "ref": "0cf13b22-f474-4306-8316-f02e0e8bac10",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6c5c2c4d-2afc-4a17-945b-d1a31e2751f0"
        },
        "item": {
          "id": "4b566dcb-d810-4af5-910f-f978d99adb93",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2c2a8e2b-5da2-4d6c-a4d3-7706a7976374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e773822-97fb-4572-92b0-63e9afc6fdec",
        "cursor": {
          "ref": "0a54573e-9ef2-48f1-9a6f-46739410c0e8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ffaf4eb2-ae7e-4a49-86dc-b1a6fc989779"
        },
        "item": {
          "id": "8e773822-97fb-4572-92b0-63e9afc6fdec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4d7b8c4d-4c56-43d2-b988-ecdff72a8191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a22a75-6f23-4743-9368-749f9564f554",
        "cursor": {
          "ref": "be465517-93ac-41e1-b10b-f7ee370fc013",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1f99e978-8a1d-49a4-a6c1-b3df209c5112"
        },
        "item": {
          "id": "36a22a75-6f23-4743-9368-749f9564f554",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f5af97ed-d5e2-42fb-a92b-ac248f5f32a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da4bf98-ca0a-4383-bb8e-4a16fc6fcd7d",
        "cursor": {
          "ref": "2a49fdc4-3a6c-4bc5-a9f1-20be1de4a222",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "821aa23e-25f6-4108-b8d9-38c8d8611eb5"
        },
        "item": {
          "id": "6da4bf98-ca0a-4383-bb8e-4a16fc6fcd7d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2b69c6a0-8ebd-4150-9620-6ae7e9a6e84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a8fbeb-232d-4e7d-8de9-0fa69840fa6f",
        "cursor": {
          "ref": "cf61d15b-a401-4677-a04e-85c96338c9dd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bf5af937-5cd4-4588-8766-dff448518324"
        },
        "item": {
          "id": "79a8fbeb-232d-4e7d-8de9-0fa69840fa6f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d6957e66-b7fc-40fd-823e-53cbc47584b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184454d1-d03f-4873-9e82-e08cc13c7745",
        "cursor": {
          "ref": "db8d0d21-7a1c-4c40-8771-955ce26fc109",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3a531725-d154-44ce-84a4-24f2eeb1f9ee"
        },
        "item": {
          "id": "184454d1-d03f-4873-9e82-e08cc13c7745",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "49f0ae36-49a5-41dd-91ff-f40414638cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8375bc2-c5c1-4dcc-bbda-ec3a41e3a7e7",
        "cursor": {
          "ref": "ea8aa2c7-b871-4455-b89b-eecafa576ad7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7d4a3a9f-6755-49dc-9c42-8329815323c8"
        },
        "item": {
          "id": "f8375bc2-c5c1-4dcc-bbda-ec3a41e3a7e7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "788cc65f-2074-482f-9dd2-61b2a89ac4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b490ddb8-31d7-4965-8e05-83bf894381b0",
        "cursor": {
          "ref": "81bc2a15-11eb-454b-a5e7-45dc8fa978d2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "44b013c7-8a72-47d4-9f7c-6659e872c7cf"
        },
        "item": {
          "id": "b490ddb8-31d7-4965-8e05-83bf894381b0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "44e6f27b-6914-422c-89ed-df41c0a72098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7343fe8-899e-427d-a221-8f1fbf3610d4",
        "cursor": {
          "ref": "f20cad90-2101-4f55-b848-2f01ed185d01",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6d47cd88-7436-4e3e-8dee-738221be4b06"
        },
        "item": {
          "id": "d7343fe8-899e-427d-a221-8f1fbf3610d4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "083a8146-ae09-4004-81a9-b72c1b5f02e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69351dc6-93bb-42ee-af95-b898009b11b2",
        "cursor": {
          "ref": "4155a470-c5e9-451c-9e49-2a2ce95b8d79",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f78f4f26-4e66-4cfd-a9ca-b4ad5f6bb6d5"
        },
        "item": {
          "id": "69351dc6-93bb-42ee-af95-b898009b11b2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "284dc808-6b8f-40c0-bec9-d73c458c88ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df50b7b-4ac7-4a55-a6fb-b728543e1ad8",
        "cursor": {
          "ref": "3be5752f-9169-4f3d-a3dc-a1bfd44cb088",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ec22908e-810e-4029-8b56-843f7f21e1ee"
        },
        "item": {
          "id": "4df50b7b-4ac7-4a55-a6fb-b728543e1ad8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8c10e682-79b0-4cc7-8af0-919fd83d6939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50183868-e9fb-4f41-9573-bf27448f8ecd",
        "cursor": {
          "ref": "953c91b3-e24c-4091-846e-05c5317d7c7b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b4a40f81-fdca-4faa-a434-de2199117640"
        },
        "item": {
          "id": "50183868-e9fb-4f41-9573-bf27448f8ecd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "767e392e-ccbd-41e4-9282-f40b97704f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed28fab1-c0d3-4fab-9b8c-b596fa1b24f3",
        "cursor": {
          "ref": "909b8174-affe-42e8-9155-6d9b737ff69f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1d6c6245-b3b7-481d-a56c-13e7638f8bde"
        },
        "item": {
          "id": "ed28fab1-c0d3-4fab-9b8c-b596fa1b24f3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "63f4b61a-6a9a-4d14-83fa-37fd2dc07d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec5f745-6823-4afe-b3a2-e48d6f9d73c1",
        "cursor": {
          "ref": "24f3f66a-5c7d-407c-9cf3-33908db0959b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d2e724af-62c7-41d6-b354-cb4712859c2f"
        },
        "item": {
          "id": "4ec5f745-6823-4afe-b3a2-e48d6f9d73c1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bc2447c7-6e1c-4c48-bf18-331d18cae652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e49ff9-b75e-439d-8aba-0136d60aef80",
        "cursor": {
          "ref": "f51e32d5-4bd0-424d-84a5-07c973dd36b4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3254fb07-2c49-41a4-a4b5-c8f38aee4501"
        },
        "item": {
          "id": "e2e49ff9-b75e-439d-8aba-0136d60aef80",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2bb8fa90-2b34-4ced-b19a-117cb6b75297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bdedb2-c95a-4ac3-8c2c-e0253887209c",
        "cursor": {
          "ref": "c80759ab-d2fc-4b5e-8adc-979d60bea9df",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b18d978f-6f22-4c91-8d6d-a6bac7009eab"
        },
        "item": {
          "id": "a8bdedb2-c95a-4ac3-8c2c-e0253887209c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "76862527-3366-453d-93d0-561bc69ebb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d648c1-6fb7-4dab-9fb4-dba1ad1ad5cd",
        "cursor": {
          "ref": "76e84393-ee91-4753-bcf4-de74f054ba96",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "436cc9f6-bdee-41b5-a309-3cbce001a483"
        },
        "item": {
          "id": "76d648c1-6fb7-4dab-9fb4-dba1ad1ad5cd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "899cc19a-11c7-49ab-9817-6c6a69a2e218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c3ba86-9c17-4093-9b70-c74e2163464b",
        "cursor": {
          "ref": "1d8d19dd-32a4-4778-8a7f-c1cee8eb81bb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "66e46439-5aac-461d-8d27-7fe3906d7f4c"
        },
        "item": {
          "id": "52c3ba86-9c17-4093-9b70-c74e2163464b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f5f083a3-6f6f-45e6-820b-8265133da66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ae8e29-7506-451c-b134-22e84b288c30",
        "cursor": {
          "ref": "1e4cf613-535a-45f0-a56b-416adb925924",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "708a0093-3951-48b5-aa2a-60781406c5f5"
        },
        "item": {
          "id": "d8ae8e29-7506-451c-b134-22e84b288c30",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "96be313f-46b9-4a66-a342-d21bc373ae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5147fae5-f16d-4ae5-8e6b-4ebf9a1b474d",
        "cursor": {
          "ref": "63266155-b355-44c4-8ca4-656a1aa195d0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a2d1f694-3d2e-4d9d-8f8d-36d521fec803"
        },
        "item": {
          "id": "5147fae5-f16d-4ae5-8e6b-4ebf9a1b474d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "694b136a-7be5-4e75-9486-cfa380db6ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f41e0eb-3b8a-4cf5-8d25-6bd5781a3f4a",
        "cursor": {
          "ref": "b6a53adf-c3a4-40cf-85c5-2260737a21a9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a5445524-1483-4a9d-a95b-c441b2a091c1"
        },
        "item": {
          "id": "8f41e0eb-3b8a-4cf5-8d25-6bd5781a3f4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9848c79c-5671-4b8a-89b0-5cdc086886af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193279be-100f-4bbb-b3a2-b1dbc4f04400",
        "cursor": {
          "ref": "7fc77884-5f89-4a11-91b4-983b68c0967e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a094a888-3151-483e-9b4d-a834e4ff9574"
        },
        "item": {
          "id": "193279be-100f-4bbb-b3a2-b1dbc4f04400",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a224bd12-fce5-4c0a-a7f3-f176679a6516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd7f48d-8cf1-4fcb-8b99-91de503c2527",
        "cursor": {
          "ref": "8709296b-8b9b-47ac-8ba2-5d10c7b5485f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6f7a7231-32d2-45d4-8a06-5c16efa56328"
        },
        "item": {
          "id": "cfd7f48d-8cf1-4fcb-8b99-91de503c2527",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f9241ec2-68c9-4c18-811a-fc06e622f09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc6167d-e985-4445-b7e6-24c39fdd674d",
        "cursor": {
          "ref": "5374b85a-42d7-4cde-b634-74e1126351dd",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e6d6c4cc-1f51-444b-a9e7-3231fd19ec90"
        },
        "item": {
          "id": "cdc6167d-e985-4445-b7e6-24c39fdd674d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "07d77e10-a20e-42fe-af89-de2561a72965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b1bed2-b8f0-4701-96d4-de90eb72c41e",
        "cursor": {
          "ref": "c610ea0c-372d-4498-a1c0-4015c437f9d9",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9bf56b1e-ce53-4fbe-8286-0cae98d20492"
        },
        "item": {
          "id": "49b1bed2-b8f0-4701-96d4-de90eb72c41e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ce9d8863-a245-496b-b6ce-655d9cd58553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974dd9a0-0303-4d32-8615-e1f52bbe0f9b",
        "cursor": {
          "ref": "b5c31e1d-0cd7-4b67-8cb2-b6aa8c36d724",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5741930c-8316-4ddb-b197-0a01fdf2f38c"
        },
        "item": {
          "id": "974dd9a0-0303-4d32-8615-e1f52bbe0f9b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e99f0140-4ba2-4d6b-9e02-ce8ed93eb086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec14952c-72aa-4c97-9656-a19e97705419",
        "cursor": {
          "ref": "74516c62-c53f-413e-a8e7-dcfd62ccdacf",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "64a75ab3-b51c-415b-8377-27a1111035a9"
        },
        "item": {
          "id": "ec14952c-72aa-4c97-9656-a19e97705419",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eb2d0657-48bb-4155-abf0-7e3cdb65e09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5e667d-98bb-4871-b833-414d1ec477eb",
        "cursor": {
          "ref": "5d37dee6-64cc-4b99-9032-496236afc57a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "60456b43-9441-42b4-a13f-8e74aace1808"
        },
        "item": {
          "id": "cf5e667d-98bb-4871-b833-414d1ec477eb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b7ac0a11-6c9c-468d-bbc9-41fe30aa57e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383d7870-6121-4b7b-ad90-9c5c67acadcd",
        "cursor": {
          "ref": "bab5702d-7ad4-480d-aa0b-1c3530bc469e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "86edf47f-b113-4fcb-85fe-a1eb294d10aa"
        },
        "item": {
          "id": "383d7870-6121-4b7b-ad90-9c5c67acadcd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "07e4a654-359b-41e5-8570-8dd17a7407c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dc86a8-eda5-4a40-b39c-8afbc825d622",
        "cursor": {
          "ref": "0efd4854-3eb7-4aea-9005-b1cfa0526f5a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "889491ad-0af4-4e87-b607-7d17939e3f5d"
        },
        "item": {
          "id": "15dc86a8-eda5-4a40-b39c-8afbc825d622",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9b50a616-e67b-468b-945e-ee0bce77acf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5309c72d-607e-4577-b9a2-97ee6ffbe3aa",
        "cursor": {
          "ref": "6a03486f-d5cc-4fe8-b3d9-72d74711344c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "86934235-4ea1-4392-89ae-42b285683026"
        },
        "item": {
          "id": "5309c72d-607e-4577-b9a2-97ee6ffbe3aa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eb255e49-efda-40d4-a8bb-af52dc04bf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78285a90-d671-442d-8c52-94f4beab84d9",
        "cursor": {
          "ref": "a0b5cd85-011e-4822-a5bd-5607faf86053",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "76c63250-89c3-44b8-acbb-8feb79bcde1e"
        },
        "item": {
          "id": "78285a90-d671-442d-8c52-94f4beab84d9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "49c180c2-31ce-4c44-b25d-5958cb5a20d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16deebf-5e1c-4a0a-964d-43b588d3db29",
        "cursor": {
          "ref": "79b88849-4bff-4edd-b8ec-3f8c96046487",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d07d852c-3b7a-4bdc-ab7b-f24f70816881"
        },
        "item": {
          "id": "d16deebf-5e1c-4a0a-964d-43b588d3db29",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e3923eaf-3b73-4d22-9542-893574d43a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae9bc28-1814-4cc2-8aad-be8c7e18f357",
        "cursor": {
          "ref": "4380b0aa-02b5-474e-8e30-ec32b9587f2e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "497e8044-046b-4cdb-8671-37888ce12d21"
        },
        "item": {
          "id": "cae9bc28-1814-4cc2-8aad-be8c7e18f357",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ddcf9a71-d9e0-4395-8a1f-50d10879c7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0b2ce2-2e04-44d1-9c26-c384ece27436",
        "cursor": {
          "ref": "d15eb5df-ee8c-4209-a324-15e2a58d620d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ebfcd3a7-f48b-4eb5-adec-f127e4c20d81"
        },
        "item": {
          "id": "db0b2ce2-2e04-44d1-9c26-c384ece27436",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d3254cfd-05df-4ee2-8f29-56c371203872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9cd7cc-c5a2-402f-bb1a-1cfa48005033",
        "cursor": {
          "ref": "f00aef11-436a-4eeb-b14b-56f8661fc03b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2d882442-c7eb-4592-ace6-4d32479b2916"
        },
        "item": {
          "id": "7e9cd7cc-c5a2-402f-bb1a-1cfa48005033",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "65f32ed6-c6f9-4fd0-b1ce-68a53abd038b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c893cae5-e4af-4ca2-b716-84d3c03f2411",
        "cursor": {
          "ref": "cd55df1f-7400-45f3-a8c2-1bf30df4d095",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "00638898-46ec-47e0-9b3f-5afeafa83d44"
        },
        "item": {
          "id": "c893cae5-e4af-4ca2-b716-84d3c03f2411",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "19819d81-2e38-4f3c-8bf9-b32635d62f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e819fc-d560-44d5-8010-5d7c20b7f20f",
        "cursor": {
          "ref": "c42d63dc-c9d1-436b-b7d0-be14deffc152",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "177d1719-d5fc-491b-990d-46c3e4c417b4"
        },
        "item": {
          "id": "d7e819fc-d560-44d5-8010-5d7c20b7f20f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "861b75c4-a5a5-4140-a152-0449ba37b1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ffde3-cb05-4073-8099-f7496147232e",
        "cursor": {
          "ref": "2c536db6-7c67-4865-acdf-7f17cacf0b1e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "561684ae-2217-4ace-a5a5-dfab19912a13"
        },
        "item": {
          "id": "b57ffde3-cb05-4073-8099-f7496147232e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "338c5c40-c9f0-43d6-b84c-d98712ba6a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789c2619-38a3-4359-ba18-2af3a8592df7",
        "cursor": {
          "ref": "7dbb1129-8f9d-4a80-bc32-f1c4f4aa4736",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "be94f2d8-3137-4022-b614-2eae61072f15"
        },
        "item": {
          "id": "789c2619-38a3-4359-ba18-2af3a8592df7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9beaab17-d0d7-4a42-b94b-31e86fd9b473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5882159e-8163-4531-b48e-c4bd37bb90a3",
        "cursor": {
          "ref": "302a7c57-4554-4c8f-ba2e-d967760f5e09",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b8811023-8ece-4ba5-a2bc-e7a532e2c921"
        },
        "item": {
          "id": "5882159e-8163-4531-b48e-c4bd37bb90a3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6746cabb-1db1-4685-8601-997551b7a81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da106aee-746d-4c2c-9346-64aa640ee7e0",
        "cursor": {
          "ref": "41d8cde7-e5ba-4090-99e6-b8a48681aacb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fde7700c-4661-404f-b777-45fa5137681a"
        },
        "item": {
          "id": "da106aee-746d-4c2c-9346-64aa640ee7e0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f0ab2445-6a3c-4c71-b01b-388f2e62f770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30170466-9358-43df-8707-b86450500f6f",
        "cursor": {
          "ref": "c7fa8287-480c-4e84-aa44-997e50375391",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0e175a51-8e32-4a20-a581-9955cdfda83a"
        },
        "item": {
          "id": "30170466-9358-43df-8707-b86450500f6f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "53a8ddfb-f71e-44c3-ad77-7925f8dde2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa184f22-bf23-4ffa-beaf-ccbfdaa71208",
        "cursor": {
          "ref": "ea26a502-78e6-4467-ac98-ed22dff11a3c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5e74714b-8100-4d8c-b69e-cc601cb5d4d1"
        },
        "item": {
          "id": "fa184f22-bf23-4ffa-beaf-ccbfdaa71208",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cd11d27a-5220-45fc-a35a-07f47525f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e26bdb-5837-415d-9c1f-9a9b9adddb45",
        "cursor": {
          "ref": "e9db96f6-67b4-4c5f-96cb-d7605ed09e48",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "17c9b050-7b74-4467-aecb-81de8b910943"
        },
        "item": {
          "id": "a6e26bdb-5837-415d-9c1f-9a9b9adddb45",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2cfa2a83-ea65-4863-8d7c-73b7cf63de54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef164ba2-9db6-49cb-b0e0-ffeca830399f",
        "cursor": {
          "ref": "64a0df33-6207-4bcf-8cc3-4baafda598c0",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6c8ad24c-a58c-41cf-a00a-70df159a65b2"
        },
        "item": {
          "id": "ef164ba2-9db6-49cb-b0e0-ffeca830399f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "65a6db32-dd20-4e40-966b-df7893759ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4238b0c0-bdc8-4b84-8736-ef8862c836d2",
        "cursor": {
          "ref": "a10c48a5-0ad2-43cc-bde7-32c8722725aa",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f04b339d-5cd9-4f66-ab29-a2257d3f635b"
        },
        "item": {
          "id": "4238b0c0-bdc8-4b84-8736-ef8862c836d2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "41cca7a1-5c42-416d-af92-6e934d2da6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486dbdd5-221e-43d1-b2fa-8b50564ca8c7",
        "cursor": {
          "ref": "6c74fe39-c66e-4ac5-ad69-3faa2126cac5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a58560fc-61d1-4e3a-a9fb-db8b7807a62c"
        },
        "item": {
          "id": "486dbdd5-221e-43d1-b2fa-8b50564ca8c7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "177b9826-19cb-42f4-bfe1-777fe5d98703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a266f1-8b69-4a02-8fec-a10ea72eb9f9",
        "cursor": {
          "ref": "7db4f128-924c-4cda-be29-38b7063e7243",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "34ea5476-d2f7-42d4-b426-048c1a6546a4"
        },
        "item": {
          "id": "30a266f1-8b69-4a02-8fec-a10ea72eb9f9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "aba6b9b8-400d-4d29-b37d-28c6b252734c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39182c54-105a-4dcf-8ce6-72598e0eb0d6",
        "cursor": {
          "ref": "71e97bb2-5a22-44d1-977d-bb797cfee1c2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "98ffa58e-dcc3-4bb9-ac7f-4290d0d2b490"
        },
        "item": {
          "id": "39182c54-105a-4dcf-8ce6-72598e0eb0d6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3de1f7f4-1286-4039-b43a-cf14ae28c814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a3e258-24af-4f57-9212-e346c787012f",
        "cursor": {
          "ref": "3b45314b-d9c6-43f6-92d9-b21b5131a9fd",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c3d669ba-99bd-45a4-b231-41b8bf54410e"
        },
        "item": {
          "id": "95a3e258-24af-4f57-9212-e346c787012f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ed17c493-5dbb-429e-8cb2-51ca0573bf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a03252-ded5-43ae-8efa-e9ae8647cc88",
        "cursor": {
          "ref": "8dd95853-f426-4e55-b7c2-1033c5c65063",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0775d617-1a29-464e-ae26-afb3c4e055a8"
        },
        "item": {
          "id": "a3a03252-ded5-43ae-8efa-e9ae8647cc88",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1800a284-9440-45b6-af28-59b86adf3e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e4adf2-f4e0-4b80-8364-af4e4c324985",
        "cursor": {
          "ref": "2562e178-2143-4500-b5ea-0221712558c0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d26fc976-5f56-4de4-8ab8-fee7dfd39a9e"
        },
        "item": {
          "id": "d1e4adf2-f4e0-4b80-8364-af4e4c324985",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "39d27148-283a-4f29-8b6a-14127aa2a1f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e12c4b9-fcd4-4c82-9a3c-2d59db997a80",
        "cursor": {
          "ref": "8215e184-bb10-4487-a8b8-1579ff8c7505",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d6180ac3-bba1-41c6-9f48-3462bd16f010"
        },
        "item": {
          "id": "3e12c4b9-fcd4-4c82-9a3c-2d59db997a80",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "626c5925-4ed7-4513-8b14-3d4cd5b7a520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "af58d5ce-61ec-40fa-afcd-9699ec00aac5",
        "cursor": {
          "ref": "62f2b878-dff3-48d4-b2ed-cfce70c8dc16",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5dbf3c2e-fddc-4bdc-b8a8-3cdf259a1c9b"
        },
        "item": {
          "id": "af58d5ce-61ec-40fa-afcd-9699ec00aac5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "38c8c1fa-22fd-4ee4-b5a0-d47b8ca1ff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8a7916a3-dd69-411f-8d36-d18536fe7095",
        "cursor": {
          "ref": "f723e2be-dd0a-4c2a-be91-869e8564c346",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4283cf0e-1ae4-4030-b04a-aab42d48851b"
        },
        "item": {
          "id": "8a7916a3-dd69-411f-8d36-d18536fe7095",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "29f96210-8d35-4840-8bc8-4030ec4c59d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6a7784c3-75c1-4bbb-921b-5a1b6c09106a",
        "cursor": {
          "ref": "4a3f45b1-2095-4e4b-aac5-f470456d715a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8cc18546-bf31-4633-84f6-2fa1ae5d64b7"
        },
        "item": {
          "id": "6a7784c3-75c1-4bbb-921b-5a1b6c09106a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "aecf10dc-fa6d-44ce-a13d-5c33010709ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4cdf0afa-c0d5-431c-ac79-d9e760311fa2",
        "cursor": {
          "ref": "744525c0-bc16-4cc7-916d-e6a62f0a6757",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c44b9809-9116-49c4-886c-f607a35de4b6"
        },
        "item": {
          "id": "4cdf0afa-c0d5-431c-ac79-d9e760311fa2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b9d4649c-d254-44bf-929e-c30a8fd4218c",
          "status": "Created",
          "code": 201,
          "responseTime": 9569,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2995e647-907b-48ba-adeb-97d96d1d7f01",
        "cursor": {
          "ref": "f638a98e-bf6f-4058-86ee-28e06bc249db",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8973d047-6f05-40fc-ab29-73e2a3e24f3a"
        },
        "item": {
          "id": "2995e647-907b-48ba-adeb-97d96d1d7f01",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d5299a6b-7bd9-4473-b83d-9791e672d8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "436516af-168b-4ac4-b8cd-159fba6958fa",
        "cursor": {
          "ref": "29f78941-963d-4c9d-a7c4-6dcbca7b061c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "73fb63fb-590f-445f-8a98-34f74467343f"
        },
        "item": {
          "id": "436516af-168b-4ac4-b8cd-159fba6958fa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6c91ea61-88cc-4a32-9c67-76745165c4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b2251144-066a-4c82-9cf0-288d8b6cc498",
        "cursor": {
          "ref": "68012cbc-fbb2-4cfc-959a-e4af39d62e83",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b993045c-8f51-42a9-9631-4fe577345dbe"
        },
        "item": {
          "id": "b2251144-066a-4c82-9cf0-288d8b6cc498",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7a43f8b3-6d09-4739-b722-a0a6db4d4609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f110322a-cc37-4674-b79e-fdadd80c5e5a",
        "cursor": {
          "ref": "27e75e32-c509-4f83-a4f8-7d6ef677cc20",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d7cba961-7e69-46d8-a860-7a04272a068f"
        },
        "item": {
          "id": "f110322a-cc37-4674-b79e-fdadd80c5e5a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9e3a94ae-6e76-4eb4-a52a-2216a8abc061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4281204d-c643-4948-85df-065b2444dbd7",
        "cursor": {
          "ref": "06de5fb9-711a-433d-93bf-59f39803d840",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "059fae60-22f0-4f08-be01-7f81d4f4fb35"
        },
        "item": {
          "id": "4281204d-c643-4948-85df-065b2444dbd7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "55c0bb98-b9ec-48f6-ac02-7f54badffb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15f8e41-4b68-4042-9082-8b3140850d76",
        "cursor": {
          "ref": "0b5ac627-7bed-4918-9fff-6b8d1ab9d6d6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "54f1a3ac-1662-4777-af1d-1288975d843c"
        },
        "item": {
          "id": "a15f8e41-4b68-4042-9082-8b3140850d76",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7fc86b51-55b6-43d1-bcfb-0b16da4be849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67071517-5d33-4788-ba30-e2e39e1c7c6d",
        "cursor": {
          "ref": "b3249b4a-b71f-41e6-9c00-be5d3798d8da",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d12ba58c-87c7-41fc-85fa-9e256d55a226"
        },
        "item": {
          "id": "67071517-5d33-4788-ba30-e2e39e1c7c6d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c7a5b662-8e2c-4017-93e7-d455848d858c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4308bf22-49b3-4cee-a764-8cae24eb232e",
        "cursor": {
          "ref": "bcabf924-40c8-458f-be7c-aaf2f0c58b4e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "aef23252-7b90-4478-bedf-7d64a2694433"
        },
        "item": {
          "id": "4308bf22-49b3-4cee-a764-8cae24eb232e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dda7efb8-e63b-45a0-bb41-d8d766fc52bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bafaab-f398-404b-b932-fd0ef0788764",
        "cursor": {
          "ref": "b5c75f96-3900-4496-b780-114352bf38e4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "598139fe-23e7-4ff8-9e71-b5778e53f7b1"
        },
        "item": {
          "id": "07bafaab-f398-404b-b932-fd0ef0788764",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e4c0d2e6-5773-4269-b812-4974c8a8803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82129285-d070-462c-960c-040336d9db9f",
        "cursor": {
          "ref": "d1bad371-b61b-44b8-b37d-56def1627892",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a92aa2ad-6cc7-4f3b-9ea9-0a85dc6b635f"
        },
        "item": {
          "id": "82129285-d070-462c-960c-040336d9db9f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "acdd05de-e99e-44c6-90fe-c84142c1d2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d0b2b0-a4a1-47e8-bc49-f791d47b7bbc",
        "cursor": {
          "ref": "0c96adef-6174-4a29-b90a-6767dc759908",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c559ebaf-d533-4c3a-84d2-d0ab116abcc1"
        },
        "item": {
          "id": "42d0b2b0-a4a1-47e8-bc49-f791d47b7bbc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "80417a7b-0c11-437d-bd04-6581a70c6e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738bb767-fb3a-4cab-8321-b131eaa94e62",
        "cursor": {
          "ref": "c1769857-ae63-492f-a4ab-86c603f2e889",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6e4ea142-5435-46d9-8029-1cffb8294e28"
        },
        "item": {
          "id": "738bb767-fb3a-4cab-8321-b131eaa94e62",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ef6f783f-a7f9-42ff-86ee-d4194e3c34b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837da268-b384-47b8-ad97-f3f98a3cf414",
        "cursor": {
          "ref": "4fa29246-a7d4-4100-91c6-f54ff2b44ff8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b4550322-a042-4d13-b4ab-17bf5f43f39d"
        },
        "item": {
          "id": "837da268-b384-47b8-ad97-f3f98a3cf414",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a825616f-27f1-4ee8-96d8-dcf44aa4e496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cd957c-68ef-46fb-8dff-cd3704a89324",
        "cursor": {
          "ref": "3da6e5ac-36bb-485e-a28f-91be9af330d1",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cf60ef92-1ff9-4e6c-9948-3640d9339f03"
        },
        "item": {
          "id": "b0cd957c-68ef-46fb-8dff-cd3704a89324",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3e073e85-8aa1-4061-920c-4c9b3e195e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4148bfdf-9a83-4757-a639-70afbb6a8278",
        "cursor": {
          "ref": "6e765321-dc26-4183-8bb2-2ebc5fd69200",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "625238e4-1878-4ec5-9cd1-622e287d0284"
        },
        "item": {
          "id": "4148bfdf-9a83-4757-a639-70afbb6a8278",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "addc1388-ca96-49b5-9db7-6a6961d5f156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3b0b92-4d7f-422b-9c90-8b2ccaa163c4",
        "cursor": {
          "ref": "9595b78b-f32f-4e75-98ac-e5cafb464fd8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "44dc65c4-d94a-45d8-9f88-30caca6896db"
        },
        "item": {
          "id": "ff3b0b92-4d7f-422b-9c90-8b2ccaa163c4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "672f46da-73d0-47c0-abc5-0f64a90535d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ec78ad-ee8c-4511-96e2-33c30a84b423",
        "cursor": {
          "ref": "294d78f8-b627-44c9-a36b-372a0d59038e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0238a5ee-b007-4232-a55d-d6a824db0787"
        },
        "item": {
          "id": "e5ec78ad-ee8c-4511-96e2-33c30a84b423",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "979d6a70-342e-4841-993a-d69b3eff2157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef244a4d-aa3d-4a92-be41-9406341909f8",
        "cursor": {
          "ref": "073f40d6-44e6-4b3e-8c8f-8c8aceaebe35",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0cc6a0b4-3f7e-43a0-98ee-75ed4ee883ae"
        },
        "item": {
          "id": "ef244a4d-aa3d-4a92-be41-9406341909f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "02621ef3-274c-494e-bd2b-2a5166762474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fea49b-b275-45e3-8d7b-58be2893ef97",
        "cursor": {
          "ref": "faad11e8-cd5b-4fc7-a164-22177ee35539",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cfab4055-0a21-41c7-bca6-3410eaeffde0"
        },
        "item": {
          "id": "58fea49b-b275-45e3-8d7b-58be2893ef97",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5cd7af8d-3715-42b9-ab92-480a2e68f9fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "aa970f4a-d6fd-48bd-be89-cf91007dae5d",
        "cursor": {
          "ref": "758f6dd2-c96a-4258-956d-1d51b20a617d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a0c111d7-e784-4344-aadb-dbbfbc5823b3"
        },
        "item": {
          "id": "aa970f4a-d6fd-48bd-be89-cf91007dae5d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51fddc1d-e970-4810-8880-abf8c58e8c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afaac16-8cc2-43aa-b142-06a7e3cbd2db",
        "cursor": {
          "ref": "b4862037-1c16-49bd-ba32-10c8072ce486",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "62aeb767-0bcf-484e-80b7-3145b1d659d0"
        },
        "item": {
          "id": "6afaac16-8cc2-43aa-b142-06a7e3cbd2db",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "21a944b2-8fcd-48cb-be24-3ce7f9b71fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b31f60-a5f9-430d-b4a2-a39eca1b2a03",
        "cursor": {
          "ref": "d2f8177b-5a76-4c79-a540-d7c50bdaa306",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "979451e1-a9d5-4bc1-a851-27da1436bf48"
        },
        "item": {
          "id": "31b31f60-a5f9-430d-b4a2-a39eca1b2a03",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e3a64510-a885-4ed9-8062-118989c1b017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39f7fc0-141a-4838-98a8-6178c61d7a21",
        "cursor": {
          "ref": "ade508fc-ebc2-4be5-8ff0-b2dc439d82ce",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2190a04e-ae7b-473c-9879-dd196a746317"
        },
        "item": {
          "id": "b39f7fc0-141a-4838-98a8-6178c61d7a21",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2b2ef02b-8c8d-4865-8b1d-ad17c9b552d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cb5118-8ef9-4307-a2dd-bcac515682e8",
        "cursor": {
          "ref": "43d76e8e-f404-4ec5-a648-51c10e4895a1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f2f13f33-2499-4938-8a24-a83edf99e467"
        },
        "item": {
          "id": "a7cb5118-8ef9-4307-a2dd-bcac515682e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "94a19813-0b35-4faf-b506-a3f720bcbf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e9476b-1dea-4456-b720-a2b8f516184d",
        "cursor": {
          "ref": "357cc29c-ea0b-4487-bda2-550e24cf35e1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ddec2a0e-5eb4-43bd-b6f5-4e683c8d1aea"
        },
        "item": {
          "id": "76e9476b-1dea-4456-b720-a2b8f516184d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ebe72929-cbd8-4969-87f7-403c06ca08bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9e4f42-f956-4e47-8844-44c40bc10476",
        "cursor": {
          "ref": "5a3983b9-8aa1-4bba-b182-356ad56b08f4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e1f58344-d864-45c8-a679-d3314c170684"
        },
        "item": {
          "id": "aa9e4f42-f956-4e47-8844-44c40bc10476",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "60eacd57-05a2-41cb-a78a-b9132a8b9209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb447784-06cc-4a37-a36a-4e2c5f5de4d3",
        "cursor": {
          "ref": "636c7004-48c9-499c-81ab-df4a78d5c140",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6ea1c68a-cc25-4b17-ba00-6f8390b5c501"
        },
        "item": {
          "id": "fb447784-06cc-4a37-a36a-4e2c5f5de4d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "074710ad-a443-4b13-aa20-5311992d192e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "593360e4-fda1-4f6a-a4ba-02cbc445c207",
        "cursor": {
          "ref": "4bc322aa-e3a7-4359-aa3d-d178b4d41c45",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "43e91123-d143-4ff3-91ff-0f06512d9eb7"
        },
        "item": {
          "id": "593360e4-fda1-4f6a-a4ba-02cbc445c207",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6a8c69f-6511-4617-91b3-6b872466f3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591a613b-1915-4888-a3ad-e42993f71477",
        "cursor": {
          "ref": "35d17e15-a080-4370-ad3f-0d27f54fd47a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "714b4770-bad8-4d1a-9932-3aca281ac7a6"
        },
        "item": {
          "id": "591a613b-1915-4888-a3ad-e42993f71477",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "61bcecc1-167a-4f2b-adad-87115e51b5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802e5709-9477-4cea-87c1-f82b5ad3dedd",
        "cursor": {
          "ref": "de95defe-f5da-4879-a865-734326b0a408",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b0372a8a-0c22-4a66-bca7-62250eb08f9a"
        },
        "item": {
          "id": "802e5709-9477-4cea-87c1-f82b5ad3dedd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "12e0279a-6756-4582-b888-bc26dcd12e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34ab49-cc92-4f40-8176-825d1e305ea6",
        "cursor": {
          "ref": "eed659fa-ca9c-4c61-961d-b31d9106ff9d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f0e61419-bca0-4a01-989b-da10245aa54c"
        },
        "item": {
          "id": "bc34ab49-cc92-4f40-8176-825d1e305ea6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "636fb236-4e53-45bd-8eff-3f492b72674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b70f656-2f7d-4f43-8434-189b0aec297e",
        "cursor": {
          "ref": "f93ffea5-5fdd-4564-9dba-5a5eec54ceb8",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0bd761c5-970e-46e0-b89e-55d56476f588"
        },
        "item": {
          "id": "9b70f656-2f7d-4f43-8434-189b0aec297e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "426fd200-d52d-416d-9447-0ec5083e7062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ec45cc-b81f-4cd2-a3b1-0e3786781687",
        "cursor": {
          "ref": "21a7ae17-c71e-48e1-b8cc-863a33e1f855",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "313d2490-f3f8-44c2-924f-13874b7558f1"
        },
        "item": {
          "id": "87ec45cc-b81f-4cd2-a3b1-0e3786781687",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6d42db42-bf05-49ab-b242-18c051cc1225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b50a7e-bcb9-4fa4-a393-aa520335eeb3",
        "cursor": {
          "ref": "d898447b-8a4b-49d4-9839-1271eb8d6d7f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fac8b83c-34d9-4863-b590-f8fd5fe26355"
        },
        "item": {
          "id": "c8b50a7e-bcb9-4fa4-a393-aa520335eeb3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cdcad609-faaa-4b85-a206-9885a454be5d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 105,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3caab381-b2c3-4307-b4f4-b6de6fe20865",
        "cursor": {
          "ref": "4a27673a-10ee-4115-b135-763a37ae39d5",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9a84ba3b-15da-465d-8d85-402d84751b26"
        },
        "item": {
          "id": "3caab381-b2c3-4307-b4f4-b6de6fe20865",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7f772527-5ed8-4759-82d3-89185f9f7847",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a51d92-fb83-4227-87f4-b83cb1b08718",
        "cursor": {
          "ref": "f0f010c9-29e1-4daf-be9e-278922a64fd3",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5cd555aa-7de9-4a31-aafb-cd8b6a7c3277"
        },
        "item": {
          "id": "27a51d92-fb83-4227-87f4-b83cb1b08718",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6631999e-4571-4d91-8f81-4b246698151a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8a9490-d58f-4eda-8bfa-a210518a775d",
        "cursor": {
          "ref": "d9a74b7e-7922-44e6-ba35-cac09c0dc23f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "af3d7fef-e4e8-46a2-97c3-6bbb3b2346f6"
        },
        "item": {
          "id": "4e8a9490-d58f-4eda-8bfa-a210518a775d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7bf4751d-55a9-4376-9242-c6ee4fbca64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3127ac6-0394-417a-bf8e-34e331b790ed",
        "cursor": {
          "ref": "463a2749-c548-4a2f-a266-dd4ec36eb2ac",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "19965f25-6909-4296-8533-f8f030646e7b"
        },
        "item": {
          "id": "b3127ac6-0394-417a-bf8e-34e331b790ed",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3c657f9-9eb6-45af-9e40-61941a50e8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ec2a1b-5476-41bf-a6c6-4ba2ce2cff07",
        "cursor": {
          "ref": "8a74f67b-9a63-4e2b-8a46-94b0256467ed",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9a786fb3-d7f7-4932-85c5-a9063c4392b9"
        },
        "item": {
          "id": "b1ec2a1b-5476-41bf-a6c6-4ba2ce2cff07",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f161c15e-7963-4445-afcc-3a5a2fc3275d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a98b2fc-905a-4033-a09a-8d5b961cca14",
        "cursor": {
          "ref": "0b01f9a1-825d-4d3d-a2f0-b58a0989a110",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b56cf849-e7d7-4b86-8c9f-4c40d983b666"
        },
        "item": {
          "id": "3a98b2fc-905a-4033-a09a-8d5b961cca14",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d7f91157-38a2-4a3d-81af-dc1cec7a8851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa0877c-0b3c-4123-ab17-0204b9863011",
        "cursor": {
          "ref": "a57c37c5-4ed1-473c-ac5b-b3b9e34e30aa",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b45acc8b-3cf5-4862-82ef-e1e298ffa95b"
        },
        "item": {
          "id": "2aa0877c-0b3c-4123-ab17-0204b9863011",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0ad77cf2-83d7-48e8-afde-e22dbf97a621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ae2baf-217d-4edd-a972-e6defaffd2d7",
        "cursor": {
          "ref": "0264ffcc-4f5a-4399-a7db-0d758ba2c376",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "40858459-50f7-468c-a1f3-cb6e0a4d7241"
        },
        "item": {
          "id": "42ae2baf-217d-4edd-a972-e6defaffd2d7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "29511fae-ab54-4d6d-bd09-33f7c5651d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee32150-6009-4468-ae15-6e79dc9c9209",
        "cursor": {
          "ref": "47278aea-6e96-4568-94cf-caed2780871e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fa688b6d-1369-445e-8f8a-cfb75e25b043"
        },
        "item": {
          "id": "6ee32150-6009-4468-ae15-6e79dc9c9209",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1de34346-6345-41fa-9c97-7c25bec0077f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2aa6c6a-e870-49f6-83db-fde1fd923a91",
        "cursor": {
          "ref": "9ec88151-3af6-42f2-acd5-e896c3a5bd55",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "675efe5d-a132-438c-a093-e2161da337ef"
        },
        "item": {
          "id": "d2aa6c6a-e870-49f6-83db-fde1fd923a91",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b5ac8aa0-ce6d-4cab-b886-c40fa50f78ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc97232-adb9-4882-a7a1-a29c936e6b54",
        "cursor": {
          "ref": "a845d167-9240-4c4f-809b-e2173120a0e3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e5e4cc2c-24b9-444c-8824-3b79927700fd"
        },
        "item": {
          "id": "bcc97232-adb9-4882-a7a1-a29c936e6b54",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c2288ffa-7e18-402d-a2d1-4ff3d107d731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42458352-4dcb-48f0-b7b0-a209d103f9b5",
        "cursor": {
          "ref": "c84f3863-2d1e-4d43-9212-ba3e48353ac2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a0189ce3-5209-4859-9cc9-f0c5981e1cea"
        },
        "item": {
          "id": "42458352-4dcb-48f0-b7b0-a209d103f9b5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5580adbb-0f39-4461-8ae7-ff4d1fd48b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cad82ea-a032-4e93-a846-12473d5211b9",
        "cursor": {
          "ref": "46983f3c-1bea-4aa2-ad91-050a3236b7a1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0522dd86-1f0c-48e3-9e30-c47f8ccf40f2"
        },
        "item": {
          "id": "4cad82ea-a032-4e93-a846-12473d5211b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "34eda229-0b1f-45ab-b82e-094abaa61a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9b401a-3609-4c64-ab1b-c613e86e7066",
        "cursor": {
          "ref": "d6f3dd34-4646-4c26-8ca4-32203f5b58df",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "05efaaea-2ece-4d83-b19e-069056a667fb"
        },
        "item": {
          "id": "bf9b401a-3609-4c64-ab1b-c613e86e7066",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "75fea398-d823-43f2-8f6d-da1f4756030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4459ab-91c9-446f-ad2d-f56731a14645",
        "cursor": {
          "ref": "aef89212-2d68-4171-a5ad-ccb3feaf8f69",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "13773e37-c2fe-4db7-b625-a3eb625d0641"
        },
        "item": {
          "id": "ad4459ab-91c9-446f-ad2d-f56731a14645",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3338ee67-a6f1-4d43-b013-f05db8726662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c67a7a-a22a-4fe4-a67d-73ed42cb6042",
        "cursor": {
          "ref": "7e016fae-7444-4d7f-bb62-fa4973147b76",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a227a6d3-2bd0-4662-a68c-faec7a37d290"
        },
        "item": {
          "id": "57c67a7a-a22a-4fe4-a67d-73ed42cb6042",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "62167579-ff16-45a8-9182-7d4a8607cec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8264dda-5b12-4251-934a-23577bde483c",
        "cursor": {
          "ref": "6a1efbb5-9008-46b0-ae0b-3d61fe36675b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7b538fd7-00a0-46e0-bd1e-eeb7fcbb1759"
        },
        "item": {
          "id": "a8264dda-5b12-4251-934a-23577bde483c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3f12bfc4-b498-4e65-95d7-97d4cb6ab0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b78138b-115a-4a71-8295-52480680fd97",
        "cursor": {
          "ref": "17c419f1-935c-4b32-ad75-7d0ed5cfdd55",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9e3f0d26-5d6c-4930-84c5-78cd087bc9d4"
        },
        "item": {
          "id": "7b78138b-115a-4a71-8295-52480680fd97",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "31588866-0e27-413b-87e4-52921199c6bf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "843d3535-8305-48a9-a644-aaa8fe152527",
        "cursor": {
          "ref": "adca8845-081c-4c55-8fdf-994817d269a0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1148cd92-bca9-4f85-8d05-2974dfdba3df"
        },
        "item": {
          "id": "843d3535-8305-48a9-a644-aaa8fe152527",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "35cf3b60-fb83-465a-bed8-d2d42d0bc09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27777c3-c266-4412-a35f-009c98cda08e",
        "cursor": {
          "ref": "541cbaf5-a979-4a27-91d6-e00ede912b13",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e4cfbdac-ebcb-42cb-9fd4-461943339332"
        },
        "item": {
          "id": "b27777c3-c266-4412-a35f-009c98cda08e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1d46aaf3-6200-444e-a5eb-4bdb2b4764c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8a86fb-3332-4ac8-aff0-37fbf1a35d24",
        "cursor": {
          "ref": "d780236a-cf7b-45dc-bafa-ca83b3397cee",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bcf50ed8-805d-4da3-89bc-605d9a763f68"
        },
        "item": {
          "id": "8a8a86fb-3332-4ac8-aff0-37fbf1a35d24",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8c858373-6110-4a4f-89e7-e32b38c9adc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619ae003-0fdc-4014-9ff3-237dfa613c4f",
        "cursor": {
          "ref": "58043a61-612f-4b12-9248-cfb68c30d681",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "95a59b12-e705-4afe-991d-f0e3de3033ec"
        },
        "item": {
          "id": "619ae003-0fdc-4014-9ff3-237dfa613c4f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "41c5c901-08bf-4213-ba35-51d68477f383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ec627f-1a64-4782-8cc6-106e97fcf239",
        "cursor": {
          "ref": "08917218-e618-463b-a7b5-21a5056f77e0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cd8b2396-6551-4a81-b2c0-955ae4fa85f3"
        },
        "item": {
          "id": "09ec627f-1a64-4782-8cc6-106e97fcf239",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f363328a-4b56-4416-806c-5eaa0c23c6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185da1e2-ad80-44a6-bd25-e7f13ac7e8fd",
        "cursor": {
          "ref": "ceaa57c9-a757-4d54-85d1-a0a73c24d727",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "38fcbf4f-62f6-4fa5-b87b-8c5510dfdc63"
        },
        "item": {
          "id": "185da1e2-ad80-44a6-bd25-e7f13ac7e8fd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "283fc78f-94bd-4ded-91bc-d97cdc0eeff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f0c977-18da-497d-83ff-8dbdaced722e",
        "cursor": {
          "ref": "d9a9bbc4-e0d4-4f95-a56e-8945065386cc",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "da739ac1-1997-42e5-852c-ddd48d24e572"
        },
        "item": {
          "id": "45f0c977-18da-497d-83ff-8dbdaced722e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "104d1eb0-bcc0-4213-af91-4a9cb42c88ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cba138-b11b-4189-9b84-cbcc22bd0ed9",
        "cursor": {
          "ref": "c11c433f-317e-4746-b8a5-04f10374ec8e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "040c4320-bc8e-4578-8cb1-ad7a23d60fe5"
        },
        "item": {
          "id": "78cba138-b11b-4189-9b84-cbcc22bd0ed9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b6a02200-4250-411c-83a1-c37dd088ad1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "086027ff-56f7-4696-8112-20596b6f549e",
        "cursor": {
          "ref": "fdf5de10-d6a8-48e1-af46-2ac2059bbb80",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1d9e221c-4c04-4220-af29-7173c0b29687"
        },
        "item": {
          "id": "086027ff-56f7-4696-8112-20596b6f549e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b00098f-aa2e-4ade-b996-a748750bf68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71f8f3e-7abd-4efd-b83d-9b0fa937f313",
        "cursor": {
          "ref": "34b9239e-b2fd-4a6f-bbdb-146dc34e033e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ea98ec44-fd54-4cc7-b7d3-5437da905c56"
        },
        "item": {
          "id": "b71f8f3e-7abd-4efd-b83d-9b0fa937f313",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8dfa4c26-9a78-484d-bd85-318cb7c1c7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a0a3e3-84a7-402b-907d-08b0a133f03d",
        "cursor": {
          "ref": "a4a8871f-1388-4cbc-bbc7-34b061752286",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c108679-1541-46f4-a17e-f8941a88ca62"
        },
        "item": {
          "id": "09a0a3e3-84a7-402b-907d-08b0a133f03d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "867b203f-f2b2-4e4c-a566-f33ff561a5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a100d0-f1d1-4872-807a-c755af7dd906",
        "cursor": {
          "ref": "08c8928a-8d47-438e-8d67-3b01d51143b2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6fd93de9-17ed-4b97-8207-5f8f1dd51101"
        },
        "item": {
          "id": "40a100d0-f1d1-4872-807a-c755af7dd906",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b3df86bd-4f3e-47c6-9321-2be5f5e87ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5661497-4d4f-4ef2-bf29-f708839780a0",
        "cursor": {
          "ref": "17e7a307-6924-4922-8bee-264f4f607522",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "233f031e-f737-4414-954f-7a134ff3a65f"
        },
        "item": {
          "id": "c5661497-4d4f-4ef2-bf29-f708839780a0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "97aa554a-5f80-4296-bc0c-019cef258211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1d28c6-61b6-44c5-a4ef-9e89e2b79d06",
        "cursor": {
          "ref": "7afa441b-af81-4f43-80fb-7adc7ba6404c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a314e22e-869c-4911-ab45-8820a069efc6"
        },
        "item": {
          "id": "9a1d28c6-61b6-44c5-a4ef-9e89e2b79d06",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9eb6ac5a-b620-41c9-8ff1-2161cf60b5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57a9d41-95e1-4a3d-af4d-2fe949fc86cf",
        "cursor": {
          "ref": "dd9f2372-d755-41f8-b6af-81ac14824517",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dc2dff03-8325-4447-a364-9eae95913100"
        },
        "item": {
          "id": "a57a9d41-95e1-4a3d-af4d-2fe949fc86cf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6358bc38-d2fd-48f0-94a2-d5ef8459b350",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "93d4f87d-e4f2-4e1a-b057-c10362c9bd0d",
        "cursor": {
          "ref": "439e8373-60db-48fb-80c2-289d4e2424f0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1117449c-c4fc-418f-a5d1-7b411898fcfa"
        },
        "item": {
          "id": "93d4f87d-e4f2-4e1a-b057-c10362c9bd0d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a731c5e8-23bc-40ad-8f96-9fec14014934",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "9de84cc5-6623-4765-a6dd-3461733e60d4",
        "cursor": {
          "ref": "86297834-1e37-49dc-a536-fa72c0c84843",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d14414c7-f487-4f32-8d87-63fe4a0eafeb"
        },
        "item": {
          "id": "9de84cc5-6623-4765-a6dd-3461733e60d4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9abe06b2-fc1a-4926-9898-a2dfd0f1c0fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "c5ab2fe2-cd3f-4f36-9174-22e50be006df",
        "cursor": {
          "ref": "c6973a65-7813-485d-a642-3a32fbf0bac9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "39907216-2492-4725-8230-f2e1ee8f00a4"
        },
        "item": {
          "id": "c5ab2fe2-cd3f-4f36-9174-22e50be006df",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e02f2a1e-ff55-4a09-9000-c1f7ee2ae886",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "cc7bc407-6029-4df1-a1f9-16bb17bea21a",
        "cursor": {
          "ref": "503cf850-83bd-4eed-a464-51e2c7f2b0f8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c0113551-c33a-4b75-bf09-cc5dfef37426"
        },
        "item": {
          "id": "cc7bc407-6029-4df1-a1f9-16bb17bea21a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5886de38-9b16-4f50-861e-730851770c21",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "896979e0-b957-4131-b689-ba248ab009f0",
        "cursor": {
          "ref": "b22f173c-3a59-461d-b7f5-1c29cd67d499",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "26914d3a-9bd3-4e71-bc6e-d9512370e982"
        },
        "item": {
          "id": "896979e0-b957-4131-b689-ba248ab009f0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "12d96205-2536-4541-8347-c076b8239fe8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "fcadcd8e-6f52-4b36-9fb1-a12aa378fe41",
        "cursor": {
          "ref": "f44936cd-5021-4d96-ab93-c38012626a6f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1a58d0c2-aba7-4a85-838c-b2cce0d67fa5"
        },
        "item": {
          "id": "fcadcd8e-6f52-4b36-9fb1-a12aa378fe41",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "91ce9360-1412-4fd0-a363-233f8f85a20a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d49ef7-2ab6-4a47-a8bb-4a858b2dc68e",
        "cursor": {
          "ref": "b7d6e43d-0d95-4b83-91fd-023f07e582ef",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "734317eb-7754-4c36-b92e-1aa4e45afc58"
        },
        "item": {
          "id": "c2d49ef7-2ab6-4a47-a8bb-4a858b2dc68e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f5f58cb5-9f77-4a13-90c4-967516fd2e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f607fa-446d-45de-8125-9c8cb0bbe1e6",
        "cursor": {
          "ref": "97a46d47-660c-4053-b4a3-12f336a7efd3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "93e70d36-f83b-428a-be41-dcb94a48c3bf"
        },
        "item": {
          "id": "d5f607fa-446d-45de-8125-9c8cb0bbe1e6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "786eeb0d-e02b-4178-88d4-1a683e0208be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dfafa1-1770-4839-b951-9d65fc3e8ee9",
        "cursor": {
          "ref": "b5ec1d1a-0571-4885-9cd8-622ff96c4800",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "17651941-a395-4c10-8508-c4873717d820"
        },
        "item": {
          "id": "c3dfafa1-1770-4839-b951-9d65fc3e8ee9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a96a2b00-ca22-4437-886e-20ecf012e39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1bce38-0976-4f54-b0fb-474801b4a4d8",
        "cursor": {
          "ref": "f58a65f4-5600-4b4c-8834-55f757a0425b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c2a4444d-2042-4089-bb41-8b88f5187513"
        },
        "item": {
          "id": "1b1bce38-0976-4f54-b0fb-474801b4a4d8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "835c4eba-5bc3-4193-84e3-31b663fbecd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0daacdf-8c84-4b8e-842c-04c0bafcf38f",
        "cursor": {
          "ref": "01a7d115-1f23-4d4b-8a8f-20a5cf280385",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "71c5f497-8ce3-4d8a-b1db-0bb66bfa72af"
        },
        "item": {
          "id": "a0daacdf-8c84-4b8e-842c-04c0bafcf38f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7ca3589a-95f2-4ac1-aa61-b3a49f5807a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4f979d-5a3c-473f-9126-3b3aafa3b5b7",
        "cursor": {
          "ref": "3d87288e-4f0a-454f-8b77-31b1a55aed96",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bf9b0f30-deef-45c2-889a-d69d4adbd0f7"
        },
        "item": {
          "id": "1e4f979d-5a3c-473f-9126-3b3aafa3b5b7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6fb019c9-52cb-4ca9-b0e0-67378688dbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a134d9e7-cc8b-4bd7-af59-48f95d6d194b",
        "cursor": {
          "ref": "324d20aa-a8c7-490b-b8fc-f1266eea1c21",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d85f5750-6def-438e-ba8c-fed94b41e451"
        },
        "item": {
          "id": "a134d9e7-cc8b-4bd7-af59-48f95d6d194b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f2cddc5b-fbfa-4964-84cc-33bb44e9be25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a18d1c-38e1-425d-82e8-778f2db563d2",
        "cursor": {
          "ref": "7112676b-58ed-4a0e-8599-fb02b72a6462",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "998e8843-6e15-40c6-af15-93fba45cb7ff"
        },
        "item": {
          "id": "d6a18d1c-38e1-425d-82e8-778f2db563d2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1599883d-7331-48be-a1b3-1de2da8be40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b76538-2371-43c1-81b3-81e8a17130ef",
        "cursor": {
          "ref": "3e958b56-88f8-4d43-a0d3-ea2e1f747155",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a0ccf41a-458e-4bf4-9b4f-3b0b103b62ce"
        },
        "item": {
          "id": "62b76538-2371-43c1-81b3-81e8a17130ef",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "43f0bca7-2fd0-4777-8081-4e3590b84a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678fe8d6-c244-4369-8d62-8583e8db54b9",
        "cursor": {
          "ref": "a269b3d6-f27c-4600-8eae-7f009351207a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ab75db10-e358-4dc9-b61c-33beb9da6008"
        },
        "item": {
          "id": "678fe8d6-c244-4369-8d62-8583e8db54b9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d71d8000-c72c-4315-83c5-54e99a05f5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080a5148-9dd7-4d84-a024-c2a83afe11a4",
        "cursor": {
          "ref": "eed6986c-5f20-441c-b92a-5dfa5fd55dfb",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "87412d30-1431-4e57-b2ee-25d64c1ac5b7"
        },
        "item": {
          "id": "080a5148-9dd7-4d84-a024-c2a83afe11a4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "32cbe817-58ea-4e78-8e0e-a540ec6b0b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e833e44-84b0-4395-9068-4029d12bc390",
        "cursor": {
          "ref": "f2d3b72d-d1c7-4e73-b67b-1dddd2ed98a2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0a7881f9-7e15-4011-8d16-49d26f0b8632"
        },
        "item": {
          "id": "8e833e44-84b0-4395-9068-4029d12bc390",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "75a657ea-85db-4b52-ad4c-013e7eab5305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6199f7d0-717b-43b7-a573-21d8019d2d36",
        "cursor": {
          "ref": "caefdb8d-617a-4843-b69a-599df2c01684",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2a7f4f18-71ec-4fab-8d6d-3b1e59c96139"
        },
        "item": {
          "id": "6199f7d0-717b-43b7-a573-21d8019d2d36",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "87126b7f-20b0-40dd-b1bf-71951bab2461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdcb914-a461-44dc-a3a3-07fb3ae6cb65",
        "cursor": {
          "ref": "605e2788-4f52-4b93-b899-92d23f5934b8",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5c471114-f205-4ce1-8760-cc6479bf9d0b"
        },
        "item": {
          "id": "bbdcb914-a461-44dc-a3a3-07fb3ae6cb65",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6ab8ef3b-a43d-4364-bbb5-093e06e2fa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d695abf9-2983-4948-a8b1-54814d51815c",
        "cursor": {
          "ref": "1dce3480-9ef2-4929-87bc-5edf2de0ff0a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "daf38d55-44e7-408a-b429-41a183d82846"
        },
        "item": {
          "id": "d695abf9-2983-4948-a8b1-54814d51815c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3f2d89b8-696b-4248-a167-88a985cc280b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4ca9ba-1d53-4445-ba8c-2b4e2f2be4f5",
        "cursor": {
          "ref": "7caa488a-2eb6-4427-9ed2-4e7d44083f17",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b95e73c4-9567-4b9f-84a5-726b212f3854"
        },
        "item": {
          "id": "6b4ca9ba-1d53-4445-ba8c-2b4e2f2be4f5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8687908e-7ab4-481f-99a1-43de8bb3355c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bc4fb4-927c-4631-91d0-4cb0c5b4806d",
        "cursor": {
          "ref": "bcd6a691-cac3-4922-bf6e-f3fa833925de",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3af8f958-38f1-4822-b6ec-d6bd3f4701ea"
        },
        "item": {
          "id": "d6bc4fb4-927c-4631-91d0-4cb0c5b4806d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "13ace45e-87da-46f9-a0b0-ed2c3484a852",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "8d030bef-414f-4eee-8647-35f877c231ea",
        "cursor": {
          "ref": "442c9339-2852-4056-9e98-10b3e755e089",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a5429854-5e48-4a2c-afad-3e7c3685b2e0"
        },
        "item": {
          "id": "8d030bef-414f-4eee-8647-35f877c231ea",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4b95799d-9a71-41ba-9767-430b3a90fa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c33e5a-9b56-4153-9f2d-221d602a14c7",
        "cursor": {
          "ref": "9b15f61d-1f86-4e81-9af9-8b4713844477",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "830edcf8-9aab-4529-b8c6-c5fe87c63c3a"
        },
        "item": {
          "id": "99c33e5a-9b56-4153-9f2d-221d602a14c7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3e1dfa30-a5c2-45ea-98a2-0c59deb91d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9342c454-353d-48fe-a378-05c141fbb6a6",
        "cursor": {
          "ref": "e2149961-05a6-4f3c-a190-f5acbdb70a9a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "64ab29a5-988f-4396-8589-6e9c05f7c73b"
        },
        "item": {
          "id": "9342c454-353d-48fe-a378-05c141fbb6a6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "291d77b5-a3a4-48b4-a66d-9b492f7d2582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc1aea5-4156-47e9-a165-d0754c0d6437",
        "cursor": {
          "ref": "a3e5332b-1565-4d1d-9af9-8642f8e50007",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "57e53dbd-8d9f-4beb-ac84-04876b8cefc0"
        },
        "item": {
          "id": "8bc1aea5-4156-47e9-a165-d0754c0d6437",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "be8e7c9d-71f7-4720-b2d2-ed2ddc3b71e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95227fdc-e063-4823-be41-2ec3d5f2ca9c",
        "cursor": {
          "ref": "d20e7027-4752-4d18-829c-1f92ea70d4e5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7369ec9b-abd9-48c1-bdee-cef35f3a1a52"
        },
        "item": {
          "id": "95227fdc-e063-4823-be41-2ec3d5f2ca9c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a41f0ead-979d-4101-a520-2e72821e26b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9292d7-db68-485e-ad02-bd924722d745",
        "cursor": {
          "ref": "856a7a93-4207-491c-811d-2f4b149bf204",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d1d00f14-ab2e-45c3-9bfc-925cf6e04b89"
        },
        "item": {
          "id": "ac9292d7-db68-485e-ad02-bd924722d745",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e80bb209-9a1e-4fc2-9eed-db9f4f5edf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec57432-2d93-4583-a159-cb920dcc39f3",
        "cursor": {
          "ref": "6879691f-1ffe-41a4-85ee-1f78fefe5575",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2a372419-172d-4d96-9ec3-7199a09b08be"
        },
        "item": {
          "id": "0ec57432-2d93-4583-a159-cb920dcc39f3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "36cf6b2d-e8fc-4593-9664-e9d7356123af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f514b8-814d-4992-b185-cb46f5a01ede",
        "cursor": {
          "ref": "d10cbd72-73c0-467d-be15-893b5271597f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "67495761-8a42-440e-80e6-45cfe36c95de"
        },
        "item": {
          "id": "62f514b8-814d-4992-b185-cb46f5a01ede",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5949b89f-2089-4e11-b6d2-44598abce76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77b936b-1ce4-4026-b968-a96af184da93",
        "cursor": {
          "ref": "955364bd-e5bd-4cd3-bec2-fe1ce4ffec76",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "87cc8d58-0136-4af2-87e4-afc697120738"
        },
        "item": {
          "id": "e77b936b-1ce4-4026-b968-a96af184da93",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "761a4406-50a1-40ac-959f-b814384794e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a8939f-51fc-4f58-9be8-31bb7f8e9335",
        "cursor": {
          "ref": "0286fafc-cf28-4ed9-b189-bec91447d6f0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ff9e95df-e8eb-4be3-b3de-c8d6819127cb"
        },
        "item": {
          "id": "78a8939f-51fc-4f58-9be8-31bb7f8e9335",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "95976094-c807-4ebf-8d28-f38f6c8e3e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3180a7ee-fb74-45f0-ab4f-6ae42b9407ce",
        "cursor": {
          "ref": "150b60fa-785b-4c97-a080-4fce9f03ce58",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9fbd9784-5d18-48ec-8d6a-456499c480e5"
        },
        "item": {
          "id": "3180a7ee-fb74-45f0-ab4f-6ae42b9407ce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1192926a-55e0-4371-807a-33b8439fbc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebd682f-f895-4926-9f1a-d1c313d303a4",
        "cursor": {
          "ref": "fe8b6723-9f3d-4ed5-b250-f4d41b258075",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b787d067-d7cb-4879-a23e-e162fd0dce6e"
        },
        "item": {
          "id": "cebd682f-f895-4926-9f1a-d1c313d303a4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9537843f-6f41-4ac7-a079-eca401ad5232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b480ad3-61e2-4e57-9a96-94ac3ebcd430",
        "cursor": {
          "ref": "02d65a9a-c347-4043-b551-b2a4129bbc50",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5ea47d1f-295f-4b83-91bf-2c25afc34345"
        },
        "item": {
          "id": "0b480ad3-61e2-4e57-9a96-94ac3ebcd430",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ef442c1b-0c68-492e-8089-c12d508e2150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a61e69-effd-4df7-a5a9-caf15cbe3454",
        "cursor": {
          "ref": "6c2edb52-c40f-404c-96d0-d3e080cff999",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "da38f73c-dbcb-4900-825e-4837b0b77736"
        },
        "item": {
          "id": "06a61e69-effd-4df7-a5a9-caf15cbe3454",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ccda8019-b959-42ed-95c8-f8c9ae2910c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ff5bdf-91be-4653-a35f-339e5d1f8c7d",
        "cursor": {
          "ref": "5280871f-51f0-4815-9618-1a1365293b54",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "65f0fba1-9aa2-4eb1-b5df-af12a2287e94"
        },
        "item": {
          "id": "69ff5bdf-91be-4653-a35f-339e5d1f8c7d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f74ebe16-bad5-4994-8cc4-3e25f4998bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea5bed-1929-4bc5-883e-0bd9cd66a175",
        "cursor": {
          "ref": "f4d8c5a1-2070-45fe-92c6-b7996ee2202f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "05f61e87-2aa2-4923-9081-499d5cc820d1"
        },
        "item": {
          "id": "14ea5bed-1929-4bc5-883e-0bd9cd66a175",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "534890e2-87e0-4ff1-bcba-d0f9f0438550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0afc49e-d2bc-4ca2-9ae7-da7d307c8e8e",
        "cursor": {
          "ref": "2bbb0f35-b6ee-44bb-b0a9-13a5a1155aaa",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "be1064db-212f-4ed1-85ab-7b0101c4c027"
        },
        "item": {
          "id": "a0afc49e-d2bc-4ca2-9ae7-da7d307c8e8e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d797695e-350e-40e5-b4e6-f80ad8497017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36021ae-c622-4a3b-9b8c-c646a9243749",
        "cursor": {
          "ref": "fe63518e-d12f-4757-9e9d-20679939cbc1",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ce45bcad-a80d-44d8-bb58-935127bcdf3b"
        },
        "item": {
          "id": "f36021ae-c622-4a3b-9b8c-c646a9243749",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "82acb070-d897-4fb4-a4fe-26c5c2f9a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e562b68c-e10f-423b-91d8-25205acc60fd",
        "cursor": {
          "ref": "6d4775a5-b5c8-45e7-940d-f0d17c50afde",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9ccd7087-8dda-4c90-a48c-d022dded212c"
        },
        "item": {
          "id": "e562b68c-e10f-423b-91d8-25205acc60fd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "41647df3-6406-4f1e-b80c-0c57b066f8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d7cd3-53f2-4ad0-a4ff-97a71f7a1dd3",
        "cursor": {
          "ref": "66d2853b-090c-4ca5-aff8-8f4049410d6f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aee93fec-6678-41c9-8179-8d7d4be0da5b"
        },
        "item": {
          "id": "f38d7cd3-53f2-4ad0-a4ff-97a71f7a1dd3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "45e65999-913f-436c-9ad6-6f0005be9a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665200bd-ecdc-4700-a9bd-7c251f4acb21",
        "cursor": {
          "ref": "0efe5a20-a84d-455e-b354-f4c3948db919",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4d1250f0-8cf3-4d07-a2eb-8599114412a6"
        },
        "item": {
          "id": "665200bd-ecdc-4700-a9bd-7c251f4acb21",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7a7b8b47-8409-4e38-8820-f9224d155fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02137f5c-0cae-4dab-bcc6-32e71ca2b180",
        "cursor": {
          "ref": "3a1e432a-448f-4537-bb37-145cdec25e6f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "16f8eba1-2aee-43cc-b345-3ea3b09fda38"
        },
        "item": {
          "id": "02137f5c-0cae-4dab-bcc6-32e71ca2b180",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "80fee816-ec90-424f-9e3b-57282280b0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807c2f78-c0ab-4b3d-9fc4-be9f7ba8e5d4",
        "cursor": {
          "ref": "7d8e9e69-215e-4ca5-92e0-d6151122e7a2",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3b065b60-ebd5-467a-905b-263198f54199"
        },
        "item": {
          "id": "807c2f78-c0ab-4b3d-9fc4-be9f7ba8e5d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6265c199-fc19-48dd-81a5-14c0be4821bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bf3fa9-88b2-4bf5-ae97-6f08591bed60",
        "cursor": {
          "ref": "78a51896-3a95-48ef-832e-42e812b432b2",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7a761623-f36d-44a9-a3b1-88846c5040e4"
        },
        "item": {
          "id": "08bf3fa9-88b2-4bf5-ae97-6f08591bed60",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8a9f2afb-5e4b-46d7-8090-2afef12882cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d88a5e6-3b16-43ce-b0a0-d4d985e5397a",
        "cursor": {
          "ref": "c242be72-69fa-42b4-bafa-f4220a15ecba",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "759bad51-332f-4591-8dcc-4fcd0be38fe1"
        },
        "item": {
          "id": "0d88a5e6-3b16-43ce-b0a0-d4d985e5397a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dcd0b7e5-270e-48e1-9f6e-f06295535b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b9ddda-643e-449c-bd81-78d70f2dfc8b",
        "cursor": {
          "ref": "ce6851d0-5ed1-43ac-a16a-4718e15c7884",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d863ff37-ac4b-4432-8486-78daaaf5d39a"
        },
        "item": {
          "id": "58b9ddda-643e-449c-bd81-78d70f2dfc8b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2ca9e629-b4f6-40af-bb80-82bf607c4954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42883bd1-e6d5-4ade-9441-1d575cdc7612",
        "cursor": {
          "ref": "7d9da434-32f8-468a-bee1-a34d965ff06a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6099d877-61f4-4662-a218-aaac57686436"
        },
        "item": {
          "id": "42883bd1-e6d5-4ade-9441-1d575cdc7612",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "08d4ad8f-8b75-4150-bfb2-64079ed1d378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3c1059-a917-4635-80e5-cf7fcf375503",
        "cursor": {
          "ref": "de9dea0b-8e60-49e7-996c-083201992c7b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bb2bf885-286d-46c3-9648-402646efc613"
        },
        "item": {
          "id": "1a3c1059-a917-4635-80e5-cf7fcf375503",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c91f1218-3e72-4f88-b2eb-63bb880cbbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3c54f0-4396-4967-954e-505772e0258a",
        "cursor": {
          "ref": "de4384a3-f8eb-4d78-8c38-6f9e8937ae40",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "76fde49b-9442-4904-9dfa-8f602f2b7f0e"
        },
        "item": {
          "id": "6a3c54f0-4396-4967-954e-505772e0258a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "65df9f3d-9c23-41e0-ba33-db1e77f44cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debf3463-2d53-4b87-9746-4c000d0ae64b",
        "cursor": {
          "ref": "01afb8f7-b25f-4b71-9fc5-6d18f372c57c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e4ee2618-420b-403a-b394-674565bb9944"
        },
        "item": {
          "id": "debf3463-2d53-4b87-9746-4c000d0ae64b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c0920882-90c8-411d-8eb4-3de48aa0b9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b6ee37-5ef2-4b9d-aa6e-dacfc4d68de2",
        "cursor": {
          "ref": "5282b02e-f308-4b07-ba07-d3ebe7005a35",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7d0e73ea-fc1c-47a2-bcf9-93e0f3ac8dae"
        },
        "item": {
          "id": "f0b6ee37-5ef2-4b9d-aa6e-dacfc4d68de2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dc0e1ea3-75bc-4df4-b9ab-3605aa32c530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27f7730-af02-4aa8-81ce-06200a5f4b1b",
        "cursor": {
          "ref": "19279476-dbb8-4e1f-b9cc-26044ba150b3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "97d4d94c-28b9-4d65-b865-3f9dbe834c38"
        },
        "item": {
          "id": "a27f7730-af02-4aa8-81ce-06200a5f4b1b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0e320dd0-e103-4e70-b877-150303a395c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e07e4af-5f90-4a50-be8e-21e43e22f70d",
        "cursor": {
          "ref": "bd41f87a-9d4c-4d91-b600-6b182a457f81",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f562d553-4e6f-4a0c-a2ee-5fea822faf80"
        },
        "item": {
          "id": "6e07e4af-5f90-4a50-be8e-21e43e22f70d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "036a407f-7777-4494-bdb0-90acece9a309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed133bb-c2a3-42df-8e2e-e53043a39509",
        "cursor": {
          "ref": "2685f658-aabf-4633-9f18-6608ebf950be",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d4291b4b-3dc9-4c57-ae05-65a1a26c7dce"
        },
        "item": {
          "id": "8ed133bb-c2a3-42df-8e2e-e53043a39509",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "26c1a376-39a4-467b-8531-bdbdf82d1e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f411da07-19a5-41dc-b967-c1b7fc1ad389",
        "cursor": {
          "ref": "d192d7e7-8375-490a-b69e-f2a6975dac92",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "79f5874a-8f46-4e14-ae91-e2f292b62ba0"
        },
        "item": {
          "id": "f411da07-19a5-41dc-b967-c1b7fc1ad389",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f4f486ab-ea44-4521-b046-a300612be9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82f5ad7-63e6-43ee-aaf5-1f7fea2d83ee",
        "cursor": {
          "ref": "078f0b21-1646-4e18-a788-23715ad26b37",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b686275b-9334-47a3-8e4f-142ed892d415"
        },
        "item": {
          "id": "e82f5ad7-63e6-43ee-aaf5-1f7fea2d83ee",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "49daaed4-f722-4eba-b749-968cfee82948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07978876-e941-4b15-8252-b1e72e8c2ccd",
        "cursor": {
          "ref": "7655ef34-9513-4cb7-9b59-726da810cbd9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cb20a2e0-79df-4884-9d47-33ca0999600d"
        },
        "item": {
          "id": "07978876-e941-4b15-8252-b1e72e8c2ccd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d90f0df7-9cf3-4700-9ffa-56cd61069ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29affde-50b1-43f5-aaf0-b97ae329173f",
        "cursor": {
          "ref": "140aed1c-fdc6-4f10-b272-afb762d4d226",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f6295e60-a34a-45d7-a2a0-c5a3c5a6c8d7"
        },
        "item": {
          "id": "c29affde-50b1-43f5-aaf0-b97ae329173f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9b39261a-8850-48be-b45f-079aa9d8d927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc3cee2-16da-4c63-9cf4-1677c6c13d8d",
        "cursor": {
          "ref": "459081bd-16cb-4ac6-b44e-f4b43982de0b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d236f881-1b32-463f-b826-76534d7189f8"
        },
        "item": {
          "id": "8dc3cee2-16da-4c63-9cf4-1677c6c13d8d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "08ac5adb-5cc2-4cca-8ff2-44d2ba2d8096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9768aa6f-a39a-4594-b3e5-9880e97713a8",
        "cursor": {
          "ref": "c1e09f77-c5ff-40ba-b6af-def516d42f97",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "13768a48-043f-4ed0-8d85-330257efa098"
        },
        "item": {
          "id": "9768aa6f-a39a-4594-b3e5-9880e97713a8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bdfbf97b-c2c3-40ea-aa38-187ebb15aa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ed1ec4-9a67-48fd-870e-0910b01b6e38",
        "cursor": {
          "ref": "5610c998-0d83-432f-8e7f-84af39f652bc",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bb66faac-feb8-4d0d-b201-377c5cde8f73"
        },
        "item": {
          "id": "a8ed1ec4-9a67-48fd-870e-0910b01b6e38",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f25efdeb-f551-4cba-b3b6-4fac15203845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82551fd7-6c9f-41af-ac28-a6fcb988b1a5",
        "cursor": {
          "ref": "4363b855-f7fa-4c8b-bb84-8624e6c848a3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fe792b77-08ff-48c7-ba34-5b4992767886"
        },
        "item": {
          "id": "82551fd7-6c9f-41af-ac28-a6fcb988b1a5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d2f761c9-fcda-4a1b-853c-c6c485efce84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ac5185-72be-4c16-a747-04b132ed3569",
        "cursor": {
          "ref": "4f2ae878-af8d-4313-865e-ee628f6febe2",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cdfaf8c1-fc57-4805-b417-1cd6208d17b9"
        },
        "item": {
          "id": "15ac5185-72be-4c16-a747-04b132ed3569",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f73dd010-6d61-4766-8d34-41c2f2af813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b89f4e1-fa7f-4b17-bd00-d5d9481e78cf",
        "cursor": {
          "ref": "880feb69-a1d2-44bb-ba52-6ad5e9c0a278",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "22579ee9-d575-49bf-aa61-f70d353df2dd"
        },
        "item": {
          "id": "5b89f4e1-fa7f-4b17-bd00-d5d9481e78cf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8a72aed1-579a-4633-9316-d9c43c81a173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66447524-ac73-4d6d-b008-4648b446dce6",
        "cursor": {
          "ref": "e979adda-d134-4c76-88d3-c3ee73d8e3aa",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "20cff297-421b-447c-8632-8e637e55bd77"
        },
        "item": {
          "id": "66447524-ac73-4d6d-b008-4648b446dce6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ead7b855-3d07-474b-8029-45439eb2be0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e23334-d4ba-4910-a97e-58bdd85bb224",
        "cursor": {
          "ref": "38d4b78c-009b-4e88-b602-76651a524a8d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2835f331-41fe-440a-ad2e-bf6e0871b57f"
        },
        "item": {
          "id": "f6e23334-d4ba-4910-a97e-58bdd85bb224",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ddcec834-9f4c-4628-9365-0245b449d449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2def16-d0cd-4921-8c87-225f1f30914e",
        "cursor": {
          "ref": "9043e7ac-b794-44ac-bc5b-0e106b88ff51",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "086eb3b3-788d-4bb2-8ba5-ed1eb9d0787e"
        },
        "item": {
          "id": "cc2def16-d0cd-4921-8c87-225f1f30914e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f7dfff91-730e-480b-85e0-8f80fd018571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae54304-aa5c-4d08-a1c6-c9c77de74258",
        "cursor": {
          "ref": "728f3eb1-a6d0-4ed3-b59a-b7b218fd8c70",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bf133319-fa78-420b-90fc-8c6b264e2128"
        },
        "item": {
          "id": "7ae54304-aa5c-4d08-a1c6-c9c77de74258",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "288ddffd-947a-42da-bcac-729aa8aa2ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae27a6a5-d91c-4ea7-bb26-70eda72fc3e5",
        "cursor": {
          "ref": "71072d9a-757c-4b42-a062-a71d3841ea43",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e8720312-0ef3-411b-8730-77cb8c472188"
        },
        "item": {
          "id": "ae27a6a5-d91c-4ea7-bb26-70eda72fc3e5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "923548dc-dd94-4e13-8cca-00b50f37521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5893c69e-e3fb-4184-b806-b90ad3bc690c",
        "cursor": {
          "ref": "4f9b78c1-374b-4097-ab14-dd911c341cb8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "876fb2b5-8560-4ae7-b691-773a158d5d4d"
        },
        "item": {
          "id": "5893c69e-e3fb-4184-b806-b90ad3bc690c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d548d24c-4604-4226-8be9-60281033f6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9656fb-fb7f-435d-b942-1dfb065b4f62",
        "cursor": {
          "ref": "14f2cd79-dffd-4423-bd9f-5de9d354f793",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8d36baee-35ed-40b4-b5d4-4f4a4bb272e4"
        },
        "item": {
          "id": "1d9656fb-fb7f-435d-b942-1dfb065b4f62",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "12ac7d2f-2bbb-452a-a40f-f0cae7b478a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb60775-c4a6-469c-9af7-c304febf807f",
        "cursor": {
          "ref": "00d0fc90-02c8-4dba-8839-0efd0a444364",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a0079c29-a549-4002-94b9-80965d1d7e87"
        },
        "item": {
          "id": "cbb60775-c4a6-469c-9af7-c304febf807f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e03feedb-22c1-4ea3-a3e0-71fc513ee272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faaf3a46-e824-4134-9b50-61b1a2f82ff1",
        "cursor": {
          "ref": "aff8f31c-b132-4ecd-af43-ca1540a696ef",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1c12be45-1dd2-46ff-aeed-b9052855be82"
        },
        "item": {
          "id": "faaf3a46-e824-4134-9b50-61b1a2f82ff1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "96ffd55d-da62-4b7f-a4f6-bdb8ae9246c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b838e9-f798-4f37-bc36-f53c1b29c06f",
        "cursor": {
          "ref": "a4eb0232-8467-44b2-bc6a-7af44491806b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8fd5436a-b64f-43d1-8c81-de68c274b8ba"
        },
        "item": {
          "id": "60b838e9-f798-4f37-bc36-f53c1b29c06f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d561b187-013d-4a04-bc36-1088b8867010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be4a76a-0d7b-494b-9c08-387bbae1c9c7",
        "cursor": {
          "ref": "8282f160-6b5c-4aff-a50f-294085edcf89",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "eb9017e5-6233-4bdd-999c-c93ca2daebbf"
        },
        "item": {
          "id": "8be4a76a-0d7b-494b-9c08-387bbae1c9c7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "558b57d8-8c3f-40c7-affc-9f457445b1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c5887c-6003-430f-b602-2763c0a49fd9",
        "cursor": {
          "ref": "2916ff67-ee72-46f5-a9ad-a441acc75e0b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8d2a2530-b075-4f56-8312-ece80c2b50cb"
        },
        "item": {
          "id": "38c5887c-6003-430f-b602-2763c0a49fd9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "36e186a4-352f-4c32-9194-ac6f90b639d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f6c5ca-ea77-4811-9a8c-bce82a94a444",
        "cursor": {
          "ref": "8a164ec7-b119-4bc2-9028-e1f7df7abda1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "af4ba5cc-0c11-48ef-b8ec-8a5343b28e3c"
        },
        "item": {
          "id": "97f6c5ca-ea77-4811-9a8c-bce82a94a444",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "833cc3b7-5b92-4b56-89f3-23b7e3fa5eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdffab78-c72e-47bf-9869-ed7dbdb3e8d9",
        "cursor": {
          "ref": "fa879ddb-c24a-4367-8994-d898395b6365",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1289f82d-23ae-42a2-950a-8adda073278a"
        },
        "item": {
          "id": "bdffab78-c72e-47bf-9869-ed7dbdb3e8d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8b754eb5-9a42-47a7-9d82-94b2e362baec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a131931f-e81b-4f38-8bda-c4d18efead6d",
        "cursor": {
          "ref": "b78610c6-6cad-479e-aa0e-f5ce0b4489e5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d8291411-901a-4c27-89a0-dcc3c44e6ea4"
        },
        "item": {
          "id": "a131931f-e81b-4f38-8bda-c4d18efead6d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c80075a8-01d0-4f53-ab7d-0073c85d063f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8199818-7adf-4b48-863d-3b7c82dbe3f9",
        "cursor": {
          "ref": "44e84652-9a3d-425f-8c6c-51fab1ecb446",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4800d97c-e584-456a-8351-19dc895fd118"
        },
        "item": {
          "id": "d8199818-7adf-4b48-863d-3b7c82dbe3f9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "15042f53-79e6-42be-9cf7-4400b9b8f819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf74433-49ca-4197-828b-7151150c149c",
        "cursor": {
          "ref": "172c808b-cb30-424a-bed3-2fb339ef1baa",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a6eed51d-1fa9-4c21-a5bc-1e7d92e979cf"
        },
        "item": {
          "id": "9bf74433-49ca-4197-828b-7151150c149c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ed27d2b7-2556-4c9c-bc51-add598755433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8541f0a-e548-4831-b175-cce8d5d2a5ec",
        "cursor": {
          "ref": "d71a2900-14ec-41c9-a91b-f05a5403cb26",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "82a77d9e-6f21-41df-91db-5f64f4e44145"
        },
        "item": {
          "id": "c8541f0a-e548-4831-b175-cce8d5d2a5ec",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b64d3657-80e4-4cf5-912a-3cf886003370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8815c0a9-4de5-4b2e-a72b-2a88a329dd23",
        "cursor": {
          "ref": "599712e6-24b5-4f71-ac21-ed1b6d9a21e9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e212da06-b719-407f-adef-826d42bedabc"
        },
        "item": {
          "id": "8815c0a9-4de5-4b2e-a72b-2a88a329dd23",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b2419340-e357-4480-b44d-72e4d3b68d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4caabe-9a49-4c76-8fc3-a914cd29f28e",
        "cursor": {
          "ref": "2f48cec1-e1ea-4009-ad6d-1f4fec92ff3c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0fda1539-c805-4351-9a48-358ba15744bf"
        },
        "item": {
          "id": "ab4caabe-9a49-4c76-8fc3-a914cd29f28e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6b12ae08-f83e-48e7-876c-91b7cf62a5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2bcc99-a7a5-4490-8b86-f83c84ad2575",
        "cursor": {
          "ref": "a3fd9563-0775-4ad2-8256-3e8565142a74",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "259cfe53-8c9a-4568-b816-a41ea264aed9"
        },
        "item": {
          "id": "5f2bcc99-a7a5-4490-8b86-f83c84ad2575",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1e95319c-90ff-4989-86ea-b00b520d033d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ef54a2-7ce5-4b6c-b4dc-b29a4f9d9dc8",
        "cursor": {
          "ref": "6e17b19f-d1c9-48b1-aa84-43d04bd78efc",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8c352a37-9461-4f8f-9a45-7900156ab7cf"
        },
        "item": {
          "id": "f1ef54a2-7ce5-4b6c-b4dc-b29a4f9d9dc8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "28733817-1c07-4a5b-82a2-eb537610f649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7af0e30-7ecb-4010-91d2-cfe956ac4957",
        "cursor": {
          "ref": "0acea2fe-53fe-42d3-9c8c-9db9fb78c45c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a0b9f91c-759e-4b9f-b3e7-86ba9fd8257d"
        },
        "item": {
          "id": "b7af0e30-7ecb-4010-91d2-cfe956ac4957",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "40de1ec4-e197-443e-98f9-2137e804e744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bd3a70-bf81-457f-b88a-056fd88049b4",
        "cursor": {
          "ref": "c6fc7249-b6c4-48aa-8d9b-840b1dcb0a77",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3b12497a-211e-4c57-be8a-5347523f08cf"
        },
        "item": {
          "id": "97bd3a70-bf81-457f-b88a-056fd88049b4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3cd2f91c-af17-4d56-b9b6-e2f126b9187b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b7f5be-0034-4fb8-8182-498b9666ab17",
        "cursor": {
          "ref": "fc27fbe8-a31f-4490-8354-2f5d2e58b7e3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "918cd354-55f3-432b-ad03-b1fc8b2ca631"
        },
        "item": {
          "id": "87b7f5be-0034-4fb8-8182-498b9666ab17",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "689454ac-c165-4238-aabd-53ff548cac8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f41df87-696d-4ca5-b2a9-fb35d9b89ca2",
        "cursor": {
          "ref": "507fc74b-85cc-4e7e-a0c6-d10296f4d719",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4955db83-db5d-4eee-81ab-9a8873735765"
        },
        "item": {
          "id": "4f41df87-696d-4ca5-b2a9-fb35d9b89ca2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e2084cc1-58e6-4d9a-9193-a909f04b2b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640b25e5-71c6-4ba4-a588-6a2ed9618437",
        "cursor": {
          "ref": "49083930-3d9b-47e6-a004-c089a4900bb5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "17986812-4126-448f-a91f-68d281bc907c"
        },
        "item": {
          "id": "640b25e5-71c6-4ba4-a588-6a2ed9618437",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cd40c11b-da58-4e11-9b8c-ac873f639139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ae56c4-10ca-42c9-9125-8da59a96b1ee",
        "cursor": {
          "ref": "53da2aac-fa25-4d3d-9a20-f062a758ce02",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b764aa0b-f2e3-4d15-8ca2-b72c9b387ea7"
        },
        "item": {
          "id": "62ae56c4-10ca-42c9-9125-8da59a96b1ee",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "acd2cd34-95c0-4dad-8014-def8ca2867ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbfa44b-c36d-4cf7-980d-38ec62e555c6",
        "cursor": {
          "ref": "e0c9c190-9336-4fce-ab81-62da8df655f7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3d8300d0-bffb-4b9c-9e05-f82e9f9e1c43"
        },
        "item": {
          "id": "6dbfa44b-c36d-4cf7-980d-38ec62e555c6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7435c493-e766-4547-8e29-274504257096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88f03e2-d306-49c3-8a1b-415bdc8c6c67",
        "cursor": {
          "ref": "1e373264-9a54-4df9-a5f8-178d70b105c3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d03c4dc5-d711-4733-a8d5-c5312f55e8b8"
        },
        "item": {
          "id": "d88f03e2-d306-49c3-8a1b-415bdc8c6c67",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "27df19e2-9ff2-4c18-a346-fb7d2364fc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d05e374-8aa5-42ca-8791-6096c6343a8b",
        "cursor": {
          "ref": "5fa55ca5-8900-44ac-8581-45149d0a4930",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "be839ef7-d2df-4c1c-90b0-2109a5623b35"
        },
        "item": {
          "id": "7d05e374-8aa5-42ca-8791-6096c6343a8b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "69b1a81f-0865-423a-8d91-ac8091eda586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6e06d4-8f6e-40c8-91c6-0ec2107cd1dd",
        "cursor": {
          "ref": "9de09bcb-705d-40f4-bf0c-0eaaef0908b9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dae0a80c-db8d-4cdd-a0be-725e529bd34e"
        },
        "item": {
          "id": "1b6e06d4-8f6e-40c8-91c6-0ec2107cd1dd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "733811b1-08e4-4153-8023-d26e31be2072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7fd334-ca1b-4beb-8cc7-3d63dc59a350",
        "cursor": {
          "ref": "b5f55ca9-bb39-456a-b3ff-00597359174a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "66777b0f-c109-4f17-a65d-d40efa2718a3"
        },
        "item": {
          "id": "0b7fd334-ca1b-4beb-8cc7-3d63dc59a350",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fcc42a88-c2b2-477a-94da-e9db175af4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ff4992-6d12-4930-8102-31a50b0f28ed",
        "cursor": {
          "ref": "57d235cb-504e-42e3-8f9a-6ff106a3fe1d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6e23584f-2556-4a9b-a1c9-6f0ddf5a4dc9"
        },
        "item": {
          "id": "f4ff4992-6d12-4930-8102-31a50b0f28ed",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "210e1684-4270-4810-bb21-db09be8c0074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d6e028-dc58-4ac0-9f1a-955361354214",
        "cursor": {
          "ref": "5b516828-61ba-4f01-b3fb-e2f6e2ebc9b9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c2fe41e0-f249-4ee4-bd23-76b342e7036d"
        },
        "item": {
          "id": "25d6e028-dc58-4ac0-9f1a-955361354214",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cb7a0a7d-2eb8-462d-ab92-d44dc8122ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a9626c-6456-4d6e-bb79-0d3fb8f4f0b3",
        "cursor": {
          "ref": "9a9e4a9d-232d-4efc-8401-485bb26790ac",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ca475436-dd29-4dc7-a07c-320f405d3851"
        },
        "item": {
          "id": "b6a9626c-6456-4d6e-bb79-0d3fb8f4f0b3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b12acbfb-e5b8-47a3-8d57-269c73811991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b76e572-ecfb-4bb9-8060-3a8dc41fab7f",
        "cursor": {
          "ref": "2361e6c7-ad43-4acb-b3de-a341c6f9bc0b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a674ca7f-537d-44ac-acf6-510da8e86a63"
        },
        "item": {
          "id": "6b76e572-ecfb-4bb9-8060-3a8dc41fab7f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6715cadc-56d2-4d32-9269-d3122a686f9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efe855b-b847-42db-a41e-b3f5ce29c322",
        "cursor": {
          "ref": "d3ee994c-b0ea-4c38-bcc7-2e1b4576b22e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e5305b44-b3ad-4f68-a779-3e74e8c1cc0e"
        },
        "item": {
          "id": "5efe855b-b847-42db-a41e-b3f5ce29c322",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f2927bc5-e854-467c-bc2b-52c6f6716417",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1233362d-ec27-40b3-9f3f-7d69a6ff035d",
        "cursor": {
          "ref": "75250feb-e32d-4d52-bd4a-d5349b0a67e3",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bb38c971-6ebc-40c2-8c13-e6d97513f64b"
        },
        "item": {
          "id": "1233362d-ec27-40b3-9f3f-7d69a6ff035d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "28d70233-a15a-4a4c-adb6-c3c4bbde3216",
          "status": "OK",
          "code": 200,
          "responseTime": 2433,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9858484f-e7a8-499f-8713-4439203566b7",
        "cursor": {
          "ref": "6ad429b1-5283-4e6f-9780-8afb902276cd",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4a969daa-7aa9-4d8d-8b9c-62394cfce578"
        },
        "item": {
          "id": "9858484f-e7a8-499f-8713-4439203566b7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cee419c9-6ef6-4aa0-800c-505776209b3a",
          "status": "OK",
          "code": 200,
          "responseTime": 2903,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7913736-a6d7-468b-8452-efc7d06c6ef3",
        "cursor": {
          "ref": "fc1a2f32-b4fd-48ec-a952-28906b4a6b05",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "00cbcf2a-5d57-4285-aed2-6fc43a2b93f9"
        },
        "item": {
          "id": "e7913736-a6d7-468b-8452-efc7d06c6ef3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5fb2befb-821f-4a59-a60d-1207857c3f70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7913736-a6d7-468b-8452-efc7d06c6ef3",
        "cursor": {
          "ref": "fc1a2f32-b4fd-48ec-a952-28906b4a6b05",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "00cbcf2a-5d57-4285-aed2-6fc43a2b93f9"
        },
        "item": {
          "id": "e7913736-a6d7-468b-8452-efc7d06c6ef3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5fb2befb-821f-4a59-a60d-1207857c3f70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ccaa0d-2a9e-4197-b5bf-14127e963cac",
        "cursor": {
          "ref": "c49c1ada-d09d-419c-b607-294823536cdb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "222f7b60-d564-4bee-8384-ec5f4967f461"
        },
        "item": {
          "id": "a2ccaa0d-2a9e-4197-b5bf-14127e963cac",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5fd28c11-086f-4aa9-9312-b16ab2be4ab7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff951a81-ee47-4e52-ac02-0af463e61df2",
        "cursor": {
          "ref": "97a891cc-3f18-46e3-904a-5c50a690c9e1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5c42985f-93f8-43b7-91b8-492529f4a0c5"
        },
        "item": {
          "id": "ff951a81-ee47-4e52-ac02-0af463e61df2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f9be8040-8ad2-4980-ae23-7dc314486414",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}