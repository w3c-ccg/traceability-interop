{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c36e76e5-424e-4d4b-8dcb-f30885744648",
        "name": "Clear Cache",
        "item": [
          {
            "id": "79bc97a6-d411-480b-b6d1-822fafca32b0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95b50b85-d5c7-4268-9dbb-393ef2cccff8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "80d6153a-4a5e-432c-b43e-1d7ee6188d23"
                }
              }
            ]
          },
          {
            "id": "1c38effc-f01d-478d-b772-1223cdb19a0c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d51b067b-27d8-4a03-8ccb-6deb28e4d943",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb33f3c6-50d5-45b7-99e7-a101c2635584"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "69f7692c-da63-4d01-8d08-e467e4cdd5bf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "29c4af44-f0c4-477f-b0a6-8087386c6a50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbe88f74-cdbf-4b27-b559-22f05452852f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3606819a-3f32-48e0-9200-25e3d7ed6f8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4354eba0-f9ef-4007-9a12-f6284a800634"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f947d5ef-8bbb-4a7f-a15c-8d46e6fb592a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "890eafd3-dae3-4a04-9f40-026d31e64e56"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "74690f4a-6a2d-4481-922a-2cb2ce5166aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f27d520-09fe-4e6e-9a58-4959aadb6a3a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b50103fd-0405-4bfa-8f23-1bd00146c764",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "501ba531-a543-4f1d-85dc-32f88d92d5f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5de6584-bed3-463c-8b78-28b7c4f6e2c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bdc91b7-273e-46d6-823d-b59e468d1d93"
            }
          }
        ]
      },
      {
        "id": "2b9b67b8-574d-4ca5-81fb-21e58968509d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a3340761-7e49-43f7-a65e-984cc514ee51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec8f87a3-5e0c-46be-8727-e72b8357aa5f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30d1b87e-2e5e-44cb-b14f-d3b966c7fdaf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6520e97e-a9c5-4f59-a19a-e804464a80ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2db22dcc-c2ce-4c47-9c8a-3dd14d90dcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f30d68-59fb-4be0-931b-b1389a0c59f1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d7cffb-e696-4410-a6e6-f70cb9c82f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0019eccc-0ac5-42e5-9bfd-0736aab75d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dd5108-6ed8-41e3-a01d-753c043239e1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e37e943-460f-4d62-bba7-a9fcad192683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "748f75ef-16ed-49b8-aa60-01dc39159454"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13c213fe-cbd4-4633-a651-fe15434e92ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d336ff45-674f-4a07-b274-ac7d39df6109",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e64142-6efc-47dd-ad3d-24059b7a5932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29709c77-3d5e-4b5c-8756-8a594a392432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55373feb-2759-4f36-ada9-c09d52cf7212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c41e212-b271-45db-8d5b-abdab110d590"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ec766b5-39be-4129-947f-a4e4ae833451",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eaf1d581-d347-4bd7-9dcd-ee25ad72071e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09984a2e-9016-4e82-91ff-58c904a4428c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f56e47d0-4a99-4d67-a25f-5efda245678d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28ba11b6-cf39-4a77-b197-a2b28b55f056",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f4436094-b6d4-4dc5-9cfd-47d25e972cf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "155818e4-9021-44b4-b5de-b78a49a92276",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbace307-9db5-40d6-b80f-1b209cf72218"
            }
          }
        ]
      },
      {
        "id": "20d82fbf-dc29-41c6-9aa5-2f413fc401a7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e74f0c78-f5db-4c86-bb52-7530b5be39d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3adae618-a27d-40f6-affc-3b6f444350ce",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f6a39b4b-55cd-4e56-ab3f-bd97264953ed",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa542fb6-87c0-46e2-af5c-077c306cfece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe249b9-e116-4c77-8974-d8f40fb42096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0956e9-59d5-4ae1-8119-91918a1ce7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ea8d31-539f-4038-84ac-7c6e138b3111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e402fa19-c6ba-4908-81f5-7d330ed5712c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daff818-8f1c-4f32-9f55-2460f6ae7bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e148963-185b-4d2b-9706-71b8c407ecdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4de51fa-fc5e-4eb9-b4f0-b3a171c9cb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af0f6a5f-75b0-4c97-b4f5-7e55feeb47e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230437cb-0dec-40f2-acac-48247265be0e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e488506e-091d-4bb0-b2d8-b7b2d5ccb946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69be378-acfc-4c78-acea-6906cca2f5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b53a032-0189-4956-a690-03c47258c69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "581b9bd8-05a9-4c5f-8f7f-56f9a1abd968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ca8fbc-1196-4c96-bea9-765b4f1be420",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7be7e0-660a-484f-8f91-8b8b8686c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de607843-32f9-4241-bc94-edcee9c4b3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf326d38-af07-4755-a6bf-c5cb98b5e50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "405c99b0-779b-444d-944e-0816e1541eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ee06b9-8dd4-4702-9ae6-264d89f12fd6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9b5b75-ed8f-4b19-bcbe-7ed880cdcd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5640ea43-9c5d-40ee-8f5f-6732a5fad712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c20e6b1-1295-4435-8225-548dd66061b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1738d7d0-f1c5-443c-80cb-fe1c156d96cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0084d425-4ba2-4322-9d09-e2ad40aa02c1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150bc6b6-dbd5-4546-af38-b17392b07602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3b1807-dc1a-420b-830a-39f466f3b18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9f7f58-3980-45d6-8333-74ac5fd967c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a6e0fa5-3fdf-4483-9e39-a46c4a8bd379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7ff0e0-5893-46d3-b048-b165a2afbbe4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b074fee-f728-412f-a049-4fbce9a9619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c9e1e5-1855-445c-ae8f-9b4df0a26fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d766c1-b6d4-4702-91e7-466219767683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e803747-1fe7-432d-a67d-64c474089234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f00a89c-7ddf-4aa9-a20d-26b24fc0f05b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8739825b-c31c-49e9-964c-6028df4817ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172a38fb-2354-4eb4-af44-76e2da7a6d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75b5666-d84e-44ef-9a61-aa5c7dbf5294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8305c21c-4f0c-4e79-b970-8d74eb9e6ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e595cf-0855-482c-8d0f-e433a803cae4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f732e347-75fb-4b68-bc22-925387eb6aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60948ad4-c8df-4f6a-949d-cd80bcef1c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cafa49-f6d9-4f1f-b5a0-bd279a7a4e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8a672eb-64be-4cf4-9824-6273df8516cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bae886-6bbe-4712-816e-572960405e8b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ebaa9-56df-4581-996c-2115c4be43d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a165d4-4635-4e75-92c6-6f50043d3ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e746cd4b-c537-4eeb-b3c8-d6bf6970cf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1abb96b-a354-44a2-875e-f9f519fdc9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdad4a56-32e5-48ca-94a5-5591895f857c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265d1830-1afe-4369-afaa-87d9564f86c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5026d8ff-6871-413d-93a9-b9912f07304c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66a2a4c-05d8-4335-ad3e-9d5299551315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69eb5b3c-9eda-46fc-945b-3c2bacdd93b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df59ef6f-4c6b-4c11-bb91-87d937418dbd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982cf006-e498-4dbe-b30f-b2e428a2c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc45129c-a584-4e18-86b4-01f37c9e0f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749db4d6-f3ae-490c-8cb8-19e7b40ba20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bca3ba4d-dedb-4309-b666-76c5199d515f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce221cd6-d9f9-4e92-9247-2940a8685442",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0444ec-5544-4acb-9473-2a462dfa7367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b71311e-f787-4eeb-a30a-ee2da82b2492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b12128-7d0b-4a71-9a37-fa81946b6a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27dc72f2-7a7c-4b2e-91ea-9bca68b92d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf4e75b-7ba7-42ed-a035-5231bcbfcbba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb02996-1310-4869-8c3a-024eb6a41546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad29ebd-e7c4-4e2e-bd56-01b93209b1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b5d820-97ad-4923-9875-8614b6cc0fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cae0f567-f210-44eb-ba88-1b748bdb1b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b933d91-e37b-45d8-939f-c753b969f27f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7dc48c-b9c3-4a8f-a77f-ceabb3897112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2b135d-2b12-4c1d-9a74-c9e01a5216cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9869a39d-aae0-4342-a129-f3c7d55ab6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f0424ef-1515-4407-8bce-646596f969cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487bee6d-8767-45d2-ad43-645033fce5ee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7ad7bb-3e8a-4e58-a9d9-591009794200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce886086-d720-4d71-ab5a-7f1632e4fe71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f2a8ca-7738-45d2-afe9-5b1b6d1b912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d776753-8038-4d3a-b653-f168b479218e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9284e7b6-877c-4ea9-be30-d0b06ee4adb1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e365d1ad-2e2a-4103-b2fc-0cf81e7ff1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c754405-cf15-4121-b3be-5120d45632ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba663b11-9d50-4aa3-854c-9b663ab53903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c7ffc36-ed86-46c8-a90c-0801c4fbb7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d39a805-0f43-46d1-a475-ce046e819fb0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1975305a-1aa7-44dd-9a11-18923419466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581e85e1-234e-43cf-9327-9a18e517b7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d49199-e974-448c-b8f1-fd784d2704ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65b509b-3c0c-4030-bf6c-cfa687bca5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c30325f-a89b-4a3c-9207-2107c9909162",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87b2a5f-5099-47d9-9a2c-346d7de94424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c75e2ba-03f6-47c3-a340-35f403fa9793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37af910e-5daf-4f25-9a09-7d9505998e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5adca610-95ae-4b17-8290-1f0745bc900f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab2caab-b533-4305-8a98-f444a69ec856",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb78e69-0891-476a-b787-aa1305a39fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1d6176-130c-4275-ac14-abbd56610c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee118e1-fde2-4f54-bec0-00368e352a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a1cfdf-a1a9-406d-b9ca-0ca792ce20d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84bb025-d1ac-4ef9-a5b7-1086cfe78992",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6452b24a-31fd-48ec-9b4c-79dbdbf49daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13c56b4-537b-45b7-909b-88352dd08b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0ff743-fa0f-47cd-85ad-002a93a08fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cb1ebd-39b9-4fe3-af67-881db5a29e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4cd775-5f95-4b9c-ac77-ddccb2401565",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99161023-64fd-4079-bf10-4f06a78b2521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eff0a43-dbac-4150-8d9e-a8738c0008ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f72aeb-4a9b-4f55-8cd3-ea376e84cab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1b9995-713e-425e-a0b9-5eef1f22a871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63eb770-1a64-443e-a2b8-8b03c2ae8189",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717f6021-fbdf-48fb-acb7-a9e43fbfe243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088efe14-d98b-4695-86e2-525dc48f9424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc43ecf-07b8-496e-9133-750799e8315b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afcfeb65-8777-4682-b89b-229468bfdd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8ebcf0-7dcc-4958-9195-e224f1c4976b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcde500-a630-4ac9-9db6-61e3f657648e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8894d66e-01e7-4c80-a0ae-eb70de2dd321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0e12e3-7468-49a4-90b6-46896cb37fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de149500-ad7c-4476-bc3d-6079169df634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bf4f58-00cd-4043-8b4b-8e19ef7fb428",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d329c0e-542e-47c1-bd68-bf182fe9ff03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51aed824-58cd-4c15-b686-7547309d4443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf72600-c3ae-4781-a8c4-fc4e3791bfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be8aabed-ae90-4e77-893a-1d97972ad59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6972cca-e32c-45ad-a834-18989cdab494",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49698146-5480-42d6-b46a-c5faee4dfcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcb144e-b897-4142-9aaa-9a658cf91d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98faa32-7b72-410f-a430-ad4b478e5f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2884d2a6-6ec6-453b-b5ef-1c7eb9c7dd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86e78ff-0286-43df-bc90-8069ef571f87",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f22750-ac66-436c-902a-73237c386366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fb67c8-34e9-49fb-9c91-0c54177d5d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c773753e-0622-490f-8854-3e9078a5c068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35866d22-37b7-43bb-b698-8f4c8319909c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96158a27-2fc7-4542-af04-f56d89a26514",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7825cd1b-a558-42f6-9801-b9835c76a425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3031b00b-6e1d-4b1c-965c-eb1053c7d8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a425b997-7c60-42bc-8d64-8bfc1faf5311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad89b6e7-c6d4-452a-b78f-5cb62c15df56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e5f949-e088-453c-bdd6-e9bccefea7b7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93ea4c0-9186-4dce-b6ff-3a27719a2dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fd331d-e3fe-434d-aaf1-8301ed38d265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e922d88f-8fa3-441b-9829-96134a8c4575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa7bea3-7dde-4de5-8d08-b1937d4afa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b175cc7a-e8d4-444a-ad13-f799c8fb327d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d4cb7a-017c-4c53-b352-f4d0b8992b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66790576-8179-473c-8431-151f2b39a386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fc411c-38f7-481e-ab92-f4d797dad14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cadacffd-d094-4057-90a8-d7bef433975c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd00d2c-7b9a-45dc-946d-07f9ba561b31",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b473ae52-7d05-4b0d-a93c-dcff71657a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ff309f-aa0c-4386-8b05-f7ba3eb06e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ad17d8-2384-4b57-bb84-f997f60ee70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da203543-b503-4e42-8d24-174b38f7f76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02033ca4-1c09-4034-ab92-4ab26fc1b05a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5329a2cb-f2cb-4982-b80d-b025400df99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef4e21a-0e42-424d-8003-6491f62eb542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55476f0a-640d-4247-9b46-eca6b4013d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8309ab47-fe77-4559-9acc-fc55f9af67f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0f4e7c-4bb2-4c86-bf8a-34e083986ad4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf6a3d2-5c4c-4f81-b563-f20bda4faf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7700dd14-52a0-40b0-851a-04b99e34a63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd57e1e-573c-4fa9-832c-cbff8e9d72e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54a9ea69-4fee-4b5c-86b9-7f623be13c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847532dc-12ab-4665-b159-ae839a344cfb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ea300e-7f97-4068-9166-df1662333fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04676aef-51b4-4c30-b289-040daa5db0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d9c5db-a2a7-4384-a2cd-f3ce64739d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19cea2ca-1bc2-458a-ae24-bde871caa67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711987d0-30d5-45ae-9b41-6e0e7ec05d13",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27fc0d2-42b6-4410-ac09-c2bda931b0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17ecbba-9584-4ceb-a2ce-ceef9fc539a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d565e86c-fc01-40a8-94d8-cfe12ce3ed98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d8804840-9324-4f2b-8a63-339a0acde8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf719fc-6573-4e35-bb21-e157a975ecb8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e03404-553b-47a9-a782-59be47443f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb9d5edc-f21b-4786-95f2-03ce39a2c95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b28cbf-ce2d-4fb7-96aa-30b7fc6d9346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edea5cf6-86e4-4142-8767-720f6292d428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86989334-3c88-4d6c-b754-410a46cf21c4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd0acf4-a558-4f6d-886c-03bd667cd60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4432f2-138b-40b3-9301-dab99f2dad4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30af626-502b-4dce-829a-89b8662eb786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "015bb871-a9de-4a87-94b6-a17d4b6b677d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddaf269-8a8b-45d0-ac99-a3060a2f96ab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faf7ca9-4d7d-4c40-bcbe-ee1922f91956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a05ae7-edb3-4644-b504-fa5d1ab00cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8368d9dd-3d9b-4510-a6a0-ac9fdd8c8b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8e4391-0c1c-4f8c-8dbc-f41bef96359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1e5cbd-0e69-4cf6-9032-6fa94e006b6c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea044dd2-e18b-43a4-b271-e593620c36dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b930f8-1cd5-4810-bb98-1cb849cafdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c804f39-a9f5-481e-8692-c0df2260ba9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "af8fbe61-90e7-4400-a018-fe028456f3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a6fac-9408-4fba-94b5-00e77ad60ff2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13aa9e2f-4655-4396-83a9-3b3bfd1c13ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c5ec34-163c-41a9-baf2-e58639d83e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3702b2-720d-416c-9da3-f6224426baec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59995f97-269f-4580-a029-efa23b5b2eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c907c57-5266-4c90-bc96-5fa7717c9dca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea01445-6cd3-4db4-8c79-abb22fe07b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e6d7a5-9ae4-449f-a414-8eda068fdcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a7d4f0-e8e8-4713-b379-e18f3424a4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5f183c-bae1-4a9e-a89b-b8f2edf9a937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec0e5d4-11bc-44ab-82b6-1f00c67275e5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e5d2c8-264b-4490-8f2a-88e6a4b5d2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3859b07-87dc-4196-98a4-76c719c326de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d3812e-ff2f-4bd1-a41e-ac4ed7c2f27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0e39353f-8187-4a42-9d79-f85560436002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99309299-af4e-4faa-b433-812259f55591",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff94fc-29e9-4d81-a98b-f7cff8a663dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2b897d-6d1e-4964-a7e9-0ac923bf7998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418e7911-7f69-422b-a796-b9113b824e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9af248-2190-4139-b40f-68bb76995551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648b6186-79e5-40fb-b407-d6d0446e0e1d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c47e158-9fd6-4344-9f68-daa3b2e48454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac316a0-7209-437b-b5fc-c4b0be48e57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5920cec0-8a81-4595-bd63-bd115b2ccda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2822a148-7156-409d-9fbd-66b712bfc03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca20de40-ea12-4277-86c8-7f075328b7d6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2394bf-5d6a-4210-a6ec-41072d3d40cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78733b4-6885-41c2-b137-5b578f31f11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b29883c-21c0-4ecb-a42e-fd08c9470382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e632e4f8-7668-42ae-8273-7029a821f306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcf1881-ffe3-4523-a846-cbb451faf1fb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bf0be5-23ad-44df-947e-d6ae42e864ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd5941b-d357-45cd-84e4-f86370aabd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52498a91-c35a-437d-81b2-e74908e9be43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4897a0b3-3746-4603-854e-76d63e82c5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a927d8-7ebe-41c3-9c4f-955c7b3d4caa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da18cc3-d49e-4b86-8f2f-41c5d0f2b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f372203c-d4ef-4b15-bbad-ffda7a0b3120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a987fd7e-77b8-4663-bc97-7d4589709cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "400859c6-7e91-4284-9f8a-46ca55463179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749dc5f8-4824-4d87-be88-eea227d76e5b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510b636c-2c39-4a8b-8a72-716ad28b0d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb2d84c-653e-4280-874d-098d081a3a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5877b0-457c-4e34-a85b-b37214079156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42dde24d-44cb-4b25-b6fb-55bfb9c0cf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc59ec21-c2ee-48c2-bde7-c66f4fabb305",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be7c29a-ad81-4b84-adb7-847cb172860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9281e625-ba16-41a2-98c0-a8de5dfc297a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f961181-6020-47eb-ae00-bac474630bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c69356f-e063-4699-8a1b-d7a0239a3657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a805d3-c56b-43e6-91c5-dbaa9ed36550",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845d568d-c627-445d-912d-791f7f798ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c43b290-8492-4b6b-87da-1f8561d3bb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5925e01b-5d47-4212-ab51-e6bec4cddf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7d2bde-e786-470a-80f1-2c9288168f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43486e2e-65f8-4a7f-88d8-05c6bce5a9b9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eafe60-7703-4c1f-8af8-2aa4740bd0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3a6d2e-2de6-451c-a8ff-81540143f2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb5e53d-0e87-4936-bd63-a44d0ea27389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaddee19-faa5-451d-badf-6f8f4455f966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadd5db6-0049-44e6-8954-57754d38f429",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5122c81-ece0-41dc-b36a-7a769fe60228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc72ecb7-2d38-4954-bba2-5b0415c4a15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25af2d5a-d936-45fa-96ac-055b6549b3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a589ff-a4f1-46e6-8f4b-92270ff1983c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffe17ee-c3fa-498a-b8a4-28ea38693fea",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7277350-c102-4b7c-8c98-1ad408491644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6997f2d-201c-48f1-bac1-1ae624857012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58706414-a961-41c9-9299-1d2240b38417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "094a9028-72d1-4ad8-929a-66066ab8075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef0ed57-0c27-4872-8beb-ccbecc8e7aa4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e2784b-ce93-43bf-aee4-c00be9f637ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb88a37-483b-4d22-96c7-d23ccc00921b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a05a9d-1fd2-4456-80bd-111d6dd53422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a80d7b-3f45-4184-8e7b-421f72912f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef58fd85-0468-45a6-b49b-e52aba9d70ba",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a6809f-bd4e-4fea-b6de-cbb7ee2bdc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fb25bb-64d8-45f3-84eb-c9a3dea12d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d501ece4-d4a0-4259-af4c-f9328fc4b2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b22cbc8c-ebf3-441c-a586-d47a1304b091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce495ff-e424-475f-9e59-4018ffccb658",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe58868-7ba5-4087-8c89-e22ca5c8e6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80ce240-c92d-4484-89a3-8ebae3aaeadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590def1d-d945-4637-8156-17ca318bada4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfa7c2f-fd8b-45c2-8e16-a3c4cb9ba0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be52b7e7-d83b-414f-9dc2-7475f0d4d5f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f46dca-111c-4811-a7a9-c037857be7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af63fc4a-3587-42f6-92dc-c71b32925669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f76c35-b334-4ece-a7b7-a3818384afe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2703a287-6a03-486f-b5f6-e4ecaa460a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a860b40-8628-40d9-86d2-4a281846e852",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495bc6e7-fd23-4c9d-94f1-15139d4564ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6517d3-0f45-452e-b37e-96d3e187a4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a212dd9-6b31-4ec0-9c66-21ed3742d6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b577234-4e3a-482e-9e4f-d9c36e245ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141d68fc-478c-48e7-9bdf-6676abb2710a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125ed5cc-36df-479d-b93a-e3897d0f7758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0242fe90-1bf7-4335-a1a4-c08c05f154b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d21cb53-1eac-44e5-b7c0-a25c5dfa15a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0770e7ee-87f3-42b3-a3da-8df0ae6f33ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07962e32-dd39-47e2-b429-c4ce7934f853",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640f741a-e5d2-47ff-ad82-f2752a33920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2979baf-e013-4a71-9beb-ee6e9852e84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75655b6c-3f46-4634-8d6f-5ec0521e8c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be93c51c-0444-4f09-b72e-7edefc265d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767b566d-abef-49af-af67-63352fd1a2da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4d8e57-504d-4d01-a942-8d8fc91919e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d9d3b1-400f-4d3e-b734-ba7e097620aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53040881-51e0-42f8-bf26-36e539813fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b76a0a2d-f656-4e57-967e-d6979efd30c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1819792-5c38-450b-819f-9562350a463f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1655ee6-000c-4c74-84a0-30d9ddb77423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb98a100-1f8e-4e6b-b918-9af23508a6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b2d91e-b9f9-4a94-a2a2-6fabec0e7c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c15713b-b29b-42c0-97cf-8718bef891c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24240cc0-4d24-420e-ab68-c335567fed9e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2062fd21-aed3-44bf-a917-175ef2eac698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa3528b-b539-4f3b-829a-7337ef0f794e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eef5a4b-3744-4cbd-9280-30065f28fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88634876-1b2d-4f76-918b-794752b5aac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0e3b4e-0700-4abc-bb66-a70a2255d8f5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df92322-8ec7-4b02-a347-57bd3c38fa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0b1b75-a067-47da-a8da-c4fe6c06b84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3085a3-4568-48a1-aa73-56426db88f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63398c99-45f3-4c10-a3aa-6909c7ac7fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6d2cc4-ffc9-438d-a112-83d01e27992c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd0d876-ee20-497a-bda2-854bd875424b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c5b9d4-3561-42da-94a6-1bd0683db219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d03f2a9-d62d-422b-929d-fd317e104271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "024cf722-06f8-408c-9c30-7467693fcab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab4addb-b656-4515-965c-371b621e4239",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cd4134-58c0-4f0d-986e-f261114f56dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52e0033-7d36-45df-8a0f-5d622768ccfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbc4e1d-cf3c-4b5f-9b0e-7290866a0257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bc5a7f-63f1-4c7f-9d75-c09e2641d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5091b0-e140-4f5b-a705-5959eb5b6876",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a5432a-179a-4346-85f1-5016145ff419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3da1e07-be9f-411b-901f-fc6896ac7f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7925bd7c-00ea-442a-bea9-8c06c68a78e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b95d17e-c6df-4d10-b823-085d6f6251e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f989c70-7701-4b29-b54d-0c75f248e255",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f633adf-565a-4f07-88e8-549b9e778693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e52d4a-a41d-407f-989e-42c8a553d58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2a1d39-4c56-44f6-912e-0878d3ed0e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c741df4-b331-4558-a18e-086aa58c2f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf0e54c-ebea-48e9-812e-3a9bb326251a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6c1272-fd18-4d86-8514-ce70bceed9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e867dd-518c-4765-85d7-e443ccad2f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511407ec-bd3d-400f-b373-31e86bffa0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "903ed472-e32c-4275-b7f8-1bb8004732cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbc42ab-be41-4d57-8aeb-075ac78f4faf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636e5d01-5f25-4d47-9fd0-0b11ff82c85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a867820-711f-4089-b0b9-5aa6e4497e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51955de4-cf25-45ea-97ef-d1b8bfcc0a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2c55c4-0172-467e-ba72-663ac79df691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2455dc-4cbe-4c26-94fb-ec0e36f5cc34",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a19b7b-da5f-49a2-b12c-e83baf3a7660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02572b9-e209-443c-ba54-2fbc4a5d198d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6939ca00-3911-4412-9749-573a483f823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e373da-aa05-4923-9657-717b35f03c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700c03ed-5d11-4d32-b9da-997822b30123",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4764782-af1b-4d62-ba32-fb3fb99d3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236bb2f9-944a-4842-a434-18b408dac133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dfed0a-0ef0-438e-a73a-b050d6a329b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1e681b-df33-4a28-9816-268a6ce10542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41aa2c4f-c234-4fba-b507-8c73d407d705",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea662cd1-e41e-4c9f-8925-498bdf942a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f864c41-9f89-45c3-9b0f-3cc902adc15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb85ddf-a37b-4ffc-b045-cae4d62091ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98517fd6-b998-452d-a2f1-510d70fdba9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a2cbe7-cb3d-4c68-8c1b-09f692dd8635",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68697159-6662-4733-8e2a-84482230c14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7a3105-fa8d-490b-ac14-b944af5fc4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f89b88-63b8-42b6-b3f7-224e07914fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "012da29c-d311-418a-b486-5878312ce4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4f7a92-60da-425c-9282-be225404607e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17dbe10-5417-4928-b3af-bd186149e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388f19e3-2863-4525-9eaf-8c9b316be078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac0a0e-88a3-495d-8ffc-3ed818a0cb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25cd426-e71f-4310-95ed-7c7534a22ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f521f5a-9fd6-4768-9e2e-b2275083414e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92e37d7-414c-43ef-8e2a-bbe1e27170f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4843592-1e6e-4c07-bd4c-a6359d139406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e3de27-3e59-4fe8-a277-e7d525e0c5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07fef2dc-80e4-4075-bad3-8b9fd2bb993c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9857a1-1959-4ca4-9f79-da7ce6a26a44",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dbe44e-d438-4918-b76e-75e12ce08a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ac180e-5196-461d-ac08-63a25dd393c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a7a0d-effb-49c7-a633-e3d1becdff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a92bb7c-f135-4e82-a179-4d8a954f5717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad765b4-f76b-44f9-8643-457114058ffc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb092f81-ce16-4155-843c-96c456d201b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2326e5b-0a46-4dbd-a3f9-23d9148823d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa651cb-7a5b-4e90-88ad-aed6b49fc2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1b290d-0a7b-40d8-bb68-f3530cd0e7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89b21fd-f0d4-473a-9105-23078e90fc7c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f84ef32-82e6-4041-99a6-78e7aa8aa070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf04399-c858-43bc-b0ad-9a1d313f3f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901fc574-66cd-45bd-b0bc-98420fdbd039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dafec571-e2ed-4698-bbcb-c5665243f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdea9e5d-2227-4295-acc9-ba501d0d3ff7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cf2361-89e8-4fea-8dda-e96fd85e5abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb104c6-c4fb-44cb-9d76-f49070abdb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42af60f5-955c-4675-a7e5-828005ba6255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e35d8ac0-ec1a-4ce5-aa90-9e36815cca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f40ac01-cb13-4943-9d67-95dc53afe2f7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bc63ef-85e5-4faa-8d6b-53231b9c7f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c661f7-cfba-451a-a3e6-f08885c71298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f938ba-1798-485f-9577-4419e2abe1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7326f4-faba-4d1a-9b19-8d42358283d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900e7788-0d78-4d9e-b4c4-08116caa0741",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5967a26b-ddea-403b-8a69-9613d1adb979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc151fb3-1cde-47a2-b2b6-3af931a70f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ac0ded-2cc5-47c4-9519-df6b93fdfe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de2cdda-588e-4684-bab7-38904cee8652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489725ea-5b86-4354-bc1e-9a63fab2c0cc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2f9166-a69b-4d3e-966e-def4a9c6aef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8a0a58-75a6-4163-859b-e9eacb1cb3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82201be-5cea-44ed-bc5d-5d8fb264f143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2c387c-0160-4993-a271-5293c029f970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ae5659-2dbd-4d22-90e4-a8d0398a0029",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0b2cdb-80d8-48be-913f-61c20297d3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfe8ffa-9b1d-435b-a85f-d5a6a8b4c562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27242ddf-ca71-491e-85b7-fd36bd4da07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68160609-161c-4fd1-907f-bb939892a2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366e7407-1453-461a-b9b9-397e3a7220f9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce62af89-93e7-447f-8eb5-e3f6285989fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600ef64d-03f3-47f0-9122-2745705b4c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f45475-2ae0-4776-bce0-bd50f77c5149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "163abe72-f498-482d-9c18-bcf88cc9e9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a4ce32-ef2a-43ee-a045-3d0db6ee9e0b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756a2d29-3fbb-4b46-8cf2-585a7250314d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca0c65f-e968-4ec5-b163-b17b2c0e4e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23da50ba-0c0a-4df1-8771-52e70828e064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd646c4f-6f9e-474d-832b-d2d7eb27aed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9463de-3a84-4417-9dd8-7e304880c095",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d07419-5ef0-48c8-83df-090bfdbc5ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdc18db-08f2-4b99-b3a9-038153a6ea9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cc461a-befe-410e-b318-6f887ef6601b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bf1c36-997a-47b4-8b28-a659bf413ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b1ab32-14f0-44ca-bbe4-662575e67c2a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f62601-1967-40bd-87ed-4372065e909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf4982d-90b6-40d5-a82e-e7f1c57b3c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca65f2c8-38b5-4dac-8714-ead8d564a0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "977b66bb-1f18-4152-99d3-c82e4c634588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df6aa19-417b-4fd7-907c-1306770e81e6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2feac8-0479-4814-afff-dfd8f2f8bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbcf064-1b3e-418c-ad41-f23a0d54114b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4315904a-753f-427e-9547-39eb6c9b547b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11c86f8c-974e-41b1-8fea-398230fad44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae9e9ca-0aff-478d-ac85-d3de064ee892",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8bda70-6ba6-43ba-a668-e2e17ff1b9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7ff377-fd5d-4aa4-af1d-1d7dc3f0cbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75c71b9-112e-47c6-9209-36fbbcaad9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e480ca06-e8e7-4648-8add-a9b398649689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b3af85-ddc6-4ab6-9742-278980fdcd1f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85b7115-11f0-44ae-8fe6-b3271de855ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ded35e4-87fe-4627-a2c7-68e9185bcdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec371888-c8cc-4494-91e5-dc904721bd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "771bc9a5-687c-4b82-9afc-69fe5d8da463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a54f0e-340e-433f-8422-9f0449b5ffcf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca4aeb5-e454-4c13-b164-a24ecf8fe1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "55103318-9b8b-4944-9410-88ce54f753f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927bd61a-02c7-4e54-a950-cae5883e979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eceb8236-8e61-4c9c-9f1e-b4373886d924"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e11f82e-f456-4f5e-b884-8c8756c3c3f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28ecdddc-07e4-48ad-87ca-40788c6a47a0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f4da67-234b-42aa-b463-0e357c768d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5291c6a-e467-4c7f-af3e-cfd9feff3951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1963c386-b952-421f-a8ae-7ed99c0ff293",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ba09abb-8b8e-48eb-a051-a44329c9a83f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d6cc954-3f67-45bd-9de8-3dacf9742deb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1920dc7-3b97-415c-8f22-3f3cb1d3f7bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ef2e5fe-20bf-4911-a5c6-2a653018f09e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbf548fb-72e3-42aa-9a56-267e13e2476a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf31c1fd-14a2-43b4-be4c-a32587750527",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5376292-7934-4f24-879d-23aa527d7299"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c120e2e-e5fd-49da-849b-6551e30ab954",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b43eaca4-f9be-4a42-b2a7-58a38ee9b2d6"
                }
              }
            ]
          },
          {
            "id": "1acef3ca-dee2-4e63-ad74-4bc112bb7c5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "447e791b-b1e5-49ee-b844-3424b746b00f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "608a6897-7559-4e75-bd80-eb6f8406f11e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62e838cb-8d57-455b-9dba-a0b878a5edd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7704dca-a720-4857-9d42-373b7a8c442b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3685851c-9b89-4b94-b853-29e621168eb5"
                    }
                  }
                ]
              },
              {
                "id": "4d5b9a12-fd2e-498b-8b60-87104c30ebc0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ebb9d1c-55bb-4b28-9497-135263503531",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49a52897-278e-4379-abf6-efa3e123167b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f64ab20a-eb36-4b3b-a6b7-d7bf4dcc839a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "103a5ffc-367a-4ec2-b6f1-0cd10c0dd856"
                    }
                  }
                ]
              },
              {
                "id": "9dd925be-bf59-4431-b2ec-027a18976f6e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "102ab700-4d78-4dc2-9e6c-fe1361a464d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08dc3faa-8d71-41d7-84dd-bd16b0535bec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36e293d4-9225-4e5b-8978-69d7080b0ffa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d776e25-0fb4-4ef8-b726-d4dcc489d7dc"
                    }
                  }
                ]
              },
              {
                "id": "d0dd4488-f68e-4cd5-92cc-f5dcc7c43f1e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6d5ea5c-63c7-4a86-ba21-322c391d6511",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2ded544-88a6-429a-b4e3-e8b31ee603dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f7ace1c-6e0e-49da-aaab-e069e0663520",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a7646372-086f-43ba-b4fe-1e3ecf5afc99"
                    }
                  }
                ]
              },
              {
                "id": "39a3e85e-593b-4a57-955e-4d753ff569dd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c174e6a3-2473-47da-a646-de85045482d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb307c0e-681f-4e99-bc4a-9e71bf77f49f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58729791-9e51-405f-936c-4b708a6d6cc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a9bde22e-eaad-4ba4-8d50-2d4bad292042"
                    }
                  }
                ]
              },
              {
                "id": "6a1a8b91-7d6b-4150-be9a-eea716ae9dda",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67789fa7-6320-4c4d-9c73-632cd5fda6a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2e787f9-b980-4863-91e5-b43bf80be47a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3aac917a-0a1b-493c-85e2-cc4b150be9a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd7acec7-ac6c-4764-94d2-2fb2b7b4bb51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9fd5fbe-e005-43c6-88ef-afba6278f2f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09867226-3820-49c3-a220-a7ddc937c83e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c03ae05-6d21-41e6-83bb-7a94fea3a95c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3d8fe7f-56d5-445d-ad76-325af5b599f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19b34d9f-caee-457b-9ab0-77959cc41089",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3decd2e7-d979-4925-91e4-26d88ce30369"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "381e1d99-f9f7-4ea3-a1fb-855b8c32bcb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6376f494-0fd9-494e-a41f-3bea8663f35c"
            }
          }
        ]
      },
      {
        "id": "170fa8ab-d195-41a3-bf73-89456389d529",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f0979dfc-bdb9-4a82-94e0-f8c02a93de42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc227804-b612-4753-98b4-2f459922e3e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31c9c441-9897-4567-ac3e-674c82507703",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488797b1-171f-4810-ba40-7f787698af80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46aadf0b-2535-4090-a783-eb895503882e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ebc788-c9d9-415f-b611-161ee95fe02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea540e37-b226-4cd7-9534-5726efb2dbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6080aec4-2486-4340-9cdd-2e3c52ff3f17",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3c65b5-40f6-4cfb-a0cd-44a0c9d24c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b1631a-1dc1-4432-b96f-b9c6dfadfc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bee17cd-c643-4e4e-ac94-c0d80b81ebed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5695a93b-8f60-4ed2-92d0-238c11e32da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e22f1f-22df-4bf1-9d30-7816c8eeb61d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc88ceb1-76e7-4975-80d3-d1834cb59312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3b1c73-f779-4a63-823c-8650c62f4986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bcd123-cd6b-4cff-80a7-928ff531639d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d613de17-6ab7-4096-9eb6-465b252efde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54edc4b-1ddd-42a6-a77a-14252c3b883f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fa11a8-f79a-4e9c-8ffa-666842dd3f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9feb67a-5bf6-4a17-a2d6-75efd4ad9663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4a9b23-170b-480f-afa6-276989132098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52156170-926c-4ceb-80aa-61a4872d240b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ec0390-d09b-4a5e-bb0e-a8ab306608d6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dfc575-0f1a-4200-a81e-1c6f257d74c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37a76d3-1207-4452-92af-0cdb31844ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c55b0f1-f106-4ffc-b4d9-158e422bc2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80b50d95-6d18-49a0-9771-b2350102bce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30a93b1-8330-4e60-805b-6b043a592900",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9691de-4a5b-41e8-855f-9030bb5547f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9619647-63e6-447d-b36a-41c7c63528d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceec7080-d869-48dd-a1a2-e9549e3dd1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a35e46e-7a86-48bb-b5ae-fcc913c1f8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79735f4d-e0aa-432b-8ca7-afe83cada4eb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327dc770-055a-410f-9f88-def0f5df789a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a979da01-cbc7-441d-90d3-84c718156953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d095ca69-506b-450e-a77d-a9c3d90cd435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6716d249-15c6-4023-933a-ded5d6862c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dd138b-4e74-4152-a1d8-de6f603f36de",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b27a44-db25-4a79-a50f-ae24bb267b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2554be7a-9c8d-43fe-964d-371efc72b69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d589f1f2-bc5f-4fb6-92e6-eec5ba88c60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1819c6e3-6331-4a7f-8971-f27b71cde120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a21c4cc-e06b-43c3-b1df-2aadcf810639",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197adba4-6a1e-4d33-be62-423cdf9e634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c275b1-8d03-4821-9e64-42e68f5b9c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd684240-02d9-4a2a-a140-838af26cabe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33e7cf6-6a1b-46e4-8eec-f33f7ff92f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e54b58f-2e40-4218-b465-442ab8f8d6b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a8618a-b47e-4bbc-a5c7-71f9e9b94c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14c2d7b-da18-4c2a-ae75-9ae9662b2be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a86147-0d88-480f-8ed8-ebe940e854f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b36c2a4c-5ca5-44a9-9ab9-ebb5671c47a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d1582f-2167-4fc5-9fea-395a6a6e2376",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fa532d-3c57-40f1-9627-2ee49097a75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b91e4c7-36f2-4b38-80de-ea54c38fca2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc03bb5-e024-4cbc-85f0-d70550cb6800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "522ae4ce-082c-48a8-a256-d7188d92eaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6224a48-8593-491e-9efe-2397bf43a289",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf6b756-0524-483f-9eab-0eb5ab227d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7cab1a-d60b-4de4-88a8-9c6c3a5e4bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d6a690-c43c-4ae0-84ff-1fe69e3cfc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5f6ae3-f881-4ff1-b275-98dee802be2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de83a13a-cb92-4525-8f47-14dbcf621590",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026d9405-b007-4c64-b74c-d7dcec261246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765e9a07-44cf-4828-a0b1-0b759b0f2685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62bc84e-07be-4132-8793-21c0744e90ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e977a1b4-9ae8-488a-a06b-36589bdce42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f061e146-8880-4e59-99fa-aa83390625a0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57cb36c-83d0-4cbe-911a-9954e0bee207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1054a6e5-5d5e-48bb-8aca-227889ddf49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0cdfc9-d78b-47b8-ba2f-b050e1dffe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9a917b-6570-4101-8fed-0ed6e1fccf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08687e4e-8c42-4020-aee8-527608574452",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa646afe-18ea-4a97-b9cb-0ea4d75b6d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7289ce29-731c-4989-85e7-ab9275984e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b069e43-fce3-4eb9-bec9-ae816ec85afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f47392c-c883-44ac-b977-8ded2ba67ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea697715-b667-4f30-9c7d-041e3660d516",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523e1cd8-e4f4-4376-afeb-a2d2aa9d5bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba2551a-4bc8-46a9-a70d-1e14aa406764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6133d59-0713-4c13-aa96-602d79c76bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dc553c-db80-4de9-b5d0-a5dafddb0dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d16e6a4-2ce5-4016-a821-a6f55d635345",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9d09fb-a984-495f-9116-b75162167d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dbb427-329f-4da0-9878-c9230b54fc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9282861-29e7-4e55-b8c3-a19081e30853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "569efced-e807-470f-a4f9-43590f99afa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7ec3a5-aae3-44e1-9726-e176a106ae30",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c528f515-b020-4cb3-897e-efe653da94de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e65024-2440-4008-b4cc-7c28bd5d3e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fc6bb1-d497-49a2-9b7a-10734ca81bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85bfb90b-bebe-4a0c-ac65-1ced8dabadb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a216c88c-8a84-49b3-9be6-99e8bf4bc395",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d08c78-b531-4ac3-983e-6ba7ec51d62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13669c21-3db2-45e3-9451-639ac92e29b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ee9a9a-b947-4dd5-9c77-601e9cdf9019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7ec133-87ef-4fd9-9510-27b0ecd29cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7381098-77b2-411c-b9eb-9f59bf11bc51",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363ed0b1-07e2-4bc9-8083-7f8950da11e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd2b999-9a22-4ce1-863e-15e1a5ac4af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cacd787-eafd-401b-b339-e19f2166f23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3b4b55-1648-43fd-8aca-a65f1831f120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6437271-e3c1-4ceb-a5b3-5a22b989dc43",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4afca98-370d-4ced-ba33-03b28812f269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdc8bee-a978-41d1-8d6a-533c234d0d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c42c67-1f3c-47b6-a90c-b6fc646e1459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0882f925-abd1-457f-8a7c-3743c38e8414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0814e49f-c17f-4bd5-941f-e17e2528e898",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e080fa49-f59a-4a2f-96d7-734d462f4a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a5eea5-9c1b-4883-b025-c201cdd9474e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db019273-8c2e-475c-a2d3-bf85bf9b7d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c0ddcf-f63e-4def-8ec0-c082241722e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba295ff0-40ae-426a-91e4-7e8e9a2c768e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3129e16f-47f3-497d-8629-ae875f43d5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e923ee71-1e4a-4c9e-8b6b-2aa3373ce033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e885e66f-9921-4b28-8da1-0f7399028100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f556fc-7696-4681-b3f0-cd78cf3ad254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc822b01-7611-4f38-92c4-a6aa994c47d2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36acdaf-1cf7-4fc1-9fd4-166dc5af40e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b40f37-cecc-447b-95b7-8d2a47c8784f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc0011b-577e-41ad-98d5-2a9142e94399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "641aa5ff-ed93-4f84-b330-947d72b91518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce07aa58-2744-4fd8-afdb-29c059f3832b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7b1c2d-7257-4001-adba-c6e6963ab96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ab3ec6-1e3e-4e43-b768-8a91e652508a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f56d9a6-2d8a-4d2f-9168-94ae52d25f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "304fb6ec-52f8-48de-bca8-3f1906e3fe6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16fc39d-e954-4301-b824-86a3e80a6e4b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5461ea76-ba2d-40dd-b3ab-61a2e1aaf077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424ec83f-ca04-4c35-8a67-5874be63c0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b10cf8-5a56-4dc5-b7a7-aff03dbb513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2f537a-3635-4daa-ba96-da0c98c0e1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e8aaff-4a0e-49a9-826a-3e625a9b356e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fed0d6-a25e-432c-93c7-9a53290b1a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba072f6-d2f3-4443-9a99-f7ea77438b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3cdf52-4915-4193-a10a-de8a7cbde5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd7b35b-4d64-43ed-aa11-0ef2b0b8cba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8e1c75-0cf6-4e4c-b23f-309b83489e48",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aa51c8-b977-4e5a-994a-e45aa47f5c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908a61b1-7cf0-4ebe-8ba1-b978898b806f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d1fbab-5965-4a74-9b38-186903ab1dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2037084c-11ad-41c4-873f-5051ebc043ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913a10fe-4b17-4e1d-a14d-8b988e79ab1e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e06730-2a56-4c40-99b7-a9b915276794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677a4992-a304-4c0a-8d43-7d7668af1e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d069818e-dc9a-4928-a062-311c524023df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1427b97f-aaa6-4cdb-b96c-277f1160f4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cde1ac-2b44-4494-a68d-3d5ffdddff44",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13967e7b-63b4-44b2-9075-803a7d8caef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c503a0ec-7c57-4167-bc89-fec97e0c0e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7918c4c1-af97-433d-b658-d475781270f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d010d80a-3ba4-4f82-8ea1-5c37492779b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b996f85a-f2c0-4c34-977e-00ac07f62ae9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533669ff-070d-436b-b27d-6fd5f2b0c7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf9edaa-cbef-42d9-a10a-09975294f304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04302499-5ee4-43a8-b36e-be689a2dac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d00654d0-da74-4a18-8e8b-31defaac4430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db83e57-ebdc-45a8-8864-e418c6f07bc7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1f8e81-86f4-4a6f-8e8d-b8237f02c19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4347f589-3f93-42c9-9507-e3d91a96f8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c21f7eb-53fd-4923-8f1c-79a598cffe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8345c91d-5fcd-4496-b459-1b1f8bfadcb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4004f643-803d-478a-998f-9a73c1b1b102",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96307f4c-d2b6-40d1-b054-79a6230a041f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e7658f-5915-414a-8c2c-110ffda99751",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5ced40ad-9c13-4b9b-a8b2-642d455ed493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1132d2b-6e21-4401-9480-7106d339dd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "426df21f-b8da-4f29-8a01-cf1b4f11cc88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0508dbc-c829-4787-9eec-f4c3d6f7a876",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0717b4b1-4dc4-4201-a208-274c678ef866"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d81dab-3b1a-4053-9ba7-22ba7e0795a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a1d7704-a1ef-4f48-8731-954624dce044"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a88963c-8e15-4884-a612-e5887cddc8ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4627af8a-86f5-4149-ac36-46fab6fc2b64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "573aabc5-6bb5-490d-84d3-785fca5b2466",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b422bb6-7ff6-46fe-a8ce-de6038f53d74"
            }
          }
        ]
      },
      {
        "id": "b4a7514d-c8cb-45ab-b965-a696c9bd99f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6d34b1ed-d54d-45a5-8c30-90484903c0ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fb595e1-a322-4473-a5fa-5feb41928607",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d986c2c-d93e-4bfa-8e1f-9a70b056c88a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f83d5a-6342-492d-9be3-a45db0afbd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da9ecbb-e35f-4813-855f-57f4bfc7372d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1eaf2b-32a5-410d-b6d8-ceedf34b5f3e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2606f88-13a2-4841-a61d-903d34d062dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d66625-3383-4cab-b522-569d790f474e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3f80f5-0a10-4ff0-bb4f-935d2c54444c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aae39c-4262-4329-8e4f-e1f28b8fe701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0de8387-8f34-4a11-bffd-2768cf014635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f0a6bd-46a5-4d9f-a543-d4af5aaa11bb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cf5208-8e13-4be8-ba1f-1b1daac052f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20ab4b8-fbca-4e81-89c7-e14ca1636a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1586a4-d7ea-4ca4-a599-2d225041820b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3450e2-6405-4c92-943f-9eb751c2f5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75eb4b0e-60ba-4dc5-9dba-4ef78f0cd91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0ca3dc-9868-46a4-9468-45f11a2a0cf5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa95790-7426-4747-a5ff-26fb8924f191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8100c7-e4b1-4fca-9786-0d46298e63b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbd30fa-fb6f-4999-a4ff-c6622e278c87",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed944bd2-5892-46e1-b532-77bd9c08a3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a99370-4259-4deb-8714-a42cdfc707a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b5424f-8bbe-4019-b30c-bcbfe05f6592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124920d6-3211-4f84-864d-08196bbc4ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15906dd-b1ed-4e04-9985-44044b0355d6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f82acc2-3d9d-4b50-81ca-98fbb61cc877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e609c53-eedc-4fef-8fc1-d8600aaf7afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6afb41e-d13e-4319-ab5c-035830ff5241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3682513-2d3a-4788-96e4-407a71b74bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3fb71d-25b7-4065-ab6b-57c41e97b518",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dfdf04-38da-49b6-a69a-462d1a30498c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b35e807-d962-492e-a821-eca57f1c05a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b20dbd-308c-485d-b015-f0c9fb48448b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df999ce-7108-405d-a6b8-b492c0f28a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22437a5e-617d-42c4-b732-c6e916dce7fe",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4c4dd1-d586-4774-927f-d2352605205f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb17521-c66e-4bb8-a318-de01810e587b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072aaec7-84a6-4193-9dbe-930034f49199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ac0da3-81ad-4b5f-8ec7-0757f11ed828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0cf99a-4445-4f94-8e4d-c3684ac27f17",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e411c13a-5bba-47c6-901c-f54c5fbd54ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f7007d-d808-4cb8-b6af-a18119999f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6758755-dc34-45ea-90f9-28d71d542b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0a88eb-498b-4d44-a1e9-48a1e4813f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40d369c-08bb-47bf-b2bb-8b9a9d8a06e4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2ebbea-3b6c-49b6-bec5-5a2e6968b4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7a0dc4-93f6-44b6-8298-e49f9d2d6b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1caaa6-6656-4200-b0e7-fce1dbd6a434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be7c874-8a32-4779-92d1-5e0cbe68daf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a721c9a3-a166-4bc9-9176-2006e2ae6d51",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36b656e-9256-4d25-9a51-9c6707d6945a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c39a7307-034d-44c0-b450-71f7e9d43992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecdd305-e137-4bc7-ba3b-577892cd8a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7445ebd4-a974-43c5-936e-0693568c595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0557e77-34f9-4e8c-abd9-a621fc4daff9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9752d468-ae1e-44ed-a239-470edc84767f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb27e54c-9722-481c-80f5-bbeba435d012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5882d4af-2f26-4e10-83d8-07bc1c36c90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c614b238-8095-4b67-a98b-3b3a8470506e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f759af32-0015-42eb-a01b-c7bb8af99f42",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d599af-6a48-4b81-b0ef-f3408f65ef5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f4532ed-f694-4877-ae19-81fedd71c5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8897a87e-3887-4946-bf90-f1ad35445226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef1a124-919f-4738-818a-71094e17ed74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75798949-56ce-4b42-91e3-57c3bc8ffbbe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7223ce72-cf5c-496e-b4f1-e9af3acb6464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f404b3-172f-400d-bf15-cabd6c7b771e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9a6609-b769-405b-a373-f902ca3a6d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a271d1d8-b9d8-41b0-a961-ca98ad947f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6af83b-a8c4-4e3f-a63f-4df4b0a14e7a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b0bae5-7695-435c-9362-5f85012ef8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57dcc811-cfd3-4626-822e-de5f7c20c4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a6947c-d2af-4d7a-96e3-e7865ee2ed7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55b8842-1601-4a63-bb24-3a30be9f9904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdd62b2-d949-4f4e-ad85-858ae7bd19c5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508ec8a5-7298-4f79-b6fe-997b72d65c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de174c5d-f30d-480c-8abc-a92a336e85cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0d211f-b30e-4a53-961d-d8b17ff0ca0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3cad60-448b-4eb6-b0bc-d4b9a92167b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c288b77-e7ce-4909-8198-82e07a32b4be",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5360c5-18da-44b1-887f-f0eb4aabb376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850b9eb5-a4f2-4b73-b619-733f5784cd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd8f7f5-5448-42b5-a123-1e66d8a9e08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c6787f-be0c-4e3e-b646-c6aba4890ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457155a6-2b7f-4739-b798-7dbe16bb82f8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b0c0b4-13bc-4596-908f-898f64a9df56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b8e914-820c-445e-9e44-7effa51ef49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ba8d5a-a252-4d0b-a6e8-f4af6a736ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451412e3-c08e-4b7d-955e-d1cc455f10bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3f09bd-813f-4de6-999f-2834ed9ecbde",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd79d857-ccb6-411a-90e6-a3cda7e6532a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cab4f3-5fe0-4b4a-8fb9-fa144e496a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6184111b-7458-4819-a764-25751368c58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dea68b-7d0a-4c6f-8691-f65861da8c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae28893a-d784-424c-912d-173feeaf89fa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1089e5ec-f118-4414-904b-ba9529ac7743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75674161-660b-4184-bad2-d044e976c994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805e6823-8d6c-4edf-a647-905ee7af208a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e2659e-003d-4491-954c-2e2d8157760a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91281d06-8707-42ab-bc69-e05c118b2f52",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305f0fc7-b013-4c91-9fcd-0c858e9bade6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff40ddb4-0464-4f13-909f-3f9290412e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3cc19d-34a7-4f61-ba92-7c90edb1d7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d20e2f3-eebf-4862-a161-80a68e2ab5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cef5c16-5ae2-4baa-9aa5-76b99e646314",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887b5898-ccac-422e-9ecb-5176722102fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d4e8e25-e86a-4356-a8f7-5e4edc56419f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e878275-25a9-4f6c-b2db-40122355aefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da8bbe8-21ec-478c-9ccd-ee73c3361223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f504c0-19e6-4807-9138-1b54abf1ab9c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc6b6a4-bd5d-431e-b453-2e1082e8e918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd99c32-9d53-41fe-9a46-e1a6878e7286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4596afe-8028-4305-81d6-2cfa6056c7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7bc4f9-7006-4125-b3ec-b8c63e4344c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cf6278-36b3-4067-b0c1-f6d67ea02a92",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef86f4d-2260-4634-85cf-653d688a1453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc0ae10-d320-481e-8a21-02aa513c4d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748db3ec-0145-42d6-9673-a0a251e8eb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a5eb5f-5b7d-49f3-b664-611041d4b7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f647cfc6-5071-4b94-8357-506bfd84b0c3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42ae8ec-ed08-415b-873b-07f060af8db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7fcc8ad-e6dd-4135-9ac6-e95c973e403a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b4760b-c2e4-41d6-9432-59899e51326b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbf5e64-4701-462c-8d90-7ddb35bee37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038b126d-7c46-463d-84fa-8dc726ee9dfb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce33842-5cd2-470b-8244-2dc6bf43b607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c879f6a-5d16-40a5-b378-42783345ec8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6ecb08-06b1-4ac3-b447-3a552b82e434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264855e2-5724-437f-91f7-eb0e0f3a5b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccc740f-1966-4476-90e0-6900f7037e4e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a838ae56-dd56-4806-a811-6f177ddd8730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3741c7f1-0617-4b16-bbbe-ca3f74eb72f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc13a8bf-8d70-415d-bc9c-47d5ca029ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09afbe88-0ba0-4631-8942-0217b4c5d019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43869e8-4cb2-473f-ab34-f4bea377657f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7a3552-094c-4c46-b693-f46c138d0268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6495ab-a34c-4972-8b29-5000e5363b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2604f8-b371-494b-8373-dfd8056ccb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90af996-fcc3-4832-9aa3-cde513517353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad777cf-2ff6-4e76-9cfc-c5a14dabce69",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b7d9e4-24cc-499b-b04c-2470644f7cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614430da-918a-4975-be40-0b20a91754f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3c3e56-0dd6-47cc-a1cd-a22145971dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cd90b7-d76e-4295-b5d2-6341c67d4c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db44efc6-6333-4f37-8f3c-c72df02fc29f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b7b1a6-c209-4f40-9aa4-0616e829996e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad7a735-ec05-4f82-80b3-bd417c205611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb6de3d-6451-4791-bc44-f076ba13a311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e84369d-d82f-4c3a-be10-8d473591847c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc223eb-6757-4e75-9820-07059d7c3a36",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b881b4e9-d59d-4df9-888d-4a00e968b4f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30497542-9422-4c6a-82ec-f2094441d2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af57ce66-c7c3-41fc-ab6b-c75ddad8f21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2960494-93a4-424f-85c7-c67bffc25ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd5ec30-13bf-46e3-9e0c-9c54e065b352",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65586717-27b7-48da-9519-ba2c1082ced3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11462496-1d8e-4247-bfa2-7ae28b4ea473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4138632-1663-441f-944b-e5269e6e2347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9184b9dd-41e2-4756-86b2-6e6c1fd57718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6310208a-ea74-49ff-9ea4-6934bd5347fe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4146ca-8983-44c2-a07d-f439a0cfddee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a329ee-d986-4aa3-975e-996a3728b7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee3a5d3-929d-44b9-bded-f9a1726ed90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf4694e-5137-4b5d-8a43-7c32d3123bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a21dd0-6d02-4b2a-880e-f8d52284848c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de65bb4-7087-4c9b-b8f1-d4bafe87f8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b7492c-c069-4d75-ba32-74a816959b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e658553-211d-4016-b2f1-3a34b08ad02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eff9822-d3d2-4b1d-8469-a3079cdd2b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c871c5-5663-4254-8eaa-1af036d8dcb2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d21dc22-8633-480c-8622-f539d88f6a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426714c2-e37c-4ba4-a342-3896219732a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6663d8-aeb3-4e04-98ab-cceb706fdbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b31d601-0393-4aba-9fdd-f2375849e607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b10fba2-2144-4904-8ee8-22c8a947c1d6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76505f70-d0a6-41b7-a629-2d43c2e0d9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d1cc4b-92cc-43da-a36b-839bf3cb58ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e46b70-3313-45fb-9576-d2e0311d725e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6065715c-5e19-4ada-9c27-e759533a5fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae39cbe-37cb-42e4-aad1-30b3d806778a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b0265e-8a19-474d-b479-78898b3e7bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277e706f-455b-42c2-8d50-2f35b84d7efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f5e95f-7610-4d12-917a-63a2bc682a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63f6453-da65-41bb-b008-aee68e21ed42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03528134-1f13-4485-aa4d-28095f525d94",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c72bdd-4504-41c6-a145-3df60dbbec02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f43ff10-22c0-4128-87f0-1826c5af5f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1e07af-4c83-43da-acda-271b5d474e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d47bd68-a708-4403-9104-975f831c728d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc9e4fc-9e3d-4455-ab2a-4d2418e82238",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08a24f4-4718-41cd-8b97-02e271897917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b51a4f-128b-4c64-abcb-7dfd4c263825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d493a702-6aed-4406-a423-780d81560fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e053d012-6563-4e87-93d2-45e4ccafa448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a312d1c-fc53-4260-8f61-d67b16b860fc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1d803d-67f8-4066-88c3-277b96fdbd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dbc62c-d670-46e0-9fcb-68fbcc21499a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8f09c7-f7c5-410c-a433-133568691eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7520f9a8-7ed3-4203-bb1b-ee893e2892a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a9d59b-97f3-4121-b982-522832d327d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ea49c2-3129-4c2b-8b39-8cd8a41048aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c66579a-f611-4486-b17b-d988e336313d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eb5cba-a955-4a13-a178-94bfe2e487f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680ce9b2-f498-4208-886d-56962a81172a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83535d3e-0550-4268-9047-bde2f7fb36f6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30441e3c-4478-497a-93f9-ee4404199062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b07959-4c19-4fb9-b197-0a6b6f5dcd04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c55b7d4-af98-4f9c-8525-d13f22e780ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd2fddb-14a7-4b17-8372-60312787a263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb011c50-5a3a-43bf-80ca-8a28da8be3b9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8e2e87-3bf0-469e-b676-e82bcd35e347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad65f751-61c0-4d42-9ff4-b7f2e8fc698b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141b7bd6-0d4d-44b4-a788-f2e98ba161ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adee6eb-d9c2-4c23-8ca8-70e2bacda246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7c1bf6-80c9-42d5-ad0f-85c01ccb8597",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ef2929-d28f-4e6f-92b8-93e54a650eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f339d1d-261e-43a8-9331-f86f0b655305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c094d33-474e-4ef7-8824-87542092f5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc213d9-e54e-4f8e-9d66-058dd855571e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81f892f-0465-4895-a6de-346a83fe8fd6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485ce4ec-f1e5-42fa-8b1e-e8a26bd98b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ee24ea-3f56-4857-92b8-bdd534219475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5ed51-0c95-45d2-b90b-c7203008310c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cad81c2-5a29-4103-b6b0-0ad9db18026d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bb2b4f-10ad-43d6-baf4-ce8fa5d3dfd8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84884a2c-486f-416b-ada9-3f7c9239320a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f052cd6f-7cd4-47b0-bea1-c9f574f4a56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed6f478-e06d-4556-8f00-180da613cb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37938ebd-879f-496c-9fc8-cefeab2522fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0289fd9-711b-4a7c-b805-344c0d7a74ba",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90a5519-176e-4b4a-a99c-1e38cab3dcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d92f20-3fce-47a6-a5ca-36283c67d506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f536f666-e989-4107-bf03-686a4dcb22d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f4cae4-b290-4ce5-ac97-f14b42fc0111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e5fbdb-31db-4ebc-a6e3-b1e81e623077",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95a959c-d125-44a0-89f3-b5a6c17b0a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a9c1d3-2a48-4d97-8522-d8b7b303163e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0708ac7-d9c8-45b4-92a2-9e71178a827e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe174d0-9782-432b-a5f1-e662a6b47675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f99f7e-8c29-4942-9ace-b28676aae1c4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3473e838-f202-49c9-8596-6b8b4363412b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01af57d9-7d8f-472e-8225-d05817ff3f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c967985-dba3-435e-9863-13263b215dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db4ebfe-391d-4347-8523-cd38c6572f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27611e4b-f1bf-4fce-bacc-b20d739a2562",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce3ccdd-f166-49e4-b9ed-7c64a0026fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fb1a29-c1a3-4211-b477-8fa22a343536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01ea00d-3793-4eb8-a148-a7ef45a3c595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c31be2-f67c-4e20-b975-d0d28684277a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6594625d-457d-42c2-8775-e9af4453f657",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8514f18-02f9-4fc3-8431-f3c3f7e092d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c99bdcf-32d0-48f7-b681-fdb357811f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f5c7b8-510d-4d24-a46e-30006e2bbe52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ab0b89-d8fe-49ca-87e9-3391ff8cc54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9899938f-c7be-4091-808c-112431eb88c0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e55d865-9784-4f70-bc1d-ffb4884c4839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7f2fe9-c911-4518-92cf-4149e2a69f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c927159-e6ba-401a-9452-c1defd82952c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da801306-f45e-4646-93aa-626557486877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36757bb-b2cc-4858-b26d-eed2d5e3bec9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c758ccc6-d1f8-49b3-b144-39bee6003943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd7059a-933d-42a1-9ce9-63e358253475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9152069f-f983-41a1-9dbb-69666f592a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb29a27-1a06-49e8-bbfc-38f7a6a2bac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a66ca4e-f4d4-40b9-8678-48829b0c8349",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3330e11e-090c-4038-a16e-86c6f63de0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3115f5fe-1ece-48f3-917b-f481a657f305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7803f32b-f409-4f89-9e2c-70c0fc8e4d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa594ed-e6ec-4336-bb89-bdbab40662b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d490d41e-10d3-46fc-9011-bae7ea7dbb17",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c6533c-e527-462c-9105-e502806700b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec77bc21-028f-4a29-a2e2-c79815e19e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e761aa-53ca-41dc-bfb7-e594e30daf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cf570c-b229-40ea-80c1-2626a4b33c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77e39ec-370c-4d16-b45b-44023df90b55",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c33fa8d-2507-47dd-902b-a53c46d6f9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd18a3a6-c587-46e7-9b2f-e85a29580543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345d2439-6908-4f20-876d-9ed8c858be05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5211728-4e6d-4fe4-a737-a39ff8114888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f20d67a-ef19-48ac-a6a6-aad4b68bc394",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82d7b95-2dc6-48e8-a4ac-b744acf69d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d5e9a3-98bf-4d5e-b193-1489ef1952f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef588a6f-e043-4a1a-a764-429cb72c321b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c82688a-c682-4640-b94d-c6add6f08afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32390f6d-68f2-413f-9d78-308a318c889e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1313464-066d-4cd0-934e-93e0ac187286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fba5a1-d191-4af9-88d8-f7901f512889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a836983b-97e8-44fa-8f5e-48eaaaf0dcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0046715-5963-4251-a6ed-a3e219a7f817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050dcea8-a75b-4967-a8f2-7630e2cfc648",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26d1813-7ec2-4382-95fb-790d4e584e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bc5517-53af-4618-b4e5-4bada00a25e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100fb465-fdef-483e-91de-a507be7409d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd42f86-4d38-40d8-a8a8-1a1aa0a65bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9385fb-c1d5-43a6-8cd7-a85aee73c603",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3494df44-b86e-48ef-9171-f67045475571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7e9748-1f06-4bfb-a745-a41ad4ba233e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234c12ea-e06f-4ba6-a4ea-cb12bec119eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6848bb42-903f-4ab1-b207-63a5959bc247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee222f97-c3b0-44f9-a938-93aa3c0e06ba",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb4c3ef-4464-4db6-9ed0-5bd90fd67c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0dde4d-06fd-40c6-90b0-6243d1839a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e87e5c7-4b72-4b40-a20d-d14d6f95be7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095045ec-3604-41df-a272-18ee87d92503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f50e93-9462-4d79-9954-83984bf56f89",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cf8bf4-adaa-4c81-94ca-7f15ccf25f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d4a28f7-422d-4ff1-a29c-d40c11a7d846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d6e2a-3100-45f8-b7f3-ffc33429376f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e3896e-8fc2-4759-bdb0-4cc96a6f4384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82373ff1-8346-4720-b6ed-ec5a31f0801d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6ca644-1599-45b9-a0f5-9ca613d26186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95faea0e-ba59-4d69-aff9-a638b49d8546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d722f140-b10b-444b-9830-f89423603999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb1616b-cf90-475e-bb39-4386b64639a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ca3dd6-366b-4bba-8585-aa2decd841e0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36116622-e8d4-4c2b-9daf-bc01ecc46255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d439c503-3515-434e-bd5a-b06f278ee6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70ca35b-d41f-4c08-9ffe-988bfe4c510d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beaf19cb-10a5-4076-a97a-ebc9d91b5e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afe2d18-6576-4105-9c19-c1915143be02",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6940126-9edd-4b1d-af5b-ea98dcf7fdc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "056e088e-a2de-4832-814e-e744914e8647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93154e2-12cc-4c4d-b90c-91ff8513511f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183f45b0-2b41-429d-ac80-cf92788acf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d725041b-1561-499d-add9-92ad82e8542c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50b7b1f-e3df-4c17-9683-a74807a43152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be5d7bd3-bd0f-4895-b273-5fe8d9ab1b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207766bb-4ce8-4af9-b8b5-7b446d57727a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdc4842-e124-4706-9c7a-49bf46c0a66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205fff77-f1d2-48fc-90a9-5030775766ff",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bc4450-c652-4046-b80a-efea236e7598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45060b1d-e6ac-4253-b61e-ba652bbb4dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81e8db9-234c-40e2-8066-abf51d83c162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39c97a5-db06-4843-bb44-bbccf63eccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7455db83-ddb2-4b57-b73e-029b6c79b4e4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7dc6b4-d9c9-4f5b-9017-4d6b740909e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93582df7-1ac5-422c-8efd-04a7012faedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741f3b38-1cac-4e13-b6d5-c191a0a70df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fffe59-b6d3-4e36-8afd-b4a46222d150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08d663f-bd70-422a-bc0c-83e8364af883",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53cf723-a9fa-4c75-ba8b-7eb7f8faf62f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e8448e5-c4d7-4d74-b68f-6fc5d54c3d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ffd60f-e4af-4c81-92bc-c9133142a277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e2c6ac-9417-4c11-a48e-1aa61e9b46e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91288042-dda7-4b8d-aee1-72ccec96a953",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e78b4c-04c0-4650-b6ee-526b6f8b1c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712a8b98-251c-446a-9197-543977436040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f77b87-146f-4b98-bc01-bbb1230a23c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9973d7e6-76b7-49df-b0fb-c55259d0916d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4008ef2f-b500-48a4-9903-043ccbba8f7c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14008da-3df1-44aa-80e7-997a23754c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e679a1-39d1-4fc4-86a8-b443bef673b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09c78cc-5569-45b1-9578-d89b47b33b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb47d273-2294-4f09-846b-d282ddb6c56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739aa301-a243-4f77-80fd-34a61ba14c06",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdea11cd-ee9a-46cf-97c1-0b66b58a0bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e0a219-850a-4558-9b03-7e092293d46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40731fd-3c40-4a0b-9915-eae965345afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62403328-e281-4757-a3ce-efa82a6c19c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e906b44-33d9-4f53-8503-35c573243dfa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10d1040-021e-4220-85f0-a68a7f1c2ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21108f69-0ae9-4bb7-a337-bf9e2c2da2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df341e26-67e5-4716-8e0e-ae35a4be09b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c8697e-f982-43b1-80d9-274cd5d1e6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c532c1-52c1-4a1a-b759-f01977707009",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bba855e-53d6-4fb7-ac74-97237a2b2c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dab098b-5753-4b93-9944-22d02a131cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08db9ed-7b1d-4045-96a5-cf4c6ab51efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f602d0d3-9ba0-4331-923a-e7d4136050f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f7694d-1778-4a91-897d-d653303d3a77",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd066329-add6-482c-8fca-5df88903cdd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ccda82f-21b0-4f59-8630-91d6cb971b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b1d48e-1f96-43aa-a9cf-fca24e5eb8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dc2ad0-ded9-417a-b663-37fa1d291501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba30c43-2d1c-4731-a1f5-d13daf12153b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb113be-a849-4cb6-a51c-3b2819f2ac47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6eef1b-f289-4ffb-a1d0-47bbdd7b41d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fb0911-ea10-4c42-a5ae-67490a1495f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484e7a13-3c97-4405-b77b-c544bac33589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74647cdf-2163-4da3-916e-a158be9e2bfa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1c443e-92cb-4ff8-ba24-875152537051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccdc3faa-dea6-4faa-8d2f-5a6a66223be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94d05e7-0996-4422-8e3c-d3acc86edf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69faad74-b107-4c4a-8965-c25ce6d2865b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99ffb4f-8cac-454c-bd53-652f783e05bf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd964e0-21a7-43e6-88be-69dfff554c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7db6b37-aaff-4aa2-9d3f-c5a718feff1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f1c3cf-18a5-4256-94ce-024f709bc095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4b744c-4a16-4d0c-93c5-096b73239627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e136bd-1130-415a-90eb-29637f7cb057",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f49953-50de-42db-924f-46e1068f3c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844a875b-94e2-4481-b7e2-8301f75d198d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2b9479-c131-4862-a858-f440897db35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7000d13d-e252-431c-ac22-ad96f44fd63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cb2fc1-c283-4fa3-b146-0ea3c7807833",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f3fed5-7f4d-4ace-a119-a661ffd880d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b673f1b-1660-4a63-8834-d9386d429ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4d50ab-b6c8-4096-91d0-e3beec8c5d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4733d3dc-c246-4598-b798-c1fa6beb2a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6257077-beb3-4d56-8688-ea6c69667f65",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b43cd0-21c3-438d-be50-1955aaba71c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "860fae84-24d9-45ae-9ce0-8ef64e13e39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309b4dfb-0fe3-4931-a7d7-9198b9cff118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880019ad-c18a-42ec-9db5-99eacfbd8b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c1b177-ed21-4e27-9ffd-79c9a47593bb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b4c6b2-3be0-473f-b544-9e873629da4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c051b4-7d00-4858-a9c2-3b8305f6957b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a50d9d-898a-4df0-be4b-937bbb5fabfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57194cf2-3e0f-4a6f-a881-84eb3423ae2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92dd75e-d64e-4c68-9f3b-173124324125",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0bbdee-9017-42f2-a231-055844ca6efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "649530da-c1f8-4cc1-b2ab-12c86324ceb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ab0d46-dec1-4b81-b2ba-8f18ede74c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0df694a-42c7-41fc-be87-b24fe6f17cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc063e40-82ef-48a6-8435-20810698076f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5396602-5aea-4d2f-811b-4f6044b942c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebca6f34-bd1d-498b-896e-0d373d0402b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6901889-ee8b-4a1c-bb72-c75abe26e6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0164e5b4-a7a9-46a2-ae56-6a947674a0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a940bb-2876-4b8f-ac4b-b50fd8b9d8ac",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29424e29-cc52-4a01-ae5d-361ce4d756fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f883c0-e729-4340-8dae-8c69d79f4458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011488ae-d8d4-47b2-a098-b7eaeb11ed57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0389657-0c17-41bf-8d8d-c48b37adda05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70444a9-d069-4ed2-918c-e1e210a80f49",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46696ac8-a496-4a72-831e-2badaefc4fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e7b588a-01f3-4c24-a915-d29d0dc517f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecba4e3-c885-49d7-ad03-ab695bd67d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b551c7a2-9f15-419d-9a91-2b48d1866679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742b8022-9801-452b-bb08-ef1416924472",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2832d6e7-f441-4195-97f0-c14ce04a454e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265b4baf-d6d1-47a9-ab67-2453468d6f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62aca95f-3ac4-4298-b7e7-7de778f8c20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a59139-e7f7-4557-9f8d-9b8e37ec6275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b029be-7f9d-4b75-a096-c67c26193610",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b93c6c-09d5-4a02-9f19-64f79f167dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16fa12b-8fe9-4d52-83cb-b35ae5383df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6219235b-08f4-4c92-9c61-bbaff5236cf4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8660e0fd-5076-484f-8e9c-dce46b42b741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d6741e-b652-4722-acb7-5fe0c5166259",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63533603-a60d-4ec6-afe4-b5aff1651a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b469d28e-917c-4119-bd03-8a65afd279dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0b2dc9-10bb-40c0-854b-5bd38b7af5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f3b43c-f95b-4de0-8ff1-4a6f4a4608f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2ce6cb-9b65-4e5a-b860-f3f7a85277f8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8151b5-90a7-4a97-916d-74d2e68194d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40e1608-be6f-4e8d-b12a-3b15d1ad2470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84403de-3e7c-4050-bd76-0e085cc10cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1348d679-e2cd-4a90-b37d-0b79b5293725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f62f0d-e62b-4bea-9916-97697eb969ab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b900c2ed-9ca8-4f6f-a167-f4945fa2d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19cc230-2ab6-4855-bf9d-624b9da651d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425f4fca-ccc8-4212-bc1a-342165cb312b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b36c557-c6d3-4512-8b36-ef83a242e15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49d5ab4-40d3-4a88-8bc7-e65831238642",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b6b27c-5db6-480f-8861-b9c3b1cafb9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bad7496-2566-48e2-8514-f6274d6f8ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a53e52-7b47-4307-897a-b5f4c51aa605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e163afd-b9fc-401f-8569-ecb7066b6e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef74154-3e67-4715-8ec7-7605432edcb8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e20b25-0e80-4485-a345-f68110ce7595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bc0525-61f0-400e-ae9a-b5b407b17fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edd7455-e0bf-4f10-8708-c4059adf6a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa4b69f-052c-4c21-aac9-9ea23c9846d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d66f82-9b5d-4405-b4da-ae1d87c672e3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3766657b-fab3-405f-96ae-c16b660be7be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87fc3f75-4441-4f81-96cf-40a868f3fd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d275611a-2acf-40ee-87fd-73c48da0f581",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adba7d1-c68c-4972-b1bb-8bf9a6235e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768778e6-2bf0-480b-a159-b9c8749d5e09",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687afad7-bb24-40c4-ba6c-67c89bd250f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43fbc35c-d267-4833-940c-d2051ba8adf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892208f5-231d-49f5-bdfd-ab1712a4b6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcbff5d-ea52-4d4c-ac78-fcfc4cd691f0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a64fcaf-a260-4400-8a3c-f6968a88cbc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3276fdf9-b14a-4406-87c4-a10a7000f6b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a782df7e-f133-40f4-be72-d9d05ba77ed7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2faa705-953a-46b6-988f-f72d9cc1f49c"
                    }
                  }
                ]
              },
              {
                "id": "d546ed60-7375-4c5c-8851-73f1d4313774",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2f43b49-3b94-4a74-b84f-04a72a969952",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e45d6f-4f17-4130-a515-e82c92377878",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "957d59f9-0308-4593-90fc-c566cbb9bf41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6592aa55-3d7e-438a-8bf7-f0e211575d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6da74936-2ce1-4e85-9baa-0c04fa1f3664"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdb6633a-9f9d-4dbb-b7b5-5afe015b6f0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "148947bd-9857-4281-a849-a58dcd825365"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e2c14f2-da01-4cf4-913b-7a2c75a0ad39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "152d508c-0b54-458a-a26c-d98af9c44d0d"
                    }
                  }
                ]
              },
              {
                "id": "39bf99b9-ccd7-45ff-b18c-f87309842199",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c4eb9768-9112-4cba-9db6-f96cf00c57ac",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5636a08c-6d90-4f86-bbd8-c259633a8bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "81806ef6-e7bb-431b-8849-17de805c9e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f90d134-3b9c-41b0-907c-588bf7aa90b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84198c6-d03b-43ea-a73f-3e6244002681"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f1927b48-e68c-4e47-bc02-4ace2f555191",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39a733c4-4e16-43f1-ba59-60af22069b7b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "033349fb-b7fa-4f51-962e-4dad5ccdb1e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13e7ea94-fb1c-4ffd-90c0-8901f5265eb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f18b4345-81b6-4f6c-a32d-3c456ce4219a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9875845-6686-4d70-af03-dc575e26f1cd"
                    }
                  }
                ]
              },
              {
                "id": "506018af-caa7-4a96-a203-25bb9759492c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54375494-9081-4b2d-bed1-1e5b4a3f4428",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "39f5977a-5a06-4e45-a09f-7c4dc11f67bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "653d576f-4661-495a-ba89-3d3389645488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ae60b7f-a36a-4b5a-8b48-91666a45fa7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70249ea7-77cc-4998-9c00-87cffc0f08fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "157e48ac-b5f0-4003-b865-30620c159d6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed9e9471-eb48-4df2-8557-5c54b9bb37ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01f3cbbf-d8b2-4b5c-acd5-013a5213d75b"
            }
          }
        ]
      },
      {
        "id": "16d3b24f-113c-4546-889c-d4a90dd2b75d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "461cb208-5457-41da-8333-9bba9c499c63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc43fb6c-edf7-4320-9d45-2b173fb358c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88c20d90-3488-4b0f-a62f-bf4c1ce95bf7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad15dbd-b9f2-4c15-a59e-f836b3a0a1f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "043e5737-4588-4f61-8224-0975bfce599b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3242e1-eb4f-4a9e-97aa-763d3d0f0d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acaa2dd2-c564-4dc8-8bb2-07daeb8b50b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "713b6e64-66ae-44bf-9eec-744abefaf080",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6547efdb-a0e2-4126-b8e4-75c584b9c8b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22ad515e-da0c-4675-912a-cbe1c651afcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f52717da-c4e4-4a36-9dc8-8a0f3ccb9479"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff4781ee-00f3-4912-9bbe-67d2bc37a05e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a14cc88d-580b-4235-a802-76d052cb2f2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "793b89cb-d4cf-4f5a-94c8-966a60c7eca0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53d3d86f-d530-4cde-920a-970bf7ad2198"
            }
          }
        ]
      },
      {
        "id": "8ef5fe9e-1606-4c2a-bb65-1009c4e020cb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "32300532-7af0-4647-8bc5-fbb71d96c578",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7348dea4-36bf-44a4-a3dc-22c629bfc262",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66d87465-e043-4760-b17d-1c8a7802b610",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262ddd1e-437b-45f0-923c-7fe3192802de",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2a1ed92-108e-4826-930c-bb9b7b2a4ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388402cb-7cdb-4d5e-9547-b825a6805d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7e26ab6-84f2-4461-8662-1f7f03889ec0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bf3261a-d40f-4683-ba59-c2d5e0afdad6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62e295bc-74ca-432c-b542-362440b74284"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a25a234-213d-4c96-8237-0acf4b323e59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70e69347-8cbb-40b0-a221-eaccc3353fcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06247df4-38eb-411b-9bae-a2ba0598b00d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f384641-41fd-485f-830a-48b097f474e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6342f09b-8ef1-488e-96a1-c5d86ba4ae0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b679eef-7c3e-4fbb-ad4c-ef66a94f7cc6"
            }
          }
        ]
      },
      {
        "id": "a1bd0eec-0d17-46c8-b0d1-12a7a8833a19",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "37207d1e-8464-478d-aecf-2e5579cef4eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "704cf679-2382-488e-8b8a-2cd417f48bc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a19a4775-cc39-4aed-a867-43a0791031e4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51d96ca-670f-45c3-8805-ac9ebc93a535",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f678fd7d-0c88-4f58-84c5-6c43ad340654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa13c7b-489f-4500-b540-0c6590414058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8854946b-8ce1-4be0-a792-c47740db1062"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7abc29f-7465-4f66-9fe1-bd9639c576f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccb498bf-eb26-4235-a690-3670871197cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b92df721-cf16-4f71-bea0-17129b82b1f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1df6898-a9a3-401b-b2e7-b2e4b455bf58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3935983d-a8ea-4ade-9214-1871a85ef774",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f193e97c-1955-44d1-965c-56a53e49334d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "add2a26e-c953-41ff-a89e-39ddf91ed81e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92840da9-c25b-4244-a90d-4377233bff94"
            }
          }
        ]
      },
      {
        "id": "786a6d2f-8250-43ff-a88d-53b1e62e94ea",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4ed93d2-e5be-4c5b-af1b-e1f7650ec2d6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af2d807f-6585-4e45-8646-1420239d5f0c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "74a33f91-9628-4b05-9d7d-66fcb687683d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "039c0023-f777-4b13-8e16-ff5f763ee3c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a38d657e-71d3-4a78-8e75-99bedf3ba8be",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.21951219512197,
      "responseMin": 19,
      "responseMax": 272,
      "responseSd": 24.179221270038056,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686616964801,
      "completed": 1686616984215
    },
    "executions": [
      {
        "id": "79bc97a6-d411-480b-b6d1-822fafca32b0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "feec789c-0603-4263-8a6f-e708c331594d",
          "httpRequestId": "8a072bed-2ebd-4b99-a145-8d1b27c8166f"
        },
        "item": {
          "id": "79bc97a6-d411-480b-b6d1-822fafca32b0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8aca6445-ab1c-425a-a421-82c0590fc535",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 0
        }
      },
      {
        "id": "1c38effc-f01d-478d-b772-1223cdb19a0c",
        "cursor": {
          "ref": "63d5523f-445a-47f1-b151-5ee8dda2cd8e",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "44dedc27-47fd-4d11-8e91-d34d373620c4"
        },
        "item": {
          "id": "1c38effc-f01d-478d-b772-1223cdb19a0c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c2d2fec7-73e0-4e51-8bd4-562d4f2737ea",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "cbe88f74-cdbf-4b27-b559-22f05452852f",
        "cursor": {
          "ref": "1709e312-358b-43da-8ed3-491627c2084f",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "899aaf22-4ca5-4ccb-9c98-d34d644878dd"
        },
        "item": {
          "id": "cbe88f74-cdbf-4b27-b559-22f05452852f",
          "name": "did_json"
        },
        "response": {
          "id": "547bca9f-12a9-4c8a-92c7-a0c2df100a11",
          "status": "OK",
          "code": 200,
          "responseTime": 247,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d1b87e-2e5e-44cb-b14f-d3b966c7fdaf",
        "cursor": {
          "ref": "3084be48-8f8a-4f80-9387-c27b41096e07",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a43b3fb-c826-43ab-b296-ca84a507828f"
        },
        "item": {
          "id": "30d1b87e-2e5e-44cb-b14f-d3b966c7fdaf",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a054b41-591e-4bbd-ac09-8ceccba3d00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d1b87e-2e5e-44cb-b14f-d3b966c7fdaf",
        "cursor": {
          "ref": "3084be48-8f8a-4f80-9387-c27b41096e07",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a43b3fb-c826-43ab-b296-ca84a507828f"
        },
        "item": {
          "id": "30d1b87e-2e5e-44cb-b14f-d3b966c7fdaf",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a054b41-591e-4bbd-ac09-8ceccba3d00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f30d68-59fb-4be0-931b-b1389a0c59f1",
        "cursor": {
          "ref": "1ca27a17-2065-45f8-a11f-fee3c710e0b8",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bf9b28e1-9a15-407f-b624-7b33a12205f4"
        },
        "item": {
          "id": "a9f30d68-59fb-4be0-931b-b1389a0c59f1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b21c8b25-7b74-425e-a391-56f0167dfa26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dd5108-6ed8-41e3-a01d-753c043239e1",
        "cursor": {
          "ref": "fb19f1e7-9f36-4ca8-97aa-6a2003cba1c6",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "73aea993-fecf-4645-8dfc-d9b1f2cecf40"
        },
        "item": {
          "id": "b2dd5108-6ed8-41e3-a01d-753c043239e1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "33d656e1-1766-4394-be3f-1ff816be705c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d336ff45-674f-4a07-b274-ac7d39df6109",
        "cursor": {
          "ref": "7fa28530-1a34-42bd-bfc7-5edacc767d36",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0bce77e0-5be7-4a4e-8c15-1792073add12"
        },
        "item": {
          "id": "d336ff45-674f-4a07-b274-ac7d39df6109",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "455b1924-fcc2-44b4-a353-86cd374e8ddc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf1d581-d347-4bd7-9dcd-ee25ad72071e",
        "cursor": {
          "ref": "7ab3a231-3b81-42df-8b2a-12d53f88f43b",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fc66371f-f0f8-404e-8a35-005909b83b90"
        },
        "item": {
          "id": "eaf1d581-d347-4bd7-9dcd-ee25ad72071e",
          "name": "identifiers"
        },
        "response": {
          "id": "805aa7b8-56ea-47f0-8d72-08ee54581296",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a39b4b-55cd-4e56-ab3f-bd97264953ed",
        "cursor": {
          "ref": "4baa0ebc-5ada-418d-bb26-7688da02bc6a",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "97bb4c66-c166-4f95-a5ee-d6ca8c33bc94"
        },
        "item": {
          "id": "f6a39b4b-55cd-4e56-ab3f-bd97264953ed",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "608a5bbc-4d83-453c-b05d-7adf45c618c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e402fa19-c6ba-4908-81f5-7d330ed5712c",
        "cursor": {
          "ref": "66e9deba-563d-4770-8de3-7547d24b4767",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dffef2a8-ac71-4856-bb28-969ce327586c"
        },
        "item": {
          "id": "e402fa19-c6ba-4908-81f5-7d330ed5712c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "67b160c8-43b2-465e-a50e-9ac1e742fe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230437cb-0dec-40f2-acac-48247265be0e",
        "cursor": {
          "ref": "4ff3743e-0c4d-483a-9ffe-b92d96494582",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ce5cdc21-e3a3-48cb-b572-d0dcd7d69ae3"
        },
        "item": {
          "id": "230437cb-0dec-40f2-acac-48247265be0e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4306ebef-abd1-4fc2-b70c-e7c9b5be16bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ca8fbc-1196-4c96-bea9-765b4f1be420",
        "cursor": {
          "ref": "a6073c20-3949-4084-b7e6-5f961ebe7f4c",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2eede183-c9b8-4b2b-bc35-93ceb6945c43"
        },
        "item": {
          "id": "04ca8fbc-1196-4c96-bea9-765b4f1be420",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ef5ec80e-90b2-4732-b3eb-59991a87c46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ee06b9-8dd4-4702-9ae6-264d89f12fd6",
        "cursor": {
          "ref": "5eee8212-9024-432a-ac6b-770f033a9ed6",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "47eeb773-f05e-4405-9531-349e77ddd9b2"
        },
        "item": {
          "id": "f3ee06b9-8dd4-4702-9ae6-264d89f12fd6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e85e4f82-2ace-4bee-8639-46ca64c1e0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0084d425-4ba2-4322-9d09-e2ad40aa02c1",
        "cursor": {
          "ref": "6b75a2d5-af45-4faa-aaad-7c5b82edd3c7",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "148823de-d723-41a3-afc5-0bf01c411473"
        },
        "item": {
          "id": "0084d425-4ba2-4322-9d09-e2ad40aa02c1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "32d7bcb7-07a1-4bf2-a707-ba992250d9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7ff0e0-5893-46d3-b048-b165a2afbbe4",
        "cursor": {
          "ref": "4924240b-689c-4220-8e99-df510749afee",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c8d002d0-9259-42a0-bc59-1890b8a3247d"
        },
        "item": {
          "id": "df7ff0e0-5893-46d3-b048-b165a2afbbe4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d954a282-4603-442a-8cca-4e3fd559653b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f00a89c-7ddf-4aa9-a20d-26b24fc0f05b",
        "cursor": {
          "ref": "ee05d1ea-e9bb-4063-94fc-6ffbf48a02ba",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e4677fcb-41c1-41be-94b7-fa024d76f85d"
        },
        "item": {
          "id": "2f00a89c-7ddf-4aa9-a20d-26b24fc0f05b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6a450ef0-8739-431d-b9ca-055481d61cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e595cf-0855-482c-8d0f-e433a803cae4",
        "cursor": {
          "ref": "970f2563-188c-46d9-9930-9b3846e770d9",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b1fc0dbb-6efd-475b-9bc3-568b86767d64"
        },
        "item": {
          "id": "e0e595cf-0855-482c-8d0f-e433a803cae4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f9e90620-65e3-418c-9577-b935ddeb06d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bae886-6bbe-4712-816e-572960405e8b",
        "cursor": {
          "ref": "f3390f79-89b5-4a68-9157-1ba5a99b05d6",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "499acb45-691c-4b88-88e5-d88b10b5182e"
        },
        "item": {
          "id": "83bae886-6bbe-4712-816e-572960405e8b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d106d5bb-9ef2-4403-97cb-0d2009761dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdad4a56-32e5-48ca-94a5-5591895f857c",
        "cursor": {
          "ref": "dfc58efc-9cba-4798-ae0c-fb5ff5397ec1",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "06389bed-95e3-4de3-a127-34a041cf8c25"
        },
        "item": {
          "id": "fdad4a56-32e5-48ca-94a5-5591895f857c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "42f85a4c-340e-4f86-9a3a-55c83947c370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df59ef6f-4c6b-4c11-bb91-87d937418dbd",
        "cursor": {
          "ref": "5fc60663-435e-4498-ba8c-20bf3b9a1701",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "75423b1e-4bff-45e8-85de-8bce3a77ef51"
        },
        "item": {
          "id": "df59ef6f-4c6b-4c11-bb91-87d937418dbd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a3d4d675-5ada-4a3a-a2b6-aba217ff585a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce221cd6-d9f9-4e92-9247-2940a8685442",
        "cursor": {
          "ref": "c875a612-1331-48d6-a153-f26db2eb2b98",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e7cc1b2b-52fa-43f5-a16b-98ced9db2703"
        },
        "item": {
          "id": "ce221cd6-d9f9-4e92-9247-2940a8685442",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1b92b990-c20d-40ec-a4fb-c9bbbce62e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf4e75b-7ba7-42ed-a035-5231bcbfcbba",
        "cursor": {
          "ref": "26a5e45c-0a6e-435c-8055-a0bd08dcdd8c",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fb747a37-83f2-40ba-951c-27acfe43111c"
        },
        "item": {
          "id": "edf4e75b-7ba7-42ed-a035-5231bcbfcbba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "db0c9c46-9e63-4be3-816e-2e95cfb910f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b933d91-e37b-45d8-939f-c753b969f27f",
        "cursor": {
          "ref": "a9fcc1f4-ff60-4135-9c15-6b9088f8d214",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ffceed85-d199-49b4-a151-4395c6fafa60"
        },
        "item": {
          "id": "2b933d91-e37b-45d8-939f-c753b969f27f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f5d24bef-d6a2-43a3-90da-6bda11dc6ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487bee6d-8767-45d2-ad43-645033fce5ee",
        "cursor": {
          "ref": "da205723-5dbd-452c-8755-36ec02108a21",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "000d96f8-1a26-4c2c-8009-aec9c8e09cf2"
        },
        "item": {
          "id": "487bee6d-8767-45d2-ad43-645033fce5ee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e404b1a4-1146-4f6c-81af-457cf41b0437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9284e7b6-877c-4ea9-be30-d0b06ee4adb1",
        "cursor": {
          "ref": "7d0fbf12-006a-483a-9cfc-5c4ad71a7119",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ff2cbb40-1998-470a-ac4a-0168ce6c9bc3"
        },
        "item": {
          "id": "9284e7b6-877c-4ea9-be30-d0b06ee4adb1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8d468ab4-83f2-4209-a150-13ba20f475a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d39a805-0f43-46d1-a475-ce046e819fb0",
        "cursor": {
          "ref": "8fdb5881-7d45-4526-a276-da04dcda0af1",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "01afb2d1-8b0e-4240-bb86-04b8702b27f0"
        },
        "item": {
          "id": "4d39a805-0f43-46d1-a475-ce046e819fb0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2ac0ef66-e26f-4229-a799-8544ef66f93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c30325f-a89b-4a3c-9207-2107c9909162",
        "cursor": {
          "ref": "0480923e-f1bd-4bb6-8714-b533da96600b",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "608d8201-58f3-4f7f-ad14-8bfd92ceee8c"
        },
        "item": {
          "id": "7c30325f-a89b-4a3c-9207-2107c9909162",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "abc1e17d-1183-42c3-8168-29b05ae076d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab2caab-b533-4305-8a98-f444a69ec856",
        "cursor": {
          "ref": "34d1fda2-947b-439f-aa25-332e99c17442",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "867ab425-e0be-469a-a761-7d500ca89b3b"
        },
        "item": {
          "id": "6ab2caab-b533-4305-8a98-f444a69ec856",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4f920b06-eeda-404f-a4f1-d49aa4133136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84bb025-d1ac-4ef9-a5b7-1086cfe78992",
        "cursor": {
          "ref": "01a16787-c8ee-4281-ad7a-75c4d1c21565",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b29eff2d-3bdb-437c-b6fb-f242c7014ada"
        },
        "item": {
          "id": "f84bb025-d1ac-4ef9-a5b7-1086cfe78992",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fbb07593-0d54-4697-91a4-022fb9f19e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4cd775-5f95-4b9c-ac77-ddccb2401565",
        "cursor": {
          "ref": "77284427-39b6-4926-bba1-7d6972ee71fb",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5ab80473-9c51-4c40-9b89-5cd50fc3853a"
        },
        "item": {
          "id": "0a4cd775-5f95-4b9c-ac77-ddccb2401565",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ab21833a-4240-4432-884a-4b9ae2e625c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63eb770-1a64-443e-a2b8-8b03c2ae8189",
        "cursor": {
          "ref": "46b33df7-8e6b-4fb0-aa69-08bd1922e5ac",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ac770f31-6163-46f1-8b72-875c946518c5"
        },
        "item": {
          "id": "a63eb770-1a64-443e-a2b8-8b03c2ae8189",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cf962b4a-222e-46bb-85be-00a8a77c940f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8ebcf0-7dcc-4958-9195-e224f1c4976b",
        "cursor": {
          "ref": "b72b33d3-a767-424f-8830-b5d6f1c48eab",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "049c4313-6416-4641-b695-fd809ca95217"
        },
        "item": {
          "id": "ae8ebcf0-7dcc-4958-9195-e224f1c4976b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e9709dbc-f2b2-4887-b019-7b52f985c710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bf4f58-00cd-4043-8b4b-8e19ef7fb428",
        "cursor": {
          "ref": "47819020-12ec-4ef0-a14d-e0441947f3b4",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7233d016-4b9c-49ef-bc57-e8cb90e76444"
        },
        "item": {
          "id": "f0bf4f58-00cd-4043-8b4b-8e19ef7fb428",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ffd3c7ea-4fdc-4fa4-9f99-d44fae69d739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6972cca-e32c-45ad-a834-18989cdab494",
        "cursor": {
          "ref": "52596b62-7830-4a9e-b8cb-144b58284c89",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bf5b112c-edbb-43b0-aa66-2df774aef745"
        },
        "item": {
          "id": "a6972cca-e32c-45ad-a834-18989cdab494",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "82b240ec-6d4e-4932-960e-c948d5e62b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86e78ff-0286-43df-bc90-8069ef571f87",
        "cursor": {
          "ref": "aa0a9f28-efbb-494b-9899-14b786210e4d",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "33964df1-ba37-4a2c-aa5e-8e73ca8ed6b0"
        },
        "item": {
          "id": "e86e78ff-0286-43df-bc90-8069ef571f87",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d72902b2-d9b8-4566-9e5a-d6a4851e532a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96158a27-2fc7-4542-af04-f56d89a26514",
        "cursor": {
          "ref": "d7318e97-6b44-4622-951c-3d1fb71c01db",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "518af1ab-ae7d-415b-b083-05df2c588bed"
        },
        "item": {
          "id": "96158a27-2fc7-4542-af04-f56d89a26514",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "59d27943-dca3-4c3a-bfcd-6d0b401e147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e5f949-e088-453c-bdd6-e9bccefea7b7",
        "cursor": {
          "ref": "51f2673f-7354-4581-98f6-4e5c28fcc005",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "864d7b0b-8683-40de-95a3-438ae386f6af"
        },
        "item": {
          "id": "14e5f949-e088-453c-bdd6-e9bccefea7b7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a4d0fc47-e0c1-4c9a-95d7-9bb602d8f4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b175cc7a-e8d4-444a-ad13-f799c8fb327d",
        "cursor": {
          "ref": "092f56cf-64e7-4f43-8fd5-3e91584a3555",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c01eba8b-44ea-432c-b36e-f29815432190"
        },
        "item": {
          "id": "b175cc7a-e8d4-444a-ad13-f799c8fb327d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ddcf0350-1255-41a6-a373-4a18a64e6a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd00d2c-7b9a-45dc-946d-07f9ba561b31",
        "cursor": {
          "ref": "33904a6a-9da1-4bb9-817b-80c2f5a1fa0b",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c3c2fa57-7c4d-4dff-b351-27ae4f34fcbb"
        },
        "item": {
          "id": "bfd00d2c-7b9a-45dc-946d-07f9ba561b31",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "69710636-a775-4bac-b504-0707051a001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02033ca4-1c09-4034-ab92-4ab26fc1b05a",
        "cursor": {
          "ref": "404a66b6-53c2-4345-ae19-34b00101230c",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "79abda46-c643-421c-ad59-24d7e525beca"
        },
        "item": {
          "id": "02033ca4-1c09-4034-ab92-4ab26fc1b05a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f3c0fb53-e56c-402a-9607-bd1bfff80985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0f4e7c-4bb2-4c86-bf8a-34e083986ad4",
        "cursor": {
          "ref": "3fd4b0ca-04c6-436e-bb18-d6bda11c0be4",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "564de957-50a2-4327-9b2f-e24da2054b80"
        },
        "item": {
          "id": "3e0f4e7c-4bb2-4c86-bf8a-34e083986ad4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ffce4648-8dab-47ed-a317-a21b3c120801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847532dc-12ab-4665-b159-ae839a344cfb",
        "cursor": {
          "ref": "ec84e3d0-1fd6-4b31-9692-8300b9a4f9c2",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "14c52ead-c8b0-48f1-b19a-5d276e415afc"
        },
        "item": {
          "id": "847532dc-12ab-4665-b159-ae839a344cfb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "152d1ea9-b5b3-4ed0-bb7e-0b85659bfb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711987d0-30d5-45ae-9b41-6e0e7ec05d13",
        "cursor": {
          "ref": "1667aa72-cf6f-4e36-a915-52aac80ff97e",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "16a627fe-38da-4d83-9e01-3dbad5d96937"
        },
        "item": {
          "id": "711987d0-30d5-45ae-9b41-6e0e7ec05d13",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "904da877-c428-4202-9421-87ef013beee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf719fc-6573-4e35-bb21-e157a975ecb8",
        "cursor": {
          "ref": "9ed72e32-006d-43f9-9870-46d389e00f56",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "91805976-642a-4349-b4d0-60e47136d5c7"
        },
        "item": {
          "id": "adf719fc-6573-4e35-bb21-e157a975ecb8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0008c0f9-231e-4a9a-b8ce-fe82e45347e0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86989334-3c88-4d6c-b754-410a46cf21c4",
        "cursor": {
          "ref": "1202f8de-d315-4a94-816c-ca91041733ec",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "17773f9f-b669-4fd4-ba3e-e5d7cdad7dd1"
        },
        "item": {
          "id": "86989334-3c88-4d6c-b754-410a46cf21c4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "54006b1a-dd3a-4f3b-9166-2580fcc6be74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddaf269-8a8b-45d0-ac99-a3060a2f96ab",
        "cursor": {
          "ref": "e29f0e56-288f-4440-9760-402a35fe6fd2",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c51c786-7703-45a0-83da-a2bf022b64de"
        },
        "item": {
          "id": "fddaf269-8a8b-45d0-ac99-a3060a2f96ab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7460ce03-dd5a-4bef-bf80-9ca3f0c32161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1e5cbd-0e69-4cf6-9032-6fa94e006b6c",
        "cursor": {
          "ref": "85016c4a-c777-4cb9-b2d8-12b534add111",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b4d56942-9699-4d88-83d0-7ca9653cc219"
        },
        "item": {
          "id": "8c1e5cbd-0e69-4cf6-9032-6fa94e006b6c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6c4e66d1-57e8-44cc-abc3-d424cc552ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a6fac-9408-4fba-94b5-00e77ad60ff2",
        "cursor": {
          "ref": "cdf15074-3b92-481d-99d2-88084ed08cd7",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "203ba73b-c6cc-4c74-aa3a-7cf0adcd7054"
        },
        "item": {
          "id": "678a6fac-9408-4fba-94b5-00e77ad60ff2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "84e349df-b8a1-418d-a310-387de16df99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c907c57-5266-4c90-bc96-5fa7717c9dca",
        "cursor": {
          "ref": "5aceb623-2416-4df2-912e-61457d7913cc",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6ad6a55a-a314-4a0d-945f-623fca67b353"
        },
        "item": {
          "id": "2c907c57-5266-4c90-bc96-5fa7717c9dca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d3685a78-e63a-4eee-90b0-f1d7cf229faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec0e5d4-11bc-44ab-82b6-1f00c67275e5",
        "cursor": {
          "ref": "38b6ed08-a9fd-4a45-af0c-4b96514f8910",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4dbd4c8d-7b3d-45b8-888c-80717f7cf939"
        },
        "item": {
          "id": "eec0e5d4-11bc-44ab-82b6-1f00c67275e5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "215098ee-5ca6-4032-90dd-6027e426b865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99309299-af4e-4faa-b433-812259f55591",
        "cursor": {
          "ref": "043624df-894c-4b86-beb3-0f6528bd88a0",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d7baf6e3-d337-410d-93ce-71f4e080cf4a"
        },
        "item": {
          "id": "99309299-af4e-4faa-b433-812259f55591",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2856e767-5fc6-4155-a6a1-8ab43525dd9d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648b6186-79e5-40fb-b407-d6d0446e0e1d",
        "cursor": {
          "ref": "f17fedd5-e52f-4363-8520-16d4c61ab8fe",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3d71c473-e545-4fff-a084-9ec3712f4891"
        },
        "item": {
          "id": "648b6186-79e5-40fb-b407-d6d0446e0e1d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "188eb5cd-d9ae-4d7d-a40a-f1a7c6ff2808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca20de40-ea12-4277-86c8-7f075328b7d6",
        "cursor": {
          "ref": "1bc41700-4a08-4b8d-87c4-fcf3711cb6d2",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b0efd9a7-5b9b-4a38-82f3-45eea81cf61b"
        },
        "item": {
          "id": "ca20de40-ea12-4277-86c8-7f075328b7d6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9a9005d7-9f15-4bd5-81cd-d720f8bf2e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcf1881-ffe3-4523-a846-cbb451faf1fb",
        "cursor": {
          "ref": "82ee69f3-605a-44ff-9127-4d35b23a4e8d",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0dee5672-e5d2-4253-b406-acda4b689291"
        },
        "item": {
          "id": "cbcf1881-ffe3-4523-a846-cbb451faf1fb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7c3d6134-e5ba-4b6f-8018-bbee7ab73385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a927d8-7ebe-41c3-9c4f-955c7b3d4caa",
        "cursor": {
          "ref": "6a689a9b-7858-44a6-a6ea-08b244733d94",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "537d9ae1-30b7-4a74-a2ad-82974b40df15"
        },
        "item": {
          "id": "b1a927d8-7ebe-41c3-9c4f-955c7b3d4caa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "eb5b0709-634e-4f56-a396-64b5bfa2413c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749dc5f8-4824-4d87-be88-eea227d76e5b",
        "cursor": {
          "ref": "a890f9ab-6475-4603-817a-a1de28e42a9c",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3d3431ea-dcb5-4da0-a573-fcd05b4df167"
        },
        "item": {
          "id": "749dc5f8-4824-4d87-be88-eea227d76e5b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "86c04e66-5868-4c98-8b76-1b7361db7979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc59ec21-c2ee-48c2-bde7-c66f4fabb305",
        "cursor": {
          "ref": "fc50ffec-49b9-4fcc-b77f-0142c70c211c",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "33c8eafe-ed7d-424f-8ae0-719ccbd419f9"
        },
        "item": {
          "id": "cc59ec21-c2ee-48c2-bde7-c66f4fabb305",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2823888e-5ac8-4ebb-98a7-b8f30875b544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a805d3-c56b-43e6-91c5-dbaa9ed36550",
        "cursor": {
          "ref": "4199e4b8-eda0-4cc7-bb3e-13d9aa07ec87",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f64ba1a0-0eab-4f3b-a648-be1c7eb21acf"
        },
        "item": {
          "id": "36a805d3-c56b-43e6-91c5-dbaa9ed36550",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a1f7da96-3ff0-405f-a891-bab4fecb335c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43486e2e-65f8-4a7f-88d8-05c6bce5a9b9",
        "cursor": {
          "ref": "b602bb72-57c8-4bc9-9096-df0390aee1ae",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e2250d26-17dd-4c1e-ae7b-288f2b3cb137"
        },
        "item": {
          "id": "43486e2e-65f8-4a7f-88d8-05c6bce5a9b9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "68cb082b-d72d-4bf0-bf31-15465ec0d0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadd5db6-0049-44e6-8954-57754d38f429",
        "cursor": {
          "ref": "985937bb-08e0-4db2-98fb-9732cd42b3bb",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5a32f217-1ea3-4344-8ae9-57c0ae66af45"
        },
        "item": {
          "id": "aadd5db6-0049-44e6-8954-57754d38f429",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "85a8fca1-6b1e-49ce-b286-4166a644c811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffe17ee-c3fa-498a-b8a4-28ea38693fea",
        "cursor": {
          "ref": "48ed1a0a-7ec8-4d81-8e5e-1ce240e1afe5",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "25279479-e9b1-45a1-b2ac-6f7d4d8532d2"
        },
        "item": {
          "id": "8ffe17ee-c3fa-498a-b8a4-28ea38693fea",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c0e73dfc-a2da-4096-b5a5-a065425ceb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef0ed57-0c27-4872-8beb-ccbecc8e7aa4",
        "cursor": {
          "ref": "1073d4c6-06a2-4143-a452-eaad64f76fba",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "087a11df-05e1-4e0d-ac5a-46896ec01632"
        },
        "item": {
          "id": "2ef0ed57-0c27-4872-8beb-ccbecc8e7aa4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bce0fa85-f4fd-439d-baef-b8b049dfec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef58fd85-0468-45a6-b49b-e52aba9d70ba",
        "cursor": {
          "ref": "addaf5e7-6449-4359-8f8c-e8e8588dea3c",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c6f00bfc-dee2-4d59-95c3-14891c282d9d"
        },
        "item": {
          "id": "ef58fd85-0468-45a6-b49b-e52aba9d70ba",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "586797ee-e016-4bf8-b1a2-1fecb263168a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce495ff-e424-475f-9e59-4018ffccb658",
        "cursor": {
          "ref": "54ad829e-71c0-4899-bed0-cba866b5cb84",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8057bf6c-e77a-40a5-946f-17c077ba9be9"
        },
        "item": {
          "id": "5ce495ff-e424-475f-9e59-4018ffccb658",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c96c6f5b-4e8e-44f1-8257-fd1753c1a222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be52b7e7-d83b-414f-9dc2-7475f0d4d5f0",
        "cursor": {
          "ref": "d2a8532f-22cd-4ef3-936b-7bf2dd929ea9",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7f4e2f07-2e65-4183-bf26-2ff7629eeabc"
        },
        "item": {
          "id": "be52b7e7-d83b-414f-9dc2-7475f0d4d5f0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "472d1504-beab-4d50-b869-f39756c995fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a860b40-8628-40d9-86d2-4a281846e852",
        "cursor": {
          "ref": "9f6a5103-5c9c-473b-bac7-a96266a3e863",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6514a305-0577-46d3-9bc0-f114594e6a30"
        },
        "item": {
          "id": "5a860b40-8628-40d9-86d2-4a281846e852",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e1164572-dcea-4b88-8e26-06802c24f3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141d68fc-478c-48e7-9bdf-6676abb2710a",
        "cursor": {
          "ref": "9f19be4d-609b-468d-b133-bb5c512ca15f",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a5488ec4-9f43-43e3-b098-375b952a1e7c"
        },
        "item": {
          "id": "141d68fc-478c-48e7-9bdf-6676abb2710a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0e6a9e2d-33c0-4cbc-9331-512cd0df68a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07962e32-dd39-47e2-b429-c4ce7934f853",
        "cursor": {
          "ref": "56f8ca48-b7ed-46ff-bc08-6c047c0fa20f",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1fa7aec1-5f8b-454b-9e74-7257e53fe5c2"
        },
        "item": {
          "id": "07962e32-dd39-47e2-b429-c4ce7934f853",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2ef36c6e-4412-4285-b0d6-c3d3bc0cd210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767b566d-abef-49af-af67-63352fd1a2da",
        "cursor": {
          "ref": "510b29ba-2550-4cd5-af43-7796d0064c26",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "da09674e-daf0-4143-96ee-fbdb1e19712b"
        },
        "item": {
          "id": "767b566d-abef-49af-af67-63352fd1a2da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a6bd6547-e0e9-4b77-9514-f77553e5e8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1819792-5c38-450b-819f-9562350a463f",
        "cursor": {
          "ref": "0f1fe635-2201-41ee-a7c5-16a47b15b8b9",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "18519f13-a137-43b3-8a1b-7f51d8e355e1"
        },
        "item": {
          "id": "b1819792-5c38-450b-819f-9562350a463f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7dbb5672-3d78-4c26-a384-7673e4293638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24240cc0-4d24-420e-ab68-c335567fed9e",
        "cursor": {
          "ref": "8a9bd535-76c8-4ec0-aab8-d08c259edf03",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c7861ceb-6ec6-4be7-bd3f-224935d6b925"
        },
        "item": {
          "id": "24240cc0-4d24-420e-ab68-c335567fed9e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5582227e-5fa1-4be1-98de-5759d4f90314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0e3b4e-0700-4abc-bb66-a70a2255d8f5",
        "cursor": {
          "ref": "a6b68226-f7b3-4fa0-861e-7f41a081744d",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3f250524-b8c8-4e21-99a6-9522aef7e96d"
        },
        "item": {
          "id": "0a0e3b4e-0700-4abc-bb66-a70a2255d8f5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ef471edc-ba16-4ef4-ba11-09c085ce4f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6d2cc4-ffc9-438d-a112-83d01e27992c",
        "cursor": {
          "ref": "886b5897-6fc1-4c6b-9bef-5b1741b62b71",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5689199-9222-4ce9-a551-54aa69515762"
        },
        "item": {
          "id": "be6d2cc4-ffc9-438d-a112-83d01e27992c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "86d748bc-9fbe-4042-9cc5-1f8ea112b752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab4addb-b656-4515-965c-371b621e4239",
        "cursor": {
          "ref": "ba419d03-fe04-4c98-9a1b-4949d0959e4d",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a41dff35-589c-4615-964b-7daa2b60f994"
        },
        "item": {
          "id": "fab4addb-b656-4515-965c-371b621e4239",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4cc9c1a4-42af-47c0-b6c3-29753145cf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5091b0-e140-4f5b-a705-5959eb5b6876",
        "cursor": {
          "ref": "98169c3e-e6c9-4a7a-82b0-6a676f3c9c3d",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1a4a5343-49e7-47e2-9f1f-48aa25595da4"
        },
        "item": {
          "id": "ee5091b0-e140-4f5b-a705-5959eb5b6876",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cd844190-24b1-4cc4-9507-ee96c73e5e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f989c70-7701-4b29-b54d-0c75f248e255",
        "cursor": {
          "ref": "f9e16d94-abab-4a37-8b70-ebfb7e7621fb",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "30b8a2db-14d2-4ef3-aa98-7d97aea6c316"
        },
        "item": {
          "id": "2f989c70-7701-4b29-b54d-0c75f248e255",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6d0e903e-cfae-4f59-8401-6112f08285c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf0e54c-ebea-48e9-812e-3a9bb326251a",
        "cursor": {
          "ref": "e5687d19-b91d-4d64-9f68-b5d695d18f72",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "379cc9fd-5789-4f08-9164-e4ddbea5b716"
        },
        "item": {
          "id": "ebf0e54c-ebea-48e9-812e-3a9bb326251a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4b5686e4-9895-4c43-a4e4-42294dced6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbc42ab-be41-4d57-8aeb-075ac78f4faf",
        "cursor": {
          "ref": "77f8dfa9-abcd-41b9-8b0f-282447f4f5d7",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0b96730d-5fbb-4b91-a5fb-3636231c32b8"
        },
        "item": {
          "id": "dfbc42ab-be41-4d57-8aeb-075ac78f4faf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8c61733e-2920-4887-bf31-c9e4b5199160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2455dc-4cbe-4c26-94fb-ec0e36f5cc34",
        "cursor": {
          "ref": "70c2d991-3edc-47a0-ae6d-25bc40f78c87",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c2b31bf1-b4a8-4d6d-ba2a-437b8ff2951c"
        },
        "item": {
          "id": "0d2455dc-4cbe-4c26-94fb-ec0e36f5cc34",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ac937efe-049b-480a-ae92-fc3aa88a9f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700c03ed-5d11-4d32-b9da-997822b30123",
        "cursor": {
          "ref": "b221d62e-c87c-4787-a894-c32de144e1bb",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fa68a727-978c-4297-acd0-0a9db1d3f65a"
        },
        "item": {
          "id": "700c03ed-5d11-4d32-b9da-997822b30123",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "daabf4a6-5878-4ec3-ab74-9cbb541839df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aa2c4f-c234-4fba-b507-8c73d407d705",
        "cursor": {
          "ref": "08cb944b-d544-4a43-be7e-0270db40896e",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d5ba357f-4c96-4192-a7d5-209b38155d4b"
        },
        "item": {
          "id": "41aa2c4f-c234-4fba-b507-8c73d407d705",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0cff8d3a-6f5e-4286-961b-764c89f6dacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a2cbe7-cb3d-4c68-8c1b-09f692dd8635",
        "cursor": {
          "ref": "e7abaa69-b8d6-4ca5-95a9-0b83744419e6",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4086828c-5e76-4054-b9f1-ae5b66acb1ff"
        },
        "item": {
          "id": "a8a2cbe7-cb3d-4c68-8c1b-09f692dd8635",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "466100f9-2aa4-49a4-adb0-5856460118c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4f7a92-60da-425c-9282-be225404607e",
        "cursor": {
          "ref": "23294379-c3da-4d87-ae17-f78da29cfa8d",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "30c744a6-0eb9-4000-9cdc-cd448ec1731f"
        },
        "item": {
          "id": "0c4f7a92-60da-425c-9282-be225404607e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "195db9ec-5d5e-40f6-99bc-b7f1906359bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f521f5a-9fd6-4768-9e2e-b2275083414e",
        "cursor": {
          "ref": "fb246cc7-b660-45e9-8239-1a68e5fa5162",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1114d051-18c6-4a46-858d-a1e6751af79f"
        },
        "item": {
          "id": "2f521f5a-9fd6-4768-9e2e-b2275083414e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "30a5a397-4487-44a4-87d5-0c0379d6a268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9857a1-1959-4ca4-9f79-da7ce6a26a44",
        "cursor": {
          "ref": "13797fb7-f4b3-4657-ac89-3d489ab44f1f",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0d6ee6cb-d60f-43b7-a21b-7316e2f36e2f"
        },
        "item": {
          "id": "9f9857a1-1959-4ca4-9f79-da7ce6a26a44",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5d591bcf-0100-42d9-b7c2-d9794379d835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad765b4-f76b-44f9-8643-457114058ffc",
        "cursor": {
          "ref": "0d6662ac-e944-41fc-82c6-ad885a455e71",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b2e0d5cf-86ba-4689-a233-eab05af97205"
        },
        "item": {
          "id": "fad765b4-f76b-44f9-8643-457114058ffc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2c3b7458-a68d-46ed-b6d1-675263317359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89b21fd-f0d4-473a-9105-23078e90fc7c",
        "cursor": {
          "ref": "4d78928d-1772-43ef-bdac-97b4c68f18f5",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "33861e5d-d02f-4035-b403-0f8b1a8ea495"
        },
        "item": {
          "id": "f89b21fd-f0d4-473a-9105-23078e90fc7c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "14486305-59b0-41f8-be6f-1e50799fe3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdea9e5d-2227-4295-acc9-ba501d0d3ff7",
        "cursor": {
          "ref": "c858545e-9812-4611-a875-646e90ad607f",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fb31704c-57e6-4fb0-b90b-7f07357678c8"
        },
        "item": {
          "id": "fdea9e5d-2227-4295-acc9-ba501d0d3ff7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "63f84eda-3557-477d-9c28-bc41755e3b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f40ac01-cb13-4943-9d67-95dc53afe2f7",
        "cursor": {
          "ref": "b7b75b9d-dd26-4c98-8e0b-740538aaca27",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "221acc79-b8a1-4a6d-b5b4-73d57e658d03"
        },
        "item": {
          "id": "4f40ac01-cb13-4943-9d67-95dc53afe2f7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2aba272c-bab2-4174-954f-39bdf38a17d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900e7788-0d78-4d9e-b4c4-08116caa0741",
        "cursor": {
          "ref": "e18e72f1-6dfc-43d6-b224-69f246576832",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "88edc999-c3ba-49d1-8602-4434d66ceae6"
        },
        "item": {
          "id": "900e7788-0d78-4d9e-b4c4-08116caa0741",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "12cc8b98-30cc-44ac-8586-be2f64c6e2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489725ea-5b86-4354-bc1e-9a63fab2c0cc",
        "cursor": {
          "ref": "648d9e40-d7eb-426b-a6f0-c4e958ce8463",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0c6e17ca-96f2-4a8e-a8c8-596352f6027c"
        },
        "item": {
          "id": "489725ea-5b86-4354-bc1e-9a63fab2c0cc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "90d72972-ff0e-4b67-84d8-cb12282d3a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ae5659-2dbd-4d22-90e4-a8d0398a0029",
        "cursor": {
          "ref": "a671c82a-6757-4e77-b919-40e81907adec",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "17786a81-bb02-4f25-ba29-521f0f357da1"
        },
        "item": {
          "id": "73ae5659-2dbd-4d22-90e4-a8d0398a0029",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "28fbc479-5376-4e50-ac2e-b34949aa761d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366e7407-1453-461a-b9b9-397e3a7220f9",
        "cursor": {
          "ref": "c7ae150d-2a57-4e57-bd6c-8305fe0e7d5b",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7ef1dcba-8318-4f42-b244-5c115c0c61c0"
        },
        "item": {
          "id": "366e7407-1453-461a-b9b9-397e3a7220f9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dc4ba090-1dc2-49e7-b2ea-4f7ead4adbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a4ce32-ef2a-43ee-a045-3d0db6ee9e0b",
        "cursor": {
          "ref": "2c52af1d-18cd-4702-be1d-c0ec60c454e3",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c6635625-a7b4-4a3f-9de8-03a1302dd07b"
        },
        "item": {
          "id": "59a4ce32-ef2a-43ee-a045-3d0db6ee9e0b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0941fca2-0555-425d-8e86-8c9cca2becb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9463de-3a84-4417-9dd8-7e304880c095",
        "cursor": {
          "ref": "669a15d0-1361-4eb4-8f8b-5621e77aa66d",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "84144539-910e-419c-b152-17b2d4df261f"
        },
        "item": {
          "id": "af9463de-3a84-4417-9dd8-7e304880c095",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aab9c7df-9903-4c6e-8cf5-f0fd69e53d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b1ab32-14f0-44ca-bbe4-662575e67c2a",
        "cursor": {
          "ref": "149918a9-8bc0-4d7a-bf28-66b790dee343",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "28062ff5-acbc-4ac5-8836-4ce02de82d1e"
        },
        "item": {
          "id": "e6b1ab32-14f0-44ca-bbe4-662575e67c2a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ba71e9ce-eac9-4792-8724-92ab45253281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df6aa19-417b-4fd7-907c-1306770e81e6",
        "cursor": {
          "ref": "e4d5e5fb-e5e0-46b0-b639-319cbd5a64d4",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fc8ae790-a115-4696-99a6-8d1892b90d32"
        },
        "item": {
          "id": "6df6aa19-417b-4fd7-907c-1306770e81e6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3caaf4a8-d71e-4764-87c6-a46c6b1e9343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae9e9ca-0aff-478d-ac85-d3de064ee892",
        "cursor": {
          "ref": "44062ccd-14e6-4a36-89f6-9bf66d293f9e",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d2400ae9-0c2d-414e-a107-bcaddc500441"
        },
        "item": {
          "id": "bae9e9ca-0aff-478d-ac85-d3de064ee892",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "88196f9d-728a-4d30-a426-17f2b5b00438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b3af85-ddc6-4ab6-9742-278980fdcd1f",
        "cursor": {
          "ref": "bc2b0f73-ba7b-48a2-a98f-620e08c28621",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b2ad978e-7987-4829-8bf3-3e95cbe1f4c8"
        },
        "item": {
          "id": "f7b3af85-ddc6-4ab6-9742-278980fdcd1f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d25f3b04-37f9-456b-a5a1-3e396e11b576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a54f0e-340e-433f-8422-9f0449b5ffcf",
        "cursor": {
          "ref": "0beaa409-2cb2-423c-b400-c035ca10b4b7",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0590aaf4-4bd4-465f-9ff4-1fb9925aef4e"
        },
        "item": {
          "id": "d2a54f0e-340e-433f-8422-9f0449b5ffcf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "728e6568-7931-4099-a18b-9e02afa1872e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ecdddc-07e4-48ad-87ca-40788c6a47a0",
        "cursor": {
          "ref": "beab39a8-a270-4317-8cb7-460bc698ecc4",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6afbf0bc-9da7-4985-ba5f-17bc273c6343"
        },
        "item": {
          "id": "28ecdddc-07e4-48ad-87ca-40788c6a47a0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cdde8e58-98fa-43b3-be32-92e6e3a0d6a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447e791b-b1e5-49ee-b844-3424b746b00f",
        "cursor": {
          "ref": "35bc794f-3935-4f45-a211-2ca19c5d5506",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "820b04f6-2feb-4cb4-94b1-7f2605b57fef"
        },
        "item": {
          "id": "447e791b-b1e5-49ee-b844-3424b746b00f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c19486db-e714-47e4-a743-a1d4f22f674b",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5b9a12-fd2e-498b-8b60-87104c30ebc0",
        "cursor": {
          "ref": "fb65cb8e-8b4c-4287-b983-632a8396d366",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c506b387-4dcf-4599-862a-b8ff399c0c18"
        },
        "item": {
          "id": "4d5b9a12-fd2e-498b-8b60-87104c30ebc0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "db4fe83a-af23-436f-9d8a-dac5440784af",
          "status": "Created",
          "code": 201,
          "responseTime": 161,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd925be-bf59-4431-b2ec-027a18976f6e",
        "cursor": {
          "ref": "8936fc0c-5ee2-4dd4-b2d6-93d462031e64",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9d909365-0908-4dcb-972b-36366c36eaac"
        },
        "item": {
          "id": "9dd925be-bf59-4431-b2ec-027a18976f6e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8a2a4403-afd6-4724-a347-dc9e56e7db10",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dd4488-f68e-4cd5-92cc-f5dcc7c43f1e",
        "cursor": {
          "ref": "2cf9bda6-eff9-42a3-9151-2cfe69110c48",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "929c64cd-9746-47ec-8818-a85b2cf2406a"
        },
        "item": {
          "id": "d0dd4488-f68e-4cd5-92cc-f5dcc7c43f1e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a2c1b031-d83e-407e-9b18-10dbd2341836",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a3e85e-593b-4a57-955e-4d753ff569dd",
        "cursor": {
          "ref": "c44b176a-d0c4-4b0b-a128-a509d4c10836",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2b108e15-eed1-4ce9-8418-1f8c22f9f10a"
        },
        "item": {
          "id": "39a3e85e-593b-4a57-955e-4d753ff569dd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "540395d2-14ad-4654-8938-030118af4823",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1a8b91-7d6b-4150-be9a-eea716ae9dda",
        "cursor": {
          "ref": "c1d576c4-01ca-4a8c-826d-16404a7fb5c3",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5435fda9-df4a-4981-80bb-fe14f564620d"
        },
        "item": {
          "id": "6a1a8b91-7d6b-4150-be9a-eea716ae9dda",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0c07e7cf-ad9b-4b20-aac5-28cf1b992e67",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c9c441-9897-4567-ac3e-674c82507703",
        "cursor": {
          "ref": "ced45bde-ce54-4faf-ba08-8a8900119392",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "78d5e3e8-4be8-44d0-affa-ea55e0c94ab2"
        },
        "item": {
          "id": "31c9c441-9897-4567-ac3e-674c82507703",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "42461cc5-d27a-4833-9229-10048a956e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6080aec4-2486-4340-9cdd-2e3c52ff3f17",
        "cursor": {
          "ref": "5fc5889f-da74-4838-86fd-530c3670b2e1",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "121593c7-7285-4db8-a098-65d6254fa6f2"
        },
        "item": {
          "id": "6080aec4-2486-4340-9cdd-2e3c52ff3f17",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dabfc388-93ec-4e10-85f9-6ce7cb94308e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e22f1f-22df-4bf1-9d30-7816c8eeb61d",
        "cursor": {
          "ref": "47d01046-b7ca-4391-942b-bc0c71a8d40c",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c8eca14-449a-4ed6-b9fb-872a87659403"
        },
        "item": {
          "id": "04e22f1f-22df-4bf1-9d30-7816c8eeb61d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9af72908-7666-4143-9005-4cd0f6cc4823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54edc4b-1ddd-42a6-a77a-14252c3b883f",
        "cursor": {
          "ref": "7d8059ad-adc3-4bb0-a4ac-01c23aafc997",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9e779d6c-dfa1-4d22-8906-de1634376d75"
        },
        "item": {
          "id": "d54edc4b-1ddd-42a6-a77a-14252c3b883f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a7567d2-0585-4483-8a7d-eb7bccca7110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ec0390-d09b-4a5e-bb0e-a8ab306608d6",
        "cursor": {
          "ref": "c5744e98-14d3-4564-bf1b-b498ed039123",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "671a783e-d20e-4942-8aef-06c8b2d22193"
        },
        "item": {
          "id": "84ec0390-d09b-4a5e-bb0e-a8ab306608d6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "67c36c74-a681-448b-9e2d-140f6e44c23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30a93b1-8330-4e60-805b-6b043a592900",
        "cursor": {
          "ref": "13f61d3b-6077-4323-9e75-f2119a2f5621",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5e354786-5056-4c35-97f7-62773555afb3"
        },
        "item": {
          "id": "b30a93b1-8330-4e60-805b-6b043a592900",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b46d5181-764e-4099-82d9-08618e742ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79735f4d-e0aa-432b-8ca7-afe83cada4eb",
        "cursor": {
          "ref": "996e4c6a-3b7d-4d1d-b181-bedf063525f3",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "174e895a-bd60-4ce4-bd2e-537e7817f0fc"
        },
        "item": {
          "id": "79735f4d-e0aa-432b-8ca7-afe83cada4eb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "916ce8f1-ca58-4a19-bdd5-ddbc90a91ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dd138b-4e74-4152-a1d8-de6f603f36de",
        "cursor": {
          "ref": "ed2448c3-c6a4-4749-9090-4e83a7ca66b8",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "86283abf-fe07-45c4-afa0-09b4e2139695"
        },
        "item": {
          "id": "b9dd138b-4e74-4152-a1d8-de6f603f36de",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "288e1901-66b5-4d2f-a05e-e613d5df66fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a21c4cc-e06b-43c3-b1df-2aadcf810639",
        "cursor": {
          "ref": "26fa6f66-0539-4edb-937e-f660a567d18f",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "99630ad5-2885-4a42-8cad-ee02eafc249d"
        },
        "item": {
          "id": "3a21c4cc-e06b-43c3-b1df-2aadcf810639",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "76d24303-93a0-4b1e-9ac9-cfd5f44d43e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e54b58f-2e40-4218-b465-442ab8f8d6b3",
        "cursor": {
          "ref": "42dec6aa-bcf6-4fe3-8685-fade8a3e5fc5",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c609973e-5c15-4dbd-9168-050e84e5a964"
        },
        "item": {
          "id": "0e54b58f-2e40-4218-b465-442ab8f8d6b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7f89e227-a4df-42f3-b70c-b62aae0574bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d1582f-2167-4fc5-9fea-395a6a6e2376",
        "cursor": {
          "ref": "7f4e0e92-f1b2-44af-a5df-e4f11f6ef7b8",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f36edd14-18e8-44ae-949c-22b2fe7e6711"
        },
        "item": {
          "id": "74d1582f-2167-4fc5-9fea-395a6a6e2376",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9a3bef4a-cbc5-4c4f-8bc7-1ddb0e320e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6224a48-8593-491e-9efe-2397bf43a289",
        "cursor": {
          "ref": "120d3cb8-dec9-40b6-ab73-f799fe132d2a",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9e8b6b7a-a5cd-4938-93d8-6fe922c5d261"
        },
        "item": {
          "id": "d6224a48-8593-491e-9efe-2397bf43a289",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a50c19b4-4601-4fa9-93c0-8440a808e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de83a13a-cb92-4525-8f47-14dbcf621590",
        "cursor": {
          "ref": "0f3fecfa-dca0-4578-8e90-f29e95d38049",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8f51c199-410d-479d-827c-db5c430f0fc7"
        },
        "item": {
          "id": "de83a13a-cb92-4525-8f47-14dbcf621590",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fd56cffe-3d34-4b0a-ae4f-a245fbd5bbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f061e146-8880-4e59-99fa-aa83390625a0",
        "cursor": {
          "ref": "1b74e12f-34d3-4705-ad37-f5217b354ba5",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "837b4b76-58e8-45bb-ad35-a209b672caaf"
        },
        "item": {
          "id": "f061e146-8880-4e59-99fa-aa83390625a0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8b77e339-b60c-4724-abcd-20578a1113d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08687e4e-8c42-4020-aee8-527608574452",
        "cursor": {
          "ref": "1e1c29dd-a627-4e1a-96ff-19dd13bc960a",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d241fa71-ac36-4299-8fc8-02ca368a3a27"
        },
        "item": {
          "id": "08687e4e-8c42-4020-aee8-527608574452",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "49f0bd65-9b0c-43b4-82f9-f817a2a9cc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea697715-b667-4f30-9c7d-041e3660d516",
        "cursor": {
          "ref": "2e436476-6ddc-48d9-ac1b-4faf7be8ccd9",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9993032-0d53-4d7b-96d0-b3d464ee99ff"
        },
        "item": {
          "id": "ea697715-b667-4f30-9c7d-041e3660d516",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1a2c44cd-bb1a-49fd-b980-ed7ae4eedd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d16e6a4-2ce5-4016-a821-a6f55d635345",
        "cursor": {
          "ref": "49131788-bc9c-4cf9-9e38-408d4924c41a",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f57e1497-b0ad-42e7-890c-d8f0ce45e044"
        },
        "item": {
          "id": "3d16e6a4-2ce5-4016-a821-a6f55d635345",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d0dc8fb4-1b3c-41d6-8aae-ae041763d13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7ec3a5-aae3-44e1-9726-e176a106ae30",
        "cursor": {
          "ref": "2c84d320-5be9-4a5f-a370-81f7f97c7779",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "72fdf932-71c7-4128-ae2f-d68966cb602f"
        },
        "item": {
          "id": "4c7ec3a5-aae3-44e1-9726-e176a106ae30",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a3afa402-3cdd-4e52-9b53-e45e28344fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a216c88c-8a84-49b3-9be6-99e8bf4bc395",
        "cursor": {
          "ref": "d494ff22-74c8-4655-b489-efba842f3804",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a960629e-daef-4a15-9333-9e595f0b044c"
        },
        "item": {
          "id": "a216c88c-8a84-49b3-9be6-99e8bf4bc395",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d7ea6e9f-c331-4b24-a49d-fc11d44b6723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7381098-77b2-411c-b9eb-9f59bf11bc51",
        "cursor": {
          "ref": "5aedb1b8-16d0-4a17-ac00-205a2e89fd56",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e4f67f3a-6c09-45c1-a0b7-a9ec97de013a"
        },
        "item": {
          "id": "e7381098-77b2-411c-b9eb-9f59bf11bc51",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1d44496e-4dd9-4630-a294-06995defcb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6437271-e3c1-4ceb-a5b3-5a22b989dc43",
        "cursor": {
          "ref": "8d8fd074-99b4-4c79-bade-0883676e8753",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0c513eaa-e5e0-4456-b239-e8ac4cf1c380"
        },
        "item": {
          "id": "f6437271-e3c1-4ceb-a5b3-5a22b989dc43",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac098ce8-dd39-4c1d-a9fe-1b2a5c912050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0814e49f-c17f-4bd5-941f-e17e2528e898",
        "cursor": {
          "ref": "bc58b45c-b007-4725-a8d4-781ada00d052",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5bedb331-b12b-4b89-aacc-e38ce916447b"
        },
        "item": {
          "id": "0814e49f-c17f-4bd5-941f-e17e2528e898",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "24a9751d-9a43-4f3f-874e-cc659732aa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba295ff0-40ae-426a-91e4-7e8e9a2c768e",
        "cursor": {
          "ref": "f15d766f-4aaf-48f7-b6d9-a1cdb976c705",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "686a8436-a983-4af5-89b2-22e6e9c93931"
        },
        "item": {
          "id": "ba295ff0-40ae-426a-91e4-7e8e9a2c768e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "14889534-9c82-4966-a447-096eef87e9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc822b01-7611-4f38-92c4-a6aa994c47d2",
        "cursor": {
          "ref": "137c0818-c654-4ec8-b3ed-785015505fb6",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8c042852-e350-4759-bca0-ba03cb24e6b8"
        },
        "item": {
          "id": "bc822b01-7611-4f38-92c4-a6aa994c47d2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cf9c1162-2bcc-40cf-babe-ecae2a318b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce07aa58-2744-4fd8-afdb-29c059f3832b",
        "cursor": {
          "ref": "6bd072c4-212c-4979-8e89-da3b77805d4d",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "379b7507-3231-4b3b-a1b8-677081e6e552"
        },
        "item": {
          "id": "ce07aa58-2744-4fd8-afdb-29c059f3832b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "507f8871-b51d-4523-bb43-ebd1779c99a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16fc39d-e954-4301-b824-86a3e80a6e4b",
        "cursor": {
          "ref": "e4b0417a-8d51-4859-b27b-c965349f9088",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e0c28977-6eb8-4f72-b5b7-4f0b55dab2f0"
        },
        "item": {
          "id": "d16fc39d-e954-4301-b824-86a3e80a6e4b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ec27453b-85c2-4aa1-a1cc-fe3dda7f064d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e8aaff-4a0e-49a9-826a-3e625a9b356e",
        "cursor": {
          "ref": "fa3bdca6-6e22-443f-accb-d4be7f24d2e4",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "faf84556-cc94-43ea-8796-bc817a599a3f"
        },
        "item": {
          "id": "02e8aaff-4a0e-49a9-826a-3e625a9b356e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "128d627b-2782-44da-b252-6ae662a9f402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8e1c75-0cf6-4e4c-b23f-309b83489e48",
        "cursor": {
          "ref": "a25d185d-d3ab-45f7-96a7-f88e8468e66f",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d14a0ed0-dc0e-4af4-950d-10ccb802cbe8"
        },
        "item": {
          "id": "ea8e1c75-0cf6-4e4c-b23f-309b83489e48",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7e3979aa-5060-4647-82bb-f5cc27f93640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913a10fe-4b17-4e1d-a14d-8b988e79ab1e",
        "cursor": {
          "ref": "18edc8ae-0c05-4975-825c-76d844c7a489",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "68e404a5-fe99-458b-b2e5-c9403357b855"
        },
        "item": {
          "id": "913a10fe-4b17-4e1d-a14d-8b988e79ab1e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ea6b5aac-ecb9-4d20-90d8-3845824dbf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cde1ac-2b44-4494-a68d-3d5ffdddff44",
        "cursor": {
          "ref": "70a4f3d1-e948-4a71-a44b-65bcb0d9ab2f",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f7924fa4-787b-44ad-9798-a1805e15d813"
        },
        "item": {
          "id": "08cde1ac-2b44-4494-a68d-3d5ffdddff44",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "24702bf0-601e-4ec1-82ab-93ca0d2ad8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b996f85a-f2c0-4c34-977e-00ac07f62ae9",
        "cursor": {
          "ref": "55d4d7b4-6947-48b8-acba-ff7f4352386a",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2b031c97-5a0f-4c29-a1ae-89d5e8da045b"
        },
        "item": {
          "id": "b996f85a-f2c0-4c34-977e-00ac07f62ae9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "604b4278-fc5e-49cf-8d39-7eee957c26eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db83e57-ebdc-45a8-8864-e418c6f07bc7",
        "cursor": {
          "ref": "fd160452-0a4d-4176-845b-d8161b155778",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8ad56679-04fa-418f-9130-eda25f89354b"
        },
        "item": {
          "id": "4db83e57-ebdc-45a8-8864-e418c6f07bc7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6cfe70cb-21cf-49d7-95be-410137d3fcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96307f4c-d2b6-40d1-b054-79a6230a041f",
        "cursor": {
          "ref": "d8bec15d-4004-4f70-a95e-d49620bb0d67",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2e0f359a-e636-4753-a1b7-c6c3cdf481c7"
        },
        "item": {
          "id": "96307f4c-d2b6-40d1-b054-79a6230a041f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b6179bcb-15a2-406e-9f3d-ae0730d821f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d986c2c-d93e-4bfa-8e1f-9a70b056c88a",
        "cursor": {
          "ref": "d8b99476-dea8-4d95-9d38-336d58002111",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cc28993c-3969-4a97-9452-33311e09d1ec"
        },
        "item": {
          "id": "9d986c2c-d93e-4bfa-8e1f-9a70b056c88a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "57c5e98a-0981-4c00-a6ff-10788a2a739f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1eaf2b-32a5-410d-b6d8-ceedf34b5f3e",
        "cursor": {
          "ref": "a07be71f-652c-48f9-81d1-66a73794e8ef",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e2fc907e-433c-4bdc-b629-0bb44bc74fa8"
        },
        "item": {
          "id": "2e1eaf2b-32a5-410d-b6d8-ceedf34b5f3e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0a791315-ae77-40f1-b17c-749ee52068da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3f80f5-0a10-4ff0-bb4f-935d2c54444c",
        "cursor": {
          "ref": "1cb3912a-0e48-40f3-beef-48daf1b6b634",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "42ae7330-8661-40c3-bb51-8dbff2cf93a9"
        },
        "item": {
          "id": "7a3f80f5-0a10-4ff0-bb4f-935d2c54444c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "187b9062-27d5-404c-87af-7a8f4ddf6135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f0a6bd-46a5-4d9f-a543-d4af5aaa11bb",
        "cursor": {
          "ref": "5d956377-542f-4578-9088-fe6bb924ab06",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "88f9ecc9-66f5-4353-bbd9-91cafee505d9"
        },
        "item": {
          "id": "00f0a6bd-46a5-4d9f-a543-d4af5aaa11bb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e3388b96-3997-4922-a6f9-e8c64fbd8c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1586a4-d7ea-4ca4-a599-2d225041820b",
        "cursor": {
          "ref": "3bf62af2-84d2-4d1e-a0b2-7195dbca90f6",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "740d2f88-0047-4e45-b532-ad02922d405d"
        },
        "item": {
          "id": "9b1586a4-d7ea-4ca4-a599-2d225041820b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "858a3cd1-122a-4896-a339-aaef2c69e7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ca3dc-9868-46a4-9468-45f11a2a0cf5",
        "cursor": {
          "ref": "53e12c32-04c8-4972-913e-4907d19afe9b",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "21c958a3-ea58-493c-80de-b5468b788ad9"
        },
        "item": {
          "id": "3d0ca3dc-9868-46a4-9468-45f11a2a0cf5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0bae8074-527a-4aea-89d9-2442bb74bf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbd30fa-fb6f-4999-a4ff-c6622e278c87",
        "cursor": {
          "ref": "98acadbd-6b16-40aa-b144-e8866f81ced2",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5991967c-1d4e-4a23-b020-3e92b7c2acd3"
        },
        "item": {
          "id": "6bbd30fa-fb6f-4999-a4ff-c6622e278c87",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b05ec4a1-5bb9-4013-ab75-a8817345b3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15906dd-b1ed-4e04-9985-44044b0355d6",
        "cursor": {
          "ref": "c903c836-5c4c-40ca-9a09-20d199fac100",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c62504a4-baf4-4bb3-9e08-a4ae665ba60a"
        },
        "item": {
          "id": "c15906dd-b1ed-4e04-9985-44044b0355d6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0381a21a-b8e7-4fff-8c5b-765175623eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3fb71d-25b7-4065-ab6b-57c41e97b518",
        "cursor": {
          "ref": "6d7c1be4-c8d3-4011-969f-2af6ecf26c5d",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4c41b81d-df9d-4beb-9d8b-8a0c9cef132d"
        },
        "item": {
          "id": "7a3fb71d-25b7-4065-ab6b-57c41e97b518",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "18810f60-75cb-49bf-aab7-6cdbd8246a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22437a5e-617d-42c4-b732-c6e916dce7fe",
        "cursor": {
          "ref": "eb7e707a-1fcf-446c-b752-66853d92d1fe",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "09d13d23-7538-4263-926c-6f5c800cc552"
        },
        "item": {
          "id": "22437a5e-617d-42c4-b732-c6e916dce7fe",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "81cb43e0-7b2d-4885-9fd6-467a38fe09c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0cf99a-4445-4f94-8e4d-c3684ac27f17",
        "cursor": {
          "ref": "4403f774-67d2-43b3-ac42-31475cb72831",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7ea58911-5352-4d46-bbf3-7f74921397e3"
        },
        "item": {
          "id": "7d0cf99a-4445-4f94-8e4d-c3684ac27f17",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b179a975-3fca-4034-a5b2-efa9545b1139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40d369c-08bb-47bf-b2bb-8b9a9d8a06e4",
        "cursor": {
          "ref": "455566ea-3801-4f35-a60e-1a9bfcde91e9",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4c135809-d4b3-44db-b4ec-edd763d8582a"
        },
        "item": {
          "id": "a40d369c-08bb-47bf-b2bb-8b9a9d8a06e4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b212fecf-6499-432c-9bee-165c2059ee84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a721c9a3-a166-4bc9-9176-2006e2ae6d51",
        "cursor": {
          "ref": "a94c5a87-2371-44eb-9a2f-644121899edb",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e6a918ad-09b3-4c95-8eac-3807f9b22893"
        },
        "item": {
          "id": "a721c9a3-a166-4bc9-9176-2006e2ae6d51",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4c87b921-7710-41a7-8db6-4633ba7ee1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0557e77-34f9-4e8c-abd9-a621fc4daff9",
        "cursor": {
          "ref": "89022836-1e09-4334-837a-976e6e63d7fd",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a0c9ae90-c9f8-4d8f-9ada-3449780df1ba"
        },
        "item": {
          "id": "e0557e77-34f9-4e8c-abd9-a621fc4daff9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1d096c4c-160c-4739-8e22-797e09b7d10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f759af32-0015-42eb-a01b-c7bb8af99f42",
        "cursor": {
          "ref": "6043c2ba-1e27-4b24-aac9-b6191e4a23e3",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6f3d0cdb-5f8c-41ca-bd2f-b649b29cf14a"
        },
        "item": {
          "id": "f759af32-0015-42eb-a01b-c7bb8af99f42",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ee18d61c-b480-4669-9e86-27ec0ff129dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75798949-56ce-4b42-91e3-57c3bc8ffbbe",
        "cursor": {
          "ref": "5ea927d4-d845-4509-a8e5-79c36b853154",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1571de86-6212-4071-8033-235e4c53d671"
        },
        "item": {
          "id": "75798949-56ce-4b42-91e3-57c3bc8ffbbe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3f80367d-8176-487d-b66e-9468fbbee81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6af83b-a8c4-4e3f-a63f-4df4b0a14e7a",
        "cursor": {
          "ref": "6515b3a6-de9e-4619-9262-d5cae93cddfc",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5ffcf246-4652-4b97-bbf3-f6a841cbfb04"
        },
        "item": {
          "id": "5e6af83b-a8c4-4e3f-a63f-4df4b0a14e7a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "105151c6-aed9-4031-ab2a-4d3a9232f441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdd62b2-d949-4f4e-ad85-858ae7bd19c5",
        "cursor": {
          "ref": "059aa517-4e29-42f9-8ab9-90ff5e9ab43a",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b05c021b-e15c-4fa1-932f-b160ee5976cd"
        },
        "item": {
          "id": "8bdd62b2-d949-4f4e-ad85-858ae7bd19c5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "73a13aeb-c9be-43e3-8203-3c6a630dfba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c288b77-e7ce-4909-8198-82e07a32b4be",
        "cursor": {
          "ref": "c6b9cb6f-69b9-472a-8e38-58a74b4ca1c3",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b305e18f-e693-4a0d-ab02-97ff1cc7ce1c"
        },
        "item": {
          "id": "2c288b77-e7ce-4909-8198-82e07a32b4be",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c0a78b4b-8f7e-421a-af6e-569d18f3dff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457155a6-2b7f-4739-b798-7dbe16bb82f8",
        "cursor": {
          "ref": "f54702b6-1841-403b-a27c-f346536b07d7",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "71db5127-5679-4518-a2f8-a769900b8f01"
        },
        "item": {
          "id": "457155a6-2b7f-4739-b798-7dbe16bb82f8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5c34c56c-2941-40f3-a9ad-349246d2ce46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3f09bd-813f-4de6-999f-2834ed9ecbde",
        "cursor": {
          "ref": "34b5ecf4-70a7-4da9-93af-2152a1644dd5",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e03d3a6c-dbf6-45a9-950c-5c79177e04b9"
        },
        "item": {
          "id": "cb3f09bd-813f-4de6-999f-2834ed9ecbde",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e00d31c0-7683-4b0d-a689-88bf37a3bed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae28893a-d784-424c-912d-173feeaf89fa",
        "cursor": {
          "ref": "b8ec08c0-d722-4a40-a464-ca9fcc8dd0eb",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3373192f-a60c-4b35-875e-6796ea9a5c89"
        },
        "item": {
          "id": "ae28893a-d784-424c-912d-173feeaf89fa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e9602b71-6a93-489b-92cb-deadce7a624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91281d06-8707-42ab-bc69-e05c118b2f52",
        "cursor": {
          "ref": "d1cdd27b-d0f4-4348-87af-e08161c27d74",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e14994f9-670c-4267-abed-5a20bd350c6b"
        },
        "item": {
          "id": "91281d06-8707-42ab-bc69-e05c118b2f52",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ad811afc-a1b0-4993-91cc-9cf769a52760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cef5c16-5ae2-4baa-9aa5-76b99e646314",
        "cursor": {
          "ref": "2e1ec0fb-b321-4550-9486-9a0849c1cdec",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "79be7334-44a2-4fd0-87f5-9a36cbc8b93f"
        },
        "item": {
          "id": "6cef5c16-5ae2-4baa-9aa5-76b99e646314",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "421b96ef-10d9-4bb4-9378-bfba2c7b9762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f504c0-19e6-4807-9138-1b54abf1ab9c",
        "cursor": {
          "ref": "0b172fd9-8507-44d7-b3de-e20b9b691137",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "448a492d-e4f2-4258-84de-2f7d2d785815"
        },
        "item": {
          "id": "71f504c0-19e6-4807-9138-1b54abf1ab9c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ae3e449f-6269-4871-a19f-4182f61db9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cf6278-36b3-4067-b0c1-f6d67ea02a92",
        "cursor": {
          "ref": "e3cad7c0-1ba3-430e-96f6-bef0b23bb926",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8b439627-f818-4532-a29d-2e2f10710e4e"
        },
        "item": {
          "id": "c0cf6278-36b3-4067-b0c1-f6d67ea02a92",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b5327aea-8594-47ed-9d5d-3bf10b86a25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f647cfc6-5071-4b94-8357-506bfd84b0c3",
        "cursor": {
          "ref": "3f9a8026-0d01-4d28-8501-323f8136abb7",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fc50f093-99db-4501-bb51-56e18e51550b"
        },
        "item": {
          "id": "f647cfc6-5071-4b94-8357-506bfd84b0c3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3f070064-e008-4892-b847-f3c128b2cc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038b126d-7c46-463d-84fa-8dc726ee9dfb",
        "cursor": {
          "ref": "87d4e48d-84a0-4e5c-839b-03ef0d1d3081",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7b733539-16a5-431c-a330-a1e99b7a1634"
        },
        "item": {
          "id": "038b126d-7c46-463d-84fa-8dc726ee9dfb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e545ba18-2079-4bd4-9f13-5536a098ceda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccc740f-1966-4476-90e0-6900f7037e4e",
        "cursor": {
          "ref": "b2e34ba6-40fa-4202-be58-3d0c7e84f61a",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "161df833-e81a-44ef-8abb-9f3933b038da"
        },
        "item": {
          "id": "9ccc740f-1966-4476-90e0-6900f7037e4e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "35550fdc-aa5b-45e9-ad69-d7d43aa12bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43869e8-4cb2-473f-ab34-f4bea377657f",
        "cursor": {
          "ref": "355191ee-df5c-489c-b33a-8f51f7e5f3e0",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5be1e77a-f795-4bad-88ff-cf5a3b0123e6"
        },
        "item": {
          "id": "d43869e8-4cb2-473f-ab34-f4bea377657f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a8fae582-2e62-46db-a53b-5f4759015c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad777cf-2ff6-4e76-9cfc-c5a14dabce69",
        "cursor": {
          "ref": "1639c975-3a30-4fe2-983e-aaf43de2808d",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e694a269-a1e6-463c-8687-bd9f14d0866e"
        },
        "item": {
          "id": "2ad777cf-2ff6-4e76-9cfc-c5a14dabce69",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c5c2e9dd-c4a2-4462-a256-f45786fce2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db44efc6-6333-4f37-8f3c-c72df02fc29f",
        "cursor": {
          "ref": "01f10a52-dac0-4bdc-bd9a-2fbb5500de06",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "08838c4b-168b-404f-b3a7-3d3d8f3b0925"
        },
        "item": {
          "id": "db44efc6-6333-4f37-8f3c-c72df02fc29f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a69ec9b8-d6c1-477d-8f96-eb0182ee0367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc223eb-6757-4e75-9820-07059d7c3a36",
        "cursor": {
          "ref": "1b605a48-351b-4d81-a3bd-145ac1d24611",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6b9b54ce-7703-408b-b8bf-24fd2fe4fb5e"
        },
        "item": {
          "id": "9cc223eb-6757-4e75-9820-07059d7c3a36",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6106fda7-924c-4468-840e-7943c576bf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd5ec30-13bf-46e3-9e0c-9c54e065b352",
        "cursor": {
          "ref": "c6df24d5-48dc-4529-8657-794ef7fc1877",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3948f46c-6a4c-4be5-b793-c4ddbc777323"
        },
        "item": {
          "id": "8bd5ec30-13bf-46e3-9e0c-9c54e065b352",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b9006506-26dd-4211-8fd2-a832e4b1a417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6310208a-ea74-49ff-9ea4-6934bd5347fe",
        "cursor": {
          "ref": "8b02911d-f9d4-44f7-9770-dd84be164d1f",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "07786ee3-ca40-4d44-a35c-8b0ef62b4ed7"
        },
        "item": {
          "id": "6310208a-ea74-49ff-9ea4-6934bd5347fe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4f5cb811-d3f4-446b-b48a-7833e12fda72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a21dd0-6d02-4b2a-880e-f8d52284848c",
        "cursor": {
          "ref": "9075eabd-b8aa-48ad-b465-e13ac8dc2160",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2b7c44c6-7edd-4364-af7b-b641a42661b3"
        },
        "item": {
          "id": "f4a21dd0-6d02-4b2a-880e-f8d52284848c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8e477e3c-c2d7-4efa-b837-17a2a81e3a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c871c5-5663-4254-8eaa-1af036d8dcb2",
        "cursor": {
          "ref": "16766d13-f191-4fd4-81ef-b88294f8f50f",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d0f8f747-80fc-45eb-a608-5cef44d92962"
        },
        "item": {
          "id": "57c871c5-5663-4254-8eaa-1af036d8dcb2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f9134b17-609b-4d8f-a040-25e8e21bd08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b10fba2-2144-4904-8ee8-22c8a947c1d6",
        "cursor": {
          "ref": "68381aff-293a-4462-99fc-c7319be9c2f8",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ac2be2db-c6ff-4a3d-bb4f-3a4b7a3e453c"
        },
        "item": {
          "id": "3b10fba2-2144-4904-8ee8-22c8a947c1d6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3963d199-2655-4a2c-abac-0ec63996c459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae39cbe-37cb-42e4-aad1-30b3d806778a",
        "cursor": {
          "ref": "105630e1-973d-49fa-b714-93be80774948",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "37263592-ee3c-4087-908e-cb11316a7bee"
        },
        "item": {
          "id": "bae39cbe-37cb-42e4-aad1-30b3d806778a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8473cc21-70d0-4672-a8ec-c7b0faeb7464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03528134-1f13-4485-aa4d-28095f525d94",
        "cursor": {
          "ref": "fa5ca174-d4b6-469f-8f00-d0de27c7f5fd",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0d39b9fb-9758-450f-91a3-e2e2c46ee610"
        },
        "item": {
          "id": "03528134-1f13-4485-aa4d-28095f525d94",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dccda143-cb91-4a3c-bdf6-8ffb99f29261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc9e4fc-9e3d-4455-ab2a-4d2418e82238",
        "cursor": {
          "ref": "8ecf3276-f69c-45eb-bf5a-1da759834bc1",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "278f0cd4-d5bf-402b-85c4-3bde66aeee55"
        },
        "item": {
          "id": "dcc9e4fc-9e3d-4455-ab2a-4d2418e82238",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "629b7084-a6c0-463f-b9e9-597c5b15b0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a312d1c-fc53-4260-8f61-d67b16b860fc",
        "cursor": {
          "ref": "6ffd2e2a-02f7-469c-b8a8-01b646a56666",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "877bd015-68d3-4a5a-8869-d2d76a9e5094"
        },
        "item": {
          "id": "3a312d1c-fc53-4260-8f61-d67b16b860fc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dd01b2a6-af71-405b-819a-444f69337021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a9d59b-97f3-4121-b982-522832d327d5",
        "cursor": {
          "ref": "6b778d07-1d7b-4460-9087-7bd32280dd51",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b248d7de-6b36-4aef-a8dc-957c589892f0"
        },
        "item": {
          "id": "f6a9d59b-97f3-4121-b982-522832d327d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df111ba8-4fde-4237-bca4-657ba9404cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83535d3e-0550-4268-9047-bde2f7fb36f6",
        "cursor": {
          "ref": "061e8557-22c9-484d-9d5c-8896a67b49c8",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a12bbf78-de2e-4092-b54c-5448ef799f14"
        },
        "item": {
          "id": "83535d3e-0550-4268-9047-bde2f7fb36f6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5f5e7c50-6286-4305-915e-204787395202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb011c50-5a3a-43bf-80ca-8a28da8be3b9",
        "cursor": {
          "ref": "8583de4a-191d-41cf-9e8c-e3c89255a0fc",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f7b04e9b-fa8c-4d64-a61b-e4bc43def962"
        },
        "item": {
          "id": "fb011c50-5a3a-43bf-80ca-8a28da8be3b9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "741ca3e4-b525-41af-b142-f50fdf068416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7c1bf6-80c9-42d5-ad0f-85c01ccb8597",
        "cursor": {
          "ref": "3595f8ec-29b6-44ff-9964-e3c9f2ac2eca",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8d3f4a79-87e1-4237-9425-bf8466ccd0ad"
        },
        "item": {
          "id": "ef7c1bf6-80c9-42d5-ad0f-85c01ccb8597",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bc5a06db-53e8-4892-8863-d450e29fb312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81f892f-0465-4895-a6de-346a83fe8fd6",
        "cursor": {
          "ref": "f8821719-f4d5-4c49-9858-a3007d778df5",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9bf9fea1-c759-418d-b0a5-c7bf768daddd"
        },
        "item": {
          "id": "d81f892f-0465-4895-a6de-346a83fe8fd6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5408ce6c-e51d-4764-9a91-450ade06ed24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bb2b4f-10ad-43d6-baf4-ce8fa5d3dfd8",
        "cursor": {
          "ref": "3efb5128-106f-4f09-85d5-35272a4cba90",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3acad785-1578-4c2b-bc57-096db5d932a8"
        },
        "item": {
          "id": "c8bb2b4f-10ad-43d6-baf4-ce8fa5d3dfd8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "98456371-d5a1-424e-a674-51446a9a05b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0289fd9-711b-4a7c-b805-344c0d7a74ba",
        "cursor": {
          "ref": "b511d231-79c0-4ba8-925c-3859ff9ef278",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ac942ec7-79a1-475e-b175-98cb040658ac"
        },
        "item": {
          "id": "c0289fd9-711b-4a7c-b805-344c0d7a74ba",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1b0b74d7-6a65-47bc-b765-731afc29ca18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e5fbdb-31db-4ebc-a6e3-b1e81e623077",
        "cursor": {
          "ref": "2a6483d5-a13e-4a86-90f2-525b92b0cfd0",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7acadb0c-9ead-4c52-ac5e-1d5862cba042"
        },
        "item": {
          "id": "26e5fbdb-31db-4ebc-a6e3-b1e81e623077",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c61bcac6-ee5f-4f36-99c9-940e31ab04d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f99f7e-8c29-4942-9ace-b28676aae1c4",
        "cursor": {
          "ref": "b1893f4c-b9a0-4039-b358-d3c7a6324ff2",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "21b068e8-edeb-4b6d-ba0d-57d6477c92af"
        },
        "item": {
          "id": "42f99f7e-8c29-4942-9ace-b28676aae1c4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "06ad1ee5-f63c-452a-8f49-e29ee5e868db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27611e4b-f1bf-4fce-bacc-b20d739a2562",
        "cursor": {
          "ref": "6b8b927d-bce6-405b-a8b0-71378ff96704",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e25c127c-dc17-4dd9-8e15-0da9313b4348"
        },
        "item": {
          "id": "27611e4b-f1bf-4fce-bacc-b20d739a2562",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "15ef77c6-b8a2-48d4-b97d-3c6bd51ff28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6594625d-457d-42c2-8775-e9af4453f657",
        "cursor": {
          "ref": "fcdba08c-17cc-48a9-8d4c-b4e06b2ddf6a",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b1d06d51-b7b4-4e08-af44-1aca5c4bb73c"
        },
        "item": {
          "id": "6594625d-457d-42c2-8775-e9af4453f657",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "de41a5ef-f624-4e34-a45a-5c40dbc762f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9899938f-c7be-4091-808c-112431eb88c0",
        "cursor": {
          "ref": "729e1c3a-e509-4de3-89a8-06a87c184eda",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ad4d745a-97fd-48b2-9432-3548766b6b59"
        },
        "item": {
          "id": "9899938f-c7be-4091-808c-112431eb88c0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8847de7d-f4c1-4221-b45a-31c257554f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36757bb-b2cc-4858-b26d-eed2d5e3bec9",
        "cursor": {
          "ref": "7fbf8804-d10b-438a-acf6-85245020fedc",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "43db1686-952d-4259-8536-61ad96b5c509"
        },
        "item": {
          "id": "e36757bb-b2cc-4858-b26d-eed2d5e3bec9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1dda4f9b-9587-4ad0-afdd-15a668dfcc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a66ca4e-f4d4-40b9-8678-48829b0c8349",
        "cursor": {
          "ref": "12a6341c-cef8-4d4a-a3b2-2064312cf28a",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "08de428b-68ef-41f7-8709-a20b0d29d9bb"
        },
        "item": {
          "id": "1a66ca4e-f4d4-40b9-8678-48829b0c8349",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "298412a3-c60b-40d1-92f7-e9e3215dffad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d490d41e-10d3-46fc-9011-bae7ea7dbb17",
        "cursor": {
          "ref": "17530218-440f-4cb7-bed8-b68d5c1116ef",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b0ea2df0-e86d-47b8-b654-0dae6a03a24b"
        },
        "item": {
          "id": "d490d41e-10d3-46fc-9011-bae7ea7dbb17",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "046b6179-eec9-4512-88d4-563b35eb9d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77e39ec-370c-4d16-b45b-44023df90b55",
        "cursor": {
          "ref": "0954a63c-1a1e-4b36-8645-ca8d6de98347",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b644b443-9331-49dc-9ceb-b069485f6480"
        },
        "item": {
          "id": "f77e39ec-370c-4d16-b45b-44023df90b55",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "312aba72-a3d4-4874-821c-39e80e4fee85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f20d67a-ef19-48ac-a6a6-aad4b68bc394",
        "cursor": {
          "ref": "7da2da42-dc98-442c-915e-f5a7881bd8af",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "214507d9-8b1b-42e5-9c81-0287ac6cb5f6"
        },
        "item": {
          "id": "2f20d67a-ef19-48ac-a6a6-aad4b68bc394",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9d56b470-90be-4546-9158-ee882cf93ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32390f6d-68f2-413f-9d78-308a318c889e",
        "cursor": {
          "ref": "b1b3cd20-bc56-4887-9ce1-543aa90a08bf",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a02bc75e-7e51-4a54-ba08-f4131e8b7363"
        },
        "item": {
          "id": "32390f6d-68f2-413f-9d78-308a318c889e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "27ad0b37-9d7f-44d3-bade-2d7399d32edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050dcea8-a75b-4967-a8f2-7630e2cfc648",
        "cursor": {
          "ref": "355e9762-ef6a-4ca5-b652-64ab1a9c3fbc",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "87983f58-e6e7-48c7-948a-ff1a0a992dc0"
        },
        "item": {
          "id": "050dcea8-a75b-4967-a8f2-7630e2cfc648",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8340738a-dfbc-492e-bfc6-2107e3d4e24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9385fb-c1d5-43a6-8cd7-a85aee73c603",
        "cursor": {
          "ref": "24409977-cf16-4d62-98db-d645b559c5a6",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f11c3c64-28f9-4285-8665-3b70bc4f2b53"
        },
        "item": {
          "id": "2a9385fb-c1d5-43a6-8cd7-a85aee73c603",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "27a75f3d-4f8f-4dae-995d-c07ce27f69ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee222f97-c3b0-44f9-a938-93aa3c0e06ba",
        "cursor": {
          "ref": "5ea1a31d-e27b-4281-9175-cc5b2e3c9aae",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fed8b02a-ed8a-4b8e-b78b-eeec7a09eddb"
        },
        "item": {
          "id": "ee222f97-c3b0-44f9-a938-93aa3c0e06ba",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "530450ac-a4f1-4a67-877b-47c79bd95b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f50e93-9462-4d79-9954-83984bf56f89",
        "cursor": {
          "ref": "572c968a-a742-415f-b9f7-f98b0cccaa56",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "443b83be-b665-4540-9e6a-3256f8efab99"
        },
        "item": {
          "id": "89f50e93-9462-4d79-9954-83984bf56f89",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d79d19b3-ab05-4bc0-8dff-efdfa944e548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82373ff1-8346-4720-b6ed-ec5a31f0801d",
        "cursor": {
          "ref": "02d1c004-2c9e-4fd6-8c32-a86a87fce3cc",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c920c754-1bf3-4e6e-ba55-b5954f3ed77f"
        },
        "item": {
          "id": "82373ff1-8346-4720-b6ed-ec5a31f0801d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3b44217f-2690-4129-8c6a-da544fd137b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ca3dd6-366b-4bba-8585-aa2decd841e0",
        "cursor": {
          "ref": "9971ab9b-70c0-46b8-9604-5ed09bd5d18a",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fc2c5837-6f5f-4abd-8ff1-071376adcc68"
        },
        "item": {
          "id": "58ca3dd6-366b-4bba-8585-aa2decd841e0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7d388fc1-3e55-419f-b7b3-34b4627b3d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afe2d18-6576-4105-9c19-c1915143be02",
        "cursor": {
          "ref": "859cae01-0e7e-420a-ae01-280a4e3e0a69",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e9c2af7c-b6e2-4513-8c26-6044c816281b"
        },
        "item": {
          "id": "0afe2d18-6576-4105-9c19-c1915143be02",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dcefd719-d503-4ff4-a238-1be77a24bb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d725041b-1561-499d-add9-92ad82e8542c",
        "cursor": {
          "ref": "24bc7e67-32ff-457e-b76a-154263064644",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "29020e21-55e0-4b48-babf-d46a5bb6dc24"
        },
        "item": {
          "id": "d725041b-1561-499d-add9-92ad82e8542c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0aa91f4b-3d51-4d99-b73a-b9f4ec291da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205fff77-f1d2-48fc-90a9-5030775766ff",
        "cursor": {
          "ref": "6e13ad58-2042-46ef-b7ef-36f3347d0292",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5e0d7410-ddec-4acc-a2fc-e429a7e7c7a6"
        },
        "item": {
          "id": "205fff77-f1d2-48fc-90a9-5030775766ff",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "346a8444-00a3-425b-99e6-26bfe4fd994f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7455db83-ddb2-4b57-b73e-029b6c79b4e4",
        "cursor": {
          "ref": "ad1a9a38-34a0-4b26-81f1-88f78179e8ef",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3c183e92-8514-44ae-9785-beb6c167293a"
        },
        "item": {
          "id": "7455db83-ddb2-4b57-b73e-029b6c79b4e4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "005b1bb2-0e5b-42a4-9bbe-bb9ca0afec7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08d663f-bd70-422a-bc0c-83e8364af883",
        "cursor": {
          "ref": "bfb3707d-5274-44fa-8c75-72b0ff2969b7",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "31ca4c84-f442-4abb-abe8-04d176e8dc47"
        },
        "item": {
          "id": "f08d663f-bd70-422a-bc0c-83e8364af883",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9f3ac784-6e20-4693-90e7-c12b71645be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91288042-dda7-4b8d-aee1-72ccec96a953",
        "cursor": {
          "ref": "02153ad8-a356-40b2-b022-a40bc613b2fb",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "36960743-8d78-46d7-bc1a-921a0e0c5868"
        },
        "item": {
          "id": "91288042-dda7-4b8d-aee1-72ccec96a953",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3f1f7552-3b47-4d8f-871a-5b7f2c5d08a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4008ef2f-b500-48a4-9903-043ccbba8f7c",
        "cursor": {
          "ref": "32a3afcf-4b03-41dd-af7e-e4c60f8498aa",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8f982e9f-65ed-44e0-939b-47281e871951"
        },
        "item": {
          "id": "4008ef2f-b500-48a4-9903-043ccbba8f7c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "527a25ae-be81-4ef1-8572-9f333de9b1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739aa301-a243-4f77-80fd-34a61ba14c06",
        "cursor": {
          "ref": "c06e4bc3-dbf3-4544-b497-9ba9ec1ee151",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0d07a7fe-7e6e-4cb0-be19-97414964533e"
        },
        "item": {
          "id": "739aa301-a243-4f77-80fd-34a61ba14c06",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b15e4b6f-7415-4425-a4c0-1f26a2503720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e906b44-33d9-4f53-8503-35c573243dfa",
        "cursor": {
          "ref": "14065c2e-870f-4fc5-afd2-442c2223a62e",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ec40cac5-9302-4822-987b-0e7ea745e4fd"
        },
        "item": {
          "id": "5e906b44-33d9-4f53-8503-35c573243dfa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0fb1e218-3582-49a4-b269-e535d68b28d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c532c1-52c1-4a1a-b759-f01977707009",
        "cursor": {
          "ref": "c04af231-002f-435a-b05c-d2513e7055c1",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "13d0ff18-3579-4f1a-986b-ad3b16d00203"
        },
        "item": {
          "id": "07c532c1-52c1-4a1a-b759-f01977707009",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "32e37d44-75cc-4587-a6db-2a22f9fe82aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f7694d-1778-4a91-897d-d653303d3a77",
        "cursor": {
          "ref": "8a29563d-4b7e-4a8e-89a3-5349e7c9e7d7",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c03a0c5d-47f2-4136-9e99-b3f00336a726"
        },
        "item": {
          "id": "c8f7694d-1778-4a91-897d-d653303d3a77",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "229d796f-fc71-40a4-a4dc-bb3b2cabdfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba30c43-2d1c-4731-a1f5-d13daf12153b",
        "cursor": {
          "ref": "aca2e31d-691d-4a11-a115-4cc2620ac599",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f6ef2d6a-8228-4247-95f7-3c72b04d56ba"
        },
        "item": {
          "id": "2ba30c43-2d1c-4731-a1f5-d13daf12153b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2cd26d78-c19e-4fe6-b659-f9867ded68e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74647cdf-2163-4da3-916e-a158be9e2bfa",
        "cursor": {
          "ref": "71cc08c8-b792-4942-b4e4-a74749662533",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2b2c7d0b-721e-4f6b-badf-9df1aa1bf541"
        },
        "item": {
          "id": "74647cdf-2163-4da3-916e-a158be9e2bfa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "28aadb20-759d-4998-b8d7-1c74fa4bab93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99ffb4f-8cac-454c-bd53-652f783e05bf",
        "cursor": {
          "ref": "a5a66fab-d40e-4945-88d7-9c115f7575a1",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "581ad6d3-6fe4-4462-b45f-ce938b3a8016"
        },
        "item": {
          "id": "c99ffb4f-8cac-454c-bd53-652f783e05bf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fe8d3aac-4c06-4409-93f9-8350f2db0121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e136bd-1130-415a-90eb-29637f7cb057",
        "cursor": {
          "ref": "d6459212-3e83-444e-a447-bf09decd609c",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "282338ac-d7cf-424a-85f3-f921f935c735"
        },
        "item": {
          "id": "c1e136bd-1130-415a-90eb-29637f7cb057",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "193fb980-2bb7-4f9e-a977-fe1af40de4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cb2fc1-c283-4fa3-b146-0ea3c7807833",
        "cursor": {
          "ref": "7ad324e3-491c-426a-922d-db1462b20232",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d7fbd61c-19cf-4a0f-94da-6545e08b1c3b"
        },
        "item": {
          "id": "a5cb2fc1-c283-4fa3-b146-0ea3c7807833",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "460e3840-7724-4f61-8f55-be7e1a0f0749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6257077-beb3-4d56-8688-ea6c69667f65",
        "cursor": {
          "ref": "c56ddc37-8257-4591-8623-b1e51a07a665",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9bc59feb-00b5-4b09-87cc-0db8f95de787"
        },
        "item": {
          "id": "c6257077-beb3-4d56-8688-ea6c69667f65",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d31886f3-c9ee-4d18-9e5e-5dec123a4d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c1b177-ed21-4e27-9ffd-79c9a47593bb",
        "cursor": {
          "ref": "dd99c66d-fdb2-4d66-a59e-324ed6a199ba",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b3c6af75-cf12-4b1a-97f7-a6b375122870"
        },
        "item": {
          "id": "32c1b177-ed21-4e27-9ffd-79c9a47593bb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "099abf41-9e48-4a88-b739-1cd9cf8e215a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92dd75e-d64e-4c68-9f3b-173124324125",
        "cursor": {
          "ref": "aed4f231-1dd5-4a98-841e-27f8d1a2b9b0",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e472f716-e174-4f76-8029-ee1affe5dc56"
        },
        "item": {
          "id": "c92dd75e-d64e-4c68-9f3b-173124324125",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3525249b-7aa0-4b86-afbf-098ef631afee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc063e40-82ef-48a6-8435-20810698076f",
        "cursor": {
          "ref": "e91de7f8-1fd2-4070-b52b-94251de28ef0",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5c4586c7-1fc0-4ba5-a69a-239b6b39eff8"
        },
        "item": {
          "id": "cc063e40-82ef-48a6-8435-20810698076f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "00900677-6498-48dd-b9ab-96724286145c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a940bb-2876-4b8f-ac4b-b50fd8b9d8ac",
        "cursor": {
          "ref": "25103eb9-ba3f-4322-ace9-4aa09baff0df",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ea359dd4-5cac-451e-a814-ca15e12eb4a1"
        },
        "item": {
          "id": "60a940bb-2876-4b8f-ac4b-b50fd8b9d8ac",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d97d4aeb-26d9-45ab-aab9-589bd88592e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70444a9-d069-4ed2-918c-e1e210a80f49",
        "cursor": {
          "ref": "14ea313c-2e44-42fd-8d60-08a5e6ffd6af",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2ab635ca-ac95-47a8-9ea7-3556e14afc8d"
        },
        "item": {
          "id": "c70444a9-d069-4ed2-918c-e1e210a80f49",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1c84ea37-c83e-45ac-869e-bef1140b7130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742b8022-9801-452b-bb08-ef1416924472",
        "cursor": {
          "ref": "6aa0716e-619c-4f78-b930-11062af51b79",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "066c30c8-dc48-4d46-b479-7886f208010c"
        },
        "item": {
          "id": "742b8022-9801-452b-bb08-ef1416924472",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e453f917-c811-4428-b72a-07034937e6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b029be-7f9d-4b75-a096-c67c26193610",
        "cursor": {
          "ref": "175bac2f-cab2-495e-9695-9a9c466a1c0c",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6033a1b5-e159-41a4-ad9d-30012c91a440"
        },
        "item": {
          "id": "18b029be-7f9d-4b75-a096-c67c26193610",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1edd6087-600a-4397-90d1-1e272ecad318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d6741e-b652-4722-acb7-5fe0c5166259",
        "cursor": {
          "ref": "cb182df6-451d-4737-8998-20f573c3ed1c",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f1afd389-0560-4334-96dc-2834aef68cd5"
        },
        "item": {
          "id": "f2d6741e-b652-4722-acb7-5fe0c5166259",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f5f3d4ee-a411-43ea-8823-ba23c14b7e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2ce6cb-9b65-4e5a-b860-f3f7a85277f8",
        "cursor": {
          "ref": "c12a564b-bcfe-465d-be16-13f0cf141c56",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9eea46da-1342-4b9a-8593-985e4a66e112"
        },
        "item": {
          "id": "ba2ce6cb-9b65-4e5a-b860-f3f7a85277f8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dced74f5-23f2-423d-91c6-f342362dc141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f62f0d-e62b-4bea-9916-97697eb969ab",
        "cursor": {
          "ref": "7273f8b5-edbf-41de-b662-fb45dae9ca88",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4bdf7e7f-ae37-4682-9fd7-6064b3a65acf"
        },
        "item": {
          "id": "10f62f0d-e62b-4bea-9916-97697eb969ab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fc6b5441-118e-4d7f-903c-19be7997dcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49d5ab4-40d3-4a88-8bc7-e65831238642",
        "cursor": {
          "ref": "841377ca-7f9e-4055-822b-0adc1dab4256",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "acf34919-0bb2-4d91-a153-9afc8a3120fc"
        },
        "item": {
          "id": "f49d5ab4-40d3-4a88-8bc7-e65831238642",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a82cd556-0e35-49be-9043-61eb29e126dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef74154-3e67-4715-8ec7-7605432edcb8",
        "cursor": {
          "ref": "354c9e10-c36c-4d5d-bb5a-a779b0c02510",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7f397c47-46c9-4755-bcf0-95b16cec7179"
        },
        "item": {
          "id": "aef74154-3e67-4715-8ec7-7605432edcb8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e99c1039-2a5a-46a0-8a8d-08aeb82f10a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d66f82-9b5d-4405-b4da-ae1d87c672e3",
        "cursor": {
          "ref": "af5748f5-1342-43dc-b1cb-86bfc92ae728",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b3ff7a7c-d782-4f8b-8880-63fab3f81879"
        },
        "item": {
          "id": "64d66f82-9b5d-4405-b4da-ae1d87c672e3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "510586dd-89fa-4977-a9ba-e9f7b6fc1118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768778e6-2bf0-480b-a159-b9c8749d5e09",
        "cursor": {
          "ref": "32195ac6-03c2-437c-9157-b1ffeea7640d",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "86a3bf55-6096-481c-b617-db110b72056e"
        },
        "item": {
          "id": "768778e6-2bf0-480b-a159-b9c8749d5e09",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "895dd42e-f03b-4e6a-97e5-18c948ce0251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f43b49-3b94-4a74-b84f-04a72a969952",
        "cursor": {
          "ref": "e2fb3191-5193-44df-b3a9-04e4b04e1b7b",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f0b7d687-5293-49f0-857d-762b1f11b77d"
        },
        "item": {
          "id": "e2f43b49-3b94-4a74-b84f-04a72a969952",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4ebce8ee-0e6a-4af6-8fc7-255db1e4edb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eb9768-9112-4cba-9db6-f96cf00c57ac",
        "cursor": {
          "ref": "ccd83092-6417-4101-a9f7-eb27ce820dd2",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fed3045e-8921-4867-b15d-6dcb905bf014"
        },
        "item": {
          "id": "c4eb9768-9112-4cba-9db6-f96cf00c57ac",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "51fd4cd7-4b32-4811-a9fc-1ddf056dbf0f",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a733c4-4e16-43f1-ba59-60af22069b7b",
        "cursor": {
          "ref": "8fe44a97-ad6d-49d4-bf52-a8529eaa9ae6",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b68c482b-429b-4a13-a2a6-8c2d43f80256"
        },
        "item": {
          "id": "39a733c4-4e16-43f1-ba59-60af22069b7b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e9a2bc2b-5b6b-4242-a323-cce8f60c12a7",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "506018af-caa7-4a96-a203-25bb9759492c",
        "cursor": {
          "ref": "f6d39a11-6548-4993-8600-31a348bbd492",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8d822dbd-c398-4641-b365-33af1f70c9a4"
        },
        "item": {
          "id": "506018af-caa7-4a96-a203-25bb9759492c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5f574757-f61d-4442-a3bc-c141cf9c214f",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c20d90-3488-4b0f-a62f-bf4c1ce95bf7",
        "cursor": {
          "ref": "98b8ab0e-e480-46ab-a175-91bec90ecf29",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52bdeee9-1458-4549-8806-5244bf65de37"
        },
        "item": {
          "id": "88c20d90-3488-4b0f-a62f-bf4c1ce95bf7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08fe85b6-3913-4b07-b4b8-eb93c47ee810",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c20d90-3488-4b0f-a62f-bf4c1ce95bf7",
        "cursor": {
          "ref": "98b8ab0e-e480-46ab-a175-91bec90ecf29",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52bdeee9-1458-4549-8806-5244bf65de37"
        },
        "item": {
          "id": "88c20d90-3488-4b0f-a62f-bf4c1ce95bf7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08fe85b6-3913-4b07-b4b8-eb93c47ee810",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d87465-e043-4760-b17d-1c8a7802b610",
        "cursor": {
          "ref": "61900ade-1da5-48c8-9da0-f0d0e088df1f",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "92110e3d-2087-4a27-9768-49a8c7a7cdf8"
        },
        "item": {
          "id": "66d87465-e043-4760-b17d-1c8a7802b610",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e1b75b5a-a1d4-44db-9427-a02f0f510a5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19a4775-cc39-4aed-a867-43a0791031e4",
        "cursor": {
          "ref": "4eabce0f-fe31-4826-957c-f3983b34e7f3",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a5a48834-4a99-4ceb-be10-e2bb5ab76416"
        },
        "item": {
          "id": "a19a4775-cc39-4aed-a867-43a0791031e4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0c2bd8c0-9fe8-4a9f-a335-4ff657f3fd0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}