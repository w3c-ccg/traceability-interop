{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f43fb0a0-21ab-47e0-9180-0d2b0e8dd64a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c54210d0-9e2c-4d93-979b-347d0c67fe73",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b9f8517-3787-42ba-9b45-490a6e863f1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f04e7f9-f116-4f74-bacc-d97df41586b1"
                }
              }
            ]
          },
          {
            "id": "8e720218-2c59-43f6-87e1-8e1cb7934765",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6aa07fc6-4d37-46f9-a723-79d28e0562d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eefd6d9e-fef1-4c42-8bbd-d8693113167d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d992459f-9c20-454a-8a32-3bd9015a71c0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2d202e35-a395-4e4b-9404-5b7fc20ab781",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5961eebd-2296-463d-a7e3-62b185282b0a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3874e1c0-6a03-4cb3-92a3-ccc7a3547c0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "876dd50f-d64a-4d85-9e52-856c0420fe81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d01924fe-72cc-402b-8a45-c53a6405911f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "351a8992-09d5-4eca-a044-b49607177e85"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a2d1dc8e-b6aa-4750-b7fb-ab110c2b6b8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fce55b5-1aae-49c6-ba23-33643062b0ac"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0498924-bf2e-4601-8cad-d4a2fac2f2fb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "47958b08-9d44-4635-b859-5e0dab8bc474"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6514209c-8c19-4200-b9d1-f0f51a690d74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4638c20-1d8e-479b-95b1-6d4091678dbf"
            }
          }
        ]
      },
      {
        "id": "21d3116a-7289-4580-afa4-cfac898177f3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1840e1d7-29b9-4d46-ae2e-433de12d02e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0512c907-94b4-4d1c-9612-f4c5b77d7b6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b016d09f-1947-42a0-8e6f-f995a25d80a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8a9d58-7b56-476d-bfe1-ddcd95b6f1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97634332-326d-4780-adb2-c977d812b192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fb7647-de0c-486c-8160-683e53983006",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc48fe2f-e436-4274-b29b-ff0a72adca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed923d03-a547-4baa-bfdb-9c4099efbb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b7d842-9924-4df3-a3b5-00c0f001e1f4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e91a87c-4bb3-4e6c-84ae-c4f9e6edc8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a14add77-654c-4e7b-8410-977ed43efc5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f81ea97e-dc3a-444d-81b9-5bd594727894",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f174d15-0c3c-40e3-ab29-60e6a0e17c37",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693a9711-922b-433b-b99e-691794ee6bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e02cc15b-3e3a-4f2e-a020-8c348734f144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d80d25-63c6-47be-9acb-bcfcbb1b05f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58251ab-2a8d-4b68-9500-ed1f5e1d4792"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43b2dc5f-6ec1-48ef-b64d-3d306bfdc0a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce4e91fd-2ab9-4f2b-8aad-b4970428e7cd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f03a51be-011c-4021-bc0f-a5757780271a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "622131c6-76bb-495e-b2ca-bb26c8d5026c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a67bbe32-2c2d-4e02-b591-4b0abd396687",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "036fe9fd-c3f2-48ee-92d1-50449d9948e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cb41af9-072c-4f0b-b674-064f32fa2193",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bc62758-4819-4978-aa80-b5e83eb39768"
            }
          }
        ]
      },
      {
        "id": "485eb684-0448-435c-91f9-5d296a165a44",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4d03315d-b37f-4ee0-998c-97b15a8636ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0b7483f-2681-4b06-bfcc-450bc1f24c22",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "272664db-6f65-4758-ab4b-65bf3d1b6a20",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3328d47-9581-4bf1-95da-3247aa789df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32638061-d437-40a5-ac7b-2527f3f93b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94961288-f370-42dd-a423-6103452be5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5617db68-bc4a-48de-a554-beff3a857a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c83681c-ceba-4e42-ab27-5c34f8e9358d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2306906b-fe79-4364-bf2d-5996dc544a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb55d51-ae19-4f8b-ac13-e2206d0fd9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8925df-9ce9-495f-a18b-5faa95eda8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b7191a4-93b7-4bb3-a1c5-7c7f8ad3c25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478df484-7e04-4282-b2db-3c070d9e941d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f4b516-cfd6-4943-82f2-637645a237bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c98f21-92c5-4e47-81e7-e9e63522b6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2cb73c-761f-48e1-ac85-084cd7986c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaa8a777-d6fd-4bb6-a80b-ac72a5479abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6299ba1f-9725-4a16-b815-8cd653893a71",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c716c9f-d9f5-46b9-8237-ffeefde2fe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea98f0ec-3ee1-4f6a-b493-8a0738e54f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62b7398-74ce-446a-bc60-07994a207b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25c2365d-eb6f-401c-ba62-557605e92810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b7eb47-95d2-4797-a253-9a05e357b22d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6406362e-610c-48ad-b92e-334fc8e6f586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c8ea62-db6a-4485-bc6d-c6ce00b286ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a828ab7b-a208-42d8-a1f3-baf39f97204e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77774d15-cbe9-4f95-a105-0bbfb3241021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04c112a-8dde-45e4-84f1-0417aa625321",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae50064-f519-48c9-8260-a09a8dc1c4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9517ea-c5f2-4bd5-ae55-5833cdf85152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c30f6a-4d41-4354-9a9a-2d6fc37d7451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24ea41b7-1401-4f49-b837-9bd456f672ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb9dd59-0dc6-4230-9b72-4aeed91d32ad",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48491d2-ea3e-45f8-a91f-077bc0b47004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311f75a6-ce25-4e0b-ba64-3758d9010dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4667d80-8683-43a1-81e4-8516721ed204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eba61f44-517a-455b-924c-be6e03263264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a291e542-76b3-435f-9366-764543571dc7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85ec8b6-3585-451b-9935-5f70bee6198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b67c07c-7883-4543-87a8-b60a3bf498f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602cf92b-7fa3-4fb1-b8fb-4330cb89fe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32a9fa34-6dd1-40fa-9127-04a8b9227a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5114a75-4a87-4d42-957d-95f7cfd29fba",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79202d2d-1379-4408-95cd-25236ecabe6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd60978-d592-4bbf-9e4a-e9e41d41c41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e92618-5e1b-4b8c-84bb-4e562d9cca30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e033dcad-90a0-477e-a905-ee0f607d6fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c47502-3f89-423f-a7c9-7fad45178c6b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2286dc7-ff02-4653-901a-121d2c2d9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bae4437-4452-4917-a5b2-93a907aaffc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed51ca1-f433-4ea6-bf3a-36a6be67b89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90143c0d-84e1-491b-a132-f3b9d160c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7633b345-24e4-4ffd-8aaf-2af598e2329f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74441b0-760a-4338-8dcd-e87ea7384b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57341aed-e42a-4f4f-9f97-97b4010a2160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad662ab3-fbc3-47ff-aa08-e2b6bc005ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8dc0177-dafa-4e30-8ac7-e11c616fce29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae9cdd1-a8ae-47c5-927a-5d8aa7befe86",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ea56ef-0bd7-4436-a7ed-3a1b8fccd097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec8202d-a893-426f-bd87-ea2487fa8c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261ace70-f253-4b43-889e-f3575e805485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5e81832-4b6e-48c0-9fc1-00ca36f9e200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d03bc-c23c-4274-bb10-155c6d4bc03b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d253c82e-4274-4538-942e-2489656ae91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b55fcf-fd87-4271-80e9-56c4f3777cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b23c86-9759-4569-90d3-4e620630ef97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55778a63-d7fa-45c3-b97b-3e1584ad8b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4d627e-3db0-4280-82bc-d2e40efb1182",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ed2430-e6e7-4001-aea3-321167bc195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3775d4-4f7d-4a23-b003-9a4e98235732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7959aab-52ba-4a81-95b4-31990ec77787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11d0524f-0188-4a26-bc1e-a29e7f04064e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe6da99-4490-4313-9b99-2178b89ed297",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7140a8-c92e-4c75-9a42-077f6ab0ea42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191cf7cf-ca7a-4881-a0cd-71277e0baba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe23c07-0995-4e7e-ab7e-986202ad6492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37cc6aed-87a4-44b9-9f6e-8168c53fe94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d4f6b5-4c83-4e09-b609-8a74d174a7d6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18cd87d-999c-4e92-9ea9-2e1be593c0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a6d0bf-3106-4455-9442-84ff4ed09baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e68bcce-3bdf-4cce-a782-da1c1ea249c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "492d8a58-fdd5-43ec-b22d-0a92d9424d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb3331c-2268-4672-9c51-b33bd18e104a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b26075-682f-45ec-a9fe-a667f4d6aa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d62782-dc08-4a9d-a602-07fe0aa66891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e9cafc-4d78-4af4-be2a-3dd101e35713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62628dca-dd21-42d6-875d-5e08ff49dd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cd21e4-2179-40dd-b8f8-7f7349c5b7da",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64984de2-c863-4e09-a23d-9c98cb11828c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f00e914-e853-4480-ada3-9465cf5abd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5494db5-e738-449a-adf4-a7010606e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4007e272-b57f-496d-8e2f-522c0b991cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2141d0-c033-4bc2-9220-9adbba47d996",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9f30a7-ae42-4bbe-b98d-f08edb80c3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21dad48-5cc2-4404-9a0e-f41bac992a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbde978-4b77-435d-941c-2d3ff5d83900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "209c0d84-3d8f-4b83-b976-0fdf0018dd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c54e35a-db0d-483e-b89f-e75999d52bac",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c03107c-4e92-4751-aa69-a8e2aff8ce00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc6b570-9c07-4c68-a64a-270b4a4665a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e68504-ab79-4bb1-b240-5be49616a006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc48983-52ba-475f-981c-4e335b4ba121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69079edb-0f07-4b6e-b484-5d2cf9881292",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e2e6c8-8d84-4593-802b-73e84a0dde49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d51902-d8cd-424b-9240-8490c613ae16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0180ff6-7c4a-407b-ae36-785c86b446f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa9cb6b-0de2-45bf-91aa-658f5402a4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc2b245-9541-4494-86e0-ecbf41d7037b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03253a4b-29c5-4d72-8d78-7351ac83b878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d23cb46-4c00-417c-9988-672df29d00c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2c257f-655a-4e6a-95b8-b9225774c5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c937b7d-9a7a-4bd0-a0bc-a26325e37e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6c5372-86c5-4c89-a4de-c2972d641536",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3b093f-543b-473a-8e08-00c7360e025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3eee22-508b-4b29-8fe1-af5bce720426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd4d029-2696-4622-a0c4-ecffb564b47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d729275-e09b-4e15-8e25-0642b0527aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2751107-6b34-4bdf-938c-f49972096d70",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916b15b5-a7dd-448d-8eb1-5d21579f38d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c6367f-c216-4018-91db-45d6f316d598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caedd4fc-3f01-48f5-a16f-b70aa63c9227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f473f90-6884-4b56-b4dd-3a4c6cbbaf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6044bb68-2f66-4bc5-846c-6e813ea4a948",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cb2b57-1459-4eb2-a121-fed5ce470382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00029036-998a-4be1-850e-a184557f7b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2b2f10-e746-40b4-97c7-b6dbb753b36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c00ae108-6ba0-4011-bbf3-04e0b9282f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96a6f07-ff6d-4665-af53-4cb2dd7dcf54",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f5a22-6223-45a9-8867-792d18aa60e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ed2565-4952-4533-afce-8aef70090644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7528dc43-2603-4f74-a9c1-0ea6492932b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bc7fec-70c8-4106-b052-48ddf8600785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f054ab4e-728b-4231-bd72-7e27a6a9f00f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f5d0ff-313b-40bf-a91a-1198adcf0aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235971b3-618a-428f-baf5-c5ca01cc59a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05416f36-3f25-48d3-9a70-afe9ae10cbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e83f1f2-8aa0-4929-8baa-0721fb5953e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac557ddb-9dda-45aa-bd8c-e4d6197665fb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73fde90-298e-4f7e-a2c5-98489ee340fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca3d12e-e134-46d7-ae27-10a134813ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bb8835-9f50-4d80-aa89-d22a9c3394b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e4037d-0f33-4242-9eee-4e2624fee55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d02e23c-45e4-4443-af11-7d6654a65d3a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acc16d4-16f3-4eee-84ae-07ae05f51f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de01b71d-bfef-435f-a2c2-7ab10c22612a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746c5f14-a780-4ce0-8c91-1f378635a4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee2e955-e6de-4304-838e-592dc780e1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ba58a1-5606-4959-aa5f-b175eb5bdb5d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1856a5e6-10b7-44e9-b58d-479954fc07f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfd7b18-9882-45e3-ace8-9a672441aabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b572b331-8d3a-4505-88f9-5d6e62da9865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab63739-dc16-4ad8-ab52-6cadc727799d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e1398c-37be-42cf-b58d-dc26a4adfb65",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ede4a0f-3927-45e9-ac4c-5185d2d6c1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f3f8a4-d043-44c6-bea4-d0db19ccf39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e61ce8-2ee8-4967-a4f3-0f9688d3ea3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "849513d8-0946-473e-bc1b-a8eb1d8aa8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1484be4f-f043-4efb-9486-bd9059659cbf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee0a9be-d6dd-453d-bd40-fabaddbaeb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a757bdd-6dcb-421a-90ba-26536ff74f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee5c923-4464-4b7b-82df-321ad03c29e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8da18f-6b16-4999-b980-45d8a664d818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50614c63-d9d0-4ab2-a539-5368b2e643f4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6547f5-cc8b-4beb-81ae-f7c04b5c359e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b760606-d56d-4d19-8742-66a0515e1b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c596584d-cb99-411d-8815-9a1b4e27215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd13cddd-e05d-4e25-a6c9-483c38acc652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422de386-7e12-42ff-94ad-5d6b8efe4bdd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff93510d-40bf-4b54-84f6-0b2ad5ae2166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e18bf10-2dcb-47d7-8b57-a0093172081b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1d4bb4-1942-4099-8a59-1bc0946b9c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d63616e9-2ecb-4607-8ff7-052c5617489a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5392b7-4ece-47ea-8f1f-2b9268fc0791",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b5c5f5-d62e-42a3-a550-28bb4c9e6870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddf7f3d-7aeb-4bc4-a7a8-754ce0a106b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacfbb8c-e4fb-4f15-89dc-0c7631874b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "36980c96-8022-4b19-924f-929bf7437897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14802b2-035d-4cfe-b607-7a6f1252c57c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6403442-ad53-4b52-94f1-35634875aad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f37ddfeb-f460-4ce8-a55e-48ed6d904cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613c8580-3ed2-48eb-b472-92da6d71faa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29384eaa-c3a2-4011-b9c2-9ab6bcc5c094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85b6112-b028-4a19-a471-9589e6e7ecc3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685ff443-9e0a-4982-8294-505bcf383d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a4d88a-1b78-4768-8b26-3d68938b47fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6dd57e-b950-49b8-9032-f2460787f2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8e30ee-1e69-4e62-9aca-f468a64389e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b27d5c-bc50-4368-bbdd-1e3c29847c08",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689b1c71-e133-4eb3-98dc-807fa42e9529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56464c8-3698-48cd-b79d-7e9334abc0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49cce4f-c01b-479f-b705-5873ca65ced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5449c534-b63c-4642-8bac-6c95bb095592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce05b23a-8ac1-4d82-b818-e8815b63746a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded47573-8db5-4633-9e5f-087759dfbc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56181cec-24d5-4902-86a2-d0e24c4ca70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc97aec7-5323-42a0-915a-4a216fffe98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d87306bf-77dc-4339-898e-48626c8d61a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a9372d-643c-4962-a4f9-9b4bed3aff1c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cd4b7a-4f60-49f8-9669-073a3ec2a8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c319748a-d581-49f9-9a1b-228df81c156d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a202f6fe-68e8-49ac-b5c3-646644779c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f905be96-2860-43c6-a6e2-dfc62e962342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab0d705-0939-4315-a535-f3fa380495ec",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4971e687-3545-405a-b4c0-ce76d1b63400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bee394a-a9d5-4125-9675-fadffe3b55f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ea943c-5277-4fb9-a03d-e92ba2da1aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "56979ad2-c9f0-4b83-9e00-8a0f019d4a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9248d90-abf3-4ca2-b6c3-2d7e6d667318",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7a7ed4-b716-420e-a576-2326c72293ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6709f64e-1061-4bf4-a8af-8c9573ebf6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0c6f24-35c3-4518-8da0-a86cb429990d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8b03b380-57fb-4813-b180-23eeeefd8764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940c1947-6058-4766-aca1-59d7f47efc79",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a81fea-2735-4af9-8843-bfc61fe30074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef88480c-4e49-40bd-b556-0da89973b453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1787698-008c-45ed-ba55-04c4fc3477e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f39cb24-236d-40fa-bf0a-edb59dd32a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c278c9-f62e-4e60-8ebf-96a92101d576",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff00d626-d69d-475d-ab49-0cdca35f7296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275b1fb3-630f-4a06-a602-e9d14fb037ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b1404a-c66c-4e59-91a8-bdcadb59e834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "81512b7a-b7eb-47db-b924-0765076a0b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b423622a-5a48-414d-b8a3-9cb7a5dd7a03",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ccd279-af27-4a7b-b042-979febba56ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9138c9-5e00-4fc1-afd2-156ba6a484d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd256f75-5c0f-4f3c-91c8-2424815a01cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8534935b-62c1-4b52-961f-13a24f3a0142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207d1e8e-7a0e-4e2f-92f8-c0889d5f9b9b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63df8c7-b2d1-4023-8980-7f76a8b35d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8e3cd2-81e4-42a2-b0f6-86cc3038d338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23175b8-def3-48d2-bb2a-af5960bf7096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c15e9a-3ec4-4a1b-a54e-3c5321291861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a911a71-1d5b-4a2a-b904-4791ef23ae18",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c183567-4206-4f26-87f7-7ce6c0352b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288da142-32dd-44bf-82e0-62118d5bf9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bc6ef5-0705-47a2-b1c6-5cfec3ce9bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ace1b3-c52c-4bb1-9fc2-e908a1a11e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d95d9-1b6e-496b-b8bd-78a52b2c0597",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f53bfb3-9556-449a-80b7-837cec32cd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84168fc6-2ef5-4802-9e7a-4ea2064aa470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f098dde4-409b-448d-899f-88802da26545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1929cb1c-e5f4-4dec-8e9a-019475d5ca73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f916094-44c0-4626-a59f-367624276290",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5028c36d-30f5-4ebc-8837-4a97c4394db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca93851-0dbb-4266-8d8f-2425e4e83fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f5d39c-a5da-4ecb-af3c-da6ae15e1539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2295dd8b-2f1c-49f8-96dc-174e717a061d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95458315-72a7-40d5-8dff-e6b900b6c51c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8126f898-a3d2-4b3f-bde7-b3650425d9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1a12ec-da0c-47fc-8870-4a9f0246ec87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec19f6f0-38b4-4584-b2a8-d84a95e779a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "960b4f81-0778-46f8-98e9-bfecd92fcab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e12133e-29e0-474a-93c0-7e326514a834",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd76e603-3591-4c35-b815-ac920be19dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c0e877-d8d7-4037-b7c2-841d76a4a818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de9de80-820b-4184-aa64-adebbf641d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "236df0ce-472e-4885-8012-6fb5b4f852a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9b66c9-5331-44f4-b303-90ee458376ff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaf127c-32f3-4932-b14e-ca1aa6738ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86019f8c-f338-47be-82a5-61b7a960236c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6be1ca-0624-40a2-acdd-5de4c3be6294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05513ed-0a4d-463b-b387-90d142f2dcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6827de47-f894-4ada-a0ac-d81886e08237",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d28e452-2578-4d0d-87ed-7ed47cbc74a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefde329-7fcf-4d1d-9786-f2fba888a4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a4b11-fb88-4732-a294-2126e01a9968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faba9769-912c-465b-bd26-18d98bee1fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb345ead-0cbe-4c95-b0c1-97cae05f7ccb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84ca421-a48d-4337-b37e-5189b109c993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a732d05f-d2b6-4e0b-868e-e6d1aeeaca72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d69318f-85ca-449a-959e-97d9a39629b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac40439-3717-47d5-b486-82b1117c643a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3433693a-01c0-4622-a2f2-a970cde5816e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e049f93b-0b27-4a82-9dcb-97990270fc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f9c30e-0cea-4d2c-9def-633038a6d7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4847de-b2e3-4824-8a7f-6fb3062eac31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1f0900-ff15-4901-9565-5dd785539866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9706396e-e4fb-4398-8dd4-4b70554c8186",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18726930-19d7-4a2c-86f5-3dd8b2f2c288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868be30e-d60e-4be1-aa31-a239462ef20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736d5fec-6758-4d0d-9baf-52e8637e7424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "99d61b5a-9e7f-411e-aebb-43b52d414945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd687b2-5730-4b30-a3c2-a7a5843a58a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd1aef2-d935-4442-9ab6-3723b2a4b644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1e7279-cb42-4633-bb05-c1264b843010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb4544f-9fe5-4bbf-afef-d85e807fe2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8e1706-b7fa-437d-90e2-4053f714bb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2eb7b1-b52f-4746-b505-021b147a257e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad57b56-8c8d-4059-a455-c1611980d0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1aa036-a3fe-44e0-927f-b38688964720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a879730d-3327-4312-8440-1401f5f2e5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68d0b128-e12d-4314-ada4-de90fdcd8376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e504904-7920-4ad3-87af-0033b5eb3ceb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c956e283-2033-49b2-b14d-af1e9b4eaf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a203e91-524a-4fdf-846c-0a207582dcae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da686be9-8da7-49d5-b86a-c063cb438152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "690ed45f-7541-4e70-8eb0-1eeb97bdd80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81804247-8bd9-4524-b6e0-7871e5d1177c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f0b71b-dd74-4656-8f3c-fd30dcccdd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45333985-2482-4429-a9bf-093b68bcbed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cb2293-952f-4891-bdd6-d833d0f232ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6ce1ee-5910-4c71-8bc1-a4fdb00801c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5780f664-0759-42c6-b477-c24a00c768e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bfe242-1d3d-4735-93a7-6756b6f3a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b49ebb-f3de-42fa-adb2-f24884c8c5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e22eb3b-065a-4e0a-ad40-356ce427af35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd38e8da-3fed-42ba-a8bf-5ae8e8363fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51e1a68-239c-409e-82b5-24401de65dbe",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86de074-133c-478a-81e2-0e39c51b63a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40f1151-375f-40a4-88a8-c1ba9e5f3e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686fe555-d0f8-4283-b28c-5c0bafbea064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfe01c6-f043-4ff5-9b98-c0a365d16981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b73146f-9e6a-4cd7-9dbd-2538bc42eb0e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5154233b-c121-4b41-a839-4f8434a6bdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4027e52-16f9-4e66-93b4-0dff1c15e2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d59e90b-1196-46d2-8f4f-b57a30e8b6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e068c3-3f40-4a61-b12f-66a17dd9ed27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2f3a76-7881-4ede-b804-1008445ca7bf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b13f22-a8a0-4ae9-bf69-47b31f82418d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984cc752-1fed-40b2-b462-9f7867568d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e3a412-ffc3-4144-bfaf-da9883988e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c961890-52a3-491b-8d7b-ebf5e4c7dd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8640b4e2-2906-4382-a77c-2ec3be2ed6e9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9468ba0-3173-4af6-a3e2-aea4ffb62bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2180af-9b87-4e45-8222-c999382891e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b3280e-54d1-4929-bedd-a7e064efc044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca067b38-2e04-4bf8-8599-e957130e1dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd59166-33ca-4643-a29e-d3626e4534e9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45993e98-71c3-4122-a7e4-b991377e2222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a4bf00-9346-48f1-8231-bc78ba8761cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8ef16a-ce7a-4098-998f-3433ec47c68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8fea63-f0f6-4a49-b1d7-3c3abc56db2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b5e088-dfd8-4a62-8cd1-b2cd05282069",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a16e50f-515b-454c-a7a2-819a3c34e1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b34d6fd-9276-48b9-acff-e1d22653e12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97d9583-327e-4d42-b067-3b47669d6a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00d7c1e4-cf90-4bc6-8c6e-d6115d92c1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813cd709-4d1c-4eb7-8c7c-d93ad6f98ff4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755a9cf5-8a0d-4de4-9a29-48e527e5e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c197ab3-71c9-4f78-80eb-48049f3f36c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fefd3b5-ccfb-4256-9ddf-40ac390d2ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a71a9b-2b02-4d58-bf5a-eff71631a545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41900d3-aba2-4610-8856-235299f21900",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d110a31-d981-4bec-836e-ee15654260d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1030b4ec-8cc0-4161-ad0c-fee7bcf86453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86ccebb-68e6-4648-a778-3741ce86f2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd6645d-fd61-4174-a5cc-7614520c5bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b8858e-8bc9-4693-99d8-812cd3682f12",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc062824-971f-4970-9ff0-75da6bd1c641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df34204c-cc2b-4958-9854-7a80270252b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad75bfd-2086-4a2b-9770-d6388c61e3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6265d3e-0641-4756-a947-54f9ee967f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfac9bbc-8af8-446c-b350-dded4e555d74",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5af966-efc9-414a-8705-90e08601fe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5736b8-52d9-495b-ba57-3869ac0e1a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4e5de0-7753-484c-ab1d-d824ab11ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75bd0fef-6eeb-4140-b0db-fa849588989c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b9b6fb-3a5a-472f-a577-9741b8e5c702",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb009d44-adfa-4293-931b-1a7366807049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f1eed7-8b70-41d7-ba27-b0d551f40f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f15832-a2b4-4aed-93fb-6da2b4800245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9422282a-d64c-4c40-bd66-21f7f95a459e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd38a1ef-7b86-4098-8b72-c2bf0a9a7795",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c2a7cd-2992-4326-a8d4-002c6538dbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1330c344-6d20-4292-b654-84292a95d841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84193d12-7c9b-4aaf-878c-6ed67702e669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6935768f-1470-45a0-9dc1-a596bfc98c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45023a72-8da8-4a78-9e64-a4511bc68a95",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa9aeb-1ac9-4c17-832f-8ba67bfa6b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d02c88-7920-457b-a0fa-f9cf9660b413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616af36e-1e95-4fb5-bf11-c7a1f5089b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43a12684-ea77-41a2-9f0b-b784f0bba2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f7bc8d-8bf8-4b48-b8ed-00887e877ade",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0701450e-036e-4ba4-8252-c31055fac6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7496a18f-a168-4ed1-a20c-68d4b69b99e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b64333-b596-4a9d-a06c-965b893606be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e2e957-3fd8-489a-8fb9-7d355d5ff309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58fafa5-7dd1-4449-879d-b15460b8c4f6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feb8a57-0e2f-44d7-822f-2dfb0ed70194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0069c939-46bc-4c7d-8dfe-d799f95a4981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b44f12-021d-408d-99a6-4f2e8157e057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c2535d-2a17-4b6d-981b-3f47efc4f9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387ef8fe-da98-4108-9955-a9441b633365",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5ac37c-6b39-4a8d-b33e-c39c74a8cecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceee470d-b942-4c00-b166-19f31b6ad33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45770a0-dc7d-4b8f-a6f6-4de09f12d49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbc31a0-2990-49cb-89be-4a8d77aaf1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f9f8d5-ac30-41a4-b8ed-27633090ac85",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842c12da-d22b-40c6-832a-672325468152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734ce02d-4a9b-493d-b4b5-1506aafb1df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e8933b-6ce8-4f20-87ac-dbbd3b134820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a089552-f635-49d0-9321-c00ba3fc4b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d16fd2b-742f-40e9-86fd-41c6458c5a40",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18b6032-f3db-4155-b76b-ee57f7bb4e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2d9a38-8c5a-4465-a731-c2156b6bc8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b3b0ed-2821-45b2-9e79-c20542ddae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe23472-f71d-4a8e-ba16-d9db9961903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ccce21-1399-43ec-8ea6-e5ead0f58a3c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f868b4-7f10-441d-bb89-d231ce9190c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12723c70-4e9a-4a26-9df9-9b85e7f36939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81659b8-47ef-4b19-88f9-e7ccd6c30eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66369282-dcf0-4fcc-8cff-2a8dc38e33bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b72d65-d80b-4b3e-a744-baa8b112dedc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9721dc18-9c98-4ed9-b11b-64243fa54aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed465e0d-1409-469d-aa4f-155935a9dfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7069c1e8-bc13-4988-a148-4bcee06c09a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f23a43f-5d67-4465-b569-f4a1fa36fcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6798116-1493-4811-8045-4bc8dffc1a31",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c43b02-116e-464f-8f9b-572fad2f80da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8738e49f-403b-4aa6-b388-2e0a822a388a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80189df6-4426-4533-a70a-4151d4b1e88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d3f92e-c2b9-4e94-9d76-a7b36badd9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb88719c-c041-4575-90ea-269779e91dc7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bba60b-e499-488b-9cea-4290c55ab7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2003675-f2fd-480a-9469-9b0bd29b2a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e07fefb-a3f5-4474-aa5d-5f953b3dc1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b29aa90b-bc40-4e41-b64e-d156fbabac22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e9734d-406b-4ccb-a058-20593f1dfd6e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41c5c0e-1df0-463c-8ba2-881490c58fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c534ef24-67e7-4456-8cb0-aa3d319d24d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bcd414-5efd-455b-902a-54111359b042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d074f692-3a34-488b-930b-dae58fef138d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0c1b84-4973-4c86-89c5-50ed99825f53",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780615ec-59c7-4eea-92bc-e01d23a50aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d3b771-0951-4263-9916-1e0bf6be8ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5773ff-b62e-4b22-b503-80861298c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b55d7eb-af3d-4d1d-8e29-8456aed644d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b122f19-072e-4ddd-ac75-4d950f862a70",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bbef65-b263-4f87-bb36-2cdef4888d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af61b437-28db-4e4d-bc74-8c58e273f3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af7cf12-1cab-46be-aacb-6ddb9310ab96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c987f56-3fad-4f7a-9508-2c62ef46cbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d406ac-acd6-4a59-bbf5-4d7838a95858",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f76283a-4a17-4fa8-aaa3-c6a2af5d2933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9feabf56-4804-49b8-b10d-75fd0b80f64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c8a709-88b4-48e3-b643-961d933b1579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2865f53b-04a7-469a-84bd-1734c0981f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccf8515-feb8-4753-be6e-64ef55bd8b87",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bd75d9-34c5-443c-ad5b-2af391f1d341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4afcf15-5267-49f9-ab7b-dac4adf26730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d86344f-3119-4f6a-a83b-f70bff78ea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a8cd4e-8b98-4e71-9bb5-3facaab2b43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c6924f-3707-4bc6-b8be-801d35ebcda9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968d7063-0591-4d0e-9f92-a43b866cb53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e1f9e1-ef2c-40d0-bfe6-09e6f4c6ad5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dff2754-799a-40f9-984e-6efa64e20aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "132a9558-339d-4e33-a31a-7c8e3ad2fc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdea37fc-3d1c-4fbd-8935-6c3ce0a66ae3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38418596-452b-44ea-9fa1-5621c444f37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adf4052-68cb-40c0-a2ef-82dc32b7da11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bcdc3d-29b6-454f-8b68-e1966a4f596e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "43b23e7b-2dad-46d8-a461-a5974322c5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c73ab11-a10d-45ac-929e-06cef88e27be",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6f5eeb-e455-4a06-8edc-57b91700b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6a7c37-97ab-40ab-ba99-a3965034fa22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2c4230-6b19-4073-bb4c-ceb260484748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d83b116-939c-420d-9eb4-7d2ca78b2bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889a75a3-7048-49ec-98ef-2ecd9d81cd5e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b4d28b-9ea1-4ea6-b02f-ed9c05259513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ebc701d9-ee1e-4483-9a58-ec3a26c9e795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971ff036-7859-401c-bbd6-75bce0ff568c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4520b2-f627-4f9e-9e41-060a2c61cde2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8fdf1105-7dce-4641-b2aa-98ef35c51034",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27bbcb24-fa52-4545-9778-c865050012e6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfda5b1-8744-4446-81fc-be0a39df4b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a038f48-cfeb-4b1f-853f-ddfe74fa4cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b2a3d6-4c3a-4f6c-9535-0497d873a951",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5c7a463-fdf6-41a6-ad2c-f1fb331a0f6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1364290-bc8e-4187-af94-a2121abfe794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1f33ee7-b985-4358-942e-bea110f0e72e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1651579-f970-453d-b575-6750e8650085",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "996d702e-a226-4afe-a5da-cf1dd3d75449"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09d28095-3ba9-47d1-83b2-5e3f70ea7355",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfea7fde-2ff2-4164-8452-745b45632997"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c389eb50-9982-4d36-9ef5-8ab3de06da0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1f8d791-f4aa-4b47-9225-9c455b0c522c"
                }
              }
            ]
          },
          {
            "id": "e173bfbe-fd97-4ed5-bb30-273e12ffb7b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8aa9c4a8-c593-4e50-a0cd-297d0f1e9372",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c71525f-9330-4a6c-8172-d74af393f71c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e72515d2-2883-4262-8eab-bab114a580e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52b23470-fe3c-4fa8-a31c-cddf9bc471f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "70e988af-777c-4c35-84c5-c4e6d78df303"
                    }
                  }
                ]
              },
              {
                "id": "8c1c8c2f-982a-438f-ae69-096227b8b5f4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "382f4e89-3024-417c-a824-d75a73985dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb11940f-867b-406c-8041-661685f5dddd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f277c4be-b74c-423e-b420-cf0b243e7d8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f458f022-c09e-48c5-9231-1d2e3c16818b"
                    }
                  }
                ]
              },
              {
                "id": "2b047539-1d43-4494-9f47-0ac040fb13eb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae1c16b8-c826-43a9-b040-d10ee2e96def",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ea96c2a-e991-4cb3-a8da-a455580a10e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a50f62ee-6663-49fc-801d-e889898bfc74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cffc1002-1c69-4aa2-8927-2eea1dca3319"
                    }
                  }
                ]
              },
              {
                "id": "a05934d4-6941-4367-b33f-765988e8eed2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aba39a66-77b3-4716-93e1-b218c3fea85b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1e1ac36-93ae-478d-bdd1-83bb40242300"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b061731-5c67-4945-91f6-d9fa1f4a9b29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9c356f0a-756f-415a-8d0a-1e1a8eb0440e"
                    }
                  }
                ]
              },
              {
                "id": "1c9fe15f-fde3-4da5-bb41-5fc28efe852c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "954cfc85-1211-4157-9fb7-c9b0b1a72f15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f28ae14-5529-436b-ad37-47f287a1d728"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59d835e9-a1ea-41bb-88de-ab13d651273d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8d80cc75-73f5-4c14-963e-92c39d659b1d"
                    }
                  }
                ]
              },
              {
                "id": "1d8fd779-0475-41d2-a385-f219c6f91ba7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de609a22-12bd-49ff-aba1-abf14a25eef4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df0102fe-8f67-404c-95d7-e09757d8f445"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7eab884d-c1e8-4751-b89e-f6d4f0b0efd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "279e0dcd-ab4e-4844-b0a1-2e40795d844e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b3fff15-89c7-4ed1-b23c-689000ce7946",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f217265-8a9f-4664-892f-754e49bca2ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2ba38614-883e-4544-b2e0-c9c9d7cbb5a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e26bdd45-6491-4317-8226-eabaacfeaa2b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81ba6470-13cc-4600-a8e3-b6001bb39697",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7ce0a5b4-954f-4d08-acda-2113f64f87b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb553b07-d2d7-4042-843e-2b890b0a9051",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "686488fd-e7dc-4fde-9868-13d3ae96d729"
            }
          }
        ]
      },
      {
        "id": "9666f5d9-2549-464f-9778-f0acde4bba75",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8dcd5631-7083-42e0-8533-08e650bd1c40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a37f18df-e975-4dc6-96e1-31c6c6e356d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90aaaecb-fbdf-4abe-9d02-c4119f36eb1c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd029dc-5c19-4852-b3c6-cb6076b70c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d989ac8b-7ba6-4186-bb1b-7cb1397eb528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b8d7f1-ef7a-4b0c-9922-e8ddaafc8aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "05933d55-d85a-479a-98c6-0f037b93f902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27d6f62-d915-4ea8-a254-13a675e67f2e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a873f5b-1450-4593-b978-83ef3f3672ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a01400-d5ad-49a2-95b8-a9086c38e07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee380acc-39aa-4d54-8dd7-9dc88cfa6c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "525fa8c8-c54a-4662-bb0e-30c34aebc5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920d7e16-6ea3-4f1f-9430-9931f898af31",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4593ae23-e41d-4da8-ba4b-44790053fc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d99b21-7941-4b77-b715-565c6d4f3a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a51f43-723b-4725-915f-b2aaacef6117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d730456-a06c-4d50-9fb7-c152c30da3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0b7c61-13f4-4c94-b8d7-b8135179f9e3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aea1f7d-26d0-4f85-8ce8-78bbd230b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220499b9-e18f-4a27-95a4-45785ea3f5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788a7510-af4f-42d9-a87b-7aadef930b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "551f9ff0-122a-406f-9ea1-c68dc73d93a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe6d8d3-aad3-499e-b291-a979e5d0a401",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43218af4-64b8-4668-8ae6-cb7a50651d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ca3245-e98f-4160-b5d3-1b8a82b73f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f5369f-cbe3-418a-87dc-9d99d98c690c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d743683d-edde-4312-8e70-f8e9e31752df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e27424-a5f6-446e-9c75-d82d34bfd221",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ba4998-a9cc-4b89-9c3a-d4c67c3a399c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8572d74b-c27b-4951-b48f-faa0ceeb3bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804c173d-2e69-4e5f-86b7-0e9938573783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f42e260-551c-4898-95f3-f1f114792f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c00b17-2a5e-4e89-b096-33ccb9775337",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e15b1ed-b26e-43e0-a435-166dba82c61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc278302-7f20-4b7d-9979-1d29c4a61cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb1dfbc-8e44-4846-8bce-f1bb19f1266e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d23ad83-0211-489e-889f-f98d4519651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdac7414-f4a8-4d03-a972-fdc2ec18e8a1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d156c7eb-510b-4865-9d2b-c67db35f0cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f916219f-f262-40cc-a6c4-e77ade8f3c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4938c8e-24fc-409f-9a51-e75c62a919e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "647a8a19-43e4-45e5-889e-cd63b5e855d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5c52c7-8815-4f55-b525-2c2568210c2f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8735cf7a-4b4a-4642-b398-7711c255cd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a43f8a-8e5f-4d98-b6ec-4a94be3ce60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a22eea-5b7d-4961-b9e1-efa2d53b5fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dffdd1f-3519-4bd6-9c64-c39e820bb720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0c5016-878a-435a-b350-558643118d50",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e369fbb0-48e1-42cb-a8f9-139707a442f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a2dce4-3890-4e53-8417-1bddf6d1102e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe74eec6-810b-4db4-9e8f-362a702dc43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e49decd-ea42-461b-9217-6f544264beec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e784a261-7fd5-4cfb-b73b-7af3135a4683",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590dd641-c37d-4765-be39-e3b42ece45c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979a8c79-18d1-4155-91dd-2586f6fc5d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdafe83-7229-469b-9da7-0fa7b20c034f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c591ea-2981-4169-91c8-8c3ad1438631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec818b2-8dbb-4974-9ecb-502ba1edc599",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cad01e-1ec1-4f14-8534-b6ed144fc7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f89129c-c9b8-4a4e-8242-f9f273220015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7402d27-b08d-4de2-85d9-88419dfe64ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e176e89-e2ba-475b-8fad-2b847552e6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0c0b28-b3dc-4a25-8cc0-89ea1e453ad8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71808d83-2542-42f6-bc9a-b5b1d258ed39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5043be0-c46f-4acb-b494-ced835750cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3354a9e0-af70-472e-a775-54c05986ae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc9ede6-77f8-4d41-82b6-6fc03b6e88e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e10624-b5cf-46ee-97c0-851a72fba2b7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58efdd5-986c-4679-ad8d-878ceb796a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33d5975-ac32-43cb-a36b-f042c540659c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88e0717-2ab5-44e0-bcc0-fc30d1e8cd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1947ae57-a8bf-4465-b03a-2b50a9b0e1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414cd0bf-a57c-48f8-afc2-34022a6e48a7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efac752-c430-45c8-9ba9-4970db2cd300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd256ab0-7e9b-43a4-83c9-3b3556f228e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608d0f37-a58d-4aa3-a77c-aaa1b4f4fcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5adf2e3d-1eac-4233-a64c-b4cc69e62fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67944020-daee-4503-b6ac-760e106a621e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50c26b4-eeca-474a-8cf2-a3d3cbf6f476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d8b567-86f4-4f42-b7c3-42dca44bf64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ce4aaa-d5cf-428e-9d27-20fa2a6a9e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb0b4f8-88cf-4fdc-ac59-ae99a8005ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37d33fa-8db6-4e67-85bc-d06f9ca6a2b4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efda60a-3975-4e8a-9278-4264adeac815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc1d4fd-a8f4-486d-9800-30236eb9f2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18879ad3-b3c3-454c-8248-bdb65ddcf3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8896d7a0-64cb-4162-988d-8b5b25f6e7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f19f471-b06a-4b77-8727-70387bb5cb8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a8692-fab9-40f6-8876-96b4c8b5e7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a9eae4-4c1c-47cf-b4f1-b1c1c5eb8545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3df16b1-c862-48be-addb-0f684c46c43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10590b4c-b060-49fd-97d2-f3a002520d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5029376-0f8f-4560-aad8-dfe8a762e2e7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa2cafd-255b-4285-9572-6c9ee21bfa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da6d28c-e872-423e-888a-de8280e33cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc46b0c6-9474-46f2-b30b-7addfe9fef69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "479dfef7-3145-4b65-9bc1-f6306965d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49705d3-b230-43c9-9781-8b7e1e0e879b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7350803e-5bed-49ee-b70b-986f19b322bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730bc50b-dd0f-43d5-9695-2439492e0575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc9cb56-9403-426f-adc6-bc28789ebc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b0a4f9-f051-46a1-ad03-9f0624a07dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2302e6-4ade-45e8-a21a-9e0aeb44d06c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e0f1d8-1312-4628-bc59-9c2777deb19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bcdc26-81e8-4546-87e1-f1c0ef1a8a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1270e19-0a05-443c-9026-9eadbf5798ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe6f931-b7ae-4740-ba95-f0d677d8e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211ab545-2f57-464f-8292-68996e810f06",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7971bc-16ac-4970-a581-f9fcd8055ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e2d1dc-2307-4f0d-b177-993f6bc90b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c057b349-81de-4524-84ad-aa9a12da62fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9692b827-1cfa-444f-a925-b94563d09fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcefc7a1-8aab-4a99-bf46-946126c77ed5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fc7211-6c0a-43d0-952d-9c8f77bac8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c3b871-51b4-4907-87fc-f8d8a10ff580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257c2867-abf2-42c8-bfa3-d51ac4cc6da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b43fe20a-8105-4100-a57c-4ebebd8955e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe447ca-0454-4386-971d-4e665c30d042",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7be42f4-ab7b-4623-8784-99fab269f3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1403f3f-dd9b-4ca4-9bf9-3b64977aed35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeed489-bfee-424e-87df-8ea897dfeeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a76756e-656a-49aa-a463-749bf5362ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cccbca-56a4-4804-b310-edbbb5ba438e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba000680-4408-4120-97a4-6ecb7b0162b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9cf54d-3bbf-45d2-8f03-6ddb3db921eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f92d931-836f-42cd-87db-28e764709779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b68203c2-554a-4f24-91d0-7e762bccd8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53eb076b-c49b-4058-aae2-9ec809285ef9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d828474-0ecd-44f6-b58b-5528a548a631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9f816c-8a20-4375-b586-28ef5c738793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86072853-a28c-4f9e-8fe2-894606d174db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8372965-eada-4baf-a13f-37a0fd6c4692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424b7b4a-efc0-44ba-9c64-55ba5e47e265",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2d208f-be91-41ce-93de-5ee7fd59388c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26ece60-a0f1-4d57-9624-8c0887511808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a93179b-5f94-41b3-ab1b-dd675e8d8514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad88a2a-39b4-449e-a251-1a111ca6f765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0049b0-4a58-4eb0-a681-72834ff11232",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33a4039-7bfb-4160-8df4-ea4f4e180172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff45fab4-a704-4fec-9f7f-9ef021dc397f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6e81b3-d08d-41ce-97c0-1a5feb2648e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "973765db-ce7c-4124-aef3-8889eaa1e01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402ef28a-2e93-47b2-bde2-d921912821c2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefeec17-abb5-4436-9646-c72db06cbaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3084f73-5949-4810-9ce6-2930e1a863af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a2fa79-2635-4905-9155-895482b76646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2c1318-9532-478a-aaba-f65c2a77feb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131adec9-18d5-4ff3-b84e-a47740f87501",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb947ae-9cf1-402b-b6c3-31fed64a3462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e6cedd-6501-4b6d-b644-8b5efe7dd3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae98177-49ce-4e61-9a7b-f7683659936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1111dd5-3570-41d3-ac39-d6fb062edc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b41e71e-25ee-4ee0-9e88-fc50151bbc12",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38017bc-b51a-43cd-ae39-ac8fd8f372ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fe51bc-99c1-423a-9c87-6742df636bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d527cc3-6867-452c-9a9a-fec56b73ebf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "591c341d-e6c2-4e93-8a35-f47ffc0f3a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420357d9-39fe-4ef4-a9d8-a19dd3695b38",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01caafd-7f12-4ef1-9382-bcc3d06a62fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4657b92a-0049-4bc9-8d3b-1242d89ad247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65413a7-8706-4249-bc90-3e0903959724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec443e1-4556-4309-b703-0c0c8026d018"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8c63afc-9bb9-420f-a7ab-ac1b1c06caac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e4ca4c4-af75-4a05-b2fa-61fba411786d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e931260d-34ad-47bf-9237-3c2f6d70b85f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c2dbfb7c-af0e-43ae-ab0a-a1806cb15e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f560f713-724e-480c-9c99-3b75cdfdb49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03c89b59-f373-4698-8af4-94957b21d6ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "731542eb-3e79-4937-b784-01819cdca7dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4da531ae-daf4-4f6b-991f-5bb9aa077d97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ade4fa7a-bf83-4187-8283-24edc4452894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9268a8ed-b7d0-453c-8c9f-7f04457bd2f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caa6a266-407f-4b5e-8aa7-738de7cc3632",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33b29f7e-c41b-44a6-ad65-37deacf6654e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91eb0328-07ba-4e74-ac2a-5d07a57700f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1192906-9f36-42c0-ae04-d0a4d80bff2c"
            }
          }
        ]
      },
      {
        "id": "bbb79440-d420-4a38-a38b-fff7473ec62e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cdf7ab82-63a5-45d0-a8f1-f6b32a21cc83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69f57de9-d2f0-4209-953a-990370f46e3c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cf2aa01-3d44-4c96-9b4a-fd703380a670",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a736a984-6f58-4cbc-900b-882146b90a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44a6798-700c-4e5d-9910-aaad159761b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb3f3d4-a112-4baa-808a-7a8773aae4e0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fceb58-a0fd-4a4f-a327-4a5a08d1283d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d470ca30-62a3-4a2f-978d-f9ce5613c97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8aa7dcc-3bb8-41e2-b07f-2382c733d18f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846674de-5e9a-484c-9760-1a05855baf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c17807-6f88-449f-a62b-305ad259f2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1037b24-5f0d-40d4-9447-5baf6352ff67",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3973b710-42f1-4ab2-817e-56bec8d17dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d986f1-527e-4e50-a63a-b0d5b16629e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9c335e-e257-488a-98dd-55558db8b921",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2f1c96-d14d-4d41-8b63-c193a1611e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe1174-b018-4fc8-ae2d-6ef7a0eefdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fb2c6a-b73b-4965-8b06-a7a7ee2e3eaa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228ab25b-ff1b-4acc-9c4f-46c491b0c9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904b140b-00fd-4d29-bff7-c0b6b7d657a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed80f023-77fe-4e90-a932-7a672b3de4b5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ec4e59-31dc-4660-b137-3f65f778c907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dace8fd-9cfc-4273-b3f0-6c88b0765eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4362d1-2b78-4be4-89b9-208f1cc809a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea2e680-fff7-4501-9027-e4d130616d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b314a4-6256-4662-95c1-869c5a358882",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ed17db-88dd-47c2-a5af-60af6756904f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5099c33e-5ed5-4f84-aee0-39828425ce26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14e3cc0-286d-4727-b7be-093ab0ecf21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c75dcc-c8e5-4c06-970e-344cc0e56e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1069de-1714-4870-9ab1-951a51b12497",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b28260-6871-4c47-b146-62e3d371c4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1c2110-cf70-41a4-9efc-41f8632fa58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdbd20c-40ec-4eac-9d10-6ad0a117954a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93207932-0e81-4d55-8b4e-2ef460b6b2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5001fc98-6f1e-442b-9ac0-111c2cb950ec",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cc68b8-630d-4d03-b878-343b3802d5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1960b348-d6aa-479a-bb38-51ae020d0849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e06ac1-8620-4ecc-90e9-391dd3330fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc964b67-3f67-4042-8795-0eab763456e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810340f8-0a57-4e5c-83a2-fd9cbebfc385",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7466e494-1ce3-4540-8a21-6d59bb2c5135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ba38b4-6c7a-4ef9-a8f2-35090724e0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde2828e-2b89-4105-9da1-d12981c1ea86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044a6cf9-c12a-4f06-b617-51f814aafdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf99ed7-ae22-4d80-b7e2-5116ad9ba48c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0b23d2-71c9-40f1-bfb8-e42ab15c1e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9bf5f6-0809-4f49-821e-7003eb646fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e389d30-dd7c-4ab8-bec3-71ba9fe208fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26762951-f74c-43be-b9d0-308d20e09358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df79ca78-3893-4b74-8442-30fbde983a1d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a295c4-8948-41ad-8bf1-7230a1c5a7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d7ec7d-d405-417e-a30f-513ce6997470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b93297d-aaf9-4c6e-911e-d73133d68c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e293c5-4b70-447a-94a9-e6f24bddb8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e0fe0d-2441-4803-9a80-c1e32b9ead01",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c450bc-736b-4e38-928e-229e009fe046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18843fd5-27f6-486f-ab47-d14e240f0846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28988f54-4a71-4576-a424-7e05728712a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b6cfbf-34d9-443a-be25-db41338164b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da96dc60-89d8-4bd0-a094-e89a2d4e211f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5332b29f-a053-4a86-bf98-0b3b159e767c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aaf3d7f-f832-40a1-9598-9701ea84bf17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518b62c7-b2d8-4047-aee0-9892a0a76b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc64faf-0b49-49e1-a807-d9eae964d059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312d66cf-5ddc-4ef1-b892-753200ba4444",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf77032-e908-42aa-9fe3-efc7f4fd9ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9d9e8c6-c9c8-4d35-a8ce-84d19204d94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded8dc2a-aaa7-4d08-993c-37973b3418a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af69283-4d5d-48bf-8ca7-688b8b1f105b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c6ebc6-ae56-41de-ba57-7ad6c623ea68",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1dad47-5467-470e-8d16-5fb2016b0d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e759a5c7-1205-44c5-8628-fc9db4fb16d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f68d04-da47-4023-856e-5d935d8754f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6acb8e8-a19a-46cb-9edb-59583ff2eac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8029aa55-0036-4797-bab2-c4e566dee37a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b50bfa-fc35-4f5c-a688-e1359524e5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216d7f42-6292-4bc2-95f2-6b84766c5be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d13704-d71f-41af-8019-efa3163826c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c6c33a-beed-412f-bceb-e77d63fd69a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac3f1fa-4577-4cea-81b3-36b9d035f86d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252d7e7d-78b2-4a67-9bd9-1404764cec1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2aef96-46a4-44ef-8642-fbe05a5be200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd02d9eb-0edd-44af-a244-0e40cc502323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029616f0-663c-4a85-8db8-67086660b590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9147ef-ffe7-47a5-981b-bc1779f02d68",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34024ea4-983d-4857-8100-68a8a1a86959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce107eb3-d0f5-45c9-bd2c-dbc209ffa16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a567368a-a0ae-427e-8f39-0e1a4c68c4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44609f79-6376-4537-9dfa-eb45d9fa4696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0b090a-c27e-46b2-a5d6-ff6f12cbd05e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b1a1ce-9e32-480d-901c-8cdade2f1c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e63f65-743f-48d8-9a56-5cd1ebf381d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5c7af0-1fe0-443e-b79b-00e30955a15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6599e52-dad2-45be-bbae-5cc52d5be4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6407ff5-2bd9-4cee-a2fa-0fdf06378f0e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd73de75-603e-46ae-9137-8b3fcbb04782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65578ed-5d50-4234-8eee-947bc351f41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca4f74c-d5b9-43de-b15f-8eab4320ee7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4d6125-225b-4c48-b943-f355838558ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f0f149-bf3a-4c3f-a126-0807b3e04f8f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1068ca91-13c9-42cc-b16e-6d98a4899f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8363b258-26af-4de2-b29e-8f9681bb412d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af22281a-d3e0-42be-929d-1f6543e8443e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a615e06-f4e4-413a-85e1-216d169d5aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac7d18e-bb8b-4bdc-81c9-fcbb5e7108fb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c16a565-4b0a-4084-a8cf-67075270d2e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00884bb1-57b1-4e8d-a4ac-018314dee3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5cf542-70ed-4a81-8add-27b309955bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47008bb4-57aa-4899-a156-2fdb33f9348e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abde9dfe-50cc-4875-bb57-f6e3d1c9aa8e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bc008f-ef9a-4fe1-9834-ae44a63fc070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d73f2a8-fa87-45b4-8641-0425beeb4d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1ea492-fba5-463b-afa8-8dc2744c1dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38272b28-4c63-4150-81c7-8f1b9040bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01281cdc-2688-494f-9b41-ff839269da47",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96beec74-679f-4dfe-b957-72657d3dadec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24434ed-1efa-4d8b-8695-deaf913e60ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bba60a3-87a8-4496-97bb-dd3217497c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51db9de4-4200-433a-ad4a-a35b952e30f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1f9b98-66ae-4167-94b6-228e0488d9d6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e2ce26-361d-4b70-ab87-a0fbff487d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b3acf99-5561-4220-963b-8dfea96dd335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfe81dc-e963-43cc-9b33-10427d84ed92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ed5c86-1e9f-4d56-a5cb-a0ac07557768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600e5a74-7fe7-41ac-bc13-e8cc71e49940",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ffb208-afda-4a2b-a56c-e4a34653b22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7be1edb-dbde-4531-b156-2afdd52370a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ec49e5-e486-431c-b178-49a89d62088a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a4a8e8-7dad-40bb-afa8-e05cf3e9533b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95da803e-6499-498b-b4fb-5a2cb0ae5f69",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b839b5-1181-4866-87d4-2ad8222e0368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701c17e9-46b8-42db-9935-51084c089986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcc3a20-7eb5-4d3a-8be1-07884a182a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726abb41-5f72-4f1a-b29a-0eff0b785d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7a92ba-1e03-4e57-9502-52b1c73d5e3e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69730549-0fbc-4126-8820-55fced73d149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf451639-5d6a-4c21-8b33-b2838ad020f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957ce779-132b-4679-9b5f-b057265d26c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdbe0fd-ba06-4d1c-bbf7-0886daeb6f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a1e8bc-ba81-4c65-8480-1ec14d452cd6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb815d1-b1b9-4fec-a652-bca896bdc84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4aae5e0-282f-4b55-8e19-793a8a6791a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7986a5c-b072-4fd6-a8d8-f46f7d04884a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be36afbe-ff79-4bd8-b115-9c3ff4fac161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13b1a1c-1ad2-43a9-8e90-5539adf0098f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5c0ca8-c3c3-49ae-b9e6-01d0a225afe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212ccebd-e99b-4207-b64b-693b8c79d177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7caac5e-b9d0-4018-98f2-f749c689fae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f6546e-da76-4be2-ab38-b0fc4b96e459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67681740-196b-4296-a14f-042c312dbb65",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99123274-17a6-4eea-b678-969ee25ba5a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cddb23d-6f87-437f-a551-67dc260a9016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96735d0c-e455-4557-b894-fd0d00e97057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea096061-e1a9-491d-91bd-d7d495f91e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8b56f3-5246-4876-9e10-674fc8340251",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaabbb7-fb7d-45bf-b4b9-9f9e2a615477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fafea721-bd13-42ba-b793-044eaf2c8594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d5fbe0-72ea-4c96-b666-44aaf00ae4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec2a81e-4672-4884-9fff-32f737151fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a69b621-8278-4a4f-a732-319397035def",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30379b42-8be8-41bf-b1a1-c65263758777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c871db75-9631-4bb9-b3da-ca6c95f700e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaf3618-98e9-4c98-9450-bc7e528e523c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec3e6b3-feff-4309-94e5-76080483da46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef94c7e8-9886-4aef-95a0-19085bb0afe8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1321897-8157-4369-afdf-4f686bb1f586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e0d6cc-7c82-4502-85ee-abce1f033119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a489f2f6-1567-4be3-85cf-fbf47762fd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc7706e-6274-4c47-9af7-7dfaeeabef71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bde3fc7-9765-4b0f-b34c-1f098c936ea3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c785994-8bb5-47c2-a1b0-23fb03faabbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebc800e-c672-4f4e-a3e5-e0de97b212da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dc2ccd-c4ce-41e6-937d-35b91a308af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e765cf-2da9-4c3c-a41b-ee41fe879893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc7fa95-1c9e-4a05-b131-111bdbaeac23",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02237b53-b1f4-468e-b3ba-437c2db7499f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e3832c-b74f-4f8c-8c97-8d714af029d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beae7c58-f602-407a-be19-7bb2073df86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c609e62-9adb-495e-aeb5-9e748ec28033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f6c20e-e189-4f22-b387-4ede917db02a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0770b1b-ee0d-4311-8583-7051a62c0001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a3b0bd-db62-4975-b86e-95347f581e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248f6653-99f9-46eb-b60c-da183e11d3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef955b51-1188-4e68-953a-def853ee8fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803f23de-ca73-4ab3-81a9-59c31563ff6d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e434c5-91c1-49a1-9e4d-01f7fa040468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3729f246-d0f0-429e-883b-0f4fd9e64411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1f72bb-5528-4412-a841-8f4d11187e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8797aefc-f1fa-4927-b307-ce67242e0780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a734a88-a520-49ca-b122-b9cd6dbf70b8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1912975d-1059-459e-a85d-55556e9ce94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868de319-5bc7-4132-82a8-acc47e3b87bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a80725-a6d0-4381-ad50-89234f134f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd47640-54ab-428f-b060-e62ca056d2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbe9375-10fe-4686-a90d-b4ec9da37c6b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d5ce02-b49f-4fd2-9567-3a9fb8d2f975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232a10b5-9df1-42d3-8ba3-c10e28364cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667c5f0c-69fe-4407-8dbf-ce9f576f6681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e839e82-9f00-4a2d-a147-55243bd00153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73986a9e-5ea5-4dfd-ab1c-890889110194",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f293ce6a-74e8-41de-9d66-2c0d6fa5ac80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1529ce10-2537-4592-92c7-300ebf6f0755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1ad3f6-a063-4d7f-95c2-65e3b2b9dcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd17cc9-3e2c-404e-acd4-034c957f9928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c00ac4-aa3b-4c7f-9b07-69071a5299b8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd599721-c88f-45f9-987b-7e38bbbaca66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f178f05-0806-4c74-b4b7-ae36cd0fc281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f50624b-9dc8-4878-ae75-2e0451acdea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f063548-d5e6-43ea-b705-297b51bc37a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1832d615-0f7a-4734-aaaf-6139ec770c65",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b6b5c0-9ee7-4648-846b-1a83411240a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cc041f-9298-4088-8544-aa1629f095e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7696bd18-0328-443d-a9cb-1412ded747aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086f72cf-83f4-4ac1-8b9b-3dbe74ba5b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e198117-579f-48af-b939-04af5ac1112a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d5e9f7-0a2a-42ef-a92f-064b7d653af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71eb616d-cabf-4610-9db8-e36d58a74724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099562db-ba6f-4b0f-81f9-9fa675ff2724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a22d5c1-b855-4cca-9e54-983da620c8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976b2550-6958-42f8-92bb-f38a42b71e9b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736d5e26-201f-4ff3-bc35-b1deb1d59336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c6bec2-aa5a-45b7-b381-a99ea496320e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d06fb-630c-4f38-b6bd-4d821cc12a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3a4b2b-fb0f-442f-8c23-2ab63f2df409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dab64b5-4beb-42a3-b886-de48462bc80c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d047f31-5d47-49be-bc8e-5007289c2a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bc30fa-90cc-4a8c-82f1-585a753c4083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c2098a-6f8e-4228-be82-25cbd3e2afa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae30bcd-17ef-4066-b9a8-c1f2d237c05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cba93f-c9f5-422c-954d-a939821e3165",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e6c42b-1f7e-4a02-9ade-a71831686006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e061f083-2b5c-416a-9830-83a12e163997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbabd02-7cf8-489a-93ff-7fc3a8dc4873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb133ae4-92a2-4ac0-83c0-0d4b39781ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23765715-34eb-47e0-b1cf-83f9dec74d82",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2461b8e2-ee2a-4499-acaa-584bf53ee2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44dedd4-51f6-40ef-ba71-3bb7ac81951c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acd03f0-3e9c-4488-86b4-b05b3fe3f9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be0d6b0-12cc-48f5-abe6-346a508ff463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c003e8f-36b4-43d8-bf39-d13b5f2175fa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31f3b8d-d4cf-42c2-b126-859e1d728a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41179f46-5df4-4ffe-a40f-361a5a4d82a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef17767-8d38-403a-a94f-e346a75fd8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d937bfc7-3811-4637-9efa-89e73fc5ebba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8382dcf-76e7-4f75-8a7c-b14480dedd5c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb578537-ea1a-4e3d-a752-266b8a2aedf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd09564-7ca5-420a-a892-2bde77d2bc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3fcdca-01b5-45c4-aa67-0becd99288e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e89c6e-6d5b-420a-b872-474a83fee03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dc02f7-960e-47c6-8397-c8004dfc68d9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e834c8e5-2314-45c7-b604-a21b70b51b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275b648c-0976-4395-bdf6-a0a1c89cb0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bcd7e5-b729-4526-ae78-611e5b4c32c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fe46a7-3c0c-4f51-a8f9-b01a10a292a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff98610-bca8-4815-b128-9ad58ce3b09c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6a4f54-bdaf-4243-b469-7e64a79b63e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6855cb3-7805-42df-9641-e9052fd21151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ed98f8-84e5-4810-9c8e-f6cea9f39fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28200f9-3550-46b2-a21f-8598b55537ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691cbc14-3c61-4152-97be-ecbaff68f6cf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4bb707-5524-46e0-9acc-e2304dd89715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35251e14-2679-4183-81c8-3bad7ed79c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3823f0-408d-438d-9aed-f17740047abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7476724f-c1e6-4c83-9967-82e3e3af1120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53130f6c-ea37-4d8c-878a-bec65ebc1a75",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf312063-ddee-4ca3-96f3-428a62db450e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9789f6-c190-41db-8c21-cafdad0c2324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baeca26c-12f8-402a-a4e4-2372f0b5e370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6484aa4b-eabd-4560-a50e-b575a889c0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34dd1cc-70c4-4def-99a2-5e6d6d3c5552",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014030f2-aa9d-4b61-85e4-966f3acf6c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61890dc1-a4b6-4d21-b700-832cce7fdaab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee423d7d-5054-46f0-9a48-acba4f668295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48eb53f-7cea-42e2-8412-9fae3968701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6644ef89-2937-431c-aeea-62410c0e42ca",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce35859-91e4-4605-96d2-736add2ecedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3132fd05-a003-409f-80b8-22e8fb04b9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8191c6-e749-43bd-8821-8496180942d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4148f4-e489-4bdf-8bd5-6cfb443e4ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c3d334-8cf6-4053-bdcc-8b6c7a4e1faf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6c834d-8815-4891-81ef-2098503dac9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3375bdff-b2d7-4a78-a31a-84e0f144f750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e732132b-2135-48c3-90cd-49697b290f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e5cbb5-f128-448e-9109-bfaeb80dae45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48eecb2-7c4f-45b8-8231-f1eb837538d2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b398de11-bffa-4138-a469-64caad651173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194f4691-3385-435a-875a-9db86ef27733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1760b992-112d-459e-b145-bd7484e13c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15056fd7-27fb-4d4f-afe6-e90448519fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cd57f1-f52f-4565-b833-ebc06a05b2dd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801432b5-bad4-4924-a954-27b1b7097614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a30ad1d-7433-4cc2-a035-41ab8be9e21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05b1340-b763-4cc3-9071-963c240c14e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d430ca0f-09d7-4665-aab7-f382588a6f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a6a936-f07e-4124-bbbb-ef0c40573d9c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5b5d76-8768-453b-b610-d1f5e6669f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ded1098-2c88-4d9b-b7b2-924ed037ee3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0f6622-6576-4805-9abf-42057020be19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3adb21-4578-499c-85b8-6ef5d178cb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca2a8f9-e079-48fe-8b64-e9ddd04caedc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6488e897-5945-4d52-a208-715ad8c18b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b999be-5f6c-499d-a8e7-c3c4e1c7f3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2ff861-7d7e-45e1-8868-88757c6d953f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9838d141-3b0e-40e0-85ee-12011fc6f344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9c9429-3b72-4686-88ea-048cda0600e8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7948667e-3d30-4ca0-acd3-fae5e387a8dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08041dc2-c5b0-4b68-afff-6a040d9dec60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed555755-6ed2-4722-98ca-2df4d3e103db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de0c4bc-591e-4ec1-b632-aa7034c8dc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe96abb-2ede-4800-ae8c-ff1694a8d648",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7438a4d-b958-4dcc-b1be-ae7f1f65bf8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6f9e38-e14e-44bb-968d-8e7a71926638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e761b7e-7085-4d0f-9ffd-aa2f1367fcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dc4bfc-64ab-4470-a924-06ba4337fc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aabc41f-6228-4cca-ae3e-5dfd401c99df",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfd6979-9b66-4b11-a828-a68bc9891ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d38e5ca-9102-4789-ac34-49b38ad11f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7629a3d-2ee4-43cb-9b47-b07bb18e221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9db808-6ee2-4542-bf48-4323fb954528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783ac166-d260-4c2c-891d-799707261a19",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206a2aef-a2b1-4663-91b9-cd66194f1540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166e71da-ac7f-4cef-b82f-2aa88b54889d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d7db87-1ce7-4f05-a59e-c391f28c0a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb16cf95-c53c-4aa2-a867-2f570349d73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c04a434-57d7-4050-b7e9-250075057911",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ae8efd-1a6d-4d31-bb7c-fd98f897ce38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4a91a5-855b-41b9-9a87-ba10fa2d08bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02df489-1c80-4eca-8b2e-9d46547fdd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea753b00-1c37-4ff5-b499-f93a9f7d0231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf11364-36f6-49e1-90e5-8f76dce55047",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54937330-733c-4041-9c1b-f33dbee3497b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc84167-3d82-4527-93cb-b9e90de76b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf40039a-607b-4ad1-9597-011a7b995950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bffcea5-7aaf-4b63-972e-4b971d92e522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c369c8f-31f6-44fa-ab36-b9acd81bb1c4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31949e9-1fa3-450f-95e4-2ce864a991c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af471822-8e9c-427d-ba5d-1c069340a834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0c9ef5-3723-49b6-a189-5b93d9f3570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c3aee4-202d-4980-8345-1ace8464ebf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db21d3dd-e71d-4359-90c8-3e51624c95fa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0502b641-ff7e-4822-bc4e-26d26b3b985e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d4b706-5f76-4ac5-8334-5f352baaa078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821174de-994e-4510-9cfc-fed95f873275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b189c3c7-aa3c-447c-849f-1b628d0274d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404d2f2f-4101-4daf-ac03-d6bc8a1c99b8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4aeffc6-b9fe-4c89-98de-6fbdc6138edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a78b83-f955-4893-bb67-79ec37868423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca1d9b6-d006-47a5-aaf6-222c036d73dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37068363-9c13-4e10-8275-a64a7d8a38e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7996f325-521d-4801-9786-2a87ed7dfd97",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114a5d96-e131-4418-bc4f-9fa6ed99491d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a11ce9-d2cd-46d1-85f7-4a3616d5b1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c819736a-bba7-4813-b498-f945315b41b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03ca0a3-9af4-4b03-8cee-b52b9900f9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8961788d-9ae1-4755-a2ef-850da005d7fc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8cf653-6fba-45ec-87d6-77e9a5e44b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19faba0-d2f0-4ba4-acda-99f931ebf42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd2a82e-8ceb-4f7f-8e55-050a6ca3460e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91153f08-9853-46a4-8f19-2e34858c4a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4382ca64-045d-479c-b2b8-27e371e6202a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d77186-0496-462c-bb31-64f17f53b880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1d92f3-5b84-4764-94d2-ce7dcc9729bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65170a5a-6f10-4eb9-a745-46b3430de85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867b30ea-c093-4fc1-90cf-92b2eb6cc95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0577a4-adac-47cf-b976-3bc3c5b0e8b0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b84bc85-2a46-4e23-8f46-801dbe447b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2c6908-037a-4d28-a76f-054525d89171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bd6aec-ca80-4f30-b56f-5a4bd41ef9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52501a8-ea23-4875-9e29-90757b1d9f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63a6d84-c273-48f2-adae-132afc0791aa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db33d90a-e7ea-4aad-93ea-3a5836491b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd92f46b-b4ac-417d-a82e-03527ff19870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22adbed-edf1-4424-8c30-893f99d536d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e779cbe7-60e1-455e-ad72-3e5fd9b92966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aadca7-7c6b-4a2d-856f-5a18370c54b1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdb3ac7-d6c1-434b-87b7-f13619192a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a4757b-d795-4377-a2a1-b1151003cf28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48146b4e-f138-4b49-8229-33ae2cb9033a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0106dd0c-32c0-4dc9-b14c-05450fbcf042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dc2128-eee1-42b7-b2a9-3187d18864b3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c93f7b-55a4-484f-812a-ac99e0f745e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052543be-d320-403e-9924-3faa106012f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f2f25b-cabb-47ac-a863-243b9f175fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac525165-7730-43dd-8862-821c60736c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c214557-be4a-4db6-b6c5-e33839f10efd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd78191-d570-410a-b2d7-00e7db18d983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13e02973-ae97-449a-8fde-592442ad3f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7e9176-cd6b-4834-88a8-f84bd9d05e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6792ad-641b-43a7-b668-e6960aa83965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc47769-e469-4aac-a16f-812511dd0289",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c35a8a8-a05a-4cfb-8188-22e38ebb6990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca1d7975-6c59-4ed5-aa7d-8b94f4a180ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a67b79d-ac40-403a-a0a8-45236239ec84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6a6c8b-8d7d-4e8a-a053-c73b9c9f0c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68861dc-40b8-4d37-85fb-7cd8e2be18dc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b6dfa7-0797-4186-87d2-860d66ed92eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7315e759-8ba3-4224-bcb3-654512d52e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb6d4dd-5ac1-4381-ab77-e45861838050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10dd30c-989a-4467-b42d-d84ec7dd8560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46805366-8624-4888-8c59-83036c97b285",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e33d95-3d02-46c1-bd9f-45e4069cef5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8503e1db-20f0-403b-a756-ab05c8a14860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a016be36-b93a-4747-9692-d5aea16746fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca91d54-f253-41f9-aa63-0c53c3d4572f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0569003a-4fe9-4f28-b638-85039ab33f41",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4fd9d0-f34f-4112-a4ef-298e7a811fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb518f5c-2164-41ae-b6c9-751f711254ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4bd162-926a-4c1a-af4e-16437e6f7934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bba39c8-e21a-4e6d-8d9c-4e57413025c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9b7a9b-c7cd-4536-bff0-0783a32373ff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b32fa79-7ff2-4760-b096-08f6010f4f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e422c00-ee96-4b74-b72c-7e8686650e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15776a70-81bf-4da6-a7a1-7a04a608c0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b088613c-7363-4c88-a800-61a1dfd85e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3071b9b-a7d6-439a-b2b3-af07a13769cb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433224ac-a086-43bb-b84f-152463d5444c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe145e4b-d654-442f-b617-f8b571078e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d857923-3411-4123-bea2-4cf0962d1a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1e6a0b-ac10-4945-8c84-10899ed95095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91b2d86-4b0d-4d9f-b288-be9566e1e148",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11572966-18c1-471f-bff7-5118cc1e07a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc780ab-d86d-4e1c-b4bf-4d8174ef0ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c1c43d-116b-47aa-80df-a579bf5e06c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281e4e73-0a35-4cc6-987c-0917c165c877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5b4e6b-532e-42e4-a4d4-0ea97b989651",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6a4a4c-eda4-40a3-a202-33e4ebf06dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da0e822-4447-42ed-9c52-933dde730300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85876b81-7bd3-426e-90db-5907d8d0e68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c753bf6c-2692-4ec6-a0ef-0aa1f0dbad8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766d66f8-48d2-4d9e-9be7-c3eba6f70682",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e8c1de-46ec-41c0-afdb-155dc870426e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31085db2-ee83-4808-b125-c80ab10d33a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaa4c61-b1e1-4643-8812-15fff0eaac93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec91f542-e2b9-4e14-ab37-5949fe76787f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6d1522-2374-46b5-be51-bf1172851610",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b203e017-e8a1-4d9f-8ba0-c89cf8d949f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff08d18-18df-4330-b39a-8c17bf70bd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebdf698-f971-41dd-9f7b-75ff0d83577c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76406e86-9a0e-4f3c-a696-1ed6c7e15856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1edec53-e1a0-49ef-bf8d-f7fecfece109",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc19b128-6216-4fab-85ab-7f897d017ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3897cefe-9463-4027-ab69-59d64cdd7100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167181c3-56b7-4b44-b358-790d83629418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2615cb8-1acf-4c1c-8128-c9fc3c18123f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70304840-9314-4f5c-990d-64e1836fb9a1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f675386f-47c7-436f-89a9-8350102f2551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9a9227-41a9-4dc9-aea8-f3cf3d73546a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d489bf7-f232-4362-970c-a88fb7ae7f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae2fb7e-2166-451d-b50b-6b040d5eb795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d41adf-c667-41ad-83a0-1e0e129ca893",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732fb567-d5cc-46c0-a9ea-f6a9e3557361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110f9b06-fc26-4b08-94bb-5360a857ce68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6062a113-63c0-4c89-b2f3-b13f683b5f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54db99be-5e44-4820-a997-02dd30e565ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d69610a-87ee-4663-85a6-a74fc9ac6dba",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d42653-d05d-4e22-8a3c-8cac82ad8944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7446f4-2f7e-4ca5-9576-57f62b26282e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8644dba-214e-4fc3-b81d-198c5c3629e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f72e16-f476-4723-998a-aeac6b28fa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf21bf49-eadd-4559-8eaf-11349d8fd43a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ee518f-3e94-49ff-a3cf-f3a31eb0ef4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4436d3c-f17c-4e16-83e0-f892456fcb8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca9bada-9ac7-4eba-9203-9e6dc7c19dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6173cf-1090-438e-acad-32b0389d7b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffd6fc9-ee3f-4ee6-97f5-9ce325dabbdb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8556d673-ebc9-4864-8503-31b9885a8bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02313456-7420-4c73-9205-19105feeccc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f49cec-6343-47b5-8efa-f8a413bd587f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c7b64c-fbdc-41fc-aea4-16f398daee3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c45600-52ad-4ac8-970d-f7f321f5aa90",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5e9cd2-2946-4289-8194-e754e644fa25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad3402f-b365-4f3b-8c87-4bea94ac0219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1eab8c-5e15-4b57-bc98-6683f2a4a4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad48188-2256-41a2-8d39-da1aafad3603"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5c5c781-1ff9-4b63-96d1-f0aa1df626fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0322e325-d389-4340-be3a-014d935e0aca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3140137b-563c-4f2f-9809-48eed8cfca3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44dcefae-00c6-420f-a236-2bc66f45556a"
                    }
                  }
                ]
              },
              {
                "id": "03e75ee7-b5be-492c-9a00-3b360beeacce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfea511b-124e-4fba-9e05-1a354e1be505",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626f8c6e-6135-4b84-88c3-18677bf0e09e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "28298af0-ccc0-4352-b6b5-767ce64e2525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b652360-f7d6-43c3-89b0-aa51040fd529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1d399a5-f1ed-44a5-b696-be6c2ea5ffe1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "895971ad-e5ed-4f2d-b79e-e6c8aa9183df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edb1438a-7fa7-401b-b5f1-a70ed7d86221"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c96562c3-987c-434a-93ed-9ebd5d460799",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "387f5318-b5a3-41c9-a39f-7c5120c026da"
                    }
                  }
                ]
              },
              {
                "id": "3ee4081c-4a54-4b3e-94e2-a655ea4b0689",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1eaf23f2-4f4b-4a8b-8ebf-fe6aa22437c6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fba98e5-8fea-4c04-98d1-e5a23c8f291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "649169b6-06b8-4861-8c4a-d763517bfa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43d01ba-5f02-43bd-8601-597143c2b974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2b1a28-833a-4950-bb9c-03291084e4a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80518679-78e6-4b24-9853-c57198884dc8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7bc8ea2b-743c-40c0-9ed8-8caff9aa2a56",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d053b10-3cc8-4c28-8132-84876ae46f73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0c75540-e167-4955-a234-e4737e429c91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b45ab89-4c4a-4641-950d-c2e709e67404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c39af367-9e8a-485e-b1ea-e129bd202e71"
                    }
                  }
                ]
              },
              {
                "id": "87375ee4-dfe5-4aec-a6d4-fd9aa79f7083",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ccb676b-1be5-4056-8cf3-7b1d0e82f879",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "37f32b85-8b71-4378-9376-2bd3ff9d70e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79d2d905-ac85-4122-948a-3ffce522e7c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e579d28-27ae-4bff-a24c-e344c9d83132"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20224cd6-409a-40df-9bf9-4a00e68e3dad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "46e3f8e5-207c-4de4-96b7-068fde2a9e56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6967be9b-1f02-49cd-8ccd-a831eea6ffbb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "179e099f-2436-4593-9fd2-583378215d96"
            }
          }
        ]
      },
      {
        "id": "fa3eaf19-4165-4f15-a0ca-f091c2394d9d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d2595f89-a3ef-4603-a3e9-25aa68c5abf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d4eacdf-83b7-48a5-a97c-356b63311fd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37e41a6b-3fb6-4d18-94f2-4149ace578ef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a3cead-921c-43e3-9d67-50ae740d8eea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1a59711b-521b-49ba-89c4-f8da9da51227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe4c63b-7683-47a0-b2da-8b5b8e3814c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74eae48f-dd45-4aa3-81d7-e9e281279123"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a640a186-3977-481a-98de-6aef14dc887e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "290b3aef-5c5f-465c-a4f0-d50d842e2f89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45dabcba-e33f-4cc5-86aa-7fbbf7aa7297",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dac71747-6dc2-4ee1-919d-51f95ec44330"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aab50f7d-0f6d-493a-acbb-cb52b3545bae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8b073643-fdf3-453e-b22f-af950215064d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20486bf6-94f1-4e0d-8fd5-b1857a6dc750",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc141af5-b990-49da-8f24-0d8bf62ec86c"
            }
          }
        ]
      },
      {
        "id": "3befae59-045e-43b3-b03d-8cc8c5fe987d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "22933abd-a34e-4b0a-b196-59d948103259",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f62a0e7-7949-4868-84d4-1fa2b45060a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f911bcaf-c067-464f-b608-ef75b41836c5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4867e7fa-1b2c-4af4-9955-b036fb8ee48e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "743cb06b-2d65-4e90-8ac8-aa581e35d857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd58d87-da87-4b0d-8eab-e36be3647f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b7d0539-4191-4624-a7e2-c27b76b06890"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "318b3bd6-876d-4d02-a96b-13a4feb6a7ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96e16455-6db3-4c51-b912-5ee481a898de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "598bb8f5-71c8-4ec0-ae96-65e2554e1445",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9c71f52-f248-441a-b6fd-462f2a6ada22"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a914e6ee-846d-4956-b440-088840a983d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "178a5ef2-23be-483a-8f63-65f6f390302f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "559b298d-412a-4810-9b59-0c73b3348e7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "535d41d5-f267-4e08-818a-f64b28d42bda"
            }
          }
        ]
      },
      {
        "id": "b69fd916-3bef-4c92-b208-9fffa2c1c46b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7d8c1e5a-d3ab-439d-a3fe-3c7a3d2a61a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4df8dbd-3f4c-4683-b43b-a449ddfbb270",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3148d5f1-de52-42e3-95f7-a2e7f340a99f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbe8827-d139-4c71-8466-1ee9994229f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4bb72f2-0894-4d99-a0a6-720ea20cd75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f577ee84-89ff-4a0e-bc4f-ae4245c3beab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c504f55e-6d12-405f-9f77-49ab7252f9d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c54af80-175e-4b09-9048-87d62969f916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "427728ab-a211-4f5a-a193-91e93ee312e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7ecf5fe-a3f1-4bc5-9db1-1b6c06527d9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "531a518d-e452-4174-96c7-2e460341d0d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "402b4a26-8945-42bc-807b-a75bf10497ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd626629-de79-4119-8d43-70a4bd5adb72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a35e3770-9ad6-46e4-9d26-b8f07d5c761e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfe0701b-af51-4d01-a3b7-986882cf34f3"
            }
          }
        ]
      },
      {
        "id": "ab53ab6b-faf5-477a-96ad-001ba4a6fa11",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55873661-f2fa-42cf-98b5-cdcf2d2355bd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "728ebedf-af95-428a-bb2b-9a489b9fa1e2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "63c9cc4c-6b9e-4872-9fd1-6bdeb642e99d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "566247ec-6a1a-486a-9463-e9587c70502a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "133ffbc9-7a0e-44e4-bfd7-48693b4a9a3f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 718.947154471545,
      "responseMin": 7,
      "responseMax": 7446,
      "responseSd": 901.626548060059,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686616963703,
      "completed": 1686617151539
    },
    "executions": [
      {
        "id": "c54210d0-9e2c-4d93-979b-347d0c67fe73",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "31eb5928-fb12-4e08-83e0-6b27f412a204",
          "httpRequestId": "95cb9d21-0f3f-4c04-ab52-68ff3fd15263"
        },
        "item": {
          "id": "c54210d0-9e2c-4d93-979b-347d0c67fe73",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a540cd68-4707-4298-804e-a62d5a2bff3f",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "8e720218-2c59-43f6-87e1-8e1cb7934765",
        "cursor": {
          "ref": "cbba61dd-c1cc-4fd5-93d1-df7ff0117dda",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "621e6d8c-cf11-42e3-80ee-252bae03a766"
        },
        "item": {
          "id": "8e720218-2c59-43f6-87e1-8e1cb7934765",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "828bbbd5-a076-47d6-a1f4-ce087fd89209",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "5961eebd-2296-463d-a7e3-62b185282b0a",
        "cursor": {
          "ref": "3b341862-1391-40ba-b717-7fc7f6068092",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "47a29fe9-2659-4c19-b178-16e8396f1758"
        },
        "item": {
          "id": "5961eebd-2296-463d-a7e3-62b185282b0a",
          "name": "did_json"
        },
        "response": {
          "id": "d4be8d4e-9bfc-4b74-8426-519b9c4446fc",
          "status": "OK",
          "code": 200,
          "responseTime": 993,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b016d09f-1947-42a0-8e6f-f995a25d80a3",
        "cursor": {
          "ref": "9ad15366-f568-428b-9092-3ddab64caee0",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bc4a8309-ba12-4413-a615-98e6e71ae02a"
        },
        "item": {
          "id": "b016d09f-1947-42a0-8e6f-f995a25d80a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "763bed7a-304f-468a-830c-e087d6de2ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b016d09f-1947-42a0-8e6f-f995a25d80a3",
        "cursor": {
          "ref": "9ad15366-f568-428b-9092-3ddab64caee0",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bc4a8309-ba12-4413-a615-98e6e71ae02a"
        },
        "item": {
          "id": "b016d09f-1947-42a0-8e6f-f995a25d80a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "763bed7a-304f-468a-830c-e087d6de2ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fb7647-de0c-486c-8160-683e53983006",
        "cursor": {
          "ref": "d6345eec-8b05-4a93-9e32-5bfc37feeae0",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f4438f3e-4fc4-421d-adfb-69fe54d12b46"
        },
        "item": {
          "id": "90fb7647-de0c-486c-8160-683e53983006",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a31a7af4-616e-413a-bc72-e4836dc5eb02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 785,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b7d842-9924-4df3-a3b5-00c0f001e1f4",
        "cursor": {
          "ref": "431904a2-e1a0-433b-bc93-8334a4b2b394",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ff704f75-95a7-464d-91d7-58c5e1ebf3dd"
        },
        "item": {
          "id": "88b7d842-9924-4df3-a3b5-00c0f001e1f4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ee3da6a8-00ef-4f59-84b1-ace9a52a145b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 665,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f174d15-0c3c-40e3-ab29-60e6a0e17c37",
        "cursor": {
          "ref": "b5eb98d9-00fc-4a48-8062-77c6ff11d5e9",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "42ec52fc-aa09-435b-8368-d27e0c6fece3"
        },
        "item": {
          "id": "2f174d15-0c3c-40e3-ab29-60e6a0e17c37",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "58cc4d7f-89df-4af1-9950-59e222cef2ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e91fd-2ab9-4f2b-8aad-b4970428e7cd",
        "cursor": {
          "ref": "426435b5-32e3-481c-8b75-d9c4b75d5ea3",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6650dbdd-e97f-4cf0-be67-3ef8beefa4ba"
        },
        "item": {
          "id": "ce4e91fd-2ab9-4f2b-8aad-b4970428e7cd",
          "name": "identifiers"
        },
        "response": {
          "id": "7c4e62db-5bd6-45e1-aa2a-f8f9d1d2e739",
          "status": "OK",
          "code": 200,
          "responseTime": 1412,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272664db-6f65-4758-ab4b-65bf3d1b6a20",
        "cursor": {
          "ref": "5dbb18eb-b6de-49c0-8334-f610cde88072",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c97d38ab-0719-42b3-b63b-63883098cebe"
        },
        "item": {
          "id": "272664db-6f65-4758-ab4b-65bf3d1b6a20",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "baefa9a3-84f4-4256-8e20-8b886f20dd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c83681c-ceba-4e42-ab27-5c34f8e9358d",
        "cursor": {
          "ref": "bc24a15d-5c18-46d1-a9b6-f32fb287bd48",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "457e8cb7-b8e1-4cd7-bf00-d23ddc663e58"
        },
        "item": {
          "id": "8c83681c-ceba-4e42-ab27-5c34f8e9358d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "540216bf-1cf1-4cac-9a2e-2ba665df2d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478df484-7e04-4282-b2db-3c070d9e941d",
        "cursor": {
          "ref": "fb9e53c4-1ca0-4fd5-8b3b-9303cae72560",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ce378737-a836-4ca3-86e8-0156bc75ad98"
        },
        "item": {
          "id": "478df484-7e04-4282-b2db-3c070d9e941d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "85b04836-3bf4-4adf-98d1-f21133e5656c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6299ba1f-9725-4a16-b815-8cd653893a71",
        "cursor": {
          "ref": "c3b1432a-aff7-41f5-843e-d64b7738ebf3",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4c2eed87-2d7a-47ee-b273-a09258e0eb30"
        },
        "item": {
          "id": "6299ba1f-9725-4a16-b815-8cd653893a71",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9a9be1dc-7f3b-4ed4-a0ee-cb4bda833098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b7eb47-95d2-4797-a253-9a05e357b22d",
        "cursor": {
          "ref": "da701161-33b2-4335-86f1-15bc2e94f343",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4bd1f0d3-023d-486c-a3d8-8a150f736f63"
        },
        "item": {
          "id": "a6b7eb47-95d2-4797-a253-9a05e357b22d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "732b423a-91f4-4a2c-9bb5-690481047cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04c112a-8dde-45e4-84f1-0417aa625321",
        "cursor": {
          "ref": "9de63b2f-c5e2-4779-9815-3e32c3a7b0ac",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "67556d86-31a6-4284-b06b-4436428e9e94"
        },
        "item": {
          "id": "d04c112a-8dde-45e4-84f1-0417aa625321",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e4447c39-d925-4e76-8c6c-27490da845d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb9dd59-0dc6-4230-9b72-4aeed91d32ad",
        "cursor": {
          "ref": "5031c5dc-eedf-4a69-a7c9-5a02a2c2e8e3",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "526b776e-e541-4470-9298-eb8167f0ff4d"
        },
        "item": {
          "id": "bdb9dd59-0dc6-4230-9b72-4aeed91d32ad",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5ba6b392-53d5-4e47-b83e-31449c836d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a291e542-76b3-435f-9366-764543571dc7",
        "cursor": {
          "ref": "26d2c7d0-e18a-4a5a-ad03-ca4f91c0ebda",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9681b37-3160-466e-bea4-13287931a346"
        },
        "item": {
          "id": "a291e542-76b3-435f-9366-764543571dc7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6a1b76a1-8f7c-445d-a8f1-5de9d06ac43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5114a75-4a87-4d42-957d-95f7cfd29fba",
        "cursor": {
          "ref": "53873a51-8313-491a-ad88-3a1c9a5aebe6",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fac744dc-915e-4b7f-aeb7-7c340b1760a5"
        },
        "item": {
          "id": "a5114a75-4a87-4d42-957d-95f7cfd29fba",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "72f5a640-1b2d-4727-8a81-93838034501f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c47502-3f89-423f-a7c9-7fad45178c6b",
        "cursor": {
          "ref": "38250ca6-d378-40ff-9325-1336dcb1841d",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "638fa3d0-0c58-4276-b397-7136a946efd5"
        },
        "item": {
          "id": "b5c47502-3f89-423f-a7c9-7fad45178c6b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "02b1315c-2191-444c-9a64-ea8344e77d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7633b345-24e4-4ffd-8aaf-2af598e2329f",
        "cursor": {
          "ref": "8d21704f-b932-4614-8598-7bf8280535c0",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7a85fa96-a597-4c21-bc1b-e0eeb1a57766"
        },
        "item": {
          "id": "7633b345-24e4-4ffd-8aaf-2af598e2329f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4cf16a6a-712b-472f-865e-b4f1341b64d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae9cdd1-a8ae-47c5-927a-5d8aa7befe86",
        "cursor": {
          "ref": "bbb61086-c1cf-4699-9161-74aeb289513f",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "110086dc-f8eb-4268-8370-9de244585359"
        },
        "item": {
          "id": "5ae9cdd1-a8ae-47c5-927a-5d8aa7befe86",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "76f5a523-2236-4612-b8b4-6ca1c41e068d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d03bc-c23c-4274-bb10-155c6d4bc03b",
        "cursor": {
          "ref": "48ce1f77-80a2-4773-be20-97be02c3d91f",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1bb0f45a-920b-4501-acdd-d8d8c4aa5c1c"
        },
        "item": {
          "id": "9b0d03bc-c23c-4274-bb10-155c6d4bc03b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4de85f61-2e4f-4c3b-837b-a2f62fd4cf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4d627e-3db0-4280-82bc-d2e40efb1182",
        "cursor": {
          "ref": "4fb749bf-0e36-4034-89cf-02a6824a0476",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "18d8ded1-4a3d-4608-aad5-c2202fe090c9"
        },
        "item": {
          "id": "2b4d627e-3db0-4280-82bc-d2e40efb1182",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e9c43567-d5c3-4710-bbec-b99a6733570a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe6da99-4490-4313-9b99-2178b89ed297",
        "cursor": {
          "ref": "7a9d3782-feb4-4a2a-ba6e-7464a50ba82b",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e33ed77b-4084-4032-8fa5-0726e72f16b2"
        },
        "item": {
          "id": "bfe6da99-4490-4313-9b99-2178b89ed297",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "60336078-ed59-4baf-b2fe-158814b1101f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d4f6b5-4c83-4e09-b609-8a74d174a7d6",
        "cursor": {
          "ref": "b675d691-4aca-4c9e-a2e1-7ff2b155eb5b",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4aa3f58e-7057-4ad9-83e1-01897efca660"
        },
        "item": {
          "id": "94d4f6b5-4c83-4e09-b609-8a74d174a7d6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ded710dc-4574-45a1-ba56-517748875275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb3331c-2268-4672-9c51-b33bd18e104a",
        "cursor": {
          "ref": "9472efe9-64f2-4e78-bb81-011f7ea45530",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e294ff27-205b-41e0-8783-46912d0e1dea"
        },
        "item": {
          "id": "7bb3331c-2268-4672-9c51-b33bd18e104a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2c531f9b-512e-4d3a-9da1-f6858240386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cd21e4-2179-40dd-b8f8-7f7349c5b7da",
        "cursor": {
          "ref": "1fef8f94-9140-43e4-9d25-13e700dc2a80",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "62c8a410-bd9c-4c87-93c5-04ce8e923768"
        },
        "item": {
          "id": "84cd21e4-2179-40dd-b8f8-7f7349c5b7da",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "550bc1dd-e949-4fd6-b760-18c9d428c06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2141d0-c033-4bc2-9220-9adbba47d996",
        "cursor": {
          "ref": "dbb12705-abba-4047-a6fc-a00483e29008",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2f30145b-9515-4f4f-a118-f8ef50cb0042"
        },
        "item": {
          "id": "3c2141d0-c033-4bc2-9220-9adbba47d996",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fba74f8d-b2b3-4c1c-80fd-ef02090e6a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c54e35a-db0d-483e-b89f-e75999d52bac",
        "cursor": {
          "ref": "8abf00c5-b00e-4913-b896-d0440a92f498",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3d1fa1ed-54d8-4886-8558-cf120aff0ae9"
        },
        "item": {
          "id": "8c54e35a-db0d-483e-b89f-e75999d52bac",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "90929d3e-600a-4e6d-8875-e5c8ffbb1cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69079edb-0f07-4b6e-b484-5d2cf9881292",
        "cursor": {
          "ref": "f81b78cf-5a74-4d38-99bd-31d37ca4e29f",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "19151962-3edc-4863-b364-0ef0e9465156"
        },
        "item": {
          "id": "69079edb-0f07-4b6e-b484-5d2cf9881292",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e57e89a3-b438-4008-8c24-24d040a07ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc2b245-9541-4494-86e0-ecbf41d7037b",
        "cursor": {
          "ref": "1acd6903-dfc1-4dee-a2da-aaaade0c3460",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4f7c6460-350b-48a5-a8eb-1e1d1a5921bb"
        },
        "item": {
          "id": "1cc2b245-9541-4494-86e0-ecbf41d7037b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ed289e71-e21f-4efe-b6ea-812b030ed880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6c5372-86c5-4c89-a4de-c2972d641536",
        "cursor": {
          "ref": "76049ff5-2b51-4e61-8224-c2f9a61934a9",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2406d9c7-c6c5-4dd2-be7c-19cce667192c"
        },
        "item": {
          "id": "5a6c5372-86c5-4c89-a4de-c2972d641536",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "91040bbc-bfce-4a92-811c-88bc0102e023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2751107-6b34-4bdf-938c-f49972096d70",
        "cursor": {
          "ref": "6fd9bdbb-b331-41c0-80df-73dc26816cc5",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "363dcb9b-5e45-405d-aea7-cae781de83c0"
        },
        "item": {
          "id": "a2751107-6b34-4bdf-938c-f49972096d70",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7602a3b0-499d-4c73-9180-0c2e37040cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6044bb68-2f66-4bc5-846c-6e813ea4a948",
        "cursor": {
          "ref": "54f10b78-8f8d-46f2-a2cd-94b1e65ef1bc",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d7d2538a-6cdd-43a2-b532-c529a215b219"
        },
        "item": {
          "id": "6044bb68-2f66-4bc5-846c-6e813ea4a948",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ec978a61-56cf-4807-9f18-7ca08350f3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96a6f07-ff6d-4665-af53-4cb2dd7dcf54",
        "cursor": {
          "ref": "108e2543-d6b8-460c-8f0b-3967bea27b55",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c51d90d1-525e-4f3f-8185-9286a603c678"
        },
        "item": {
          "id": "b96a6f07-ff6d-4665-af53-4cb2dd7dcf54",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ace34e91-fe83-42a1-bd76-869df2d315bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f054ab4e-728b-4231-bd72-7e27a6a9f00f",
        "cursor": {
          "ref": "503fb8b9-c6eb-41f6-8826-0ba2b45166f6",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d32d3c9b-eb85-4103-b16d-9111657fb219"
        },
        "item": {
          "id": "f054ab4e-728b-4231-bd72-7e27a6a9f00f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0c47e62c-99c9-41e8-a8b1-bd93644c55bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac557ddb-9dda-45aa-bd8c-e4d6197665fb",
        "cursor": {
          "ref": "87106663-0f69-4e3a-b11e-3320ab09aeed",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a147f542-723f-463e-8ab1-527e3521eca8"
        },
        "item": {
          "id": "ac557ddb-9dda-45aa-bd8c-e4d6197665fb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1bed75ca-25fb-484f-ad2a-b467b65f8579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d02e23c-45e4-4443-af11-7d6654a65d3a",
        "cursor": {
          "ref": "870361d6-5ca6-42e9-8ad0-026a4b8bb109",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9114e8bb-fac1-432b-90ed-4dea5e4e27a8"
        },
        "item": {
          "id": "1d02e23c-45e4-4443-af11-7d6654a65d3a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b6cb4003-d500-46cf-b5a2-7d2961ea21c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ba58a1-5606-4959-aa5f-b175eb5bdb5d",
        "cursor": {
          "ref": "88786449-7831-44a0-b614-a43a25a399cc",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b96e14e6-a820-4a52-961a-7f0c3679949f"
        },
        "item": {
          "id": "f9ba58a1-5606-4959-aa5f-b175eb5bdb5d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "93ee4fc1-f892-4f49-939c-9ecb1a80dbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e1398c-37be-42cf-b58d-dc26a4adfb65",
        "cursor": {
          "ref": "874ecd9a-87cf-4531-bcfb-8e1a12c9b990",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9c637695-d651-41df-8517-6a462552ed09"
        },
        "item": {
          "id": "44e1398c-37be-42cf-b58d-dc26a4adfb65",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d9762832-0f9c-405d-8791-cf6f8f702975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1484be4f-f043-4efb-9486-bd9059659cbf",
        "cursor": {
          "ref": "2e2cd6bf-e3c2-4e62-ab10-a451feb51612",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "94749714-e2c3-4a48-94f7-a658e6d16eb1"
        },
        "item": {
          "id": "1484be4f-f043-4efb-9486-bd9059659cbf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d51254c0-596e-4d8c-ae06-e3d474895970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50614c63-d9d0-4ab2-a539-5368b2e643f4",
        "cursor": {
          "ref": "5dafb258-1b49-4cff-9bfa-9026e93243e2",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0e7debca-0d35-499b-83f2-f1104aeb8290"
        },
        "item": {
          "id": "50614c63-d9d0-4ab2-a539-5368b2e643f4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "151e0643-3c92-4972-ae48-b9bacfb3f36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422de386-7e12-42ff-94ad-5d6b8efe4bdd",
        "cursor": {
          "ref": "4ba9291c-00cb-45ff-87c7-5b03869a15f2",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "69779974-7fee-49df-8653-521cebb79f13"
        },
        "item": {
          "id": "422de386-7e12-42ff-94ad-5d6b8efe4bdd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "258b193b-0533-411b-ae38-0d43849ab4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5392b7-4ece-47ea-8f1f-2b9268fc0791",
        "cursor": {
          "ref": "bd821ef4-4d97-4bd8-9d3d-658529893711",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "07d40aaf-fe6a-44f1-94bc-739bcbc8a4ae"
        },
        "item": {
          "id": "2c5392b7-4ece-47ea-8f1f-2b9268fc0791",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8fdc470a-fd4f-4aca-a5f5-6cfeb7f1c55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14802b2-035d-4cfe-b607-7a6f1252c57c",
        "cursor": {
          "ref": "b9b7b462-5b31-4ac6-879d-e69fbc9ce5b2",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0d18f169-93c8-4a17-9bb1-0da4e76c58fb"
        },
        "item": {
          "id": "d14802b2-035d-4cfe-b607-7a6f1252c57c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "71fc131e-fecb-4909-bc56-32d5f7eb7acc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 865,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85b6112-b028-4a19-a471-9589e6e7ecc3",
        "cursor": {
          "ref": "16bab19c-bcf6-4f13-a735-178ac9471b17",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6b85b7bf-c292-4074-bb11-29a805c7dd50"
        },
        "item": {
          "id": "e85b6112-b028-4a19-a471-9589e6e7ecc3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e647ff06-c2e8-49ec-859c-948156f74cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b27d5c-bc50-4368-bbdd-1e3c29847c08",
        "cursor": {
          "ref": "e49c2e8d-94fd-48a4-82f4-9b822b5a99e6",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fdceaa54-f091-47fe-9600-4ea29dd1dc28"
        },
        "item": {
          "id": "f0b27d5c-bc50-4368-bbdd-1e3c29847c08",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b95622cb-1b5d-48b6-9bad-875c498764b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce05b23a-8ac1-4d82-b818-e8815b63746a",
        "cursor": {
          "ref": "5f6d41ac-5e8c-4178-bd84-701b201896d0",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2f55baf6-f51a-433c-ad91-5335919becd8"
        },
        "item": {
          "id": "ce05b23a-8ac1-4d82-b818-e8815b63746a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "63b890b6-51aa-41e5-8e11-519f8fd3705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1094,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a9372d-643c-4962-a4f9-9b4bed3aff1c",
        "cursor": {
          "ref": "fd6ed5a5-2a95-4964-b214-daeaf0abb32a",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a556668d-7d9d-4c7a-afb0-38fbdd4b184f"
        },
        "item": {
          "id": "50a9372d-643c-4962-a4f9-9b4bed3aff1c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "17d9e1e0-8b6c-4a06-8ac4-e365a8321a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab0d705-0939-4315-a535-f3fa380495ec",
        "cursor": {
          "ref": "6da0546a-d55d-4142-b2c2-2d47060519c7",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3e30efd0-3e89-480e-899a-4803143705f7"
        },
        "item": {
          "id": "2ab0d705-0939-4315-a535-f3fa380495ec",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c063e85a-0ff0-4ceb-829f-287df00c0caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9248d90-abf3-4ca2-b6c3-2d7e6d667318",
        "cursor": {
          "ref": "da2e8231-0660-4e4b-be5a-3196b6b8302c",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a2044286-0c30-4ee9-b610-512ea4ea76e7"
        },
        "item": {
          "id": "b9248d90-abf3-4ca2-b6c3-2d7e6d667318",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "13646126-edaf-4078-b7be-7bd189aa5860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940c1947-6058-4766-aca1-59d7f47efc79",
        "cursor": {
          "ref": "312307b9-b46a-4a7d-8d87-6c827e578e9d",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2ecda2de-2cb3-4821-9b93-72700d41e626"
        },
        "item": {
          "id": "940c1947-6058-4766-aca1-59d7f47efc79",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "65778409-2aef-46dc-928a-5c6bf3a089f2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 839,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c278c9-f62e-4e60-8ebf-96a92101d576",
        "cursor": {
          "ref": "d858548c-6f53-4838-ac80-05e8055ecaa3",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e8cfd73b-ff84-40cd-94b0-7eb7bf857741"
        },
        "item": {
          "id": "67c278c9-f62e-4e60-8ebf-96a92101d576",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fe986614-102d-4594-aeb1-7473c838fedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b423622a-5a48-414d-b8a3-9cb7a5dd7a03",
        "cursor": {
          "ref": "5bbfe528-8ea1-475e-a478-286f792420d9",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8c8fe46b-8094-430e-9490-6eafe6ac3a16"
        },
        "item": {
          "id": "b423622a-5a48-414d-b8a3-9cb7a5dd7a03",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "575dcf0b-159b-49ce-9760-a2e518d4bd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207d1e8e-7a0e-4e2f-92f8-c0889d5f9b9b",
        "cursor": {
          "ref": "6f0b82e5-2f03-437f-9517-c6190ed13e5f",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f4d410e9-41bc-467b-8b1f-9f5819cbe4e1"
        },
        "item": {
          "id": "207d1e8e-7a0e-4e2f-92f8-c0889d5f9b9b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bf70efb4-4d0d-4e4a-8266-4d655f22e025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a911a71-1d5b-4a2a-b904-4791ef23ae18",
        "cursor": {
          "ref": "d7446f74-cf5b-4d89-8223-60b072bd23f3",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d81f68eb-0f17-413d-a7d3-5641738dd28e"
        },
        "item": {
          "id": "1a911a71-1d5b-4a2a-b904-4791ef23ae18",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c041c260-de49-460a-a079-5551b5e89451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d95d9-1b6e-496b-b8bd-78a52b2c0597",
        "cursor": {
          "ref": "c8c44e44-63a2-49f8-b18d-b8729bac0c9b",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9a7d0013-e086-4527-9015-d6ad4250b666"
        },
        "item": {
          "id": "088d95d9-1b6e-496b-b8bd-78a52b2c0597",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9e953608-b34a-421d-8dfe-778158166d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f916094-44c0-4626-a59f-367624276290",
        "cursor": {
          "ref": "3cd672fe-8007-4847-8095-c27489bf53c6",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0db600c0-bf74-4df6-9f2c-7efc5add0c1c"
        },
        "item": {
          "id": "9f916094-44c0-4626-a59f-367624276290",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed86dce9-47b2-4f4d-8a5f-cd2b18a2ab55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95458315-72a7-40d5-8dff-e6b900b6c51c",
        "cursor": {
          "ref": "d3d62039-7ae1-4393-bdee-088e51c9d3fe",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c6875e45-ccbd-4eb9-bae9-e8e7dad0760a"
        },
        "item": {
          "id": "95458315-72a7-40d5-8dff-e6b900b6c51c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "69a00fb5-fbf1-42a8-99f4-0faf3a12bf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e12133e-29e0-474a-93c0-7e326514a834",
        "cursor": {
          "ref": "6385e76b-318c-44df-b1af-46da1d228fd4",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a335ea12-b0e2-4f33-9ef9-a54cf20a2aef"
        },
        "item": {
          "id": "1e12133e-29e0-474a-93c0-7e326514a834",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "96e1db28-d1c7-4230-8288-eb1b7505b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9b66c9-5331-44f4-b303-90ee458376ff",
        "cursor": {
          "ref": "654e09f6-d577-4587-b24c-e98660e77361",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5981cf9e-d669-4adf-b447-0ef9ef11dc37"
        },
        "item": {
          "id": "df9b66c9-5331-44f4-b303-90ee458376ff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "18cc4bf4-9e8b-471e-b44c-1a59bfdf467d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6827de47-f894-4ada-a0ac-d81886e08237",
        "cursor": {
          "ref": "140ecb95-3646-4e7d-b3da-65292f258ac5",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "26bdf2ed-5b72-4f8b-921e-faa5ae033dca"
        },
        "item": {
          "id": "6827de47-f894-4ada-a0ac-d81886e08237",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ac39ce94-b2e8-49f3-96a2-3930845522ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb345ead-0cbe-4c95-b0c1-97cae05f7ccb",
        "cursor": {
          "ref": "e87c09c8-8acd-4c03-bf83-4dacce16e3d3",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f5d94ab5-aa1d-42b8-8b2c-641547f18552"
        },
        "item": {
          "id": "bb345ead-0cbe-4c95-b0c1-97cae05f7ccb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "81315db2-676e-4aa6-9532-98d067fb5f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3433693a-01c0-4622-a2f2-a970cde5816e",
        "cursor": {
          "ref": "4e6a5efe-d6eb-4ba6-9fae-c0c123e1a51b",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "15285226-9ba5-4f80-aecf-9b4de2fa3de0"
        },
        "item": {
          "id": "3433693a-01c0-4622-a2f2-a970cde5816e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ce4e06ed-3ca8-41d9-bbab-e1b544759b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9706396e-e4fb-4398-8dd4-4b70554c8186",
        "cursor": {
          "ref": "33b0fca3-2ba4-4057-9cd9-18c905cf73bb",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b99a4057-6f6f-4929-bea0-2706479b27c7"
        },
        "item": {
          "id": "9706396e-e4fb-4398-8dd4-4b70554c8186",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "654c90df-1d99-40ff-82c1-f2c228042e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd687b2-5730-4b30-a3c2-a7a5843a58a3",
        "cursor": {
          "ref": "d1a96371-7866-41c0-9f34-13f8e65d24c2",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "63c0089d-1611-41e7-a3d9-903909f1c920"
        },
        "item": {
          "id": "ccd687b2-5730-4b30-a3c2-a7a5843a58a3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "78cb7d9b-ea49-4acb-bec0-6ef0604b749a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2eb7b1-b52f-4746-b505-021b147a257e",
        "cursor": {
          "ref": "e0008b3b-f5ea-4a62-846f-9ad7a0b1f959",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ef31915a-11c9-4c4a-b237-baec745f39cc"
        },
        "item": {
          "id": "5b2eb7b1-b52f-4746-b505-021b147a257e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b26a5c63-7095-44c3-b793-5b331db24fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e504904-7920-4ad3-87af-0033b5eb3ceb",
        "cursor": {
          "ref": "6f408603-d049-422c-be6e-b95ffd09e2f0",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "50fae6b7-e1cb-45d1-afff-f4a6b4dd6df9"
        },
        "item": {
          "id": "7e504904-7920-4ad3-87af-0033b5eb3ceb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cc737c41-7140-47c3-a42d-8422209f5e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81804247-8bd9-4524-b6e0-7871e5d1177c",
        "cursor": {
          "ref": "bcac1026-b55c-4137-9ad3-03d9ad749352",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "be1f0a70-e1a9-44a1-9bb5-53853daded48"
        },
        "item": {
          "id": "81804247-8bd9-4524-b6e0-7871e5d1177c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aef57ba4-e130-43e1-ab24-9a6876eba714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5780f664-0759-42c6-b477-c24a00c768e3",
        "cursor": {
          "ref": "919a557b-55f7-416b-b6ac-2245bb63d12f",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5b932965-70c8-40c2-8925-8ebaacb6c7ee"
        },
        "item": {
          "id": "5780f664-0759-42c6-b477-c24a00c768e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6b00ce12-7ed9-4909-b252-2478aa7340a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51e1a68-239c-409e-82b5-24401de65dbe",
        "cursor": {
          "ref": "fdb289e8-9d0c-42d1-86c5-4e0f6d887dcc",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "49a8be80-40ad-43b1-b050-a1b4c3102536"
        },
        "item": {
          "id": "e51e1a68-239c-409e-82b5-24401de65dbe",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a6360a4f-11dd-4359-8558-5f67e0a5bffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b73146f-9e6a-4cd7-9dbd-2538bc42eb0e",
        "cursor": {
          "ref": "e37aea91-f9c9-4a6e-bf4e-8e72f9b006d5",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d83204fa-0963-4f12-b12a-b9b4195c005b"
        },
        "item": {
          "id": "8b73146f-9e6a-4cd7-9dbd-2538bc42eb0e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e2a392e1-caeb-4344-af55-04b8bcaddb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2f3a76-7881-4ede-b804-1008445ca7bf",
        "cursor": {
          "ref": "1a468c8b-5c24-4429-8114-e2724f187ed4",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e20ff4dd-a884-4d33-85b7-bcca939b19a1"
        },
        "item": {
          "id": "0b2f3a76-7881-4ede-b804-1008445ca7bf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2f725a62-d8cd-4a9c-abdf-2b4e4a58aedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8640b4e2-2906-4382-a77c-2ec3be2ed6e9",
        "cursor": {
          "ref": "95031244-b0cd-431a-b570-6ff2da82295b",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3d5a3e37-8409-4a07-b69e-ad1d42fae942"
        },
        "item": {
          "id": "8640b4e2-2906-4382-a77c-2ec3be2ed6e9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "84324f7a-954d-45b8-a169-b9168bb7af8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd59166-33ca-4643-a29e-d3626e4534e9",
        "cursor": {
          "ref": "8ffe8aef-df56-4211-bfa8-36129553c9b3",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "de92af4e-8d6b-44a9-abae-43e97165a262"
        },
        "item": {
          "id": "afd59166-33ca-4643-a29e-d3626e4534e9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "86191632-9eb9-45a3-8d8e-c18ddc34885b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b5e088-dfd8-4a62-8cd1-b2cd05282069",
        "cursor": {
          "ref": "46fcbdb2-cc71-407e-87e8-b9e8250b1532",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f5260e05-24f3-4fdb-9996-2dfd6db92e0c"
        },
        "item": {
          "id": "58b5e088-dfd8-4a62-8cd1-b2cd05282069",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a514f0f6-3ad5-4655-bedf-dfaea92e1406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813cd709-4d1c-4eb7-8c7c-d93ad6f98ff4",
        "cursor": {
          "ref": "e22d1cb7-b59d-4478-8855-9e287534391d",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8db546eb-271e-4ae9-93fd-7bb31087cae2"
        },
        "item": {
          "id": "813cd709-4d1c-4eb7-8c7c-d93ad6f98ff4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "73504ef5-4934-4151-b237-1246a15df101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41900d3-aba2-4610-8856-235299f21900",
        "cursor": {
          "ref": "4a565379-75f1-4bcf-834f-3cbaa25b3ba0",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "abee13c0-bf52-4a2d-8e27-75d19b0844af"
        },
        "item": {
          "id": "b41900d3-aba2-4610-8856-235299f21900",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b4b0c90c-b95d-4559-98e1-07b8fde6998f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b8858e-8bc9-4693-99d8-812cd3682f12",
        "cursor": {
          "ref": "d3a5f14d-9597-4da1-b3d1-004b7c566794",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a974068c-555f-4c8c-bc33-183e005d4b16"
        },
        "item": {
          "id": "40b8858e-8bc9-4693-99d8-812cd3682f12",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "43c91f61-56d1-4581-a484-d3acc65fb4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfac9bbc-8af8-446c-b350-dded4e555d74",
        "cursor": {
          "ref": "676dafb1-a045-47f7-a696-9c209e615821",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ec573cba-a247-400a-b94a-3a28afc506ea"
        },
        "item": {
          "id": "cfac9bbc-8af8-446c-b350-dded4e555d74",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "925a5b8e-5e62-4bee-b780-956d60e78c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b9b6fb-3a5a-472f-a577-9741b8e5c702",
        "cursor": {
          "ref": "970e2aa3-60ba-45c9-abd0-e394a5f3ff8c",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "be76c11e-86d3-49be-ba3e-fbe3b4e9782f"
        },
        "item": {
          "id": "80b9b6fb-3a5a-472f-a577-9741b8e5c702",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "59ea08e1-4b6b-4abc-b931-36a85103df78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd38a1ef-7b86-4098-8b72-c2bf0a9a7795",
        "cursor": {
          "ref": "9561f4eb-8b52-459d-a588-33d0873ab547",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb8c796a-2aa0-48b4-92f8-c1ed09a1d8d5"
        },
        "item": {
          "id": "bd38a1ef-7b86-4098-8b72-c2bf0a9a7795",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7fb87acc-31ee-48a5-bd99-91a5a52390fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45023a72-8da8-4a78-9e64-a4511bc68a95",
        "cursor": {
          "ref": "8ffbfa55-ed54-4228-9027-e41c0f741e30",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b1a79832-1ccb-43b0-a309-8ca69d35099e"
        },
        "item": {
          "id": "45023a72-8da8-4a78-9e64-a4511bc68a95",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9f8da8c2-4b19-47ec-b22a-44f10a59b0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f7bc8d-8bf8-4b48-b8ed-00887e877ade",
        "cursor": {
          "ref": "1fc2655e-a610-47fb-91db-514373e0ed60",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e9109495-1cfb-443d-aaaf-1f35ca9bdd28"
        },
        "item": {
          "id": "69f7bc8d-8bf8-4b48-b8ed-00887e877ade",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ede85cb5-cc5f-4cdc-86cd-33c4f8d743a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58fafa5-7dd1-4449-879d-b15460b8c4f6",
        "cursor": {
          "ref": "68ec623c-2d5e-4c08-8f07-cabf4322cfd4",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "769366e6-64b9-4e5e-9138-7127343abada"
        },
        "item": {
          "id": "d58fafa5-7dd1-4449-879d-b15460b8c4f6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "898df664-e730-4c5e-8132-8aeb69fb5a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387ef8fe-da98-4108-9955-a9441b633365",
        "cursor": {
          "ref": "bacf6334-a876-4f41-b752-0f65afd8c86c",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9cb5ee4d-495f-44ee-b6cc-4056df27ea26"
        },
        "item": {
          "id": "387ef8fe-da98-4108-9955-a9441b633365",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "baf4f7bd-0c27-41ca-b7a8-1a76b9fc85ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f9f8d5-ac30-41a4-b8ed-27633090ac85",
        "cursor": {
          "ref": "b427fbab-01c1-46d6-a635-19f263f039f2",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "024def49-4826-4701-846d-d0630265861d"
        },
        "item": {
          "id": "21f9f8d5-ac30-41a4-b8ed-27633090ac85",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fc5f52f5-c6e6-4294-9d32-59e3f927fb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d16fd2b-742f-40e9-86fd-41c6458c5a40",
        "cursor": {
          "ref": "0bed17f6-29dd-4c28-ba85-2f5d69969623",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a639ea62-f5fb-4283-9fd7-ab605a5b246d"
        },
        "item": {
          "id": "1d16fd2b-742f-40e9-86fd-41c6458c5a40",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "47d8359f-9981-49a0-bf01-577c793f1214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ccce21-1399-43ec-8ea6-e5ead0f58a3c",
        "cursor": {
          "ref": "31a6c53f-426b-4810-ab52-af0e8f1caa22",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f57cefdd-7873-496d-8658-0668fbc6be80"
        },
        "item": {
          "id": "86ccce21-1399-43ec-8ea6-e5ead0f58a3c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "81e67aef-39e3-430f-9986-7261b48d69b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b72d65-d80b-4b3e-a744-baa8b112dedc",
        "cursor": {
          "ref": "d8eb69cd-b568-41ad-9802-6c850d43d628",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d456776f-69ba-494e-8916-7a801ace27bf"
        },
        "item": {
          "id": "00b72d65-d80b-4b3e-a744-baa8b112dedc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "44ae7d0d-adc8-4591-8b83-0e80e0024715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6798116-1493-4811-8045-4bc8dffc1a31",
        "cursor": {
          "ref": "dad88350-7b97-4637-84d0-ef0cf9435fc3",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2b364d39-2600-4701-b393-975b0a1a817b"
        },
        "item": {
          "id": "a6798116-1493-4811-8045-4bc8dffc1a31",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "28596fed-41e2-42cd-95e7-99eca31e8783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb88719c-c041-4575-90ea-269779e91dc7",
        "cursor": {
          "ref": "0bc4aaa2-d076-4aff-94f6-4dd90ec0ea31",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dd92ea29-7ea2-47bd-a88b-007d7fe1b78d"
        },
        "item": {
          "id": "cb88719c-c041-4575-90ea-269779e91dc7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c028c45c-0930-429f-b2f7-016847251c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e9734d-406b-4ccb-a058-20593f1dfd6e",
        "cursor": {
          "ref": "3dfc4061-3801-4d6c-a9cb-091e2f702fe4",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d74ff784-b585-41c9-b113-ebdd5eaf21df"
        },
        "item": {
          "id": "62e9734d-406b-4ccb-a058-20593f1dfd6e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3d1fe112-33a3-4d5b-a65d-06250bde19c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0c1b84-4973-4c86-89c5-50ed99825f53",
        "cursor": {
          "ref": "abe5d36a-c642-4321-a3d3-41fae93be9d2",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "09ee17fb-57d7-49b2-8f00-b687989bc055"
        },
        "item": {
          "id": "ed0c1b84-4973-4c86-89c5-50ed99825f53",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3add8813-b222-4e4d-a3e7-b2111fbea6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b122f19-072e-4ddd-ac75-4d950f862a70",
        "cursor": {
          "ref": "35478dea-0a6c-4774-8b78-2a1d6e22db9f",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "873796a5-76ee-46ab-94b4-572aea1919b4"
        },
        "item": {
          "id": "8b122f19-072e-4ddd-ac75-4d950f862a70",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f6bcdb9d-780b-46d8-bd4f-8672e41872bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d406ac-acd6-4a59-bbf5-4d7838a95858",
        "cursor": {
          "ref": "47d06aeb-b0d1-4fdf-b2c9-d1db5a6be720",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "33f966c1-c015-4ddf-8872-8778ed2224a6"
        },
        "item": {
          "id": "17d406ac-acd6-4a59-bbf5-4d7838a95858",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f4642d93-e75d-400a-b494-80344d1bc93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccf8515-feb8-4753-be6e-64ef55bd8b87",
        "cursor": {
          "ref": "9542ceca-c95b-42d0-8416-578ba384b77d",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bea984b3-c546-4ae7-985e-b45a403bea48"
        },
        "item": {
          "id": "0ccf8515-feb8-4753-be6e-64ef55bd8b87",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9d05d72b-0bb4-4b31-a34b-eb5f811e82da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c6924f-3707-4bc6-b8be-801d35ebcda9",
        "cursor": {
          "ref": "574b396c-b4df-422c-bda8-aff222f83e36",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "06d92af5-6aca-487e-b8f7-1c1917de6254"
        },
        "item": {
          "id": "e7c6924f-3707-4bc6-b8be-801d35ebcda9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "194f291c-04bc-4665-831a-77e2ff5eb414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdea37fc-3d1c-4fbd-8935-6c3ce0a66ae3",
        "cursor": {
          "ref": "355df3ea-eeee-47bb-91ad-9187fe5272a7",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "99bcae65-2660-417c-9e86-35dd2cb459fb"
        },
        "item": {
          "id": "bdea37fc-3d1c-4fbd-8935-6c3ce0a66ae3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d07cc8ae-178a-4e83-9769-6c3d3fbe2541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c73ab11-a10d-45ac-929e-06cef88e27be",
        "cursor": {
          "ref": "2e6ed985-84f7-44b9-8604-be3b252fcbb2",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "480f8c60-c98d-449f-a4ae-dbb3a950b5a0"
        },
        "item": {
          "id": "6c73ab11-a10d-45ac-929e-06cef88e27be",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "084de457-12e0-462f-9437-65366b609300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889a75a3-7048-49ec-98ef-2ecd9d81cd5e",
        "cursor": {
          "ref": "f2941bd5-c6bd-4ec7-85f2-93608691bf07",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0cf5279c-8e19-4d94-93fb-966108695600"
        },
        "item": {
          "id": "889a75a3-7048-49ec-98ef-2ecd9d81cd5e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f383d082-1d84-4cd1-9073-a3db12e5f8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bbcb24-fa52-4545-9778-c865050012e6",
        "cursor": {
          "ref": "1f4711de-7b5d-4e80-a3a6-5eb029c7555a",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fe866ca0-5075-4fcd-b7c0-bbc4a47415c5"
        },
        "item": {
          "id": "27bbcb24-fa52-4545-9778-c865050012e6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "308cba42-d616-46ca-8783-4ae203b7e4b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa9c4a8-c593-4e50-a0cd-297d0f1e9372",
        "cursor": {
          "ref": "e4f4acff-3070-4d55-84de-3bcd7c96e106",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cecf566d-f5b3-4fca-a50d-36015e5f7ff2"
        },
        "item": {
          "id": "8aa9c4a8-c593-4e50-a0cd-297d0f1e9372",
          "name": "credentials_issue"
        },
        "response": {
          "id": "35cf285d-cd5b-4728-8e04-350f11f94f6f",
          "status": "Created",
          "code": 201,
          "responseTime": 6271,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1c8c2f-982a-438f-ae69-096227b8b5f4",
        "cursor": {
          "ref": "fda1e5b0-d1bd-4134-938e-94b7f4c15151",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "079d1b80-635a-42a0-ad33-f5cc8ff968dc"
        },
        "item": {
          "id": "8c1c8c2f-982a-438f-ae69-096227b8b5f4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3b183d31-725b-4f26-82e4-e88ee8a78674",
          "status": "Created",
          "code": 201,
          "responseTime": 6420,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b047539-1d43-4494-9f47-0ac040fb13eb",
        "cursor": {
          "ref": "9aed2436-69f3-4325-80cf-dee15ee6803f",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a8b7bab3-3deb-4324-b705-ae17b4d4fafa"
        },
        "item": {
          "id": "2b047539-1d43-4494-9f47-0ac040fb13eb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fa066c3d-799b-4441-8a51-45a088e3d804",
          "status": "Created",
          "code": 201,
          "responseTime": 5790,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05934d4-6941-4367-b33f-765988e8eed2",
        "cursor": {
          "ref": "8151ac40-6b20-4915-a53f-68fd05fc7512",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "892e3325-c03d-49df-96af-893f83760381"
        },
        "item": {
          "id": "a05934d4-6941-4367-b33f-765988e8eed2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6dc9c997-f17a-4690-858b-1e710ab02344",
          "status": "Created",
          "code": 201,
          "responseTime": 5737,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9fe15f-fde3-4da5-bb41-5fc28efe852c",
        "cursor": {
          "ref": "c17e046c-9043-4d35-a66d-24797aec135e",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aa39ffaa-fa8d-48e0-8c88-b7d916925a8d"
        },
        "item": {
          "id": "1c9fe15f-fde3-4da5-bb41-5fc28efe852c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "42fa150e-3082-4228-81b0-05d7309287da",
          "status": "Created",
          "code": 201,
          "responseTime": 5855,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8fd779-0475-41d2-a385-f219c6f91ba7",
        "cursor": {
          "ref": "5724e308-9bd9-4416-b9fb-7194ae023d69",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "10e40e65-2a20-402e-88dd-e51786cad462"
        },
        "item": {
          "id": "1d8fd779-0475-41d2-a385-f219c6f91ba7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8ca0b5ba-e174-44be-974b-4120749dd012",
          "status": "Created",
          "code": 201,
          "responseTime": 7446,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aaaecb-fbdf-4abe-9d02-c4119f36eb1c",
        "cursor": {
          "ref": "178e1eb7-fb01-421c-8c72-62e1cc4cd7ed",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "124dfa02-9e15-4010-ac97-d6763174bff7"
        },
        "item": {
          "id": "90aaaecb-fbdf-4abe-9d02-c4119f36eb1c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2580e219-1cd1-4004-b20d-88790e39f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27d6f62-d915-4ea8-a254-13a675e67f2e",
        "cursor": {
          "ref": "07b78c57-a2e1-433e-9f8e-bb604a19decb",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2eb5931f-b2ae-46cb-a62d-e21c6e072de4"
        },
        "item": {
          "id": "b27d6f62-d915-4ea8-a254-13a675e67f2e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b684cfd8-119f-494c-b276-a37d4bd52e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920d7e16-6ea3-4f1f-9430-9931f898af31",
        "cursor": {
          "ref": "62f68a04-9b39-4905-a336-1d8d1dd3a9b1",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "19f0a546-e556-4a22-9a4d-1eda7e64f3f6"
        },
        "item": {
          "id": "920d7e16-6ea3-4f1f-9430-9931f898af31",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d723a6b3-b1db-4db6-b418-f1e1d6551750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0b7c61-13f4-4c94-b8d7-b8135179f9e3",
        "cursor": {
          "ref": "498a0bdb-8820-4bb8-b3b8-c4b7f673acab",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ea3ba33d-3854-45b6-a18a-a24b0fdbe9c4"
        },
        "item": {
          "id": "be0b7c61-13f4-4c94-b8d7-b8135179f9e3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8a2c1026-eee5-4933-9371-15d0de9b4d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe6d8d3-aad3-499e-b291-a979e5d0a401",
        "cursor": {
          "ref": "9320f9e9-9d21-4e63-a7b9-08b6661b14ec",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c80e4eac-a849-445f-9b3d-1940a76d49dd"
        },
        "item": {
          "id": "ffe6d8d3-aad3-499e-b291-a979e5d0a401",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34cc5634-8184-4f9c-baf6-b3537307aab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e27424-a5f6-446e-9c75-d82d34bfd221",
        "cursor": {
          "ref": "4270d9dc-4142-4a6e-85bc-4cd137861e7c",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7a0787e3-e9ef-4771-ab80-e77c57410606"
        },
        "item": {
          "id": "73e27424-a5f6-446e-9c75-d82d34bfd221",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b77145d3-a33c-4a16-8a4a-fb142770364c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c00b17-2a5e-4e89-b096-33ccb9775337",
        "cursor": {
          "ref": "3c363cbe-2596-4b06-8b18-0d2c23cb69f6",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1ab3b13f-1191-4817-a35e-e7bfe31c0eb0"
        },
        "item": {
          "id": "f2c00b17-2a5e-4e89-b096-33ccb9775337",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bb0aad09-4c6e-478b-a9d6-3facd62db065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdac7414-f4a8-4d03-a972-fdc2ec18e8a1",
        "cursor": {
          "ref": "2ad6c20f-0ee3-4f1f-a7c6-5be707823d64",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8578cbf5-47e2-43d6-86a8-1eeb3e28d2b1"
        },
        "item": {
          "id": "fdac7414-f4a8-4d03-a972-fdc2ec18e8a1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "185ba973-d80c-4161-b506-6fe254fbcc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5c52c7-8815-4f55-b525-2c2568210c2f",
        "cursor": {
          "ref": "8299830d-ee77-40ed-b55a-e4f27f554c60",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d680f722-282e-4e8f-b32b-359d1f858348"
        },
        "item": {
          "id": "aa5c52c7-8815-4f55-b525-2c2568210c2f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da1c41a0-63c5-4aec-b752-6ee03b76bffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0c5016-878a-435a-b350-558643118d50",
        "cursor": {
          "ref": "93f57587-d28b-4af5-84c8-a6c1501fa29d",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d0dd6e85-a806-466d-a25b-86e845bdf60c"
        },
        "item": {
          "id": "9c0c5016-878a-435a-b350-558643118d50",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "23f9e915-82e0-4475-8e8a-a60d188130ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e784a261-7fd5-4cfb-b73b-7af3135a4683",
        "cursor": {
          "ref": "157b7965-8730-40ae-ad1f-e2e68f1ef8f2",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3320b459-b542-4057-b49a-7d2f01e61c21"
        },
        "item": {
          "id": "e784a261-7fd5-4cfb-b73b-7af3135a4683",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "575d14c6-05c6-4253-9b4f-cfe563002b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec818b2-8dbb-4974-9ecb-502ba1edc599",
        "cursor": {
          "ref": "b3bd1a08-dafd-4715-bd52-0ef15bae61eb",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ee67677e-cdcb-42a2-a356-5f5687f4eef4"
        },
        "item": {
          "id": "0ec818b2-8dbb-4974-9ecb-502ba1edc599",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b9a46948-c6e5-49ca-a86b-809debab235a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0c0b28-b3dc-4a25-8cc0-89ea1e453ad8",
        "cursor": {
          "ref": "fa30043b-ab21-418f-b8ba-57116b7b6c45",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3e6d8d4b-64b7-4b10-ad1a-d79944c5084e"
        },
        "item": {
          "id": "0b0c0b28-b3dc-4a25-8cc0-89ea1e453ad8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "84c5aa40-fdf7-4146-8d27-fd58fd6e2392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e10624-b5cf-46ee-97c0-851a72fba2b7",
        "cursor": {
          "ref": "76479081-f0c8-454a-8ee3-124e992dc4ab",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "36e3b1d7-a324-4f71-9147-9922b4285365"
        },
        "item": {
          "id": "75e10624-b5cf-46ee-97c0-851a72fba2b7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c66f9bf0-8576-4e22-a8ed-e3ea355725de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414cd0bf-a57c-48f8-afc2-34022a6e48a7",
        "cursor": {
          "ref": "bc02946d-c31b-4694-9b5b-c292ad120bea",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cc0f6c06-384a-43d0-8766-b6e78308cddd"
        },
        "item": {
          "id": "414cd0bf-a57c-48f8-afc2-34022a6e48a7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d0db6a01-5ecd-458c-843a-76f5f1499ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67944020-daee-4503-b6ac-760e106a621e",
        "cursor": {
          "ref": "8ab50914-1e5c-47ce-a40a-3fbef140c94c",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8178da37-6864-45fe-9429-f43b16527e90"
        },
        "item": {
          "id": "67944020-daee-4503-b6ac-760e106a621e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "91bc9b3d-3110-48fa-87e6-e3f48958ba83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37d33fa-8db6-4e67-85bc-d06f9ca6a2b4",
        "cursor": {
          "ref": "04efeccd-b759-4d41-a6f7-108405cf8285",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "860fa7db-636d-45ec-af2a-79ac4f653ee2"
        },
        "item": {
          "id": "f37d33fa-8db6-4e67-85bc-d06f9ca6a2b4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db217c0c-6e37-4872-92b9-3931f2a23c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f19f471-b06a-4b77-8727-70387bb5cb8d",
        "cursor": {
          "ref": "4c74446b-d4a0-4b28-a14a-d97f5404ce1a",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "38eee0ea-f8de-4115-aed0-79fe98bbfb6f"
        },
        "item": {
          "id": "5f19f471-b06a-4b77-8727-70387bb5cb8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "de94af01-a1f4-437a-b6ba-b7dced8be10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5029376-0f8f-4560-aad8-dfe8a762e2e7",
        "cursor": {
          "ref": "88981fbc-162c-4754-a261-fa7fc32a1bc3",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "375d8172-0b15-424d-bad4-12dc9b7b5984"
        },
        "item": {
          "id": "f5029376-0f8f-4560-aad8-dfe8a762e2e7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "972c79dc-443d-4756-9481-1fbdceca1929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49705d3-b230-43c9-9781-8b7e1e0e879b",
        "cursor": {
          "ref": "36818293-8098-48ec-94da-81b09275dc40",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bc395bac-4134-4524-8b5e-68e060fbc45b"
        },
        "item": {
          "id": "e49705d3-b230-43c9-9781-8b7e1e0e879b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "451c0269-347f-4fe7-8a47-3499c2a05fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2302e6-4ade-45e8-a21a-9e0aeb44d06c",
        "cursor": {
          "ref": "b08b3008-38d2-4a33-a22b-7c4c92bcf412",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f68782e4-a50c-45e3-bc65-2d46523c91b6"
        },
        "item": {
          "id": "dd2302e6-4ade-45e8-a21a-9e0aeb44d06c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "51616f2d-da77-4248-a8f2-0f13a5added5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211ab545-2f57-464f-8292-68996e810f06",
        "cursor": {
          "ref": "76b0cacb-9d14-4475-9342-e67e841f0681",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "151b0b56-fa52-46c4-9073-b21f83f2bbcf"
        },
        "item": {
          "id": "211ab545-2f57-464f-8292-68996e810f06",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a46cfa5-58a1-479b-bcc8-d2fd972e61a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcefc7a1-8aab-4a99-bf46-946126c77ed5",
        "cursor": {
          "ref": "c74d58bf-7772-465d-bf19-2e017ab5933a",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "acfdd261-fa89-468a-84c6-254d36556067"
        },
        "item": {
          "id": "fcefc7a1-8aab-4a99-bf46-946126c77ed5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e8d5ce3d-8b4e-41aa-a593-18df73628164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe447ca-0454-4386-971d-4e665c30d042",
        "cursor": {
          "ref": "296772db-dc15-43e8-a113-b1e153a44ad3",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07df2993-5abe-42c2-9a0f-53fc479238cf"
        },
        "item": {
          "id": "1fe447ca-0454-4386-971d-4e665c30d042",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "56a0b7d2-8e34-425d-94bb-01a35d424ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cccbca-56a4-4804-b310-edbbb5ba438e",
        "cursor": {
          "ref": "773ac5c3-abf0-4de7-926c-487d2926b8eb",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "01d65053-a4b0-4b1c-a7c5-7cf32c25f319"
        },
        "item": {
          "id": "f0cccbca-56a4-4804-b310-edbbb5ba438e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3c270365-82fc-42b2-88c0-dcf1226e85af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53eb076b-c49b-4058-aae2-9ec809285ef9",
        "cursor": {
          "ref": "12a990c2-01d6-4631-ae82-ba7cbdad21d7",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "907a0bbc-1612-4efa-8979-49b4a763df6e"
        },
        "item": {
          "id": "53eb076b-c49b-4058-aae2-9ec809285ef9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "472e2e76-6f14-46f6-bd4c-54d1aabf643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424b7b4a-efc0-44ba-9c64-55ba5e47e265",
        "cursor": {
          "ref": "b6ecc797-4699-4c9f-a04c-a4231ae66c02",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6791c2f0-eabb-4fc3-a909-f2f5fe469cab"
        },
        "item": {
          "id": "424b7b4a-efc0-44ba-9c64-55ba5e47e265",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "eb47246b-133a-4021-bd10-bc7c2cdaeba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0049b0-4a58-4eb0-a681-72834ff11232",
        "cursor": {
          "ref": "9adc916b-d243-4906-a45a-b8ec48fa7eaa",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "81b98ed4-1eb3-4e5b-96b9-c1399f856f2b"
        },
        "item": {
          "id": "1b0049b0-4a58-4eb0-a681-72834ff11232",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ebd6c84b-018e-4d19-8b1a-59572b91a7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402ef28a-2e93-47b2-bde2-d921912821c2",
        "cursor": {
          "ref": "1063b3e9-9fec-4eb1-90bc-150fba507f2e",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8127bc57-0c98-448c-8168-1303fded6e66"
        },
        "item": {
          "id": "402ef28a-2e93-47b2-bde2-d921912821c2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "27105a4c-dfb2-4656-a952-a1e9d1bd8363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131adec9-18d5-4ff3-b84e-a47740f87501",
        "cursor": {
          "ref": "9bf031a9-67d3-4ebd-9a7d-116402d77813",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "61b6b75f-73c4-4d6b-a5d7-89b95b5d3fd5"
        },
        "item": {
          "id": "131adec9-18d5-4ff3-b84e-a47740f87501",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "db32c84b-1e7e-47f8-adb2-4dd58655d68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b41e71e-25ee-4ee0-9e88-fc50151bbc12",
        "cursor": {
          "ref": "bffa72ae-031e-4d51-8490-54c426daba75",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e4089a8-e79f-45d3-9d6b-9cee6ab165b5"
        },
        "item": {
          "id": "9b41e71e-25ee-4ee0-9e88-fc50151bbc12",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b6ce92e-94a7-410e-a988-3da761a71c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420357d9-39fe-4ef4-a9d8-a19dd3695b38",
        "cursor": {
          "ref": "cb4ff2cc-2bd6-412d-b80b-97d5679de9fe",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e6719c20-f356-45db-99b4-8c3257898d68"
        },
        "item": {
          "id": "420357d9-39fe-4ef4-a9d8-a19dd3695b38",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9e8c9606-a318-4c53-96e3-206d5817e550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4ca4c4-af75-4a05-b2fa-61fba411786d",
        "cursor": {
          "ref": "ec418317-dcc7-45ce-ad0d-41191358b931",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ba636af1-bb9c-41b2-88f9-78fe3e977e89"
        },
        "item": {
          "id": "0e4ca4c4-af75-4a05-b2fa-61fba411786d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4c7a0c5b-a61a-4049-a0da-7ef00bd85e0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf2aa01-3d44-4c96-9b4a-fd703380a670",
        "cursor": {
          "ref": "ea8cb177-17ee-4fd6-aa77-eabae133b05b",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "30f807cf-77d0-4850-9bd6-eae77e65a093"
        },
        "item": {
          "id": "0cf2aa01-3d44-4c96-9b4a-fd703380a670",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f9301fd0-eb4b-45d8-a233-61e4309137f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb3f3d4-a112-4baa-808a-7a8773aae4e0",
        "cursor": {
          "ref": "a81f71e1-e53d-4d36-bd94-aa228fed48b4",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d079c192-46dc-487a-986a-a4c6e37c1e07"
        },
        "item": {
          "id": "2eb3f3d4-a112-4baa-808a-7a8773aae4e0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f434311f-41e6-4a19-8f50-33d8f2f9df96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aa7dcc-3bb8-41e2-b07f-2382c733d18f",
        "cursor": {
          "ref": "4ced0857-02e2-46c9-9532-39db23473a35",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d18a1d2a-48a5-4a6c-adc2-a554a45bd1ed"
        },
        "item": {
          "id": "d8aa7dcc-3bb8-41e2-b07f-2382c733d18f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f1232625-5424-48d9-bd3d-6ffc332c7e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1037b24-5f0d-40d4-9447-5baf6352ff67",
        "cursor": {
          "ref": "e01a4faa-d340-41b5-8afb-45d439759090",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a984401e-96e2-41fd-947f-318db9edd65b"
        },
        "item": {
          "id": "b1037b24-5f0d-40d4-9447-5baf6352ff67",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3a4c44f6-4996-4673-8c33-a98d26fb4a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9c335e-e257-488a-98dd-55558db8b921",
        "cursor": {
          "ref": "31c5a91a-79fe-4984-ac9d-28a5f97f71a9",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a793cb6b-2a5b-494e-967d-ba91a136ffa6"
        },
        "item": {
          "id": "8a9c335e-e257-488a-98dd-55558db8b921",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4e791a74-58a8-48c5-bf09-eace69845fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fb2c6a-b73b-4965-8b06-a7a7ee2e3eaa",
        "cursor": {
          "ref": "1b53574d-8cdf-4351-a9a5-08ea8fa4a0be",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cc2d184f-e9b4-4fda-bb07-6ad8e0ca470b"
        },
        "item": {
          "id": "61fb2c6a-b73b-4965-8b06-a7a7ee2e3eaa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8eb6a5c0-ece5-484b-9911-c587fed7dcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed80f023-77fe-4e90-a932-7a672b3de4b5",
        "cursor": {
          "ref": "75aab88b-71d6-44ae-abfa-b389cc91e00e",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "65c1871c-10d5-45ec-89e7-5a33a4f1d36d"
        },
        "item": {
          "id": "ed80f023-77fe-4e90-a932-7a672b3de4b5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a72bdd24-43e4-4b5d-8986-f89c417110ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b314a4-6256-4662-95c1-869c5a358882",
        "cursor": {
          "ref": "9f5846ea-d052-41c1-9eaa-3c885671ce4b",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "abd20ff7-a9d2-430d-a660-33d3810eb07e"
        },
        "item": {
          "id": "64b314a4-6256-4662-95c1-869c5a358882",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0482bd4c-df28-4b35-9d19-da4f27839e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1069de-1714-4870-9ab1-951a51b12497",
        "cursor": {
          "ref": "755ef16b-52f6-4fda-87c0-72970498c874",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "98cb48db-444b-47c0-9960-d6cdbf173565"
        },
        "item": {
          "id": "1e1069de-1714-4870-9ab1-951a51b12497",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "592d321e-f7d5-4822-a3f2-93b1f6c185ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5001fc98-6f1e-442b-9ac0-111c2cb950ec",
        "cursor": {
          "ref": "2a92910e-bcdb-4d1c-8604-617e8b03f1d9",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "94f17f05-e5e5-4a69-b05f-a2c5a214e9bb"
        },
        "item": {
          "id": "5001fc98-6f1e-442b-9ac0-111c2cb950ec",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e57a9acd-148e-40b1-83f6-5cd1392f7c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810340f8-0a57-4e5c-83a2-fd9cbebfc385",
        "cursor": {
          "ref": "557e4275-8d22-4fee-9f39-e9f3c5b20ab6",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2853f576-1dd9-4077-b6cc-c9cddbe11b9d"
        },
        "item": {
          "id": "810340f8-0a57-4e5c-83a2-fd9cbebfc385",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5ceac7c1-2279-4058-8cb5-022ca210dc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf99ed7-ae22-4d80-b7e2-5116ad9ba48c",
        "cursor": {
          "ref": "c0b14953-a3d9-4410-9500-45bda96ff65c",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6158b430-f6f1-4178-956d-f7a9b52af277"
        },
        "item": {
          "id": "caf99ed7-ae22-4d80-b7e2-5116ad9ba48c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "63183eb1-9834-472a-9e46-98bd8b9f80b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df79ca78-3893-4b74-8442-30fbde983a1d",
        "cursor": {
          "ref": "f88583cd-6b91-4818-8f70-a88e963da93b",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0defcbf4-9919-41e0-beec-5a9c58920779"
        },
        "item": {
          "id": "df79ca78-3893-4b74-8442-30fbde983a1d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "04aaae9e-7d03-4aec-93b8-b10112511542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e0fe0d-2441-4803-9a80-c1e32b9ead01",
        "cursor": {
          "ref": "acd45bb8-dab6-4b29-ae7d-4f55973d2e71",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "683c3df0-b557-4716-acfc-f36b0c83e5e1"
        },
        "item": {
          "id": "70e0fe0d-2441-4803-9a80-c1e32b9ead01",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "46a9f082-464b-4395-8f94-8b41b3ec2e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da96dc60-89d8-4bd0-a094-e89a2d4e211f",
        "cursor": {
          "ref": "439210f5-b5a4-49d5-91d7-1ed59ae340e1",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9e8b26d1-923c-48ae-b5d4-9458e6847ea0"
        },
        "item": {
          "id": "da96dc60-89d8-4bd0-a094-e89a2d4e211f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a4fbb8b9-4e13-4c11-8b75-a0f212adb2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312d66cf-5ddc-4ef1-b892-753200ba4444",
        "cursor": {
          "ref": "e25b4a2d-96c9-48eb-9599-d440ab9d8005",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "966c29d2-2e55-4927-99b8-23d9c0807676"
        },
        "item": {
          "id": "312d66cf-5ddc-4ef1-b892-753200ba4444",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "add95b01-2b38-4e52-b356-5b44edf92089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c6ebc6-ae56-41de-ba57-7ad6c623ea68",
        "cursor": {
          "ref": "5c2eba7d-4417-4ff5-8283-34c1f49d5efa",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ac1c887b-8575-4af1-b26c-7c5347bd88f2"
        },
        "item": {
          "id": "56c6ebc6-ae56-41de-ba57-7ad6c623ea68",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c8852e4d-4a2a-4938-9336-ba8757319ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8029aa55-0036-4797-bab2-c4e566dee37a",
        "cursor": {
          "ref": "ef044529-bde6-4b9c-986a-4ea45ba94837",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "46627ae7-54bf-4e78-b066-19fb6231bfd7"
        },
        "item": {
          "id": "8029aa55-0036-4797-bab2-c4e566dee37a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "53e9e0d2-78aa-4089-a4f0-44032af3ea09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac3f1fa-4577-4cea-81b3-36b9d035f86d",
        "cursor": {
          "ref": "406d5182-bde9-425e-8b0b-bf4095674ae1",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fc0a7fb0-269f-42b7-ab8a-6f001449e112"
        },
        "item": {
          "id": "fac3f1fa-4577-4cea-81b3-36b9d035f86d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "62a9b074-ff7a-45eb-8a34-dc450ce17b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9147ef-ffe7-47a5-981b-bc1779f02d68",
        "cursor": {
          "ref": "b7b7b35f-6087-4d8b-b660-d2d30971664a",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ec08a537-84cf-434d-9f03-ff8e9eb5f882"
        },
        "item": {
          "id": "8a9147ef-ffe7-47a5-981b-bc1779f02d68",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "63fd6ea8-4e03-4ee5-a689-8fd806da6279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0b090a-c27e-46b2-a5d6-ff6f12cbd05e",
        "cursor": {
          "ref": "886fed2b-fe6e-4f8f-85d4-8800963289e0",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "99cb92e8-ba86-4c65-a4b7-abd5d40ae0b2"
        },
        "item": {
          "id": "fa0b090a-c27e-46b2-a5d6-ff6f12cbd05e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ae29a7c4-ee39-4402-b6b6-b0e35fdd0ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6407ff5-2bd9-4cee-a2fa-0fdf06378f0e",
        "cursor": {
          "ref": "bc96ffe1-24c8-4a45-a707-1fe98b56f6b2",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "92884102-1c42-4196-b3e4-4ddc1cd96454"
        },
        "item": {
          "id": "f6407ff5-2bd9-4cee-a2fa-0fdf06378f0e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3fa17a79-31a9-47d8-91c4-693608e33ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f0f149-bf3a-4c3f-a126-0807b3e04f8f",
        "cursor": {
          "ref": "4b7b6d6a-e2e0-4f14-a93a-e772fcf75282",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8c25d19a-7b09-47e2-b053-e549321aba2a"
        },
        "item": {
          "id": "85f0f149-bf3a-4c3f-a126-0807b3e04f8f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4e32e03e-931d-451c-8b64-4856919872c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac7d18e-bb8b-4bdc-81c9-fcbb5e7108fb",
        "cursor": {
          "ref": "1c31574c-c55c-4147-a426-aaa7aa862bb2",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dc9b3cb3-431d-4905-9e6d-a66d629aba00"
        },
        "item": {
          "id": "fac7d18e-bb8b-4bdc-81c9-fcbb5e7108fb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f51f939e-0ab5-43cc-941e-d224aada818c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abde9dfe-50cc-4875-bb57-f6e3d1c9aa8e",
        "cursor": {
          "ref": "fe9d798c-06cb-4fad-98a3-872127be7475",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "24591b03-613c-4338-bc79-2f14faec21b9"
        },
        "item": {
          "id": "abde9dfe-50cc-4875-bb57-f6e3d1c9aa8e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d3f90e9-f6a0-4299-bfea-0286a2c1adb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01281cdc-2688-494f-9b41-ff839269da47",
        "cursor": {
          "ref": "c6cc26e4-dc04-4746-b7f0-5ba073a62d20",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6aaa8aa4-4ea1-4e41-80a7-c607b166823f"
        },
        "item": {
          "id": "01281cdc-2688-494f-9b41-ff839269da47",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1c2e1bae-335e-4a22-b2bd-24a5dbf5b11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1f9b98-66ae-4167-94b6-228e0488d9d6",
        "cursor": {
          "ref": "3a315171-026f-4835-b284-554b3cc0fc18",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a50d822c-41f0-4fc8-8ec8-ac6daa542d04"
        },
        "item": {
          "id": "8e1f9b98-66ae-4167-94b6-228e0488d9d6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2ae5135f-a9c0-4a8a-8625-22c97437e4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e5a74-7fe7-41ac-bc13-e8cc71e49940",
        "cursor": {
          "ref": "615f7183-ae18-45fa-b714-1d603d7fc0ad",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a392eeef-a70e-4ab5-8648-22539d859392"
        },
        "item": {
          "id": "600e5a74-7fe7-41ac-bc13-e8cc71e49940",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "170461ca-9a10-45e5-b3e8-43e12bca3826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95da803e-6499-498b-b4fb-5a2cb0ae5f69",
        "cursor": {
          "ref": "af071b0f-0629-4e2e-a258-3de28a513c40",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "12745c55-beae-48d9-b7d3-53fcfafe431d"
        },
        "item": {
          "id": "95da803e-6499-498b-b4fb-5a2cb0ae5f69",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4440d8ec-d8aa-4acd-8aa2-28e7186bf2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7a92ba-1e03-4e57-9502-52b1c73d5e3e",
        "cursor": {
          "ref": "dcae35c4-a1f9-4c01-8d02-d2abc4b49e92",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ffe61966-04d2-414e-8ea7-0d97baf6a1cc"
        },
        "item": {
          "id": "9e7a92ba-1e03-4e57-9502-52b1c73d5e3e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f3b4da7c-ff7d-4263-a06c-def035ec828f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a1e8bc-ba81-4c65-8480-1ec14d452cd6",
        "cursor": {
          "ref": "676f1334-e6eb-444d-988d-f5016bcb2629",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "332a15e2-e3e2-494e-98ce-cc4f450fac58"
        },
        "item": {
          "id": "d9a1e8bc-ba81-4c65-8480-1ec14d452cd6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a0429c66-7002-4c91-8ed7-93c893a5ae96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13b1a1c-1ad2-43a9-8e90-5539adf0098f",
        "cursor": {
          "ref": "b251c574-f3a7-4282-8c65-5ebd6c420947",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5d557de2-b2ce-4d65-8ed5-7fd490a247e1"
        },
        "item": {
          "id": "a13b1a1c-1ad2-43a9-8e90-5539adf0098f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "216ccc24-bd5c-44b7-bf19-47487dac4716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67681740-196b-4296-a14f-042c312dbb65",
        "cursor": {
          "ref": "19242de6-fa2a-47e9-8f5c-f0be4751fe16",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7bdfc158-77ce-49d1-b606-b5d0a60acd9e"
        },
        "item": {
          "id": "67681740-196b-4296-a14f-042c312dbb65",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "86ab4414-85c2-4039-80d4-2e12705c334e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8b56f3-5246-4876-9e10-674fc8340251",
        "cursor": {
          "ref": "f140b6b8-dc71-4517-bdd7-abce2aba0740",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a39c4c27-b98d-4225-a07d-c434484c7cad"
        },
        "item": {
          "id": "ac8b56f3-5246-4876-9e10-674fc8340251",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b94ab868-29ae-463f-80e7-e80eae14b18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a69b621-8278-4a4f-a732-319397035def",
        "cursor": {
          "ref": "028a1f14-61c5-4c90-bcd6-26f618305f64",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "22749dcd-0d9e-4f94-a9c1-2410a000dd10"
        },
        "item": {
          "id": "8a69b621-8278-4a4f-a732-319397035def",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "669f1a08-b2b8-48e1-9548-8227e8dc2127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef94c7e8-9886-4aef-95a0-19085bb0afe8",
        "cursor": {
          "ref": "1003ce48-fb64-4bba-9111-28e6da18f0d9",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5bfa6323-4237-4da8-a86d-31c96ce3b0f7"
        },
        "item": {
          "id": "ef94c7e8-9886-4aef-95a0-19085bb0afe8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "db01cff6-776f-427e-8289-079cdc96f010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bde3fc7-9765-4b0f-b34c-1f098c936ea3",
        "cursor": {
          "ref": "59a76514-c25d-4687-9cd6-77f06f62d07e",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "32fbf8f9-a09b-4111-a54a-5b0ee74648c2"
        },
        "item": {
          "id": "0bde3fc7-9765-4b0f-b34c-1f098c936ea3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6380c26d-6a64-47f6-a142-02ccd0d5eec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc7fa95-1c9e-4a05-b131-111bdbaeac23",
        "cursor": {
          "ref": "656a308a-9ad5-4de1-b56f-b575fad2157d",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6da9e4be-3485-4f57-8371-c8f8256d7e36"
        },
        "item": {
          "id": "8cc7fa95-1c9e-4a05-b131-111bdbaeac23",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c311acd3-d7e9-44ed-9526-29d7e5327edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f6c20e-e189-4f22-b387-4ede917db02a",
        "cursor": {
          "ref": "8dead71a-c63d-4484-8406-86e2020b89fa",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fe247525-940f-4dff-b9eb-b30787a6ba53"
        },
        "item": {
          "id": "14f6c20e-e189-4f22-b387-4ede917db02a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "16a02ac8-dbc8-4aad-b79f-d8f8576797e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803f23de-ca73-4ab3-81a9-59c31563ff6d",
        "cursor": {
          "ref": "b3df0e15-c1e8-457e-95a2-95d0ee01c3c9",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4a9f01ad-99ed-4abc-b67c-d5b1203ad245"
        },
        "item": {
          "id": "803f23de-ca73-4ab3-81a9-59c31563ff6d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2f6cf6fc-10be-49bc-bc19-261eb893ecea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a734a88-a520-49ca-b122-b9cd6dbf70b8",
        "cursor": {
          "ref": "f569b0f2-266a-472a-9c1d-abb711c1a12f",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f811c1fc-5bd1-4887-bd31-a51800b076fb"
        },
        "item": {
          "id": "6a734a88-a520-49ca-b122-b9cd6dbf70b8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fb916237-7d96-4166-994e-93908ae43e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbe9375-10fe-4686-a90d-b4ec9da37c6b",
        "cursor": {
          "ref": "c9b27f22-a417-4280-a095-cd2daea762a8",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1a603940-caf9-4506-8d94-9fd8c894a663"
        },
        "item": {
          "id": "7dbe9375-10fe-4686-a90d-b4ec9da37c6b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6456b1b7-ca6b-419d-b5fb-a90e4bb7f9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73986a9e-5ea5-4dfd-ab1c-890889110194",
        "cursor": {
          "ref": "aa17116b-c21a-423d-bfcb-c60b2f60c55d",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c7e12360-9ebb-4f77-a206-81460fc015e5"
        },
        "item": {
          "id": "73986a9e-5ea5-4dfd-ab1c-890889110194",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "58b13adc-d13f-4d9b-bf80-98631c4a4a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c00ac4-aa3b-4c7f-9b07-69071a5299b8",
        "cursor": {
          "ref": "3b362eab-dfd5-480b-a7a1-2dd8055b8442",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8e8f7953-af0a-441b-8806-eb6b249b0c0b"
        },
        "item": {
          "id": "02c00ac4-aa3b-4c7f-9b07-69071a5299b8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "697e0b8c-5c03-41f6-a177-34024ba8dd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1832d615-0f7a-4734-aaaf-6139ec770c65",
        "cursor": {
          "ref": "a7211d7d-01b8-4f95-b701-65d11ab6e783",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "14d33152-39e1-4f3c-af0d-b8e98e6722f9"
        },
        "item": {
          "id": "1832d615-0f7a-4734-aaaf-6139ec770c65",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e5592019-3b05-4b09-a287-2bf42bbfcf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e198117-579f-48af-b939-04af5ac1112a",
        "cursor": {
          "ref": "d87cf819-38e8-4343-b623-84a5383454dd",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "10684362-ad3d-46ed-a86f-a057102e79f0"
        },
        "item": {
          "id": "7e198117-579f-48af-b939-04af5ac1112a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a49ecc77-ae00-40de-af35-95ffebdc6e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976b2550-6958-42f8-92bb-f38a42b71e9b",
        "cursor": {
          "ref": "1c7a6bf8-f086-4056-b793-0406868d8eb5",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "106ceeb9-aefd-46c1-9c29-f49213371743"
        },
        "item": {
          "id": "976b2550-6958-42f8-92bb-f38a42b71e9b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3fe55025-38ab-4ce1-9c24-0d24036d1a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dab64b5-4beb-42a3-b886-de48462bc80c",
        "cursor": {
          "ref": "aeca69c9-ecc9-45ae-88c0-20ee98ab13d6",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "68a3e2b8-83f2-4c09-af20-ebfb38d4b02e"
        },
        "item": {
          "id": "7dab64b5-4beb-42a3-b886-de48462bc80c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1d3c0a58-9a43-4513-b618-563d23f52240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cba93f-c9f5-422c-954d-a939821e3165",
        "cursor": {
          "ref": "4a6f2c48-a5d4-4753-a274-9c177dc568d3",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0f6dbc0f-d03c-41bb-aa42-9c3ed570bbd9"
        },
        "item": {
          "id": "19cba93f-c9f5-422c-954d-a939821e3165",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "777b8c37-bd5b-498b-88e3-51387f85da01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23765715-34eb-47e0-b1cf-83f9dec74d82",
        "cursor": {
          "ref": "d8874e60-b122-49fb-bc4a-53e8916b8087",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "18e9ac0a-fa2b-47c9-801d-9aa6eabc894a"
        },
        "item": {
          "id": "23765715-34eb-47e0-b1cf-83f9dec74d82",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d947f87c-3be1-4c7f-9bf6-273c1f9eedf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c003e8f-36b4-43d8-bf39-d13b5f2175fa",
        "cursor": {
          "ref": "c26bf3f7-a063-4786-a3c4-ba58e22ad6d7",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c94b904e-7325-4ac3-8f0b-3637bdd99ee8"
        },
        "item": {
          "id": "8c003e8f-36b4-43d8-bf39-d13b5f2175fa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "62a25b73-ca8d-4a15-957a-572509d3b833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8382dcf-76e7-4f75-8a7c-b14480dedd5c",
        "cursor": {
          "ref": "2e31dc4a-da7d-4bdb-b40f-e2da6c164550",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "50515e55-ec62-4c80-88b8-34fb0f2576ad"
        },
        "item": {
          "id": "d8382dcf-76e7-4f75-8a7c-b14480dedd5c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "02c86562-0066-47c5-9a92-b2eac83cafe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dc02f7-960e-47c6-8397-c8004dfc68d9",
        "cursor": {
          "ref": "938cd361-eb74-4933-a24b-5c03fb6394aa",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "403f591c-a681-4386-aa3f-1d0dc9cd660f"
        },
        "item": {
          "id": "c9dc02f7-960e-47c6-8397-c8004dfc68d9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f48f1291-e6af-4420-bcde-846e7114f09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff98610-bca8-4815-b128-9ad58ce3b09c",
        "cursor": {
          "ref": "deda9d03-b4c4-42b3-b654-b4866ac4f71f",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eaa4903f-1d73-4e40-bd0e-09ad726763c0"
        },
        "item": {
          "id": "dff98610-bca8-4815-b128-9ad58ce3b09c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6bb7e8b2-e389-4d89-9b8a-c77de39bbb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691cbc14-3c61-4152-97be-ecbaff68f6cf",
        "cursor": {
          "ref": "41e624ed-4b6d-4d41-90f9-3d43b332cdf9",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "54573287-337d-4050-a207-bc093747446f"
        },
        "item": {
          "id": "691cbc14-3c61-4152-97be-ecbaff68f6cf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "82605ba9-8597-4c07-9614-4b7b614558a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53130f6c-ea37-4d8c-878a-bec65ebc1a75",
        "cursor": {
          "ref": "a5efa59d-5144-46fe-a775-587f6fe9eeff",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "705be630-cc01-4c45-ab24-5ca4278e5fb4"
        },
        "item": {
          "id": "53130f6c-ea37-4d8c-878a-bec65ebc1a75",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "105222e4-e60f-483d-9936-84e4819a97f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34dd1cc-70c4-4def-99a2-5e6d6d3c5552",
        "cursor": {
          "ref": "5edc298b-f730-43c5-b194-d2496c0b1fd6",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6add76db-e21f-40c9-ba5c-cac55c5c138b"
        },
        "item": {
          "id": "c34dd1cc-70c4-4def-99a2-5e6d6d3c5552",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e5a6b1e7-b68f-4ba3-9ba4-779a4a514bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6644ef89-2937-431c-aeea-62410c0e42ca",
        "cursor": {
          "ref": "841058d8-1e1d-44d7-b5fd-903396f030e2",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0bd1b5a2-da04-44ef-bb1d-46257572b5f7"
        },
        "item": {
          "id": "6644ef89-2937-431c-aeea-62410c0e42ca",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1dec965c-4179-4916-b7a6-685d1b39d827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c3d334-8cf6-4053-bdcc-8b6c7a4e1faf",
        "cursor": {
          "ref": "a527dabd-f07e-45a6-a780-060cfae764c4",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e36565b9-5820-40be-b557-779e05ee9d0f"
        },
        "item": {
          "id": "90c3d334-8cf6-4053-bdcc-8b6c7a4e1faf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0c6986a3-3d5e-48db-befd-3c0fd710186c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48eecb2-7c4f-45b8-8231-f1eb837538d2",
        "cursor": {
          "ref": "97a70242-f093-4225-a416-a05fef4fefa8",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e8f4ea58-7fdb-428e-bf18-5997a5deaf76"
        },
        "item": {
          "id": "d48eecb2-7c4f-45b8-8231-f1eb837538d2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a6108792-b0e9-45d2-adda-5c339f713439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cd57f1-f52f-4565-b833-ebc06a05b2dd",
        "cursor": {
          "ref": "2b55d84f-7064-4770-83ff-59b363f251bf",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "20b79762-a903-4fd9-8f6f-817804d30258"
        },
        "item": {
          "id": "c6cd57f1-f52f-4565-b833-ebc06a05b2dd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "63e1247b-e42b-42c2-bb12-e5f6f86cca92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a6a936-f07e-4124-bbbb-ef0c40573d9c",
        "cursor": {
          "ref": "667602d9-8e7d-4f3e-802b-fda37d6c64f3",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e275a886-5908-4d69-bc20-5632014c56e3"
        },
        "item": {
          "id": "08a6a936-f07e-4124-bbbb-ef0c40573d9c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "35aa418a-f243-4b41-8038-e79f116e5865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca2a8f9-e079-48fe-8b64-e9ddd04caedc",
        "cursor": {
          "ref": "9182ed76-4697-4abd-853a-5e3ada92a0bf",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "46beba58-08e0-4014-869d-139685b4b89f"
        },
        "item": {
          "id": "1ca2a8f9-e079-48fe-8b64-e9ddd04caedc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ce9b8352-7416-4ba6-a865-27682b8f0d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9c9429-3b72-4686-88ea-048cda0600e8",
        "cursor": {
          "ref": "4d9241aa-e8b7-4c77-9b5e-558c076e74c4",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2abc49cc-9a45-4cf8-b520-4005536b4227"
        },
        "item": {
          "id": "bc9c9429-3b72-4686-88ea-048cda0600e8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "61651a86-5f70-42cb-a237-fad5e205e50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe96abb-2ede-4800-ae8c-ff1694a8d648",
        "cursor": {
          "ref": "31c3d45f-47e1-4747-93ce-5eb9dc35c117",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "77e8d1cc-6b23-41db-ad8d-78c360648f34"
        },
        "item": {
          "id": "1fe96abb-2ede-4800-ae8c-ff1694a8d648",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "64da0bad-9e83-4503-b573-bd13ec84bd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aabc41f-6228-4cca-ae3e-5dfd401c99df",
        "cursor": {
          "ref": "9509f0cf-5ff0-419a-8233-1b54e6148fb5",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ab46135d-9df6-4ab2-add2-e0bf45dcf754"
        },
        "item": {
          "id": "9aabc41f-6228-4cca-ae3e-5dfd401c99df",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e0fcfc3c-cf73-4470-ba4c-86520e984595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783ac166-d260-4c2c-891d-799707261a19",
        "cursor": {
          "ref": "0d1dc0f5-c689-4cdd-96ae-cd1e7cf64fa5",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2cc58f47-bee7-420e-8e8c-bc82ca4762ff"
        },
        "item": {
          "id": "783ac166-d260-4c2c-891d-799707261a19",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "62d26f37-ee46-4081-bedd-c012072b648d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c04a434-57d7-4050-b7e9-250075057911",
        "cursor": {
          "ref": "551f4286-baaa-42d3-9866-d8b9ddd33a49",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c8c7e5d7-447f-480d-987f-9b7c0e6e12c7"
        },
        "item": {
          "id": "7c04a434-57d7-4050-b7e9-250075057911",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d2c18302-522d-4c9c-bbcc-2e19a104477c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf11364-36f6-49e1-90e5-8f76dce55047",
        "cursor": {
          "ref": "337a3751-0dd8-4287-95f3-ae36a44fd215",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "784c4b2e-cc68-425f-86c6-6ffec4700ce2"
        },
        "item": {
          "id": "6cf11364-36f6-49e1-90e5-8f76dce55047",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "38584498-d91a-4258-88ae-622d51425eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c369c8f-31f6-44fa-ab36-b9acd81bb1c4",
        "cursor": {
          "ref": "822bd1fc-6d31-48f5-bc70-a896be303a5f",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "203e36e8-d58e-49c1-bf26-9140eaf9d473"
        },
        "item": {
          "id": "6c369c8f-31f6-44fa-ab36-b9acd81bb1c4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "016a075b-128e-4ccf-b829-ffc5068b84ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db21d3dd-e71d-4359-90c8-3e51624c95fa",
        "cursor": {
          "ref": "00e239e7-e95d-46a1-a63d-2bf20422af66",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6181c367-65e2-47db-9a88-ba6ace96bfd8"
        },
        "item": {
          "id": "db21d3dd-e71d-4359-90c8-3e51624c95fa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "03590736-6b1c-4486-80f9-3226b55fc6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404d2f2f-4101-4daf-ac03-d6bc8a1c99b8",
        "cursor": {
          "ref": "a8550503-0d43-4222-b09b-3884cc5a5d60",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "483559b4-1433-4829-8a5d-72f932f44beb"
        },
        "item": {
          "id": "404d2f2f-4101-4daf-ac03-d6bc8a1c99b8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "60d7651f-0b73-4034-9639-857591f8c6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7996f325-521d-4801-9786-2a87ed7dfd97",
        "cursor": {
          "ref": "2ccdbdd5-8194-42f2-bb6b-efd53d014ff2",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a55c4814-d7c1-4f3b-a1a3-c4a8db002a1d"
        },
        "item": {
          "id": "7996f325-521d-4801-9786-2a87ed7dfd97",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d116070d-4a98-4581-b3f4-140fb2323498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8961788d-9ae1-4755-a2ef-850da005d7fc",
        "cursor": {
          "ref": "955969d7-6812-4e9e-adc0-98184c1757e8",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b785e040-435a-40de-9794-2e582b6524e0"
        },
        "item": {
          "id": "8961788d-9ae1-4755-a2ef-850da005d7fc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d9b7c1f0-935d-49f2-941d-543fe2453753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4382ca64-045d-479c-b2b8-27e371e6202a",
        "cursor": {
          "ref": "1ae5a617-716d-467f-b200-5ebd9c2d348c",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "32a3a233-0f1c-4031-99b2-b3b670f13300"
        },
        "item": {
          "id": "4382ca64-045d-479c-b2b8-27e371e6202a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3544be56-0eac-46b8-bd0f-0caf0933e3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0577a4-adac-47cf-b976-3bc3c5b0e8b0",
        "cursor": {
          "ref": "e44a89b2-e3e2-42b1-8b68-211e37d4e9fb",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1174eb44-df24-47f3-b2f1-24e92950a691"
        },
        "item": {
          "id": "5d0577a4-adac-47cf-b976-3bc3c5b0e8b0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b3f5dba9-4bf1-45ea-8c95-ad294be2eacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63a6d84-c273-48f2-adae-132afc0791aa",
        "cursor": {
          "ref": "a4fc4be9-57a2-4dde-bb0b-3a30ab5a09ca",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0e7e1937-a14d-4d7f-b2c2-2df46bbc3648"
        },
        "item": {
          "id": "a63a6d84-c273-48f2-adae-132afc0791aa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c7d195dd-7079-4675-9a2e-7395d58f63fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aadca7-7c6b-4a2d-856f-5a18370c54b1",
        "cursor": {
          "ref": "4eed9d2c-034f-4ddc-89a2-72eaf10711a7",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b37eaa81-97a3-410d-bcf7-cbbb1290da07"
        },
        "item": {
          "id": "f6aadca7-7c6b-4a2d-856f-5a18370c54b1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "63fd1933-52fc-4508-b3f4-ab33a0363273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dc2128-eee1-42b7-b2a9-3187d18864b3",
        "cursor": {
          "ref": "ac5fbc0f-bd9f-4e90-bdf0-60124d366a9f",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5a0aaa0a-9ef5-45ce-bfd0-9dd74a53bce6"
        },
        "item": {
          "id": "65dc2128-eee1-42b7-b2a9-3187d18864b3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4309a8b4-af60-4dae-b76a-67e228dac2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c214557-be4a-4db6-b6c5-e33839f10efd",
        "cursor": {
          "ref": "2a678565-e010-49c6-b50d-9230c94d669d",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "36ac3c4c-aa8b-453c-a38e-09b50f22e315"
        },
        "item": {
          "id": "1c214557-be4a-4db6-b6c5-e33839f10efd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ccdbcf32-94f6-4091-8116-0addae50ffcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc47769-e469-4aac-a16f-812511dd0289",
        "cursor": {
          "ref": "04d2fad4-35f3-4e60-b77f-2e5e1cab629d",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6ddfc3c1-3eb3-4625-ad55-8017df550194"
        },
        "item": {
          "id": "1fc47769-e469-4aac-a16f-812511dd0289",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a5f0bd82-bb05-488b-babd-f7e0f89aafd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68861dc-40b8-4d37-85fb-7cd8e2be18dc",
        "cursor": {
          "ref": "7159860c-3732-4f73-9a20-5d25940a95e4",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8015f65d-e6e9-4e05-ba3e-a22115aad656"
        },
        "item": {
          "id": "c68861dc-40b8-4d37-85fb-7cd8e2be18dc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5164579f-4a39-4ecd-ad71-6c2dbe8f9493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46805366-8624-4888-8c59-83036c97b285",
        "cursor": {
          "ref": "61450418-6a79-4465-88b1-9df514733864",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a7ff1422-5d85-48dc-a088-8790d65c949b"
        },
        "item": {
          "id": "46805366-8624-4888-8c59-83036c97b285",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d1b0d2a8-814e-4611-bf6b-47f02f63d27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0569003a-4fe9-4f28-b638-85039ab33f41",
        "cursor": {
          "ref": "cff44aaa-aa3d-423f-b119-2f119747eea2",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7f032cdc-cce9-48ed-bddf-c4f78edcac2e"
        },
        "item": {
          "id": "0569003a-4fe9-4f28-b638-85039ab33f41",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "56590dd3-ebc7-4a91-a19c-28435be425a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9b7a9b-c7cd-4536-bff0-0783a32373ff",
        "cursor": {
          "ref": "4933c19c-f3b1-44bd-8e7e-585a48753745",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ed557ab7-d949-414a-86a9-b53949109652"
        },
        "item": {
          "id": "cf9b7a9b-c7cd-4536-bff0-0783a32373ff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "16f2b51e-293d-4f6c-9d1a-c5e20e57ff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3071b9b-a7d6-439a-b2b3-af07a13769cb",
        "cursor": {
          "ref": "1d97eacf-5382-4e7e-8d97-83b3eb09ad0d",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9c56d364-d5d4-4aa7-95cc-19a1c33e910f"
        },
        "item": {
          "id": "d3071b9b-a7d6-439a-b2b3-af07a13769cb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "13449c21-aec0-4ba2-806f-59c963929d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91b2d86-4b0d-4d9f-b288-be9566e1e148",
        "cursor": {
          "ref": "7bb72f40-3677-4695-8fbe-34f82984a9bf",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4bff4dbc-4e04-419d-9902-d7901422098a"
        },
        "item": {
          "id": "e91b2d86-4b0d-4d9f-b288-be9566e1e148",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "009eb16b-91b3-4c9b-b117-9577b5830617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b4e6b-532e-42e4-a4d4-0ea97b989651",
        "cursor": {
          "ref": "975a40d4-89fb-415c-8acf-4a0b4d44a2ea",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "78b3b932-4aca-4d29-bd77-5a8909a662fe"
        },
        "item": {
          "id": "4e5b4e6b-532e-42e4-a4d4-0ea97b989651",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "caf51077-e0ee-4e24-ab34-3463d7f90b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766d66f8-48d2-4d9e-9be7-c3eba6f70682",
        "cursor": {
          "ref": "e76883d8-842e-4e3b-91c7-820473e617d9",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "79bff3ed-5866-4403-8dd3-3aa97ab2c917"
        },
        "item": {
          "id": "766d66f8-48d2-4d9e-9be7-c3eba6f70682",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7fe12d26-7793-40c9-91bf-e5aa41b1e8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6d1522-2374-46b5-be51-bf1172851610",
        "cursor": {
          "ref": "7f1101b6-ab85-4195-af10-1641d942a82c",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5cedaeb8-6d10-45a9-bd2f-31d114cd9884"
        },
        "item": {
          "id": "da6d1522-2374-46b5-be51-bf1172851610",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e7e90d80-5cd6-4b6c-aaad-8d99e164979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1edec53-e1a0-49ef-bf8d-f7fecfece109",
        "cursor": {
          "ref": "cf6a889d-11e8-4eda-aa22-8e21c6eaa18b",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "56ace130-1cee-40e1-a1ab-f8151c55188c"
        },
        "item": {
          "id": "d1edec53-e1a0-49ef-bf8d-f7fecfece109",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4e6044c4-071b-4a1c-b99d-1f17d7e7acad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70304840-9314-4f5c-990d-64e1836fb9a1",
        "cursor": {
          "ref": "12f3433b-3e16-49bb-9fc3-35a7895e2c71",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1cf8ff75-0dfb-4245-a136-318029d3cd36"
        },
        "item": {
          "id": "70304840-9314-4f5c-990d-64e1836fb9a1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "32da7ce5-66a4-4d9c-bf6d-1cd82c31d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d41adf-c667-41ad-83a0-1e0e129ca893",
        "cursor": {
          "ref": "f702aa15-7aa0-4d30-a72c-6ae26a04791f",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d4aa4aab-a794-41b9-9f2f-c8bd78fd3171"
        },
        "item": {
          "id": "84d41adf-c667-41ad-83a0-1e0e129ca893",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4af55a70-5d5d-4cfd-8dc3-d944ff94cf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d69610a-87ee-4663-85a6-a74fc9ac6dba",
        "cursor": {
          "ref": "0ba4979a-9ac2-4bd7-8d11-ea625c0e4aec",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f0540981-16c2-4631-9680-53014b758d65"
        },
        "item": {
          "id": "3d69610a-87ee-4663-85a6-a74fc9ac6dba",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ac913a70-1254-420b-bdb0-7525544ec83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf21bf49-eadd-4559-8eaf-11349d8fd43a",
        "cursor": {
          "ref": "8d66927e-7e8e-480f-aad5-a1d5eba28aaa",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "29f15fca-6b65-4a55-bbba-00b1b9c84a9b"
        },
        "item": {
          "id": "bf21bf49-eadd-4559-8eaf-11349d8fd43a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "21bf20c5-f732-4420-ad63-28bb080f0577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffd6fc9-ee3f-4ee6-97f5-9ce325dabbdb",
        "cursor": {
          "ref": "11f71372-e56b-4815-8afb-7a22bf6cbd9d",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cd908451-e277-4039-8fce-e34ef5cc3610"
        },
        "item": {
          "id": "6ffd6fc9-ee3f-4ee6-97f5-9ce325dabbdb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a1e98ccc-c1ca-4f20-96fc-9f2f7bf1cb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c45600-52ad-4ac8-970d-f7f321f5aa90",
        "cursor": {
          "ref": "336579da-95c3-499a-ad2f-153bd5aa1680",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f7d8f2b8-56eb-4b54-9f87-7067fe8e05ab"
        },
        "item": {
          "id": "a7c45600-52ad-4ac8-970d-f7f321f5aa90",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "51af43fd-9af2-447f-b289-441f42063671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfea511b-124e-4fba-9e05-1a354e1be505",
        "cursor": {
          "ref": "7681ebdb-fa59-4015-a7fb-79a889cb1192",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0c351f6c-33ef-411a-a990-cc1f58b82d9f"
        },
        "item": {
          "id": "cfea511b-124e-4fba-9e05-1a354e1be505",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c4bb1a20-c64f-448f-9c1e-c9b7f8a617e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaf23f2-4f4b-4a8b-8ebf-fe6aa22437c6",
        "cursor": {
          "ref": "cd2a5ec4-72d8-41d8-80d9-f4a3c3f673c4",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "49c2ad18-91d7-449a-bf6c-6b9b8c09fe5e"
        },
        "item": {
          "id": "1eaf23f2-4f4b-4a8b-8ebf-fe6aa22437c6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5e373f97-9baf-457e-a6b2-9abc8c11da65",
          "status": "OK",
          "code": 200,
          "responseTime": 534,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc8ea2b-743c-40c0-9ed8-8caff9aa2a56",
        "cursor": {
          "ref": "3c1bcb53-0bc2-4939-a4a7-7d3c0a3c99cc",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "57ba55cf-1eed-4aa2-8000-d96b704b5f0d"
        },
        "item": {
          "id": "7bc8ea2b-743c-40c0-9ed8-8caff9aa2a56",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e45eab1d-3b8b-4ef0-b74b-2f7fa0009b7f",
          "status": "OK",
          "code": 200,
          "responseTime": 1711,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "87375ee4-dfe5-4aec-a6d4-fd9aa79f7083",
        "cursor": {
          "ref": "bdb4187d-f6ed-40dc-ad19-a085d9bfaf7b",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d467032c-a46b-4685-a679-673b1802441f"
        },
        "item": {
          "id": "87375ee4-dfe5-4aec-a6d4-fd9aa79f7083",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f16b4b3c-87b1-427e-9984-a4d6ec7ccab8",
          "status": "OK",
          "code": 200,
          "responseTime": 1811,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e41a6b-3fb6-4d18-94f2-4149ace578ef",
        "cursor": {
          "ref": "7557b2c7-bb9b-4ea9-8027-14ceeee3b55d",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0f8935dd-43f9-4f54-83c7-806879147e6f"
        },
        "item": {
          "id": "37e41a6b-3fb6-4d18-94f2-4149ace578ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "99c45730-6877-4040-82be-b1dea95c0a03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e41a6b-3fb6-4d18-94f2-4149ace578ef",
        "cursor": {
          "ref": "7557b2c7-bb9b-4ea9-8027-14ceeee3b55d",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0f8935dd-43f9-4f54-83c7-806879147e6f"
        },
        "item": {
          "id": "37e41a6b-3fb6-4d18-94f2-4149ace578ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "99c45730-6877-4040-82be-b1dea95c0a03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f911bcaf-c067-464f-b608-ef75b41836c5",
        "cursor": {
          "ref": "ec89a7df-c095-470f-b826-bcfb677a836a",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5901669e-27fa-425e-987d-666923dcc53f"
        },
        "item": {
          "id": "f911bcaf-c067-464f-b608-ef75b41836c5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "12ded266-ef47-4f3b-b817-a3b27094e946",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3148d5f1-de52-42e3-95f7-a2e7f340a99f",
        "cursor": {
          "ref": "7a110fb4-698f-4d23-b7d6-c73529ebf161",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0d0124db-dacb-4808-a8d6-226563c73e64"
        },
        "item": {
          "id": "3148d5f1-de52-42e3-95f7-a2e7f340a99f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7628c94e-cbc4-40c1-bafe-b9bc2ccf55be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}